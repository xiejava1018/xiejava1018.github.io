<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XieJava&#39;s blog</title>
  
  <subtitle>记录最好的自己</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiejava.gitee.io/"/>
  <updated>2024-01-14T02:02:03.993Z</updated>
  <id>https://xiejava.gitee.io/</id>
  
  <author>
    <name>XieJava</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>颜值与实力并存-领克08提车和用车感受</title>
    <link href="https://xiejava.gitee.io/posts/a0c94fff/"/>
    <id>https://xiejava.gitee.io/posts/a0c94fff/</id>
    <published>2024-01-14T01:28:21.000Z</published>
    <updated>2024-01-14T02:02:03.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、选车经过"><a href="#一、选车经过" class="headerlink" title="一、选车经过"></a>一、选车经过</h2><p>第一辆车是11年8月购入的奇瑞A3，1.6手动精英，开了十多年了，不得不说奇瑞的车真是皮实耐用。十二年12万公里了从来没有出过出现过大问题，就换过几次电池、换过雨刮器、右后门的电动车窗的升降机，4条胎换过一次，其他都没有换过。现在开起来还是非常好开，底盘扎实，操控性好，油耗在8、9个左右。唯一的不爽就是手动档在上比较大的陡坡的时候半坡起步乏力，常常要大脚轰油才能不溜坡不熄火。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/%E5%A5%87%E7%91%9EA3.jpg" alt="奇瑞A3"><br>在年初就立了个FLAG，计划两年内换车，目标是新能源混动车型。所以最近一两年都在看新能源的汽车。见<a href="http://xiejava.ishareread.com/posts/c33148ad/" target="_blank" rel="noopener">《写给2025年的自己》</a></p><p>因为是奇瑞的忠实客户，一开始就关注奇瑞的新能源，当时瑞虎8PLUS的PHEV出来的时候就准备开始下手的，结果网上瑞虎8PLUS的PHEV用户体验并不是特别好最初的800客户变成800勇士，虽然说后面问题都解决了的调校越来越好，但让我也不敢贸然下手了。后来看到奇瑞马上要推第二代混动CDM了，所以一直在关注奇瑞的瑶光的CDM和最近比较火的捷途旅行者的CDM，无赖等了又等迟迟不见上市。</p><h2 id="二、选择对比"><a href="#二、选择对比" class="headerlink" title="二、选择对比"></a>二、选择对比</h2><p>目前国内新能源最火的莫过于比亚迪了，关注了比亚迪唐和比亚迪护卫舰07。</p><p>在十二月长沙车展的时候逛了一圈，发现了在领克展台C位的领克08EMP，外观时尚科技，透发着低调的闷骚。接下来就是试驾，在期间我试驾了比亚迪护卫舰07、长安的深蓝S7和领克08EMP。对比下来，护卫舰07最大因为坐姿比较高开起来像开船，内饰中规中矩；深蓝S7是增程式的，内饰极简风格，没有仪表盘只有HUD有点不太适应；对比起来领克08EMP各方面都很均衡比深蓝S7稍大，看上去比护卫舰07小点，三台车都好开，但个人更喜欢领克08EMP底盘紧绷的感觉，外观内饰也是08EMP更符合自己的胃口。领克08EMP就它了！</p><h2 id="三、订车过程"><a href="#三、订车过程" class="headerlink" title="三、订车过程"></a>三、订车过程</h2><p>开始购车前也是想到各个4S店去对比杀价，结果跑了一圈才知道领克现在是网销模式和其他通过4S代销不一样，全国统一价，根本就没得价可谈。<br>2023年12月24日在APP上下的大定，4000元订金，下完订单后就可以在APP上实时看到订单交付状态。<br>我选的是120版本液体灰的halo版，21.58万。12月的政策是厂家优惠6000，全款优惠2000，老车增购补贴4000。</p><h2 id="四、提车过程"><a href="#四、提车过程" class="headerlink" title="四、提车过程"></a>四、提车过程</h2><p>2023年12月24日下的订单，4S店告诉我要等2-4周，结果26号就告诉我刚好来了现车可以提车了。看来领克销量不错，产能提升了。<br>提车的时候在4S店买了保险4441.85+交钱险950+4S店上牌500<br>现在1月份的政策是全款送魅族20pro的手机，后悔太冲动了，没多等几天。但是08很难不让人冲动。<br>提车过程很简单，充分相信领克的质量，都没有怎么仔细看，4S店服务人员讲解了一下如何使用，搞了一个小小的仪式就把车开回来了。</p><h2 id="五、用车感受"><a href="#五、用车感受" class="headerlink" title="五、用车感受"></a>五、用车感受</h2><h3 id="1、外观"><a href="#1、外观" class="headerlink" title="1、外观"></a>1、外观</h3><p>领克的车设计感都很强，从01到09颜值都在线，相对来说我认为09的颜值差了一点。01和05的颜值最好看，08科技时尚，设计可圈可点，很有个性。正面的辨识度很高，无框车门帅得一B。颜值即正义的年代，颜值就是销量的保证。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-1.jpg" alt="08-1"><br>有人说正面大灯看上去像蛤蟆，确实有点，但说实话一点不丑<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-2.jpg" alt="08-2"><br>08最好看的还是侧颜，立柱式的无边后视镜，原创度非常高，显得立体高级。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-3.jpg" alt="08-3"><br>无边后视镜很大视野好颜值高<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-4.jpg" alt="08-4"><br>尾部贯穿式尾灯，还带点小造型和前面相呼应，晚上点量后非常漂亮，在锁车的时候有个流水灯效果仪式感满满。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-5.jpg" alt="08-5"><br>液体灰，低调高级，远看车不显大，近看还是蛮大的。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240114/08-6.jpg" alt="08-6"></p><h3 id="2、内饰"><a href="#2、内饰" class="headerlink" title="2、内饰"></a>2、内饰</h3><p>内饰颇具小资情调，多彩氛围灯、深灰的Nappa真皮座椅很舒服，全车内部除了HUD部分其他都是软性材质的包裹，摸到的地方都是软的。</p><p>座椅很软，包裹性很好，通风、加热、按摩都给配上了，尤其是四个座位都带了按摩，舒适性照顾到了所有人。</p><p>仪表盘和中控大屏都很清晰，没有实体按键，车机很流畅，我的车机提车的时候就是1.2.0版本的，没有出现网上有人说的车机花屏的情况。语音控制非常好用，可以连续下达多个指令。</p><p>HUD开始几天不太习惯，但用了几天后发现还是不错的。有人说HUD很糊，但是我感觉挺清楚的，我有250度的近视+散光，戴了眼镜后很清晰，一点都不糊。</p><p>哈曼卡顿的音响效果杠杠的，有人说音响重音轰头，我想说的是，我要的就是这种效果，因为我是敲架子鼓的！整个音响环绕效果好给人身临其境的感觉。开车的时候一边听许巍的《像风一样的自由》一边踩着油门，所有的烦恼都抛到了脑后。</p><h3 id="3、行驶"><a href="#3、行驶" class="headerlink" title="3、行驶"></a>3、行驶</h3><p>因为不是专业试车的，谈不出太多专业感受。没有开过其他的豪车没有对比，我的A3的驾驶质感不错了，底盘紧绷，路感清晰，尤其是过坎的时候崩的一下很脆很舒服。08虽然是中型SUV开起来很舒服，底盘调校得很好，也很紧偏硬，方向盘大小适中，方向非常轻，会随着速度变重。由于车大轴距比较大，转弯半径有点大。</p><p>智能巡航超级好用，提了车以后元旦就跑了一次高速来回300多公里，基本上全程开着智能巡航，手扶着方向盘不用想事了，但是时速超过100到120左右，会有明显的感觉是有一股力量在扯着不让跑那么快了，有点像车动力很足但有人在帮你踩刹车的感觉。现在我基本上是上下班堵车就开智能巡航，跟车走走停停由08去自动驾驶了，自己惬意的听着音乐根本就没有了堵车的烦恼。</p><p>虽然是无框车窗，整车在行驶的过程中静谧性很好，由于是混动车大部分场景都是在用电，除了&lt;30km/小时的低速状态有嗡嗡的警示音外基本没有其他声音。超级混动的模式下当发动机启动的时候还是可以感觉到有点声音但是不大。有时候挂停车P档发动机启动给电池充电的时候会有明显的感觉发动机的声音，车内还好，在车外听声音还有点大。跑高速噪音感觉除了反观镜的风噪和胎噪，发动机的声音基本可以忽略，噪声控制得可以毕竟比我的A3好太多了。</p><h3 id="4、油耗"><a href="#4、油耗" class="headerlink" title="4、油耗"></a>4、油耗</h3><p>从买回来到今天半个月的时间，加了两次油1次是200元，1次336元，充了三次电分别是23.88元、19.50元、20.36元，跑了800多公里表显还有827公里，满油满电1000多公里还是可以跑到。说是说120公里的纯电续航，即使是充满电表显也只能跑100公里不到，实际90左右吧。因为还没有装家桩，现在基本是超级混动模式在开，表显油耗在4-5个左右，亏电的情况会要到6-7个左右。（用车环境是在长沙，最近最低气温在6-10度，平均温度在15度所左右）</p><p>充电速度还是挺快的，基本上半个小时左右可以充到80%左右，但是充到100%要1个多小时，前面充得快后面充得慢。</p><h3 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h3><p>领克的APP用起来也不错，很多功能都能在手机上操作。随车是带了一把感应钥匙，一个NFC的卡片钥匙，感应钥匙据说比较耗电。我觉得手机APP的蓝牙钥匙挺好用的，现在我基本上都没有带钥匙了，开门解锁远程遥控，远程可以查看车辆状态，还有行车日志可以看到每次行驶的路径和油耗电耗等信息。1.2.0的版本行车日志电耗显示有问题，所有的显示都是-29.9，昨天推了个1.2.1的版本过来了OTA升级后电耗也可以正常显示了。</p><p>总的来说，领克这个品牌倡导个性、开放、互联符合我的调性，领克08EMP颜值高、有个性、驾驶质感好、科技感满满、舒适性也不错、空间也足够，有这样的颜值和产品力后面的销量应该不会低。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、选车经过&quot;&gt;&lt;a href=&quot;#一、选车经过&quot; class=&quot;headerlink&quot; title=&quot;一、选车经过&quot;&gt;&lt;/a&gt;一、选车经过&lt;/h2&gt;&lt;p&gt;第一辆车是11年8月购入的奇瑞A3，1.6手动精英，开了十多年了，不得不说奇瑞的车真是皮实耐用。十二年12万
      
    
    </summary>
    
    
      <category term="产品" scheme="https://xiejava.gitee.io/categories/%E4%BA%A7%E5%93%81/"/>
    
      <category term="产品体验" scheme="https://xiejava.gitee.io/categories/%E4%BA%A7%E5%93%81/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="产品体验" scheme="https://xiejava.gitee.io/tags/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>网络安全产品之认识防火墙</title>
    <link href="https://xiejava.gitee.io/posts/afc06be4/"/>
    <id>https://xiejava.gitee.io/posts/afc06be4/</id>
    <published>2024-01-12T02:07:23.000Z</published>
    <updated>2024-01-12T02:13:53.142Z</updated>
    
    <content type="html"><![CDATA[<p>防火墙是一种网络安全产品，它设置在不同网络（如可信任的企业内部网和不可信的公共网）或网络安全域之间，通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况，以此来实现网络的安全保护。</p><h2 id="一、什么是防火墙"><a href="#一、什么是防火墙" class="headerlink" title="一、什么是防火墙"></a>一、什么是防火墙</h2><p>防火墙指的是一个由软件和硬件设备组合而成、在内部网和外部网之间、专用网与公共网之间的边界上构造的保护屏障。它可通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况，以此来实现网络的安全保护。在逻辑上，防火墙是一个分离器，一个限制器，也是一个分析器，有效地监控了内部网和Internet之间的任何活动，保证了内部网络的安全。防火墙（Firewall），是一种硬件设备或软件系统，主要架设在内部网络和外部网络间，为了防止外界恶意程式对内部系统的破坏，或者阻止内部重要信息向外流出，有双向监督功能。防火墙主要由服务访问规则、验证工具、包过滤和应用网关4个部分组成。</p><h2 id="二、防火墙的主要功能"><a href="#二、防火墙的主要功能" class="headerlink" title="二、防火墙的主要功能"></a>二、防火墙的主要功能</h2><ol><li>创建一个阻塞点<br>防火墙在一个公司内部网络和外部网络间建立一个检查点，这种实现要求所有的流量都要通过这个检查点。一旦这些检查点清楚地建立，防火墙设备就可以监视，过滤和检查所有进来和出去的流量。这样一个检查点，在网络安全行业中称之为“阻塞点”。通过强制所有进出流量都通过这些检查点，网络管理员可以集中在较少的地方来实现安全目的。</li><li>隔离不同网络，防止内部信息的外泄<br>这是防火墙的最基本功能，它通过隔离内、外部网络来确保内部网络的安全。使用防火墙就可以隐蔽那些透漏内部细节如Finger，DNS等服务。防火墙可以同样阻塞有关内部网络中的DNS信息，这样一台主机的域名和IP地址就不会被外界所了解。</li><li>强化网络安全策略<br>通过以防火墙为中心的安全方案配置，能将所有安全软件(如口令、加密、身份认证、审计等)配置在防火墙上。与将网络安全问题分散到各个主机上相比，防火墙的集中安全管理更经济。各种安全措施的有机结合，更能有效地对网络安全性能起到加强作用。</li><li>有效地审计和记录内、外部网络上的活动<br>防火墙可以对内、外部网络存取和访问进行监控审计。如果所有的访问都经过防火墙，那么，防火墙就能记录下这些访问并进行日志记录，同时也能提供网络使用情况的统计数据。当发生可疑动作时，防火墙能进行适当的报警，并提供网络是否受到监测和攻击的详细信息。这为网络管理人员提供非常重要的安全管理信息，可以使管理员清楚防火墙是否能够抵挡攻击者的探测和攻击，并且清楚防火墙的控制是否充足。</li></ol><h2 id="三、防火墙的主要类型"><a href="#三、防火墙的主要类型" class="headerlink" title="三、防火墙的主要类型"></a>三、防火墙的主要类型</h2><p>按照防火墙实现技术的不同可以将防火墙为以下几种主要的类型。</p><ol><li>包过滤防火墙<br>数据包过滤是指在网络层对数据包进行分析、选择和过滤。选择的数据是系统内设置的访问控制表（又叫规则表），规则表制定允许哪些类型的数据包可以流入或流出内部网络。通过检查数据流中每一个IP数据包的源地址、目的地址、所用端口号、协议状态等因素或它们的组合来确定是否允许该数据包通过。包过滤防火墙一般可以直接集成在路由器上，在进行路由选择的同时完成数据包的选择与过滤，也可以由一台单独的计算机来完成数据包的过滤。</li><li>应用代理防火墙<br>应用代理防火墙能够将所有跨越防火墙的网络通信链路分为两段，使得网络内部的客户不直接与外部的服务器通信。防火墙内外计算机系统间应用层的连接由两个代理服务器之间的连接来实现。有点是外部计算机的网络链路只能到达代理服务器，从而起到隔离防火墙内外计算机系统的作用：缺点是执行速度慢，操作系统容易遭到攻击。</li><li>状态检测防火墙<br>状态检测防火墙又叫动态包过滤防火墙。状态检测防火墙在网络层由一个检查引擎截获数据包并抽取出与应用状态有关的信息。一次作为数据来决定该数据包是接受还是拒绝。检查引擎维护一个动态的状态信息表并对后续的数据包进行检查，一旦发现任何连接的参数有意外变化，该连接就被终止。状态检测防火墙克服了包过滤防火墙和应用代理防火墙的局限性，能够根据协议、端口及P数据包的源地址、目的地址的具体情况来决定数据包是否可以通过。</li></ol><h2 id="四、部署方式"><a href="#四、部署方式" class="headerlink" title="四、部署方式"></a>四、部署方式</h2><p>防火墙在实际的部署过程中主要有三种模式可供选择，这三种模式分别是：基于TCP/IP协议三层的NAT模式、基于TCP/IP协议三层的路由模式、基于二层协议的透明模式。</p><ol><li>NAT模式<br>当Juniper防火墙入口接口（“内网端口”）处于NAT模式时，防火墙将通往Untrust区（外网或者公网）的IP数据包包头中的两个组件进行转换：源IP地址和源端口号。防火墙使用Untrust区（外网或者公网）接口的IP地址替换始发端主机的源IP地址；同时使用由防火墙生成的任意端口号替换源端口号。</li><li>Route-路由模式<br>当Juniper防火墙接口配置为路由模式时，防火墙在不同安全区间（例如：Trust/Utrust/DMZ）转发信息流时IP数据包包头中的源地址和端口号保持不变（除非明确采用了地址翻译策略）。与NAT模式下不同，防火墙接口都处于路由模式时，防火墙不会自动实施地址翻译；与透明模式下不同，当防火墙接口都处于路由模式时，其所有接口都处于不同的子网中。</li><li>透明模式<br>当Juniper防火墙接口处于“透明”模式时，防火墙将过滤通过的IP数据包，但不会修改IP数据包包头中的任何信息。防火墙的作用更像是处于同一VLAN的2层交换机或者桥接器，防火墙对于用户来说是透明的。</li></ol><h2 id="五、局限性"><a href="#五、局限性" class="headerlink" title="五、局限性"></a>五、局限性</h2><ol><li>不能防止源于内部的攻击，不提供对内部的保护；</li><li>不能防病毒；</li><li>不能根据网络被恶意使用和攻击的情况动态调整自己的策略；</li><li>本身的防攻击能力不够，容易成为被攻击的首要目标。</li></ol><h2 id="六、防火墙与IPS的区别与关系"><a href="#六、防火墙与IPS的区别与关系" class="headerlink" title="六、防火墙与IPS的区别与关系"></a>六、防火墙与IPS的区别与关系</h2><p>防火墙和IPS（入侵防御系统）是两种不同的网络安全产品，它们在保护网络方面有不同的侧重点和功能。</p><p>防火墙主要用于控制网络访问，它可以过滤掉不安全的服务和非法用户，防止入侵者接近防御设施，是第一道的防线。防火墙部署在网络边界，可以隔离内外网，并对进出网络的数据流进行过滤和监测。防火墙通常基于预设的安全策略来允许或拒绝数据流的进出，可以防御常见的网络攻击，但对于一些未知或不断变化的威胁可能效果有限。</p><p>而IPS是一种主动的网络安全防御系统，它可以在网络中实时检测和防御恶意行为。IPS可以检测到攻击者的行为，并在攻击对系统造成损害之前及时阻止。IPS通过分析网络流量和检测异常行为来发现攻击，并可以采取措施来隔离攻击源、修复受损系统、记录攻击信息等。由于IPS需要实时监测网络流量，因此对于大规模的网络流量可能会对性能产生一定影响。</p><p>防火墙和IPS在网络安全中各有侧重，但可以相互配合使用。防火墙可以过滤掉大部分的常见威胁，而IPS可以补充防火墙的不足，提供更深入的检测和防御能力。同时，IPS可以检测和防御那些已经绕过防火墙的攻击，提高整体的网络安全性。</p><h2 id="七、防火墙如何提升防护能力"><a href="#七、防火墙如何提升防护能力" class="headerlink" title="七、防火墙如何提升防护能力"></a>七、防火墙如何提升防护能力</h2><p>防火墙应对不断变化的网络威胁的方法主要包括以下几个方面：</p><ol><li>动态更新和升级：防火墙可以通过动态更新和升级来应对不断变化的网络威胁。厂商会不断发布新的安全漏洞和威胁情报，防火墙可以通过定期更新和升级来修补这些漏洞，并增强对新型威胁的防御能力。</li><li>应用层防护：随着网络威胁的变化，防火墙需要具备应用层防护能力，能够识别和拦截各种应用层的攻击，如SQL注入、跨站脚本等。</li><li>入侵检测与防御：防火墙集成了入侵检测与防御功能，能够实时检测网络流量中的异常行为，并采取相应的防御措施。通过与安全设备的联动，可以进一步增强对网络威胁的应对能力。</li><li>智能分析：借助大数据和人工智能技术，防火墙可以进行智能分析，自动识别和分类网络流量中的威胁，并提供可视化的威胁报表。这有助于企业及时发现和处理潜在的安全风险。</li><li>云安全技术：随着云计算的普及，云安全也成为防火墙的重要功能之一。防火墙需要具备云安全技术，能够防御来自云端的安全威胁，保护企业数据的安全。</li></ol><p>防火墙通过动态更新和升级、应用层防护、入侵检测与防御、智能分析和云安全技术等手段，可以应对不断变化的网络威胁。但需要注意的是，防火墙只是网络安全的一部分，企业还需要结合其他安全措施，如数据加密、身份认证等，来全面提升网络安全防护能力。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;防火墙是一种网络安全产品，它设置在不同网络（如可信任的企业内部网和不可信的公共网）或网络安全域之间，通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况，以此来实现网络的安全保护。&lt;/p&gt;
&lt;h2 id=&quot;一、什么是防火墙&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之备份恢复技术</title>
    <link href="https://xiejava.gitee.io/posts/71d4ad9f/"/>
    <id>https://xiejava.gitee.io/posts/71d4ad9f/</id>
    <published>2024-01-10T01:37:59.000Z</published>
    <updated>2024-01-10T01:52:42.867Z</updated>
    
    <content type="html"><![CDATA[<p>随着计算机和网络的不断普及，人们更多的通过网络来传递大量信息。在网络环境下，还有各种各样的病毒感染、系统故障、线路故障等，使得数据信息的安全无法得到保障。由于安全风险的动态性，安全不是绝对的，信息系统不可能保证不出现安全事故，因此，一旦出现安全事件造成信息系统中断或者数据丢失，如果事先采取了必要的备份准备并及时启用，能够最小程度的减少系统重构时间和对业务中断的影响。备份恢复技术是安全防御体系中的重要组成部分，旨在保护数据安全，防止数据丢失或损坏，提高企业的数据安全性和业务连续性水平。</p><h2 id="一、备份恢复的基本概念"><a href="#一、备份恢复的基本概念" class="headerlink" title="一、备份恢复的基本概念"></a>一、备份恢复的基本概念</h2><p>备份恢复的基本概念主要包括备份和恢复两个方面。备份是指将数据或系统进行复制和存储的过程，以便在数据丢失或损坏时能够从备份中恢复。<br>恢复则是指当数据或系统出现问题时，通过备份数据进行数据恢复或系统重建的过程。</p><h2 id="二、备份恢复技术的分类"><a href="#二、备份恢复技术的分类" class="headerlink" title="二、备份恢复技术的分类"></a>二、备份恢复技术的分类</h2><p>备份恢复技术有多种分类和应用场景，可以根据实际需求进行选择和应用。常见的备份恢复技术包括数据备份技术、灾难恢复技术、容灾技术、备份与恢复管理技术、数据归档技术和文件系统快照技术等。</p><ol><li>数据备份技术：是指定期对重要数据或全部数据复制和存储，以防止数据丢失或损坏。数据备份可以分为完整备份、增量备份、差异备份等。</li><li>灾难恢复技术：是指在发生灾难事件时，通过事先制定的灾难恢复计划和流程，快速恢复业务运行。灾难恢复技术包括数据备份、系统恢复、业务恢复等方面的内容。</li><li>容灾技术：是指通过建立异地容灾中心，将重要数据实时或定时复制到容灾中心，确保在主中心发生故障时，数据仍能保持可用性和完整性。容灾技术包括数据同步、异步复制、数据验证等方面的内容。</li><li>备份与恢复管理技术：是指定期对备份数据进行验证和测试，确保备份数据的可用性和完整性。同时，建立完善的备份与恢复管理制度，规范备份与恢复操作，确保备份和恢复工作的顺利进行。</li><li>数据归档技术：是指将不再经常使用的数据迁移到归档设备上，以释放存储空间并降低管理成本。归档设备可以是磁带库、光盘库等。</li><li>文件系统快照技术：是指利用文件系统快照技术，对文件系统进行快速备份。快照技术可以捕获文件系统在某一时刻的状态，以便在发生问题时迅速恢复数据。<br>这些技术可以根据实际需求进行选择和应用，以确保数据的完整性和可用性，提高企业的业务连续性水平，降低企业的风险和成本。</li></ol><h2 id="三、备份恢复的能力等级"><a href="#三、备份恢复的能力等级" class="headerlink" title="三、备份恢复的能力等级"></a>三、备份恢复的能力等级</h2><p>系统备份恢复能力也是信息系统一种重要的安全能力。2007年国家针对备份恢复发布了国家标准《GB/T 20988-2007 信息安全技术 信息系统灾难恢复规范》，《规范》将灾难恢复能力划分为6级：</p><ul><li>等级一：基本支持。要求数据备份系统能够保证每周至少进行一次数据备份，备份介质能够提供场外存放。对于备用数据处理系统和备用网络系统，没有具体要求。</li><li>等级二：备用场地支持。在满足等级一的条件基础上，要求配备灾难恢复所需的部分数据处理设备，或灾难发生后能在预定时间内调配所需的数据处理设备到备用场地；要求配备部分通信线路和相应的网络设备，或灾难发生后能在预定时间内调配所需的通信线路和网络设备到备用场地。</li><li>等级三：电子传输和设备支持。要求每天至少进行一次完全数据备份，备份介质场外存放，同时每天多次利用通信网络将关键数据定时批量传送至备用场地。配备灾难恢复所需的部分数据处理设备、通信线路和相应的网络设备。</li><li>等级四：电子传输及完整设备支持。在等级三的基础上，要求配置灾难恢复所需的所有数据处理设备、通行线路和相应的网络设备，并且处于就绪或运行状态。</li><li>等级五：实时数据传输及完整设备支持。除要求每天至少进行一次完全数据备份，备份介质场外存放外，还要求采用远程数据复制技术，利用通信网络将关键数据实时复制到备用场地。</li><li>等级六：数据零丢失和远程集群支持。要求实现远程实时备份，数据零丢失；备用数据处理系统具备与生产数据处理系统一致的处理能力，应用软件是“集群的”，可实时无缝切换。</li></ul><p>由此可见，灾难恢复能力等级越高，对于信息系统的保护效果越好，但同时成本也会急剧上升。</p><h2 id="四、备份恢复的类型"><a href="#四、备份恢复的类型" class="headerlink" title="四、备份恢复的类型"></a>四、备份恢复的类型</h2><p>备份恢复的基本原理是确保数据的完整性和可用性，防止数据丢失或损坏。在备份过程中，需要对重要数据或全部数据进行拷贝和存储，可以选择不同的备份策略，如完整备份、增量备份、差异备份等，以满足不同场景的需求。在恢复过程中，需要使用备份数据来恢复受损的数据或系统，确保业务能够正常运行。<br>备份通常可以分成下面的这三种类型：</p><h3 id="1、完全备份"><a href="#1、完全备份" class="headerlink" title="1、完全备份"></a>1、完全备份</h3><p>完全备份就是将系统中所有的数据都通过备份进程备份。完全备份需要的时间相比其他集中备份方式要长，但是故障发生时，恢复时间非常快。</p><h3 id="2、差异备份"><a href="#2、差异备份" class="headerlink" title="2、差异备份"></a>2、差异备份</h3><p>通常，系统管理员会每周定期作完全备份，在一周的其他时间针对与完全备份的差异部分作差异备份。<br>这种备份方法的恢复时间较长，我们不但要从全备份中恢复数据，还需要将每天的变化量恢复到系统中。</p><h3 id="3、增量备份"><a href="#3、增量备份" class="headerlink" title="3、增量备份"></a>3、增量备份</h3><p>增量备份是每周定期进行完全备份，每天增加备份当天的数据变化，对于备份时间，增量备份需要的时间最短，但是，回复时间较长且较为复杂。在恢复过程中，我们不但需要恢复第一次的完全备份，还需要使用每天变化量的备份，一次恢复一天的数据，直到最近的一次所做的增量备份为止。</p><h2 id="五、数据备份的方式"><a href="#五、数据备份的方式" class="headerlink" title="五、数据备份的方式"></a>五、数据备份的方式</h2><h3 id="1、远程镜像"><a href="#1、远程镜像" class="headerlink" title="1、远程镜像"></a>1、远程镜像</h3><p>远程镜像技术在主数据中心和数据备份中心之间的数据备份过程中使用。镜像是在两个或多个磁盘或磁盘子系统上产生同一个数据的镜像视图的信息存储过程，一个叫主镜像系统，另一个叫从镜像系统。按主从镜像存储系统所处的位置可分为本地镜像和远程镜像。远程镜像又叫远程复制，是容灾备份的核心技术，同时也是保持远程数据同步和实现灾难恢复的基础。远程镜像按请求镜像的主机是否需要远程镜像站点的确认信息，又可分为同步远程镜像和异步远程镜像。</p><p>同步远程镜像（同步复制技术）是指通过远程镜像软件，将本地数据以完全同步的方式复制到异地，每一本地的I/O事务均需等待远程复制的完成确认信息，方予以释放。同步镜像使远程拷贝总能与本地机要求复制的内容相匹配。当主站点出现故障时，用户的应用程序切换到备份的替代站点后，被镜像的远程副本可以保证业务继续执行而没有数据的丢失。但它存在往返传播造成延时较长的缺点，只限于在相对较近的距离上应用。</p><p>异步远程镜像（异步复制技术）保证在更新远程存储视图前完成向本地存储系统的基本I/O操作，而由本地存储系统提供给请求镜像主机的I/O操作完成确认信息。远程的数据复制是以后台同步的方式进行的，这使本地系统性能受到的影响很小，传输距离长（可达1000公里以上），对网络带宽要求小。但是，许多远程的从属存储子系统的写没有得到确认，当某种因素造成数据传输失败，可能出现数据一致性问题。为了解决这个问题，目前大多采用延迟复制的技术，即在确保本地数据完好无损后进行远程数据更新。</p><h3 id="2、快照技术"><a href="#2、快照技术" class="headerlink" title="2、快照技术"></a>2、快照技术</h3><p>快照是通过软件对要备份的磁盘子系统的数据快速扫描，建立一个要备份数据的快照逻辑单元号LUN和快照cache。在快速扫描时，把备份过程中即将要修改的数据块同时快速拷贝到快照cache中。<br>快照LUN是一组指针，它指向快照cache和磁盘子系统中不变的数据块（在备份过程中）。在正常业务进行的同时，利用快照LUN实现对原数据的一个完全的备份。它可使用户在正常业务不受影响的情况下（主要指容灾备份系统），实时提取当前在线业务数据。其“备份窗口”接近于零，可增加系统业务的连续性，为实现系统真正的7×24运转提供了保证。</p><h3 id="3、互连技术"><a href="#3、互连技术" class="headerlink" title="3、互连技术"></a>3、互连技术</h3><p>现有多种基于IP的SAN的远程数据容灾备份技术。它们是利用基于IP的SAN的互连协议，将主数据中心SAN中的信息通过现有的TCP/IP网络，远程复制到备援中心SAN中。早期方法多通过光纤通道FC连接两个SAN，存在实现成本高、设备的互操作性差、跨越的地理距离短（10公里）等缺点。<br>当备援中心存储的数据量过大时，可利用快照技术将其备份到磁带库或光盘库中。这种基于IP的SAN的远程容灾备份，可以跨越LAN、MAN和WAN，成本低、可扩展性好，具有广阔的发展前景。<br>基于IP的互连协议包括：FCIP、iFCP、Infiniband、iSCSI等。</p><h2 id="六、备份恢复技术应用场景"><a href="#六、备份恢复技术应用场景" class="headerlink" title="六、备份恢复技术应用场景"></a>六、备份恢复技术应用场景</h2><p>备份恢复技术的应用场景有很多，以下是常见的一些场景：</p><ol><li>数据丢失应用场景：包括人为操作失误、软件BUG、硬件故障、安全漏洞被入侵等情况，导致数据被误操作、部分或全部丢失。在这种情况下，备份恢复技术可以用来恢复丢失的数据。</li><li>非数据丢失应用场景：包括特殊应用场景下基于时间点的数据恢复、开发测试环境数据库搭建、相同数据库的新环境搭建、数据库或数据迁移等情况。在这些情况下，备份恢复技术可以用来迁移数据或者在新的环境中快速搭建数据库。</li><li>设备更换场景：当用户的设备损坏或丢失时，可以通过备份恢复技术将备份的数据导入到新设备中，恢复原有的应用程序和设置，避免了重新配置和下载应用的麻烦。</li><li>数据迁移场景：当用户的设备升级或更换时，可以通过备份恢复技术将备份的数据迁移到新设备中，保留原有的数据和设置，提高用户的使用体验。</li></ol><p>备份恢复技术的应用场景非常广泛，可以在各种情况下保护数据安全，降低风险和成本。根据实际需求选择适合的备份恢复技术，可以提高企业的数据安全性和业务连续性水平。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着计算机和网络的不断普及，人们更多的通过网络来传递大量信息。在网络环境下，还有各种各样的病毒感染、系统故障、线路故障等，使得数据信息的安全无法得到保障。由于安全风险的动态性，安全不是绝对的，信息系统不可能保证不出现安全事故，因此，一旦出现安全事件造成信息系统中断或者数据丢
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之可信计算技术</title>
    <link href="https://xiejava.gitee.io/posts/d23a1bb5/"/>
    <id>https://xiejava.gitee.io/posts/d23a1bb5/</id>
    <published>2024-01-09T08:53:32.000Z</published>
    <updated>2024-01-09T09:40:25.911Z</updated>
    
    <content type="html"><![CDATA[<p>可信计算技术是一种计算机安全体系结构，旨在提高计算机系统在面临各种攻击和威胁时的安全性和保密性。它通过包括硬件加密、受限访问以及计算机系统本身的完整性验证等技术手段，确保计算机系统在各种攻击和威胁下保持高度安全和保密性。</p><h2 id="一、可信计算基本概念"><a href="#一、可信计算基本概念" class="headerlink" title="一、可信计算基本概念"></a>一、可信计算基本概念</h2><p>“可信”，这个概念由可信计算组织Trusted Computing Group（TCG）提出，旨在提出一种能够超越预设安全规则，执行特殊行为的运行实体。</p><p>操作系统中将这个实体运行的环境称为可信计算基，是计算机系统内保护装置的总体，包括硬件、固件、软件和负责执行安全策略的组合体。可信计算基建立了一个基本的保护环境，并提供一个可信计算系统所要求的附加用户服务，以防止不可信主体的干扰和篡改。</p><p>而可信计算（Trusted Computing）是在计算和通信系统中广泛使用基于硬件安全模块支持下的可信计算平台，保证系统运行环境的可信赖。可信计算平台为网络用户提供了一个更为宽广的安全环境，它从安全体系的角度来描述安全问题，确保用户的安全执行环境。</p><p>可信计算技术的核心思想是可信，即只有当系统是可信的情况下，才能够保证安全。这主要体现在两个方面：一是系统本身的可信，即系统的所有组件都没有被篡改或替换，系统的运行环境和操作过程是可预测和可靠的；二是系统的行为可信，即系统的行为是按照预期的方式进行的，没有受到非法的干预或干扰。</p><p>在可信计算的基础上，操作或过程的行为在任意操作条件下是可预测的，并能很好地抵抗不良代码和一定的物理干扰造成的破坏。可信计算是安全的基础，从可信根出发，解决PC机结构所引起的安全问题。</p><h2 id="二、可信计算功能特征"><a href="#二、可信计算功能特征" class="headerlink" title="二、可信计算功能特征"></a>二、可信计算功能特征</h2><p>可信计算技术通过多种手段提高计算机系统的安全性，包括硬件保护、加密技术、数字签名技术、安全协议和系统完整性保护等。这些技术手段可以相互配合，形成一个完整的安全防护体系，确保计算机系统的安全性和保密性。</p><ol><li>硬件保护：可信计算技术使用安全芯片等硬件组件，在硬件层面对计算机进行保护，防止计算机系统被篡改或攻击。安全芯片可以验证计算机的识别序号，检测计算机是否被篡改，同时存储计算机的安全信息，保证用户、设备和数据的安全。</li><li>加密技术：可信计算技术使用加密技术对计算机系统中的数据进行加密，确保数据在传输和存储过程中的机密性和完整性。加密技术可以防止不良用户在通讯过程中截获加密的信息，保证数据的保密性。</li><li>数字签名技术：数字签名技术是可信计算技术的核心部分，用于在网络上进行身份验证和认证。数字签名可以验证消息的发件人是可信的，并且消息在传输过程中没有被篡改。这可以防止恶意用户伪造或篡改数据，提高系统的安全性。</li><li>安全协议：可信计算技术使用安全协议，如SSL/TLS协议等，保护在开放网络上进行的通信。这些安全协议可以防止恶意攻击者窃听或篡改通信内容，保证数据传输的安全性。</li><li>系统完整性保护：可信计算技术可以保护计算机系统的完整性，确保系统组件没有被篡改或替换。通过度量和验证等技术手段，可以检测系统组件的状态是否正常，及时发现并防止恶意代码的注入或攻击。</li></ol><p>与传统的安全技术相比，可信计算具有以下三个显著的功能特征：</p><ol><li>保护存储<br>保护存储一方面通过嵌入的硬件设备保护用户特定的秘密信息（如终端平台身份信息、密钥等），防止通过硬件物理窥探等手段访问密钥等信息，另一方面完成硬件保护下的密钥生成、随机数生成、HASH运算、数字签名以及加解密操作，为用户提供受保护的密码处理过程。</li><li>认证启动<br>可信计算技术利用完整性测量机制完成计算机终端从加电到操作系统装载运行过程中各个执行阶段（BIOS、操作系统装载程序、操作系统等）的认证。当级别低的节点认证到高一级的节点是可信时，低级别节点会把系统的运行控制权转交给高一级节点，基于这种信任链传递机制，可以保证终端始终处于可信的运行环境中。</li><li>证明<br>证明是保证信息正确性的过程。网络通信中，计算机终端基于数字证书机制可以向要通信的双方证明终端当前处于一个可信的状态，同时说明本机的配置情况。如果通信双方都能证明彼此信息的有效性，则可以继续进行通信，否则服务中断。<br>基于以上三个功能特性，可信计算技术可以对主机实施有效的安全防护，保护计算机及网络系统的安全运行，从而向用户提供一个可信的执行环境。</li></ol><h2 id="三、可信计算的应用"><a href="#三、可信计算的应用" class="headerlink" title="三、可信计算的应用"></a>三、可信计算的应用</h2><p>可信计算技术的应用范围非常广泛，它可以应用于各种计算机系统和网络设备中，提供从硬件到软件的各种安全保障。例如，可信计算技术可以用于保护计算机系统的关键组件，防止恶意代码篡改BIOS、操作系统和应用软件；还可以用于实现网络连接的安全控制，防止终端的安全状态伪造、接入后配置修改以及设备假冒接入等问题。此外，可信计算技术还可以用于构建等级保护的核心技术体系，对通信设备、边界设备、计算设备等保护对象进行系统引导程序、系统程序、重要配置参数等的验证。</p><p>可信计算为系统运行提供了一个可信赖的环境，具体来说可在以下方面得到应用：</p><ol><li>云环境：云环境需要更高的安全性，可信计算技术可以帮助提供更安全、更可信赖的云服务环境。通过可信计算技术，可以保护云服务中数据的机密性和完整性，防止数据被篡改或泄露。同时，可信计算技术还可以帮助实现虚拟专用网络（VPN）的安全传输，保证远程用户访问云服务时的身份验证和数据加密。</li><li>物联网：在物联网环境中，可信计算技术可以帮助保护各种设备和传感器的数据安全，以及确保数据的完整性和真实性。通过可信计算技术，可以防止物联网设备被攻击或篡改，保证设备的合法性和安全性。同时，可信计算技术还可以用于实现物联网设备的远程身份验证和授权控制，确保只有合法的设备可以接入网络并访问相应的数据。</li><li>数字版权管理：可信计算技术可以用于创建安全的数字版权管理系统，以防止数字内容被非法复制和分发。通过可信计算技术，可以确保数字内容的完整性和真实性，同时防止未经授权的访问和复制。这可以保护版权所有者的合法权益，防止盗版内容的传播。</li><li>金融交易：通过可信计算技术，可以保护金融交易中的数据完整性和机密性，防止交易被篡改或泄露。同时，可信计算技术还可以用于实现金融系统的远程身份验证和授权控制，保证金融交易的安全性和合法性。以网上银行为例，当用户接入到银行服务器时使用远程认证，之后如果服务器能产生正确的认证证书那么银行服务器就将只对该页面进行服务。随后用户通过该页面发送他的加密账号和PIN和一些对用户和银行都为私有的（不看见）保证信息。</li><li>身份认证和访问控制：可信计算技术可以用于实现身份认证和访问控制，保证只有合法的用户可以访问相应的数据或资源。通过可信计算技术，可以验证用户的身份和权限，防止身份假冒和非法访问。这可以提高系统的安全性，保护敏感数据不被泄露或滥用。</li><li>保护系统不受病毒和间谍软件危害：软件的数字签名将使得用户识别出经过第三方修改可能加入间谍软件的应用程序。例如，一个网站提供一个修改过的流行即时通讯程序版本，该程序包含间谍软件。操作系统可以发现这些版本里缺失有效的签名并通知用户该程序已经被修改，然而这也带来一个问题：谁来决定签名是否有效。</li><li>保护生物识别身份验证数据：用于身份认证的生物鉴别设备可以使用可信计算技术（存储器屏蔽，安全I/O）来确保没有间谍软件安装在电脑上窃取敏感的生物识别信息。</li><li>核查远程网格计算的计算结果：可信计算可以确保网格计算系统的参与者返回的结果不是伪造的。这样大型模拟运算（例如天气系统模拟）不需要繁重的冗余运算来保证结果不被伪造，从而得到想要的（正确）结论。</li></ol><h2 id="四、可信路径"><a href="#四、可信路径" class="headerlink" title="四、可信路径"></a>四、可信路径</h2><p>可信路径是一种安全机制，旨在确保只有经过授权和验证的实体能够访问特定的资源或数据。可信路径的实现通常依赖于可信计算技术，通过在系统中建立一条可信任的路径来保护数据的完整性和机密性。</p><p>可信通信机制主要应用在用户登录或注册时，能够保证用户确实是和安全核心通信，防止不可信进程如特洛伊木马等模拟系统的登录过程而窃取口令。<br>在计算机系统中，可信路径可以用于保护操作系统的引导程序、核心程序以及系统的关键配置参数等。通过建立可信路径，可以确保只有合法的实体能够修改或破坏这些关键组件，从而防止系统被篡改或攻击。</p><p>此外，在物联网环境中，可信路径可以用于确保只有经过授权的设备能够接入网络并访问相应的数据。通过建立可信路径，可以防止非法设备接入网络，从而保护物联网系统的安全性和可靠性。</p><p>可信路径是一种重要的安全机制，它可以建立一条可信任的路径来保护数据的完整性和机密性，防止系统被篡改或攻击。通过可信计算技术，可以有效地实现可信路径，提高计算机系统和物联网系统的安全性。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可信计算技术是一种计算机安全体系结构，旨在提高计算机系统在面临各种攻击和威胁时的安全性和保密性。它通过包括硬件加密、受限访问以及计算机系统本身的完整性验证等技术手段，确保计算机系统在各种攻击和威胁下保持高度安全和保密性。&lt;/p&gt;
&lt;h2 id=&quot;一、可信计算基本概念&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之密码技术</title>
    <link href="https://xiejava.gitee.io/posts/1dad343e/"/>
    <id>https://xiejava.gitee.io/posts/1dad343e/</id>
    <published>2024-01-08T08:44:37.000Z</published>
    <updated>2024-01-08T09:34:16.387Z</updated>
    
    <content type="html"><![CDATA[<p>密码学是信息安全的基础技术之一，是达到信息系统安全等级保护要求的核心技术支持，在身份验证、访问控制、文件加密、数据加密和安全传输中都得到广泛应用。其核心目标是保证信息的机密性、完整性和可用性。<br>密码学包括加密和解密两个部分。一般过程是：发送方通过加密算法，将可读的文件（明文）变换成不可理解的乱码，即密文，然后传输给接收方；接收方接收密文之后，通过解密算法进行解密，获得明文。密码技术的实施过程，支持等级保护在机密性、完整性、认证性和非否认性等方面的要求。</p><h2 id="一、加密技术分类"><a href="#一、加密技术分类" class="headerlink" title="一、加密技术分类"></a>一、加密技术分类</h2><p>按照密钥的特点可将密码学分为两类：对称密码算法和非对称密码算法。相应地，对数据加密的技术分为两类，即对称加密技术和非对称加密技术。</p><h3 id="1、对称加密技术"><a href="#1、对称加密技术" class="headerlink" title="1、对称加密技术"></a>1、对称加密技术</h3><p>对称加密技术的基本特征是加密密钥和解密密钥相同，典型代表是数据加密标准（DES）、国际数据加密算法（IDEA）。实施过程如下：<br>（1）发送方发送明文消息前，首先获得一个密钥，该密钥可以由发送方生成并通过安全的渠道送到接收方，或者由可信的第三方生成，分发给发送方和接收方；<br>（2）发送方使用密钥将要发送的消息加密并传输给接收方；<br>（3）接收方接收密文，使用密钥进行解密获得明文。<br>对称加密算法使用起来简单快捷，加密、解密处理速度快、保密度高，适合对数据量比较大的文件进行加密。但是在密钥管理与分发、数字签名等方面存在较为明显的问题：<br>（1）会话双方密钥难以统一；在多人通信时，同时产生的密钥数量庞大，难以管理。<br>（2）密钥必须妥善安全地发送到接收方，分发过程十分复杂，花费代价高。<br>（3）密钥不具有唯一性，易于伪造。<br>国产对称加密算法包括SM1、SM4等。<br>SM1是国家密码管理局公布的分组密码，主要应用于SSL/TLS握手过程中的DH密钥交换，也可用于数据加密和数字签名。<br>SM4是一种分组密码，其分组长度为128位，密钥长度为128位、192位或256位。SM4算法基于Feistel结构，具有较高的安全性。</p><h3 id="2、非对称加密技术"><a href="#2、非对称加密技术" class="headerlink" title="2、非对称加密技术"></a>2、非对称加密技术</h3><p>非对称加密技术的原理是加密密钥和解密密钥不同，其中一个密钥用来加密，另一个密钥用来解密，典型代表是RSA算法。非对称加密技术通过特定的算法生成一个密钥对，一个密钥不能公开，叫做私钥，另一个可以公开，叫做公钥。同时，非对称加密技术的加密算法和解密算法是公开的，具体实施过程如下：<br>（1）发送方通过私钥和加密算法对发送的消息进行加密，然后传输；<br>（2）接收方接收密文，使用发送方公开的公钥和解密算法进行解密，获得明文。<br>非对称加密体制相对对称加密体制而言，具有以下优势：<br>（1）消除了会话用户双方交换密钥的需要。<br>（2）每个用户拥有特定的密钥，密钥数量少，便于管理，同时实现了身份认证。<br>但是非对称加密体制加密和解密花费时间长、速度慢，不适合对数据量比较大的文件加密，更适用于对少量数据进行加密。<br>国产非对称加密算法主要包括SM2和SM9。<br>SM2算法是一种基于椭圆曲线密码的公钥密码算法标准，其安全性相较于RSA算法更高，且具有更高的运算速度，适用于数字签名、密钥协商和加密等场景。SM2算法已成为我国无线局域网国家标准的商用密码算法，并被应用于WAPI无线网络中。<br>SM9算法则是一种基于标识的密码算法，将用户的身份标识作为公钥，从而省去了证书管理的复杂性。SM9算法包括数字签名、密钥交换和密钥封装等协议，可以应用于多种安全场景，如网络安全、移动支付等。</p><h2 id="二、密码技术在安全防御中的作用"><a href="#二、密码技术在安全防御中的作用" class="headerlink" title="二、密码技术在安全防御中的作用"></a>二、密码技术在安全防御中的作用</h2><p>在安全防御中，密码技术的主要作用如下：</p><ol><li>信息加密：通过加密算法将明文信息转换为密文信息，保证信息在传输过程中不被窃取或篡改。常见的加密算法包括对称加密算法（如AES、DES、SM1、SM4）和非对称加密算法（如RSA、ECC、SM2、SM9）。</li><li>数字签名：利用密码技术对数据进行签名，验证数据的完整性和来源。数字签名可以防止数据被篡改或伪造，广泛应用于身份认证、电子签章等领域。</li><li>身份认证：通过密码技术对用户进行身份验证，确保只有合法用户能够访问敏感数据或资源。常见的身份认证方式包括用户名/密码认证、动态令牌认证、多因素认证等。</li><li>访问控制：利用密码技术对访问者进行权限控制，确保只有授权用户能够访问特定资源。访问控制通常与身份认证相结合，实现基于角色的访问控制（RBAC）。</li><li>安全审计：通过密码技术记录和审计安全事件，及时发现和应对安全威胁。安全审计可以帮助组织机构了解其安全状况，发现潜在的安全风险，并及时采取措施进行防范。</li></ol><p>密码技术在安全防御中扮演着至关重要的角色。通过合理应用密码技术，可以有效提高组织机构的信息安全水平，保护敏感数据和资源的安全。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;密码学是信息安全的基础技术之一，是达到信息系统安全等级保护要求的核心技术支持，在身份验证、访问控制、文件加密、数据加密和安全传输中都得到广泛应用。其核心目标是保证信息的机密性、完整性和可用性。&lt;br&gt;密码学包括加密和解密两个部分。一般过程是：发送方通过加密算法，将可读的文件
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之漏洞扫描技术</title>
    <link href="https://xiejava.gitee.io/posts/a57e826e/"/>
    <id>https://xiejava.gitee.io/posts/a57e826e/</id>
    <published>2024-01-08T03:08:49.000Z</published>
    <updated>2024-01-08T03:12:38.922Z</updated>
    
    <content type="html"><![CDATA[<p>每年都有数以千计的网络安全漏洞被发现和公布，加上攻击者手段的不断变化，网络安全状况也在随着安全漏洞的增加变得日益严峻。寻根溯源，绝大多数用户缺乏一套完整、有效的漏洞管理工作流程，未能落实定期评估与漏洞修补工作。只有比攻击者更早掌握自己网络安全漏洞并且做好预防工作，才能够有效地避免由于攻击所造成的损失。</p><p>什么是漏洞及漏洞的管理参见博客《<a href="http://xiejava.ishareread.com/posts/a937cbf5/" target="_blank" rel="noopener">安全运营之漏洞管理</a>》，本文介绍安全防御中的漏洞扫描技术来发现漏洞。</p><p>安全防御中的漏洞扫描技术是网络安全防护体系中一项核心的预防性措施，用于自动检测网络、系统和服务中的潜在弱点和已知安全漏洞。这项技术帮助企业、组织和个人识别出可能被攻击者利用的风险点，并采取相应的补救措施以强化其整体安全态势。</p><p>漏洞扫描通过针对常见黑客攻击手法的检查策略，定期对网络系统进行扫描分析，及时发现问题、给出相关安全措施和建议并进行相应的修补和配置，这项技术的具体实现就是安全扫描程序，在很短的时间内查出现存的安全脆弱点。</p><p>安全漏洞扫描技术可以分为被动和主动两种方式。被动扫描是指在不影响系统正常运行的情况下，通过分析系统的网络流量、系统日志和配置信息等，来发现潜在的安全漏洞。主动扫描则是通过模拟攻击的方式，对系统进行深入的探测和漏洞发现。</p><p>被动扫描和主动扫描它们各有优缺点。</p><ol><li>被动扫描是指在不影响系统正常运行的情况下，通过分析系统的网络流量、系统日志和配置信息等，来发现潜在的安全漏洞。被动扫描的优点在于不会对目标系统造成干扰或损害，可以避免触发恶意软件或警报器。同时，被动扫描可以实时监测系统的安全状况，及时发现新的漏洞和攻击。然而，被动扫描的缺点在于无法发现未知的漏洞和攻击，因为它是基于已知的安全漏洞库和规则进行扫描的。</li><li>主动扫描则是通过模拟攻击的方式，对系统进行深入的探测和漏洞发现。主动扫描可以发现未知的漏洞和攻击，因为它是通过模拟攻击来发现系统中的弱点。主动扫描的优点在于可以更加深入地探测系统中的安全漏洞，包括缓冲区溢出、SQL注入等。同时，主动扫描还可以评估系统的防御策略和应急响应措施的有效性。然而，主动扫描的缺点在于可能会对目标系统造成干扰或损害，需要谨慎操作，避免对系统造成不必要的风险。</li></ol><p>被动扫描和主动扫描各有优缺点，需要根据实际情况选择使用。在某些情况下，可能需要结合使用被动扫描和主动扫描，以提高系统的安全性。<br>安全漏洞扫描技术可以自动化进行，也可以手动执行。自动化扫描工具可以根据预定义的漏洞库和扫描规则，自动对目标系统进行扫描和漏洞发现。手动扫描则需要专业的安全人员对系统进行逐一检查和分析。</p><p>常见漏洞扫描工具的特点：</p><ul><li>智能识别：能够对扫描结果数据进行在线分析，能够根据端口、漏洞、BANNER信息、IP地址等关键字对主机信息进行查询并能将查询结果保存。</li><li>高效快捷：支持高级数据分析，能够进行历史数据查询、汇总查看、对比分析等，方便进行多个扫描任务或多个IP风险对比，能够在多个历史任务中，很快的检索到需要关注的资产IP点。</li><li>脚本依赖：扫描模块会自动根据其逻辑依赖关系执行而不是无目的盲目执行，从而提高了扫描准确性。</li><li>信息输出：漏洞分析报告应提供在线浏览报告和离线打印报告;离线报表提供针对不同角色的默认模板，允许用户定制报告的内容、报告的格式等。</li><li>断点恢复：在扫描程序运行到一半的时候如果系统意外掉电等，可以通过查看扫描状态进行重新扫描或者继续扫描，如果选择继续扫描的话，前面扫描到的结果会保留下来和后面的结果一起合并生成结果文件。</li></ul><p>安全漏洞扫描技术可以针对不同的层次进行扫描，例如网络层、操作系统层和应用层等。网络层扫描主要是检查网络设备和通信线路的安全性，操作系统层扫描主要检查操作系统的配置和漏洞，应用层扫描则针对具体的软件应用程序进行安全检查。基于网络的安全扫描主要扫描设定网络内的服务器、路由器、网桥、变换机、访问服务器、防火墙等设备的安全漏洞，并可设定模拟攻击，以测试系统的防御能力。通常该类扫描器限制使用范围（IP地址或路由器跳数）。</p><p>安全漏洞扫描技术是一类重要的网络安全技术。它和防火墙、入侵检测系统互相配合，能够有效提高网络的安全性。通过对网络的扫描，网络管理员能了解网络的安全设置和运行的应用服务，及时发现安全漏洞，客观评估网络风险等级。网络管理员能根据扫描的结果更正网络安全漏洞和系统中的错误设置，在黑客攻击前进行防范。如果防火墙和网络监视系统是被动的防御手段，那么安全扫描就是一种主动的防范措施，能有效避免黑客攻击行为，做到防患于未然。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每年都有数以千计的网络安全漏洞被发现和公布，加上攻击者手段的不断变化，网络安全状况也在随着安全漏洞的增加变得日益严峻。寻根溯源，绝大多数用户缺乏一套完整、有效的漏洞管理工作流程，未能落实定期评估与漏洞修补工作。只有比攻击者更早掌握自己网络安全漏洞并且做好预防工作，才能够有效
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之安全审计技术</title>
    <link href="https://xiejava.gitee.io/posts/f2bbe1ed/"/>
    <id>https://xiejava.gitee.io/posts/f2bbe1ed/</id>
    <published>2024-01-07T02:25:10.000Z</published>
    <updated>2024-01-07T02:27:54.015Z</updated>
    
    <content type="html"><![CDATA[<p>安全防御中的安全审计技术是保障信息系统安全的重要手段之一。其主要目标是对信息系统及其活动进行记录、审查和评估，以确保系统符合安全策略、法规要求，并能够及时发现潜在的安全风险和异常行为。通过安全审计，可以对系统中的各种活动进行记录、检测和监控，以发现潜在的安全风险和威胁，并及时采取相应的措施进行防范和处理。</p><p>安全审计是对访问控制的必要补充，是信息安全的另一个基础技术机制。审计会对用户使用何种信息资源、使用的时间，以及如何使用（执行何种操作）进行记录与监控。审计和监控是实现系统安全的最后一道防线，处于系统的最高层。审计与监控能够再现原有的进程和问题，这对于责任追查和数据恢复非常有必要。</p><p>审计跟踪是系统活动的流水记录。该记录按事件从始至终的途径，顺序检查、审查和检验每个事件的环境及活动。审计跟踪通过书面方式提供应负责任人员的活动证据以支持访问控制职能的实现（职能是指记录系统活动并可以跟踪到对这些活动应负责任人员的能力）。</p><p>审计跟踪记录系统活动和用户活动。系统活动包括操作系统和应用程序进程的活动；用户活动包括用户在操作系统中和应用程序中的活动。通过借助适当的工具和规程，审计跟踪可以发现违反安全策略的活动、影响运行效率的问题以及程序中的错误。审计跟踪不但有助于帮助系统管理员确保系统及其资源免遭非法授权用户的侵害，同时还能提供对数据恢复的帮助。</p><p>安全审计技术主要包括以下几个方面的内容：</p><ol><li>日志审计：通过收集、分析和审计系统中的日志信息，对系统的运行状态、安全事件和异常行为进行监测和报警。常见的日志包括系统日志、安全日志、网络日志等。</li><li>行为审计：对网络中的主机、设备、应用程序等的行为进行监测和审计，以发现异常行为和潜在的安全威胁。行为审计可以通过网络流量分析、主机监控等方式实现。</li><li>入侵检测：通过实时监测网络流量和系统活动，发现潜在的入侵行为和恶意攻击，并及时采取相应的措施进行防范和处理。入侵检测可以采用基于规则的模式或基于行为的模式。</li><li>安全审计平台：通过建立统一的安全审计平台，实现对各类安全事件的集中管理和分析。安全审计平台可以集成各种审计工具和设备，提供全面的安全审计服务。<br>更多关于日志审计分析平台的介绍请参考《<a href="http://xiejava.ishareread.com/posts/6a8b36cb/" target="_blank" rel="noopener">网络安全之认识日志采集分析审计系统</a>》</li></ol><p>安全审计的核心在于对与安全有关的活动的操作信息进行识别、记录、存储和分析。同时可以辅助其他的一些安全措施，比如防止恶意刷新，危险IP过滤等。通过审计记录的分析，可以知道网络上发生了哪些与安全有关的活动，哪个用户应该对这个活动负责。<br>根据安全审计的对象、范围和层次不同，可以分为：</p><ul><li>对服务器的安全审计：审计服务器的安全漏洞，监控对服务器的任何合法和非法操作，以便发现问题后查找原因。</li><li>对用户电脑的安全审计：为了安全目的，审计用户电脑的安全漏洞和入侵事件；为了防泄密和信息安全目的，监控上网行为和内容，以及向外拷贝文件行为；为了提高工作效率目的，监控用户非工作行为。</li><li>对数据库的安全审计：对合法和非法访问进行审计，以便事后检查。</li><li>对应用系统的安全审计：应用系统的范围较广，可以是业务系统，也可以是各类型的服务软件。这些软件基本都会形成运行日志，我们对日志进行收集，就可以知道各种合法和非法访问。</li><li>对网络安全设备的安全审计：网络安全设备包括防火墙、网闸、IDS/IPS、灾难备份、VPN、加密设备、网络安全审计系统等等，这些产品都会形成运行日志，我们对日志进行收集，就能统一分析网络的安全状况。</li></ul><p>在安全审计技术的实际应用中，需要注意以下几个方面：</p><ol><li>全面覆盖：安全审计应覆盖系统的各个方面，包括网络、主机、应用程序等，不留死角。</li><li>实时监测：安全审计应具备实时监测和报警功能，及时发现和处理安全事件。</li><li>准确性：安全审计应具备高准确性，避免误报和漏报。</li><li>可扩展性：随着系统的规模和复杂性的增加，安全审计应具备可扩展性，能够适应不同规模和类型的系统。</li><li>合规性：安全审计应符合相关法律法规和标准的要求，确保审计结果的合法性和合规性。</li></ol><p>安全防御中的安全审计技术是保障信息系统安全的重要手段之一，通过全面覆盖、实时监测、准确性、可扩展性和合规性等方面的要求和实践，可以有效提高信息系统的安全性和可靠性。随着技术的发展，现代安全审计趋向于自动化、智能化和一体化，结合大数据分析、机器学习和人工智能技术，能够更高效地处理海量安全事件，提高审计准确性和及时性，为企业的安全防御提供有力支撑。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安全防御中的安全审计技术是保障信息系统安全的重要手段之一。其主要目标是对信息系统及其活动进行记录、审查和评估，以确保系统符合安全策略、法规要求，并能够及时发现潜在的安全风险和异常行为。通过安全审计，可以对系统中的各种活动进行记录、检测和监控，以发现潜在的安全风险和威胁，并及
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之入侵检测与防范技术</title>
    <link href="https://xiejava.gitee.io/posts/48309864/"/>
    <id>https://xiejava.gitee.io/posts/48309864/</id>
    <published>2024-01-05T01:33:54.000Z</published>
    <updated>2024-01-05T03:17:53.396Z</updated>
    
    <content type="html"><![CDATA[<p>安全防御中的入侵检测与防范技术主要涉及到入侵检测系统（IDS）和入侵防御技术（IPS）。<br>入侵检测系统（IDS）是一种对入侵行为自动进行检测、监控和分析的软件与硬件的组合系统。IDS通过从计算机网络或系统中的若干关键点收集信息，并对其进行分析，从中发现网络或系统中是否有违反安全策略的行为和遭到攻击的迹象。<br>入侵防御技术（IPS）是一种主动的安全防御技术，旨在防止恶意软件入侵和数据泄露。它通过实时监测和拦截网络流量中的威胁，保护网络和系统免受攻击。</p><h2 id="一、入侵检测技术（IDS）"><a href="#一、入侵检测技术（IDS）" class="headerlink" title="一、入侵检测技术（IDS）"></a>一、入侵检测技术（IDS）</h2><h3 id="1、入侵检测技术的定义"><a href="#1、入侵检测技术的定义" class="headerlink" title="1、入侵检测技术的定义"></a>1、入侵检测技术的定义</h3><p>通过对计算机网络或计算机系统中的若干关键点收集信息并进行分析，从中发现网络或系统中是否有违反安全策略的行为和被攻击的迹象，进行入侵检测的软件与硬件的组合就是入侵检测系统（IDS）。入侵检测系统（IDS）是一种用于检测、记录和响应计算机系统或网络中未授权活动的软件或硬件工具。它通过实时监控和分析网络流量、系统日志等信息，发现潜在的入侵行为，并及时采取相应的措施来应对。</p><p>IDS执行一般分为三个步骤，依次为信息收集、数据分析、响应（被动响应和主动响应）。</p><ul><li>信息收集：IDS信息收集的内容包括系统、网络、数据及用户活动的状态和行为，信息一般来自系统日志、目录以及文件中的异常改变、程序执行中的异常行为及物理形式的入侵信息四个方面。 </li><li>数据分析：数据分析是IDS的核心。它首先构建分析器，把收集到的信息经过预处理，建立一个行为分析引擎或模型，然后向模型中植入时间数据，在知识库中保存植入数据的模型。数据分析一般通过模式匹配、统计分析和完整性分析3种手段进行，模式匹配和统计分析用于实时入侵检测，而完整性分析则用于事后分析。常用于数据分析的有五种统计模型： 操作模型、方差、多元模型、马尔柯夫过程模型、时间序列分析。</li><li>响应：IDS在发现入侵后会及时作出响应，包括切断网络连接、记录事件和报警等。响应一般分为主动响应和被动响应，主动响应主要来阻止攻击或影响进而改变攻击的进程，由用户驱动或系统本身自动执行，可对入侵者采取断开连接等行动、修正系统环境或收集有用信息；被动响应主要是报告和记录所检测出的问题，包括告警和通知、简单网络管理协议（SNMP）陷阱和插件等。IDS还可以与其他安全系统集成，如防火墙、反病毒软件等，以提供更全面的安全防护。</li></ul><h3 id="2、入侵检测技术的发展趋势和发展历史"><a href="#2、入侵检测技术的发展趋势和发展历史" class="headerlink" title="2、入侵检测技术的发展趋势和发展历史"></a>2、入侵检测技术的发展趋势和发展历史</h3><p>IDS的发展已经历了四个主要阶段：<br>第一阶段是以基于协议解码和模式匹配为主的技术，其优点是对于已知的攻击行为非常有效，各种已知的攻击行为可以对号入座，误报率低；缺点是高超的黑客采用变形手法或者新技术可以轻易躲避检测，漏报率高。<br>第二阶段是以基于模式匹配、简单协议分析和异常统计为主的技术，其优点是能够分析处理一部分协议，可以进行重组；缺点是匹配效率较低，管理功能较弱。这种检测技术实际上是在第一阶段技术的基础上增加了部分对异常行为分析的功能。<br>第三阶段是以基于完全协议分析、模式匹配和异常统计为主的技术，其优点是误报率、漏报率和滥报率较低，效率高，可管理性强，并在此基础上实现了多级分布式的检测管理；缺点是可视化程度不高，防范及管理功能较弱。<br>第四阶段是以基于安全管理、协议分析、模式匹配和异常统计为主的技术，其优点是入侵管理和多项技术协同工作，建立全局的主动保障体系，具有良好的可视化、可控性和可管理性。以该技术为核心，可构造一个积极的动态防御体系，即IMS——入侵管理系统。</p><h3 id="3、入侵检测技术存在的问题"><a href="#3、入侵检测技术存在的问题" class="headerlink" title="3、入侵检测技术存在的问题"></a>3、入侵检测技术存在的问题</h3><p>入侵检测的原理主要包括误用检测和异常检测两种方式。误用检测主要根据已知的攻击模式进行检测，而异常检测则是首先总结正常操作应该具有的特征（用户轮廓），当用户活动与正常行为有重大偏离时即被认为是入侵。异常检测可以发现未知的攻击方法，但误报率较高。</p><p>IDS的特点包括监测速度快、隐蔽性好、视野更宽、较少的监测器、攻击者不易转移证据、操作系统无关性以及不占用被保护的系统资源等。这些特点使得IDS能够有效地发现并应对各种网络攻击。<br>但是，入侵检测技术在实际应用中依然存在很多问题：<br>1）误报<br>误报是指被入侵检测系统测出但其实是正常及合法使用受保护网络和计算机的警报。假警报不但令人讨厌，并且降低入侵检测系统的效率。攻击者可以而且往往是利用包结构伪造无威胁“正常”假警报，以诱使收受人把入侵检测系统关掉。<br>2）精巧及有组织的攻击<br>攻击可以来自四方八面，特别是一群人组织策划且攻击者技术高超的攻击，攻击者花费很长时间准备，并发动全球性攻击，要找出这样复杂的攻击是一件难事。<br>3）数据采集、数据分析方法不足<br>高速网络技术，尤其是交换技术以及加密信道技术的发展，使得通过共享网段侦听的网络数据采集方法显得不足，而巨大的通信量对数据分析也提出了新的要求。<br>4）检测模型始终落后于攻击者的新知识和技术手段</p><p>入侵检测系统构建模型始终落后于攻击者的新知识和技术手段。主要表现在以下几个方面：<br>a、攻击者利用加密技术欺骗IDS，躲避IDS的安全策略；<br>b、攻击者快速发动进攻，使IDS无法反应，大规模的攻击，使IDS判断出错；<br>c、直接破坏IDS；<br>d、智能攻击技术，边攻击边学习，变IDS为攻击者的工具。<br>在安全防御中，IDS与防火墙等其他安全设备协同工作，共同保护网络的安全。防火墙主要用于抵御外部网络的入侵，但对于内部攻击几乎束手无策。而IDS则作为防火墙的合理补充，帮助系统应对网络攻击，扩展了系统管理员在安全审计、监视、进攻识别和响应等方面的安全管理能力，提高了信息安全基础结构的完整性。</p><h2 id="二、入侵防御技术（IPS）"><a href="#二、入侵防御技术（IPS）" class="headerlink" title="二、入侵防御技术（IPS）"></a>二、入侵防御技术（IPS）</h2><h3 id="1、入侵防御技术的定义"><a href="#1、入侵防御技术的定义" class="headerlink" title="1、入侵防御技术的定义"></a>1、入侵防御技术的定义</h3><p>入侵防御系统（IPS： Intrusion Prevention System）是通过直接嵌入到网络流量中，预先对入侵活动和攻击性网络流量进行拦截，避免造成损失的主动防护系统。IPS通过一个网络接口接收来自外部系统的流量，经过检查确认其中不包含异常活动或可疑内容后，再通过另外一个端口将它传送到内部系统中，能够监视网络或网络设备的网络资料传输行为，并能即时中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为。</p><h3 id="2、IPS的工作原理"><a href="#2、IPS的工作原理" class="headerlink" title="2、IPS的工作原理"></a>2、IPS的工作原理</h3><p>入侵防御技术（IPS）是一种主动的安全防御技术，旨在防止恶意软件入侵和数据泄露。它通过实时监测和拦截网络流量中的威胁，保护网络和系统免受攻击。</p><p>IPS的工作原理包括以下几个步骤：</p><ol><li>数据包捕获：IPS通过在网络接口上捕获数据包来实时监测网络流量。这些数据包可以是流入或流出的，以全面检测潜在的威胁。</li><li>威胁识别：IPS使用先进的检测算法和特征库来识别恶意软件、恶意行为和其他潜在威胁。它还可以识别各种攻击类型，如SQL注入、跨站脚本攻击、缓冲区溢出等。</li><li>威胁拦截：一旦IPS识别到威胁，它会立即采取措施拦截恶意流量，以防止攻击成功。这些措施可能包括丢弃数据包、断开连接、隔离受感染的主机等。</li><li>警报与日志：IPS会生成警报和日志记录，以通知管理员存在威胁并提供详细信息。这些信息对于后续分析和改进安全策略非常有用。</li><li>自我保护：为了防止IPS自身被攻破，它通常具有自我保护机制。这些机制可能包括防火墙规则、白名单功能、进程保护等，以确保IPS的正常运行和有效性。<br>入侵防御技术（IPS）通过实时监测和拦截网络流量中的威胁，提供了一种有效的安全防御手段。它可以保护网络和系统免受各种攻击的侵害，并具有自我保护机制以确保其有效性。</li></ol><h3 id="3、IPS的功能特点和性能扩展"><a href="#3、IPS的功能特点和性能扩展" class="headerlink" title="3、IPS的功能特点和性能扩展"></a>3、IPS的功能特点和性能扩展</h3><h4 id="1）IPS-功能特点"><a href="#1）IPS-功能特点" class="headerlink" title="1）IPS-功能特点"></a>1）IPS-功能特点</h4><p>IPS是一种防御深层入侵行为的串接部署设备。自IPS概念出现以来，用户和厂商的最大困惑就是：如何确保IPS无误报和滥报，在实时发现攻击行为的同时，保证IPS不会成为新的网络故障点。未解决这个问题，IPS具有其独特的功能特点：<br>（1）精确阻断<br>IPS的重点就是要达到精确阻断，即精确判断各种深层的攻击行为，并实现实时的阻断。 确保中断、调整或隔离的是不正常或是具有伤害性的网络行为。<br>（2）深层防御<br>IPS的第二个重点就是防御各种深层入侵行为，这也是IPS系统区别于其他安全产品的本质特点。即在确保精确阻断的基础上，尽量多地发现攻击行为，如SQL注入攻击、缓冲区溢出攻击、恶意代码攻击、后门、木马、间谍软件等达到深层防御。 </p><h4 id="2）IPS-性能扩展"><a href="#2）IPS-性能扩展" class="headerlink" title="2）IPS-性能扩展"></a>2）IPS-性能扩展</h4><p>IPS常用的攻击检测方法有两种：一种方法是通过定义攻击行为的数据特征来实现对已知攻击的检测，其优势是技术上实现简单、易于扩充、可迅速实现对特定新攻击的检测和拦截，但仅能识别已知攻击、抗变种能力弱；另一种方法是通过分析攻击产生原理，定义攻击类型的统一特征，能准确识别基于相同原理的各种攻击、不受攻击变种的影响，但技术门槛高、扩充复杂、应对新攻击速度有限。 </p><h3 id="4、IPS的优势和弱点"><a href="#4、IPS的优势和弱点" class="headerlink" title="4、IPS的优势和弱点"></a>4、IPS的优势和弱点</h3><p>实时检测与主动防御是IPS最为核心的设计理念，也是其区别于防火墙和IDS的立足之本。为实现这一理念，IPS在如下四个方面实现了技术突破，形成了不可低估的优势：<br>1）在线安装<br>IPS保留IDS实时检测的技术与功能，但是却采用了防火墙式的在线安装，即直接嵌入到网络流量中，通过一个网络端口接收来自外部系统的流量，经过检查确认其中不包含异常活动或可疑内容后，再通过另外一个端口将它传送到内部系统中；<br>2）实时阻断<br>IPS具有强有力的实时阻断功能，能够预先对入侵活动和攻击性网络流量进行拦截，避免其造成任何损失；<br>3）先进的检测技术<br>主要是并行处理检测和协议重组分析。所谓并行处理检测是指所有流经IPS的数据包，都采用并行处理方式进行过滤器匹配，实现在一个时钟周期内，遍历所有数据包过滤器；<br>4）特殊规则植入功能<br>IPS允许植入特殊规则以阻止恶意代码。IPS能够辅助实施可接收应用策略（AUP），如禁止使用对等的文件共享应用和占有大量带宽的免费互联网电话服务工具等。</p><p>尽管如此，IPS仍有其不可忽视的弱点：<br>1）总体拥有成本高<br>高可用性实时计算需求决定了IPS必须选用高端的专用计算设备，使其成本相对较高。<br>2）单点故障<br>IPS的阻断能力决定其必须采用网络嵌入模式，而这就可能造成单点故障。<br>3）性能瓶颈<br>即使IPS设备不出现故障，它仍然是一个潜在的网络瓶颈，不仅会增加滞后时间，而且会降低网络的效率，因此，绝大多数高端IPS产品供应商都通过使用自定义硬件（FPGA、网络处理器或者ASIC芯片）来提高IPS的运行效率，以减少其对于业务网络的负面影响。<br>4）误报与漏报<br>在网络流量几乎成几何级数增加的情况下，一旦生成警报，最基本的要求就是不让“误报”有可乘之机，导致合法流量也很有可能被意外拦截。</p><p>入侵检测系统（IDS）和入侵防御系统（IPS）都是重要的网络安全工具，但在工作方式和使用场景上有所不同。<br>IDS被视为审计类产品，主要关注于对网络或系统中的事件进行实时检测，并根据规则进行安全审计。它能够及时发现并警告系统管理员是否有入侵行为，并提供对内部攻击、外部攻击和误操作的实时保护。IDS可以分析计算机网络或系统中的关键信息，检查是否有违反安全策略的行为或被攻击的迹象。当有问题发生时，IDS会产生警报。IDS较多应用在防火墙之后，作为第二道安全闸门来提供额外的安全层。</p><p>相比之下，IPS被视为一种主动的、智能的入侵检测和防范系统。IPS不仅具备IDS的功能，而且能通过响应方式实时地终止入侵行为的发生和发展。它不仅能检测攻击，还能有效阻断攻击，提供实时的保护。IPS注重主动防御，可以设置过滤器来分析数据包，阻断恶意内容的数据包，并接受进一步检查的可疑数据包。IPS的关键技术包括主动防御技术、防火墙与IPS互动技术、集成多种检测技术和硬件加速系统等。</p><p>简而言之，IDS和IPS在网络安全中都发挥着重要作用。IDS主要侧重于检测入侵行为并提供警告，而IPS则更注重主动防御和实时阻断攻击。两者可以结合使用，共同为网络和系统提供更全面和有效的安全保护。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安全防御中的入侵检测与防范技术主要涉及到入侵检测系统（IDS）和入侵防御技术（IPS）。&lt;br&gt;入侵检测系统（IDS）是一种对入侵行为自动进行检测、监控和分析的软件与硬件的组合系统。IDS通过从计算机网络或系统中的若干关键点收集信息，并对其进行分析，从中发现网络或系统中是否
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之恶意代码与防护技术</title>
    <link href="https://xiejava.gitee.io/posts/dd90733e/"/>
    <id>https://xiejava.gitee.io/posts/dd90733e/</id>
    <published>2024-01-04T02:33:16.000Z</published>
    <updated>2024-01-04T02:41:08.981Z</updated>
    
    <content type="html"><![CDATA[<p>恶意代码是指没有作用却会带来危险的代码。通常把未经授权便干扰或破坏计算机系统、网络功能的程序或代码（一组指令）称之为恶意程序。恶意程序包括计算机病毒、木马、蠕虫等。详见<a href="http://xiejava.ishareread.com/posts/72d6b06f/" target="_blank" rel="noopener">《网络安全之恶意代码》</a><br>恶意代码的防范，不是单靠一种或几种技术就能解决的，而要靠技术、管理以及用户安全意识的共同防范，只有三者相结合才能最大程度地防止恶意代码对系统和用户信息的破坏。<br>目前，恶意代码防范方法主要分为两方面：基于主机的恶意代码防范方法和基于网络的恶意代码防范方法。</p><h2 id="一、主机恶意代码防范"><a href="#一、主机恶意代码防范" class="headerlink" title="一、主机恶意代码防范"></a>一、主机恶意代码防范</h2><p>基于主机的恶意代码防范方法是目前检测恶意代码最常用的技术，具体分为：基于特征的扫描技术、校验和检测法和安全操作系统对恶意代码的防范等。</p><h3 id="1、基于特征的扫描技术"><a href="#1、基于特征的扫描技术" class="headerlink" title="1、基于特征的扫描技术"></a>1、基于特征的扫描技术</h3><p>基于特征的扫描技术的基本思想是模式匹配。在扫描程序工作之前，必须先建立恶意代码特征库，根据特征库中的特征串，在所有被扫描文件中进行匹配查找。用户通过更新特征库，查找最新的恶意代码版本。</p><h3 id="2、校验和检测法"><a href="#2、校验和检测法" class="headerlink" title="2、校验和检测法"></a>2、校验和检测法</h3><p>校验和检测法是一种保护信息资源完整性的控制技术，例如Hash值、循环冗余码等。只要文件内部有一个比特发生了变化，校验和的值就会改变。未被恶意代码感染的系统首先会生成检测数据，然后周期性地使用校验和检测文件的改变情况。<br>虽然校验和检测法可以检测未知恶意代码对文件的修改，但同样也存在不足：<br>（1）校验和检测法实际上不能检测文件是否被恶意代码感染，它只是查找变化。即使发现恶意代码造成了文件的改变，校验和检测法也无法将恶意代码消除，也不能判断文件究竟被何种恶意代码感染。<br>（2）恶意代码可以采用多种手段绕开校验和检测法，使之文件改变难以被检测。</p><h3 id="3、安全操作系统对恶意代码的防范"><a href="#3、安全操作系统对恶意代码的防范" class="headerlink" title="3、安全操作系统对恶意代码的防范"></a>3、安全操作系统对恶意代码的防范</h3><p>在恶意代码入侵中，获得操作系统控制权，使操作系统为它分配系统资源是必经步骤。<br>操作系统的安全机制包括访问控制机制、主体标识与鉴别、安全审计、内存存取保护、文件系统保护、信息通路安全保护机制、最小特权管理、安全配置等。<br>（1）访问控制机制：操作系统的访问控制是操作系统安全控制保护中重要的一环，在身份识别的基础上，根据身份对提出的资源访问请求加以控制。<br>（2）主体标识与鉴别：标识与鉴别机制用于保证只有合法的用户才能存取系统中的资源，发生在用户登录系统时，用于识别每个用户的真实身份。标识鉴别机制的设计和实现需要达到两个方面的要求：协助安全操作系统实现新增的安全功能和安全策略，包括增加用户属性，并通过扩展标识鉴别命令来支持这些属性；<br>（3）安全审计：对系统中有关安全的活动进行记录、检查、及审核，目的在于检测和阻止非法用户对计算机系统的入侵，并显示合法用户的误操作。<br>（4）内存存取保护：防止主存储器中有限个程序的相互干扰和保护其中有限区域内的信息安全，限定各程序在规定的主存区域内，称为存储保护，内存存取保护是安全操作系统中一个最基本的要求，也是最基本的安全机制，主要是保护用户在存储器中的数据，在操作系统设计之初，针对内存通常是分块管理的，现在多采用基于页的存储管理方式。<br>（5）文件系统保护：文件系统是文件命名、存储和组织的总体结构，是计算机系统和网络的重要资源，文件系统的安全保护措施主要在分区、文件系统的安全加载、文件共享安全和文件系统的数据备份这四个方面。<br>（6）信息通路安全保护机制：即对信息在操作系统中经过的道路的保护，涉及两个方面：一方面对显式信息道路的保护，防止非法信息经过显式道路；另一方面，要堵住隐蔽的新系统了，防止恶意用户通过隐蔽信道进出。<br>（7）最小特权管理：最小特权是指在完成某种操作时所赋予系统中每个主体必不可少的特权。<br>（8）安全配置：做好操作系统安全设置，主要包括以下几个方面：操作系统安全策略、关闭不必要的服务、关闭不必要的端口、开启审核策略、开启密码策略、开启账户策略、备份敏感文件、不显示上次登陆名、禁止建立空连接和下载最新补丁等。</p><h2 id="二、网络恶意代码防范"><a href="#二、网络恶意代码防范" class="headerlink" title="二、网络恶意代码防范"></a>二、网络恶意代码防范</h2><p>由于恶意代码具有相当的复杂性和行为不确定性，恶意代码的防范需要多种技术综合应用。基于网络的恶意代码防范方法包括：恶意代码检测防御和恶意代码预警。<br>其中常见的恶意代码检测防御包括：基于GRIDS的恶意代码检测、基于PLD硬件的检测防御、基于Honey Pot的检测防御和基于CCDC的检测防御。</p><h3 id="1、基于GRIDS的恶意代码检测"><a href="#1、基于GRIDS的恶意代码检测" class="headerlink" title="1、基于GRIDS的恶意代码检测"></a>1、基于GRIDS的恶意代码检测</h3><p>著名的GRIDS主要针对大规模网络攻击和自动化入侵设计的，它收集计算机和网络活动的数据以及它们之间的连接，在预先定义的模式库的驱动下，将这些数据构建成网络活动行为来表征网络活动结构上的因果关系。</p><h3 id="2、基于PLD硬件的检测防御"><a href="#2、基于PLD硬件的检测防御" class="headerlink" title="2、基于PLD硬件的检测防御"></a>2、基于PLD硬件的检测防御</h3><p>华盛顿大学应用研究室的John W.  Lockwood、James Moscola1和Matthew Kulig等提出了一种采用可编程逻辑设备（PLD，Programmable Logic Devices）对抗恶意代码的防范系统。PLD由三个相互内联部件DED（Data Enabling Device）、CMS（Content Matching Server）和RTP（Regional Transaction Processor）组成。</p><h3 id="3、基于Honey-Pot的检测防御"><a href="#3、基于Honey-Pot的检测防御" class="headerlink" title="3、基于Honey Pot的检测防御"></a>3、基于Honey Pot的检测防御</h3><p>Honey Pot，即蜜罐技术，其主要功能是对系统中所以操作和行为进行监视和记录，可以使网络安全专家通过精心的伪装，是的攻击者在进入到目标西后仍不知道自己的行为已经处于系统的监视之下。Honey Pot的设计初衷就是让黑客入侵，借此收集证据，同时隐藏真实的服务器地址，用于防范网络黑客攻击。</p><h3 id="4、基于CCDC的检测防御"><a href="#4、基于CCDC的检测防御" class="headerlink" title="4、基于CCDC的检测防御"></a>4、基于CCDC的检测防御</h3><p>由于主动式传播恶意代码具有生物病毒特征，美国安全专家提议建立CCDC（The Cyber Centers for Disease Control）来对抗恶意代码攻击。<br>CCDC能够实现对大规模恶意代码入侵的预警、防御和阻断，但CCDC也存在一些问题：<br>（1）CCDC是一个规模庞大的防范体系，要考虑体系运转的代价；<br>（2）由于CCDC体系的开放性，CCDC自身的安全问题不容忽视；<br>（3）在CCDC防范体系中，攻击者能够监测恶意代码攻击的全过程，深入理解CCDC防范恶意代码的工作机制，因此可能导致突破CCDC防范体系的恶意代码出现。</p><h2 id="三、防护技术"><a href="#三、防护技术" class="headerlink" title="三、防护技术"></a>三、防护技术</h2><p>防病毒技术就是通过一定的技术手段防止计算机病毒对系统的传染和破坏。但是随着Internet技术的发展，以及E-mail和一批网络工具的出现，在改变人类信息传播方式的同时也使计算机病毒的种类迅速增加，扩散速度也大大加快，计算机病毒的传播方式迅速突破地域的限制，由以往的单机之间的介质传染转换为网络系统间的传播。现在，计算机病毒已经可以通过移动磁盘、光盘、局域网、www浏览、E-Mail， FTP下载等多种方式传播。</p><p>为了对抗恶意代码的威胁，安全防护技术采用多层次的策略和工具来检测、阻止和清除这些恶意软件。以下是一些常见的恶意代码防护技术：</p><ol><li>防病毒软件： 防病毒软件是最基本也是最常见的恶意代码防护工具。它通过使用病毒定义数据库和启发式分析等技术，检测并阻止已知和新的恶意代码。</li><li>反恶意代码行为分析： 这种方法不仅关注已知的病毒特征，还通过分析应用程序的行为来检测潜在的恶意活动。这包括监测文件、注册表、进程和网络活动等。</li><li>沙盒技术： 沙盒是一种隔离环境，允许在受控制的环境中运行不明文件或程序，以观察其行为。沙盒技术有助于发现和分析未知的恶意代码。</li><li>入侵检测和入侵防御系统（IDS/IPS）： IDS和IPS系统监控网络流量和系统活动，检测潜在的恶意行为，并采取措施以阻止入侵。</li><li>网络防火墙： 防火墙通过控制网络流量和阻止恶意流量来防御网络攻击，包括恶意代码传播。</li><li>安全补丁和更新管理： 及时应用操作系统和应用程序的安全更新和补丁是防止恶意代码利用系统漏洞的关键步骤。</li><li>应用白名单： 白名单技术允许系统管理员定义可执行文件和应用程序的白名单，只有在白名单上的程序才能运行，从而减少潜在的恶意代码执行。</li><li>电子邮件过滤和安全网关： 通过检测和阻止恶意附件、链接或恶意代码传播的电子邮件，电子邮件过滤和安全网关有助于防范针对用户的社交工程攻击。</li><li>安全教育和培训： 提供员工和用户有关社交工程攻击、恶意代码的风险以及如何防范的培训是预防恶意代码感染的重要方面。</li><li>端点安全： 通过在终端设备上使用终端防护软件，可以检测和防止恶意代码的传播和执行。</li><li>安全漏洞管理： 定期评估和管理系统和应用程序的安全漏洞，以及修补这些漏洞，是防止恶意代码利用的一项重要措施。</li></ol><p>这些技术通常以综合的方式使用，以提供更强大的恶意代码防护能力。保持技术的更新，及时应用安全补丁，以及教育用户避免潜在的风险都是有效防范恶意代码攻击的关键。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;恶意代码是指没有作用却会带来危险的代码。通常把未经授权便干扰或破坏计算机系统、网络功能的程序或代码（一组指令）称之为恶意程序。恶意程序包括计算机病毒、木马、蠕虫等。详见&lt;a href=&quot;http://xiejava.ishareread.com/posts/72d6b06f
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之授权和访问控制技术</title>
    <link href="https://xiejava.gitee.io/posts/54b08069/"/>
    <id>https://xiejava.gitee.io/posts/54b08069/</id>
    <published>2024-01-03T06:23:26.000Z</published>
    <updated>2024-01-03T06:37:54.800Z</updated>
    
    <content type="html"><![CDATA[<p>授权和访问控制技术是安全防御中的重要组成部分，主要用于管理和限制对系统资源（如数据、应用程序等）的访问。授权控制用户可访问和操作的系统资源，而访问控制技术则负责在授权的基础上，确保只有经过授权的用户才能访问相应的资源。</p><h2 id="一、授权"><a href="#一、授权" class="headerlink" title="一、授权"></a>一、授权</h2><p>授权技术通常包括身份认证和权限管理。<br>身份认证是验证用户身份的过程，确保用户是系统中的合法用户；<br>权限管理则是根据用户的角色和身份，为其分配相应的访问权限。通过授权技术，可以有效地防止非法用户或未授权的用户访问系统资源，从而保护系统的安全。<br>授权是确定用户访问权限的机制。用户访问权限必须始终遵循最小特权原则，该原则规定用户只拥有执行他们的作业功能所必须的访问权限，而不能拥有其他权限。为了保证网络资源在受控、合法地情况下使用，用户只能根据自己的权限大小访问系统资源，不得越权访问。</p><h2 id="二、访问控制"><a href="#二、访问控制" class="headerlink" title="二、访问控制"></a>二、访问控制</h2><p>访问控制是网络安全防范和保护的主要核心策略，它的主要任务是保证网络资源不被非法使用和访问。<br>访问控制包括三个要素：主体、客体和控制策略。<br>主体S（Subject）：是指提出访问资源具体请求或某一操作动作的发起者，但不一定是动作的执行者，可能是某一用户，也可以是用户启动的进程、服务和设备等。<br>客体O（Object）：是指被访问资源的实体。所有可以被操作的信息、资源、对象都可以是客体。客体可以是信息、文件、记录等集合体，也可以是网络上的硬件设施、无限通信中的终端，甚至可以包含另外一个客体。<br>控制策略A（Attribution）：是主体对客体的相关访问规则集合，即属性集合。访问策略体现了一种授权行为，也是客体对主体某些操作行为的默认。</p><h3 id="1、访问控制模型"><a href="#1、访问控制模型" class="headerlink" title="1、访问控制模型"></a>1、访问控制模型</h3><p>典型访问控制模型如图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2024/20240103/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%A8%A1%E5%9E%8B.png" alt="在这里插入图片描述"></p><center>访问控制模型的组成</center><h3 id="2、访问控制的机制"><a href="#2、访问控制的机制" class="headerlink" title="2、访问控制的机制"></a>2、访问控制的机制</h3><p>访问控制机制是检测和防止系统被未授权访问，并保护资源所采取的各种措施。是在文件系统中广泛应用的安全防护方法，一般在操作系统的控制下，按照事先确定的规则决定是否允许主体访问客体，贯穿于系统全过程。<br>访问控制矩阵（Access Contro1 Matrix）是最初实现访问控制机制的概念模型，以二维矩阵规定主体和客体间的访问权限。行表示主体的访问权限属性，列表示客体的访问权限属性，矩阵格表示所在行的主体对所在列的客体的访问授权，空格为未授权，Y为有操作授权。以确保系统操作按此矩阵授权进行访问。通过引用监控器协调客体对主体访问，实现认证与访问控制的分离。在实际应用中，对于较大系统，由于访问控制矩阵将变得非常大，其中许多空格，造成较大的存储空间浪费，因此，较少利用矩阵方式，主要采用以下2种方法：<br>1）访问控制列表<br>访问控制列表（Access Control List，ACL）是应用在路由器接口的指令列表，用于路由器利用源地址、目的地址、端口号等的特定指示条件对数据包的抉择。是以文件为中心建立访问权限表，表中记载了该文件的访问用户名和隶属关系。利用ACL，容易判断出对特定客体的授权访问，可访问的主体和访问权限等。当将该客体的ACL置为空，可撤消特定客体的授权访问。<br>2）能力关系表<br>能力关系表（Capabilities List）是以用户为中心建立访问权限表。与ACL相反，表中规定了该用户可访问的文件名及权限，利用此表可方便地查询一个主体的所有授权。相反，检索具有授权访问特定客体的所有主体，则需查遍所有主体的能力关系表。</p><h3 id="3、访问控制的策略"><a href="#3、访问控制的策略" class="headerlink" title="3、访问控制的策略"></a>3、访问控制的策略</h3><p>访问控制的安全策略是指在某个自治区域内（属于某个组织的一系列处理和通信资源范畴），用于所有与安全相关活动的一套访问控制规则。访问控制的安全策略有三种类型：基于身份的安全策略、基于规则的安全策略和综合访问控制方式。</p><h4 id="1）基于身份的安全策略"><a href="#1）基于身份的安全策略" class="headerlink" title="1）基于身份的安全策略"></a>1）基于身份的安全策略</h4><p>基于身份的策略包括基于个体的策略和基于组的策略。</p><ul><li>基于个体的策略：一个基于个体的策略根据哪些用户可对一个目标实施哪一种行为的列表来表示。这个等价于用一个目标的访问矩阵列来描述。</li><li>基于组的策略：一个基于组的策略是基于身份的策略的另一种情形，一些用户被允许对一个目标具有同样的访问许可。</li></ul><h4 id="2）基于规则的安全策略"><a href="#2）基于规则的安全策略" class="headerlink" title="2）基于规则的安全策略"></a>2）基于规则的安全策略</h4><p>基于规则的策略包括多级策略和基于间隔的策略。<br>多级策略：通过分配给每个目标一个密级来操作。密级由低到高分为：无密级、限制、机密、秘密、绝密。每个用户从相同的层次中分配一个等级。<br>基于间隔的策略：在基于间隔的策略中，目标集合关联于安全间隔或安全类别，通过他们来分离其他目标。用户需要给一个间隔分配一个不同的等级，以便能够访问间隔中的目标。</p><h4 id="3）综合访问控制方式"><a href="#3）综合访问控制方式" class="headerlink" title="3）综合访问控制方式"></a>3）综合访问控制方式</h4><p>综合访问控制策略（HAC）继承和吸取了多种主流访问控制技术的优点，有效地解决了信息安全领域的访问控制问题，保护了数据的保密性和完整性，保证授权主体能访问客体和拒绝非授权访问。综合访问控制策略主要包括：</p><ul><li>入网访问控制<br>入网访问控制是网络访问的第一层访问控制。对用户可规定所能登入到的服务器及获取的网络资源，控制准许用户入网的时间和登入入网的工作站点。</li><li>网络的权限控制<br>网络的权限控制是防止网络非法操作而采取的一种安全保护措施。用户对网络资源的访问权限通常用一个访问控制列表来描述。</li><li>目录级安全控制<br>目录级安全控制主要是为了控制用户对目录、文件和设备的访问，或指定对目录下的子目录和文件的使用权限。用户在目录一级制定的权限对所有目录下的文件仍然有效，还可进一步指定子目录的权限。</li><li>属性安全控制<br>属性安全控制可将特定的属性与网络服务器的文件及目录网络设备相关联。在权限安全的基础上，对属性安全提供更进一步的安全控制。网络上的资源都应先标示其安全属性，将用户对应网络资源的访问权限存入访问控制列表中，记录用户对网络资源的访问能力，以便进行访问控制。</li><li>网络服务器安全控制<br>网络服务器安全控制允许通过服务器控制台执行的安全控制操作包括：用户利用控制台装载和卸载操作模块、安装和删除软件等。操作网络服务器的安全控制还包括设置口令锁定服务器控制台，主要防止非法用户修改、删除重要信息。</li><li>网络监控和锁定控制<br>在网络系统中，通常服务器自动记录用户对网络资源的访问，如有非法的网络访问，服务器将以图形、文字或声音等形式向网络管理员报警，以便引起警觉进行审查。</li><li>网络端口和结点的安全控制<br>网络中服务器的端口常用自动回复器、静默调制解调器等安全设施进行保护，并以加密的形式来识别结点的身份。自动回复器主要用于防范假冒合法用户，静默调制解调器用于防范黑客利用自动拨号程序进行网络攻击。</li></ul><h3 id="4、访问控制技术"><a href="#4、访问控制技术" class="headerlink" title="4、访问控制技术"></a>4、访问控制技术</h3><p>访问控制技术则是在授权的基础上，进一步控制用户对系统资源的访问。它根据用户的角色和权限，决定用户可以访问哪些资源以及可以进行哪些操作。常见的访问控制技术包括：</p><ol><li>强制访问控制（Mandatory Access Control）：这是一种基于安全策略的访问控制方法，由系统管理员设定安全级别，并按照安全级别对资源进行访问控制。</li><li>自主访问控制（Discretionary Access Control）：这是一种基于用户身份的访问控制方法，由资源的拥有者自行设定访问权限。</li><li>基于角色的访问控制（Role-Based Access Control）：这是一种基于用户角色的访问控制方法，通过将权限分配给角色，再将角色分配给用户，来实现访问控制。</li></ol><h4 id="1）强制访问控制技术（Mandatory-Access-Control）"><a href="#1）强制访问控制技术（Mandatory-Access-Control）" class="headerlink" title="1）强制访问控制技术（Mandatory Access Control）"></a>1）强制访问控制技术（Mandatory Access Control）</h4><p>强制访问控制（MAC），将系统中的信息分密级和类进行管理，以保证每个用户只能访问到那些被标明可以由他访问的信息的一种访问约束机制。通俗的来说，在强制访问控制下，主体与客体都被标记了固定的安全属性（如安全级、访问权限等），在每次访问发生时，系统检测安全属性以便确定该主体是否有权访问该客体。基于规则的多级策略就是一种强制访问控制策略。</p><h4 id="2）自主访问控制技术（Discretionary-Access-Control）"><a href="#2）自主访问控制技术（Discretionary-Access-Control）" class="headerlink" title="2）自主访问控制技术（Discretionary Access Control）"></a>2）自主访问控制技术（Discretionary Access Control）</h4><p>自主访问控制又被称为“基于身份的访问控制”，允许合法用户以用户或用户组的身份访问策略规定的客体，同时阻止非授权用户访问客体。自主访问控制模型的特点是授权的实施主体（可以授权的主体、管理授权的客体、授权组）自主负责赋予和收回其他主体对客体资源的访问权限。<br>在自主访问控制机制中，存取模式主要有：</p><ul><li>读：允许主体对客体进行读和拷贝的操作。 </li><li>写：允许主体写入或修改信息，包括扩展、压缩机删除等。</li><li>执行：允许将客体作为一种可执行文件运行，在一些系统中该模式还需要同时拥有读模式。 </li><li>空模式：主体对客体不具有任何的存取权。</li></ul><p>自主访问控制的具体实施可采用以下四种方法：</p><ul><li>目录表<br>在目录表访问控制方法中，借用了系统对文件的目录管理机制，为每一个欲实施访问权限的主体建立一个能被其访问的“客体目录表（文件目录表）”。如某个主体的客体目录表可能是：<br>客体1 ：权限1 客体2：权限2…<br>客体目录表中各个客体的访问权限的修改只能由该客体的合法属主确定，不允许其他任何用户在客体目录表中进行写操作，否则将可能出现对客体访问权限的伪造。操作系统必须在客体的拥有者控制下维护所有的客体目录。</li><li>访问控制列表<br>访问控制列表是从客体角度进行设置的，是面向客体的访问控制。每个客体都有一个访问控制列表，用来说明有权访问该客体的所有主体及其访问权限。</li><li>访问控制矩阵<br>访问控制矩阵是对上面两种方法的综合，直观地看，访问控制矩阵是一张表格，每行代表一个主体，每列代表一个客体，表中纵横对应的项是该主体对该客体的访问权集合。</li><li>能力表<br>能力表是访问控制矩阵的改进，将矩阵的每一列作为一个客体而形成一个存取表，每个存取表只由主体、访问权集合组成。</li></ul><h4 id="3）基于角色的访问控制技术（Role-Based-Access-Control）"><a href="#3）基于角色的访问控制技术（Role-Based-Access-Control）" class="headerlink" title="3）基于角色的访问控制技术（Role-Based Access Control）"></a>3）基于角色的访问控制技术（Role-Based Access Control）</h4><p>基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。其基本思想是：对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。<br>在一个组织内部，角色是相对稳定的，而用户和权限之间的关系则是易变的，比如因用户职务变化而随之发生权限变化。通过角色，可以减少授权管理的复杂度，降低管理开销，它是传统访问控制技术的有效补充。通常角色和用户组在概念上容易混淆，它们之间有本质的区别，组是用户的集合，而角色作为中介，既是用户的集合，又是权限的集合。<br>在一个组织内，安全管理员可以根据完成某项工作所需的权限，创建适当的角色；然后根据用户所要完成的任务，授予不同的角色，从而授予访问权限。用户与角色，角色与权限之间关系都是多对多的关系。用户与特定的一个或多个角色相联系，角色与一个或多个访问权限相联系。用户根据自己的需求动态地激活自己拥有的角色，完成特定的任务，避免误操作造成的危害。</p><p>授权和访问控制技术是安全防御的重要组成部分，可以有效防止未经授权的用户访问系统资源，保护系统的安全。在实际应用中，需要根据具体的安全需求和场景，选择合适的授权和访问控制技术，以达到最佳的安全防护效果。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;授权和访问控制技术是安全防御中的重要组成部分，主要用于管理和限制对系统资源（如数据、应用程序等）的访问。授权控制用户可访问和操作的系统资源，而访问控制技术则负责在授权的基础上，确保只有经过授权的用户才能访问相应的资源。&lt;/p&gt;
&lt;h2 id=&quot;一、授权&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全防御之身份鉴别技术</title>
    <link href="https://xiejava.gitee.io/posts/84445f0e/"/>
    <id>https://xiejava.gitee.io/posts/84445f0e/</id>
    <published>2024-01-03T01:22:27.000Z</published>
    <updated>2024-01-03T01:32:44.798Z</updated>
    
    <content type="html"><![CDATA[<p>身份认证技术用于在计算机网络中确认操作者的身份。在计算机网络世界中，用户的身份信息是用一组特定的数据来表示的，计算机也只能识别用户的数字身份。身份认证技术能够作为系统安全的第一道防线，主要用于确认网络用户的身份，防止非法访问和恶意攻击，确保数字身份的操作者就是这个数字身份合法拥有者。</p><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><h3 id="1、身份鉴别"><a href="#1、身份鉴别" class="headerlink" title="1、身份鉴别"></a>1、身份鉴别</h3><p>身份鉴别是指对主客体身份进行确认的过程，也就是对网络用户在进入系统或访问受限系统资源时的身份进行识别和验证的过程。这是信息安全的第一道防线，可以确保用户身份的真实、合法和唯一性，防止非法人员进入系统。</p><p>身份鉴别的方法：主要有三种，即<strong>基于实体所知</strong>、<strong>基于实体所</strong>有和<strong>基于实体特性</strong>。<br>基于实体所知的方法包括密码、验证码等，这些方法的成本低，实现简单，但面临的风险也较大，如暴力破解、木马等。<br>基于实体所有的方法通常涉及一些物理设备，如IC卡、门禁卡等，安全性较高，但成本也较高，并可能面临损坏和被复制的风险。基于实体特性的方法通常采用生物识别技术进行验证，如指纹、虹膜、声波等，这是安全性最高的一种方式。</p><h3 id="2、标识"><a href="#2、标识" class="headerlink" title="2、标识"></a>2、标识</h3><p>标识认证技术是信息安全理论与技术的一个重要方面，是实现信息安全等级保护身份鉴别、访问控制的技术基础，主要包括信息认证与身份标识认证两个方面的内容。信息认证用于保护信息的完整性与抗否认性，身份标识认证则用于鉴别用户身份，限制非法用户访问资源。</p><h4 id="1）人的标识"><a href="#1）人的标识" class="headerlink" title="1）人的标识"></a>1）人的标识</h4><p>身份标识认证是安全技术的一个重要方面，在用户访问文件时，必须通过某种形式的身份标识验证机制来证明他们的身份，验证用户的身份与所宣称的保持一致，才能够实现对文件的访问。用户首先经过身份标识认证才能访问安全系统，然后由安全系统根据用户身份决定用户的访问权限。</p><h4 id="2）网络标识"><a href="#2）网络标识" class="headerlink" title="2）网络标识"></a>2）网络标识</h4><p>网络标识是指机器在网络中的标志信息，对一台具体的机器而言，机器的IP地址，MAC地址就是在网络中标识的。<br>在网络中，同一数据在不同的层有不同的标识，数据链路层的标识是MAC地址，网络层的标识是IP地址，传输层的标识就是UDP或者TCP的端口号。<br>主机的标识就是主机名称。在网络中，主机的名称+地址成为唯一的标识。</p><h4 id="3）应用标识"><a href="#3）应用标识" class="headerlink" title="3）应用标识"></a>3）应用标识</h4><p>应用标识包括应用名，进程名称，占用端口，序列号，标准的应答方式等。</p><h3 id="3、口令"><a href="#3、口令" class="headerlink" title="3、口令"></a>3、口令</h3><p>口令是指只有通信双方知晓的一段数据。口令是最广泛使用的一种身份鉴别方法，也是最容易实现和成本最低的用户鉴别和认证机制，但是经常会遭到攻击者的威胁：<br>口令字典攻击：也就是猜口令，在获得口令密文后，攻击者可以通过运用自己保存的口令字典，通过可以获得的相同的加密算法进行枚举尝试。<br>口令丢失：用户经常会将自己的口令分享给同事、上司或第三方工程人员。这样就失去了口令的鉴别作用。<br>口令嗅探：很多系统的口令在网络上都是明文传输的，比如，电子邮件，Telnet远程登录等。通过在网络关键路径上进行嗅探可以轻易地获得用户的口令。<br>口令文件被窃取：对口令文件的保护是口令机制的弱点。如果口令文件被窃取，可能导致大量的用户口令沦陷。</p><h3 id="4、挑战-响应技术"><a href="#4、挑战-响应技术" class="headerlink" title="4、挑战-响应技术"></a>4、挑战-响应技术</h3><p>挑战-响应技术是一种常用的基于口令的身份认证技术。<br>基于挑战/响应方式的身份认证系统就是每次认证时，认证服务器端都给客户端发送一个不同的“挑战”字串，客户端程序收到这个“挑战”字串后，做出相应的“响应”，基于此机制系统认证过程为：</p><ol><li>客户端向认证服务器发出请求，要求进行身份认证；</li><li>认证服务器从用户数据库中查询用户是否是合法的用户，若不是，则不做进一步处理；</li><li>如果是合法用户，认证服务器内部产生一个随机数，作为“提问”，发送给客户端；</li><li>客户端将用户名字和随机数合并，使用单向Hash函数（例如MD5算法）生成一个应答串作为响应；</li><li>认证服务器将应答串与自己的计算结果比较，若二者相同，则通过一次认证；否则，认证失败；</li><li>认证服务器通知客户端认证成功或失败。</li><li>认证成功之后，以后的认证由客户端不定时地发起，过程中没有了客户端认证请求一步。两次认证的时间间隔不能太短，否则会给网络、客户和认证服务器带来太大的开销；也不能太长，否则不能保证用户不被他人盗用IP地址，建议时长为1-2分钟。</li></ol><h3 id="5、公钥认证技术"><a href="#5、公钥认证技术" class="headerlink" title="5、公钥认证技术"></a>5、公钥认证技术</h3><p>公钥认证技术使用一对加密字符串，一个称为公钥，任何人都可以看到其内容；另一个称为私钥，由用户妥善保存。公钥认证技术功能的实现在于通过公钥加密过的密文使用私钥可以轻松解密，但根据私钥来猜测密钥却十分困难。</p><h2 id="二、常见的身份鉴别技术"><a href="#二、常见的身份鉴别技术" class="headerlink" title="二、常见的身份鉴别技术"></a>二、常见的身份鉴别技术</h2><ul><li>用户名/密码认证：这是一种最基本的方式，用户需要输入用户名和密码来证明自己的身份。但是，由于密码可能被破解或泄露，因此这种方式存在一定的安全隐患。</li><li>动态口令认证：这是一种更加安全的方式，用户需要输入动态生成的口令才能进入系统。这种方式可以有效地防止密码被破解或被盗用。</li><li>多因素认证：这是一种基于多种因素的认证方式，除了用户名和密码外，还需要用户提供其他信息，如手机验证码、指纹、虹膜等。这种方式可以大大提高系统的安全性。</li><li>基于角色的访问控制：这是一种基于用户角色的访问控制方式，用户只能访问自己被授权的资源。这种方式可以有效地防止未授权的访问和数据泄露。</li><li>单点登录认证：这种方式可以实现一次登录即可访问多个系统的功能，减少了用户的操作步骤，提高了工作效率。同时，这种方式也可以减少因某个系统被攻击而导致其他系统受到攻击的风险。</li></ul><p>身份鉴别技术是保护信息安全的重要手段，不同的应用场景需要选择合适的身份鉴别技术来保证系统的安全性和稳定性。</p><h2 id="三、防御措施"><a href="#三、防御措施" class="headerlink" title="三、防御措施"></a>三、防御措施</h2><p>针对身份鉴别过程中可能出现的攻击，如线路窃听和重放攻击等，需要采取相应的防御措施。例如，在口令中使用随机数可以防止攻击者通过构造特定表格（如彩虹表）来破解口令。针对重放攻击，可以在会话中引入时间戳或使用一次性口令等方式进行防御。</p><p>身份鉴别技术是网络安全的重要组成部分，通过确认网络用户的身份，可以有效地防止非法访问和恶意攻击。同时，随着技术的发展，身份鉴别技术也在不断地进步和完善，以应对日益复杂的网络安全威胁。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;身份认证技术用于在计算机网络中确认操作者的身份。在计算机网络世界中，用户的身份信息是用一组特定的数据来表示的，计算机也只能识别用户的数字身份。身份认证技术能够作为系统安全的第一道防线，主要用于确认网络用户的身份，防止非法访问和恶意攻击，确保数字身份的操作者就是这个数字身份合
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>pandas将dataframe列中的list转换为多列</title>
    <link href="https://xiejava.gitee.io/posts/d97c8b95/"/>
    <id>https://xiejava.gitee.io/posts/d97c8b95/</id>
    <published>2023-12-26T09:06:29.000Z</published>
    <updated>2023-12-26T09:13:18.112Z</updated>
    
    <content type="html"><![CDATA[<p>在应用机器学习的过程中，很大一部分工作都是在做数据的处理，一个非常常见的场景就是将一个list序列的特征数据拆成多个单独的特征数据。</p><p>比如数据集如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>]]]</span><br><span class="line">df_data= pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/1_%E4%B8%80%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86.png" alt="在这里插入图片描述"></p><p>很多场景是需要将类似于Score的list序列特征，拆成多个特征值如这里的语、数、外的分数。</p><p>下面通过几个实例来将dataframe列中的list序列转换为多列。</p><h3 id="1、一维序列拆成多列"><a href="#1、一维序列拆成多列" class="headerlink" title="1、一维序列拆成多列"></a>1、一维序列拆成多列</h3><p>可以通过在列上应用Series来进行拆分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>&#125;)</span><br><span class="line">df_score</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/2_%E4%B8%80%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86Series%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><p>可以看到将Score的数组，拆分成了English、Math、Chinese三个特征字段了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_data=df_data.join(df_score)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/3_%E4%B8%80%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86join.png" alt="在这里插入图片描述"></p><h3 id="2、二维序列拆成多列"><a href="#2、二维序列拆成多列" class="headerlink" title="2、二维序列拆成多列"></a>2、二维序列拆成多列</h3><p>用同样的思路也可以将二维序列的特征列拆成多列<br>如特征列是二维序列，序列里还有多个序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>],[<span class="number">89</span>,<span class="number">70</span>]]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>],[<span class="number">99</span>,<span class="number">96</span>]]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>],[<span class="number">87</span>,<span class="number">99</span>]]]]</span><br><span class="line">df_data= pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/4_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%97%E8%A1%A8.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].apply(pd.Series)</span><br><span class="line">df_score_1=df_score[<span class="number">0</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>&#125;)</span><br><span class="line">df_score_2=df_score[<span class="number">1</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'Biology'</span>,<span class="number">1</span>:<span class="string">'Geography'</span>&#125;)</span><br><span class="line">df_score=df_score_1.join(df_score_2)</span><br><span class="line">df_data=df_data.join(df_score_1).join(df_score_2)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/5_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%97%E8%A1%A8%E5%A4%9A%E6%AC%A1Series%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><p>另外一种情况就是序列里面只有一个序列的二维序列，数据如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>,<span class="number">89</span>,<span class="number">70</span>]]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">96</span>]]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>,<span class="number">87</span>,<span class="number">99</span>]]]]</span><br><span class="line">df_data= pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/6_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8.png" alt="在这里插入图片描述"></p><p>这样也可以通过多次应用Series来进行拆分，也可以先explode()再应用Series来进行拆分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].apply(pd.Series)[<span class="number">0</span>].apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>,<span class="number">3</span>:<span class="string">'Biology'</span>,<span class="number">4</span>:<span class="string">'Geography'</span>&#125;)</span><br><span class="line">df_score</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/7_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%A4%9A%E6%AC%A1Series%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_score=df_data[<span class="string">'Score'</span>].explode().apply(pd.Series).rename(columns=&#123;<span class="number">0</span>:<span class="string">'English'</span>,<span class="number">1</span>:<span class="string">'Math'</span>,<span class="number">2</span>:<span class="string">'Chinese'</span>,<span class="number">3</span>:<span class="string">'Biology'</span>,<span class="number">4</span>:<span class="string">'Geography'</span>&#125;)</span><br><span class="line">df_score</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231226/8_%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%97%E8%A1%A8%E9%87%8C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E5%85%88explode%E5%86%8DSeries%E6%8B%86%E5%88%86.png" alt="在这里插入图片描述"></p><p>两者效果是一样的。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在应用机器学习的过程中，很大一部分工作都是在做数据的处理，一个非常常见的场景就是将一个list序列的特征数据拆成多个单独的特征数据。&lt;/p&gt;
&lt;p&gt;比如数据集如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>安全运营之团队人员组织建议</title>
    <link href="https://xiejava.gitee.io/posts/68430272/"/>
    <id>https://xiejava.gitee.io/posts/68430272/</id>
    <published>2023-12-22T14:35:05.000Z</published>
    <updated>2023-12-22T15:05:19.047Z</updated>
    
    <content type="html"><![CDATA[<p>安全运营是一个持续的过程，需要不断地评估风险、监测威胁、改进措施和更新策略，以确保组织的安全性和可靠性。由人员、数据、平台（工具）、流程的共同组合构成安全运营体系。</p><h2 id="一、安全运营团队目标"><a href="#一、安全运营团队目标" class="headerlink" title="一、安全运营团队目标"></a>一、安全运营团队目标</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231222/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E5%9B%A2%E9%98%9F%E7%9B%AE%E6%A0%87.png" alt="安全运营团队目标"></p><center>图-安全运营团队目标</center><p>安全运营团队是具有日常安全运营及实战化攻防对抗能力的专职安全团队，依托安全运营中心平台，有效使用各项安全工具，以标准化的作业流程驱动，开展各项安全运营活动，实现安全工作持续、主动、精细化、标准化的过程管理，通过持续有效的安全运营活动满足合规要求、降低网络安全风险、保障企业网络安全。</p><h2 id="二、团队人员组织架构"><a href="#二、团队人员组织架构" class="headerlink" title="二、团队人员组织架构"></a>二、团队人员组织架构</h2><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231222/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E5%9B%A2%E9%98%9F%E4%BA%BA%E5%91%98%E7%BB%84%E7%BB%87%E6%9E%B6%E6%9E%84.png" alt="在这里插入图片描述"></p><center>图-安全运营团队人员组织架构</center><h2 id="三、运营团队职责分工"><a href="#三、运营团队职责分工" class="headerlink" title="三、运营团队职责分工"></a>三、运营团队职责分工</h2><table border="1" cellspacing="0">    <thead  style="background-color: lightgray;" >        <td>序号</td>         <td>运营工作内容</td>         <td>运营工作子项</td>        <td>频率</td>        <td>所属分组</td>        <td>相关职责</td>        <td>备注</td>    </thead>    <tr>        <td rowspan="2">1</td>         <td rowspan="2">安全资产识别与梳理</td>         <td>安全资产发现和识别</td>        <td rowspan="3">按需</td>        <td rowspan="3">安全资产管理</td>        <td rowspan="2">对已有安全资产和新增安全资产进行管理维护，协调督促业务部门安全资产责任人进行资产数据上报、agent安装。定期对异常资产、未纳管安全资产等进行通报督促整改。</td>        <td rowspan="3">常态化</td>    </tr>    <tr>         <td>安全资产信息梳理与管理</td>    </tr>    <tr>         <td >2</td>         <td>安全资产脆弱性管理</td>        <td>安全资产脆弱性识别与管理</td>        <td>对安全资产的脆弱性进行定期的识别，发布存在有脆弱性风险通知到安全资产责任人，督促整改，对脆弱性问题跟踪确认。</td>    </tr>    <tr>         <td rowspan="6">3</td>         <td rowspan="6">威胁监测</td>        <td >威胁监测</td>        <td rowspan="8">按需</td>        <td rowspan="8">监测研判</td>        <td rowspan="8">            1.对安全监测平台进行日常的监测运营工作，形成相关交付物。（运营日报、周报、月报等）<br>            2.对监测过程中发现的安全告警进行初步筛选，排查是否误报，对非误报告警进行安全级别判断，对判断后的安全告警进行安全事件的升级，并进行专人的研判分析。<br>            3.对分析后重要安全事件，进行处置组递交沟通，提供事件分析报告。并对处置执行组反馈的处置情况进行复验审核工作。        </td>        <td rowspan="8">常态化</td>    </tr>    <tr>         <td >威胁分析与通告</td>     </tr>    <tr>         <td >持续攻击对抗</td>     </tr>    <tr>         <td >事件分析与处置</td>     </tr>    <tr>         <td >应急响应</td>     </tr>    <tr>         <td >安全运营可视化</td>     </tr>    <tr>        <td rowspan="2">4</td>         <td rowspan="2">人工研判</td>         <td >安全事件人工研判</td>     </tr>    <tr>         <td >定期安全运营汇报</td>     </tr>    <tr>         <td rowspan="3">5</td>         <td rowspan="3">安全问题处置</td>         <td >安全事件处置</td>         <td rowspan="5">按需</td>         <td rowspan="5">处置执行</td>        <td rowspan="5">            1.对研判后的安全事件进行处置操作，负责协调相关业务部门及安全资产归属单位，对网络及安全策略进行调整优化控制（含平台策略优化）。<br>            2.对责任部门或责任人按处置流程进行通告下发，并跟踪事件处置过程，提供处置建议与咨询。<br>            3. 跟踪事件处置情况，并将处置反馈情况同步监测研判组进行复验，负责对安全事件处置进行闭环，归档工作。<br>        </td>        <td rowspan="5">常态化</td>    </tr>    <tr>         <td >安全事件归档</td>     </tr>    <tr>         <td >安全事件报告</td>     </tr>    <tr>         <td >6</td>         <td >安全通告</td>         <td >安全事件通告</td>     </tr>    <tr>         <td >7</td>         <td >策略管理</td>         <td >策略管理</td>     </tr>    <tr>         <td rowspan="5">8</td>         <td rowspan="5">平台保障</td>         <td >现场处置协调跟踪</td>         <td rowspan="5">按需</td>         <td rowspan="5">平台保障</td>         <td rowspan="5">            1.对安全运营中心平台进行日常的巡检维护，对各平台功能，告警数据采集，设备权限，性能消耗进行巡检监控，对巡检过程中发现的问题及时跟踪处理。<br>            2.协助处置执行组对安全事件进行处置闭环跟踪及协调工作。<br>            3.根据运营需求进行平台规则优化、剧本流程优化。<br>        </td>         <td rowspan="5">            常态化（平台建设方参与）        </td>    </tr>    <tr>         <td >现场故障应急处理</td>     </tr>    <tr>         <td >平台现场运营监测</td>     </tr>    <tr>         <td >平台运营日常巡检</td>     </tr>    <tr>         <td >平台规则流程优化</td>     </tr>    <tr>         <td rowspan="2">9</td>         <td rowspan="2">脆弱性评估与管理</td>         <td >漏洞、弱口令扫描            最新漏洞预警和响应            </td>         <td rowspan="2">月/次</td>         <td rowspan="7">安全服务</td>         <td rowspan="5">            1.负责漏洞管理、渗透测试、应急演练的方案整理及需求确认工作。<br>            2.依据各服务内容流程，负责实施相关服务。<br>            3.对服务过程发现安全问题进行协助处置工作，并提供处置方案。<br>            4.负责方案服务总结，并对发现安全问题进行分析总结，提供加固建议及安全事件处理能力的建议。<br>                    </td>         <td rowspan="7">            按需，一般以服务外包的方式外包给专业团队        </td>    </tr>    <tr>         <td >漏洞协助处置</td>     </tr>    <tr>         <td rowspan="2">10</td>        <td rowspan="2">渗透测试</td>         <td >渗透测试方案</td>         <td rowspan="2">按需</td>    </tr>    <tr>         <td >渗透测试内容</td>     </tr>    <tr>         <td >11</td>        <td >应急演练</td>         <td >应急演练</td>         <td >一年/次</td>    </tr>    <tr>         <td rowspan="2">12</td>        <td rowspan="2">风险评估</td>         <td >双新评估服务</td>         <td >一年/次</td>        <td rowspan="2">负责双新评估、定级备案风险评估等安全风险评估服务。</td>    </tr>    <tr>         <td >定级备案风险评估</td>         <td >一年/次</td>    </tr>    <tr>         <td >13</td>         <td >流程优化</td>        <td >运营流程及人员调整优化</td>        <td rowspan="3">按需</td>        <td rowspan="3">安全运营管理</td>        <td rowspan="3">            流程优化；团队管理；            培训组织；工作汇报；            质量审核；应急响应。        </td>        <td rowspan="3">            常态化，固定负责人        </td>    </tr>    <tr>        <td >14</td>         <td >工作汇报</td>        <td >安全监测运营汇报（月报、季报、半年报）</td>    </tr>    <tr>        <td >15</td>         <td >培训组织</td>        <td >培训组织</td>    </tr></table><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231222/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5%E5%9B%A2%E9%98%9F%E8%81%8C%E8%B4%A3.png" alt="在这里插入图片描述"></h2><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安全运营是一个持续的过程，需要不断地评估风险、监测威胁、改进措施和更新策略，以确保组织的安全性和可靠性。由人员、数据、平台（工具）、流程的共同组合构成安全运营体系。&lt;/p&gt;
&lt;h2 id=&quot;一、安全运营团队目标&quot;&gt;&lt;a href=&quot;#一、安全运营团队目标&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全运营之态势感知与监测</title>
    <link href="https://xiejava.gitee.io/posts/e89ce9ea/"/>
    <id>https://xiejava.gitee.io/posts/e89ce9ea/</id>
    <published>2023-12-21T02:45:23.000Z</published>
    <updated>2023-12-21T03:14:05.794Z</updated>
    
    <content type="html"><![CDATA[<p>信息安全是一个动态的过程，操作系统、应用软件、中间件，还有硬件，平台的种类越来越多，技术越来越复杂，稍有不慎就会留下安全隐患和管理漏洞，依靠客户自身的IT资源无论从技术的先进性还是方案的严密性上都越来越难以应对，企业往往由于人手或技术力量的不足，无法自如的处理各种复杂的信息安全问题。针对这种情况，就需要持续对新的安全威胁、安全漏洞进行跟踪、分析和响应。</p><p>安全态势感知与监测是一种基于环境的、动态、整体地洞悉安全风险的能力，它以安全大数据为基础，从全局视角提升对安全威胁的发现识别、理解分析、响应处置能力的一种方式，最终是为了决策与行动，是安全能力的落地。</p><p>目前网络安全态势感知平台系统架构如下：</p><ol><li>海量多元异构数据的汇聚融合技术：在大规模网络中，网络安全数据和日志数据由海量设备和多个应用系统中产生，且这些安全数据和日志数据缺乏统一标准与关联，在此基础上进行数据分析，无法得到全局精准的分析结果。</li><li>数据挖掘与智能分析技术：通过机器学习、大数据分析等技术，实现基于逻辑和知识的推理结果，从已知威胁推演未知威胁，实现对安全威胁事件的预测和判断。</li><li>威胁情报的共享与交换技术：通过建立威胁情报共享与交换平台，实现不同安全厂商、不同组织之间的威胁情报共享与交换，提高安全态势感知的准确性和效率。</li></ol><p>一、安全监控</p><p>安全监控应覆盖网络、安全设备、主机、数据库、应用和中间件的安全和性能监控，具体内容如下：</p><table><thead><tr><th>类型</th><th>内容</th><th>监控方式</th></tr></thead><tbody><tr><td>网络层</td><td>路由器、防火墙、IPS、WAF等</td><td>SNMP、syslog等</td></tr><tr><td>主机层</td><td>Windows2000/XP/2003、Solaris、AIX、HP-UX、Redhat Linux</td><td>SNMP、syslog、专用数据收集代理</td></tr><tr><td>数据库</td><td>Oracle、MS SQL Server、Mysql、ES</td><td>SNMP、syslog、专用数据收集代理</td></tr><tr><td>应用中间件</td><td>WebLogic、WebSphere、Jboss/Tomcat、Apache、IIS</td><td>SNMP、syslog、专用数据收集代理</td></tr></tbody></table><p>一般来说将需要监控的数据统一汇聚到安全态势感知平台，通过平台的采集、汇聚、分析、展现能力，实现对网络安全的统一监控和告警通知。</p><p>二、风险感知</p><p>风险感知是指部署相应的监测措施如态势感知平台，主动发现来自系统内外部的安全风险，具体措施包括数据采集、收集汇聚、特征提取、关联分析、状态感知等。</p><ol><li>数据采集<br>数据采集指对网络环境中各类数据进行采集，为网络异常分析、设备预测性维护等提供数据来源。</li><li>收集汇聚<br>对于数据的收集汇聚主要分为两个方面。一是对网络设备系统及应用系统所产生的安全告警数据进行汇聚，包括产品全生命周期的各类数据的同步采集、管理、存储及查询，为后续过程提供数据来源。二是对全网流量进行监听，并将监听过程中采集到的数据进行汇聚。</li><li>特征提取<br>特征提取是指对数据特征进行提取、筛选、分类、优先级排序、可读等处理，从而实现从数据到信息的转化过程，该过程主要是针对单个设备或单个网络的纵向数据分析。信息主要包括内容和情景两方面，内容指网络流量、告警日志信息等；情景指人员的操作指令、人员访问状态、登录事件、时长等。</li><li>关联分析<br>关联分析基于大数据进行横向大数据分析和多维分析，通过将运行机理、运行环境、操作内容、外部威胁情报等有机结合，利用群体经验预测单个设备的安全情况，或根据历史状况和当前状态的差异进行关联分析，进而发现网络及系统的异常状态。</li><li>状态感知<br>状态感知基于关联分析过程，实现对企业网络运行规律、异常情况、安全目标、安全态势、业务背景等的监测感知，确定安全基线，结合大数据分析等相关技术，发现潜在安全威胁、预测黑客攻击行为。</li></ol><p>为了提高安全态势感知与监测的能力和准确性，还需要采取以下措施：</p><ol><li>加强数据分析和挖掘能力：通过对海量数据进行深入分析和挖掘，发现潜在的安全威胁和漏洞。</li><li>建立威胁情报共享机制：通过建立威胁情报共享机制，实现不同组织之间的信息共享和协同作战。</li><li>加强技术创新和研发：通过加强技术创新和研发，不断推出新的安全防护措施和技术手段，提高安全防护能力。</li><li>加强人员培训和管理：通过加强人员培训和管理，提高人员的安全意识和技能水平，减少人为因素对网络安全的影响。</li></ol><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;信息安全是一个动态的过程，操作系统、应用软件、中间件，还有硬件，平台的种类越来越多，技术越来越复杂，稍有不慎就会留下安全隐患和管理漏洞，依靠客户自身的IT资源无论从技术的先进性还是方案的严密性上都越来越难以应对，企业往往由于人手或技术力量的不足，无法自如的处理各种复杂的信息
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全运营之安全加固和运维</title>
    <link href="https://xiejava.gitee.io/posts/880de541/"/>
    <id>https://xiejava.gitee.io/posts/880de541/</id>
    <published>2023-12-19T06:06:03.000Z</published>
    <updated>2023-12-19T06:15:57.551Z</updated>
    
    <content type="html"><![CDATA[<p>安全运营是一个将技术、流程和人有机结合的复杂系统工程，通过对已有安全产品、工具和服务产出的数据进行有效的分析，持续输出价值，解决安全问题，以确保网络安全为最终目标。</p><p>安全加固和运维是网络安全运营中的两个重要方面。<br>安全加固是指通过采取一系列措施，提高网络、系统和应用程序的安全性，以防止或减少未经授权的访问、数据泄露或系统损坏。这包括对网络设备、服务器、数据库和其他关键组件进行安全配置和加固，以防止潜在的攻击。<br>运维是指对网络、系统和应用程序的日常管理和维护，以确保其正常运行和性能。这包括监控系统的状态、维护和更新软件、管理网络设备、解决故障等。</p><p>在安全加固方面，一些常见的措施包括：</p><ol><li>更新和修补操作系统、应用程序和网络设备的漏洞。</li><li>配置强密码和多因素身份验证。</li><li>限制不必要的网络端口和服务。</li><li>实施访问控制和权限管理。</li><li>定期备份数据和配置信息。</li></ol><p>在运维方面，一些常见的任务包括：</p><ol><li>监控系统的性能和状态。</li><li>维护和更新软件和操作系统。</li><li>管理网络设备和网络连接。</li><li>解决系统和应用程序故障。</li><li>管理和优化数据库。</li></ol><p>以下从补丁管理、安全加固、日志的监控分析、日常安全运维几个方面来一窥安全加固和运维。</p><h2 id="一、补丁管理"><a href="#一、补丁管理" class="headerlink" title="一、补丁管理"></a>一、补丁管理</h2><p>伴随着软件大小的不断膨胀，潜在的BUG 也不断增加。据估计，1992年发布的Windows3.1 有3 百万行代码。然而，估计它存在15000 到60000处潜在的BUG。1999 年发布的Windows2000 保守估计有三千五百万行代码，也就是说可能存在175,000 到700,000 个潜在的BUG。<br>安全相关的BUG 通常是在大量用户使用，以及黑客或者软件测试者企图进行渗透时才会发现的。一旦BUG 被发现，软件厂商通常会发布一段软件修正这个BUG。这种软件一般称为补丁(patch)、hotfix，或者Service pack。<br>与以往不同的是，只有时刻对出现的漏洞及时做出反应才能够有效地保护系统的有效性、保密性和完整性。几乎每天都会有厂商发布新的补丁，即使有经验的系统管理员也很难保证能够及时使用所有最新的补丁修补系统。<br>补丁管理是指一个区域的系统管理，包括获得、测试和安装多个补丁（代码改变）到一个执行的计算机系统。补丁管理可被看作变动管理的部分。<br>补丁管理任务包括：维持当前的可用补丁的知识；决定对于特定的系统什么样的补丁是合适的；确保补丁正确安装；安装后测试系统；证明所有相关的程序，例如所需的特殊的配置等。<br>在网络环境中，组织通常尝试维护计算机之间的软件版本一致性，并且通常执行集中式补丁管理，而不是允许每台计算机下载自己的补丁。集中式补丁管理使用中央服务器检查网络硬件是否有缺失的补丁、下载缺失的补丁并根据组织的补丁管理策略将其分发到网络上的计算机和其他设备。集中式补丁管理服务器的作用不仅仅是自动化补丁管理；它还使组织能够对补丁管理流程进行一定程度的控制。例如，如果确定某个特定补丁有问题，组织可以配置其补丁管理软件以阻止部署该补丁。集中式补丁管理的另一个优点是它有助于节省互联网带宽。从带宽的角度来看，允许组织中的每台计算机下载完全相同的补丁是没有意义的。相反，补丁管理服务器可以下载补丁一次并将其分发到指定接收它的所有计算机。</p><h2 id="二、安全加固"><a href="#二、安全加固" class="headerlink" title="二、安全加固"></a>二、安全加固</h2><h3 id="1、安全加固作用"><a href="#1、安全加固作用" class="headerlink" title="1、安全加固作用"></a>1、安全加固作用</h3><p>各类网络设备、主机系统、数据库系统、应用系统等的安全状况是动态变化的，对于安全问题的发现及安全加固优化配置等操作都需要非常专业的安全技能，需要进行周期性的安全评估、审计、加固等工作，才能够保障整体安全水平的持续提高。<br>安全加固主要是解决以下安全问题：<br>（1）安装、配置不符合安全需求；<br>（2）使用、维护不符合安全需求；<br>（3）系统完整性被破坏；<br>（4）被植入木马程序；<br>（5）帐户、口令策略问题；<br>（6）安全漏洞没有及时修补；<br>（7）应用服务和应用程序滥用；</p><h3 id="2、安全加固流程"><a href="#2、安全加固流程" class="headerlink" title="2、安全加固流程"></a>2、安全加固流程</h3><p>安全加固是根据专业安全评估结果，制定相应的系统加固方案，针对不同目标系统，通过打补丁、修改安全配置、增加安全机制等方法，合理进行安全性加强。加固的流程和范围如下图所示：<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231219/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%E6%B5%81%E7%A8%8B.png" alt="安全加固流程"></p><h3 id="3、安全加固内容"><a href="#3、安全加固内容" class="headerlink" title="3、安全加固内容"></a>3、安全加固内容</h3><p>系统安全加固是指通过一定的技术手段，提高操作系统或网络设备安全性和抗攻击能力。内容包括主机加固、数据库加固、中间件加固、网络设备加固等。</p><h4 id="（1）主机加固"><a href="#（1）主机加固" class="headerlink" title="（1）主机加固"></a>（1）主机加固</h4><p>Windows设备安全加固内容：账号、口令、授权、日志配置操作、日志保护配置、共享文件夹及访问权限、Windows服务、防病毒管理、自动播放、屏幕保护、远程登录控制、补丁管理、IP协议安全配置操作、时间同步服务。<br>Linux操作系统安全加固内容：账号、口令、文件权限、IP协议安全、日志审计、关闭不必要的服务、资源控制。<br>AIX操作系统安全加固内容：账号、口令、授权、日志配置、IP协议安全、路由协议安全、补丁管理、内核调整、服务进程和启动、AIX可被利用的漏洞。</p><h4 id="（2）数据库加固"><a href="#（2）数据库加固" class="headerlink" title="（2）数据库加固"></a>（2）数据库加固</h4><p>加固的内容包括：身份鉴别、访问控制、安全审计、资源控制等安全项加固。加固方法包括：对数据库安全策略、服务等进行安全加固；加强对敏感存储过程的管理，尤其是能执行操作系统命令的存储过程。<br>Oracle数据库安全加固内容：账号、口令、授权、日志审计、远程操作连接。<br>Linux版MySQL数据库安全加固内容：认证授权（以非root用户启动MySQL、口令策略、共享帐号、最小权限、IP地址限制、删除无关帐号）、日志审计、安全文件权限配置、连接数限制。<br>Windows版MySQL安全加固内容：认证授权（以普通用户权限运行MySQL、口令策略、共享帐号、最小权限、IP地址限制、删除无关帐号）、日志审计、安全文件权限配置、连接数限制。<br>SQL Server数据库安全加固内容：账号、口令、授权、日志审计、通信协议、补丁、停用不必要的存储过程。</p><h4 id="（3）中间件加固"><a href="#（3）中间件加固" class="headerlink" title="（3）中间件加固"></a>（3）中间件加固</h4><p>IIS中间件安全加固内容：账号、口令、授权、日志配置操作、日志保护配置、文件系统及访问权限、IIS服务组件、隐藏IIS版本号及敏感信息、版本和补丁管理、IP协议安全配置操作、连接数限制。<br>Linux版Apache安全加固内容:认证授权设置、以非root用户启动Apache、目录安全配置、限制IP地址访问、日志审计设置、配置错误日志、配置访问日志、其他安全设置、隐藏Apache版本号、关闭目录浏览功能（必选）、禁用Apache的执行功能、防御拒绝服务攻击、自定义错误页面、升级使用最新版Apache。<br>Windows版Apache安全加固内容：认证授权设置、以普通用户权限运行Apache、目录安全配置、限制IP地址访问、日志审计设置、配置错误日志、配置访问日志、其他安全设置、隐藏Apache版本号、关闭目录浏览功能（必选）、禁用Apache的执行功能、防御拒绝服务攻击、自定义错误页面。<br>Tomcat中间件安全加固内容：账号、口令、授权、日志配置操作、定时登出、错误页面处理、目录列表访问限制。<br>Weblogic中间件安全加固内容：账号、口令、授权、日志、审计、其他安全配置、定时登出、错误页面处理、禁用Send Server header。</p><h4 id="（4）网络设备加固"><a href="#（4）网络设备加固" class="headerlink" title="（4）网络设备加固"></a>（4）网络设备加固</h4><p>对二层交换设备、三层交换设备、路由器、防火墙等网络设备进行加固，加固内容包括：访问控制、安全审计、网络设备防护等安全项加固。<br>CISCO网络设备安全加固内容：账号、口令、密码复杂度、加固CON端口的登录、加固AUX端口的管理、对网络设备的管理员登录地址进行限制、HTTP登录安全加固、设置登录超时时间、用户权限分配、限制具备管理员权限的用户远程登录、日志配置、日志安全要求、远程日志功能、防止地址欺骗、SNMP服务器配置、使用ssh加密传输、禁用空闲端口、端口级的访问控制策略。<br>HUAWEI网络设备安全加固内容：用户帐号分配、限制具备管理员权限的用户远程登录、无效账户清理、静态口令复杂度、静态口令加密、密码重试、加固CON端口的登录、加固AUX端口的管理、对网络设备的管理员登录地址进行限制、远程登录加密传输、设置登录超时时间、用户权限分配、配置日志功能、对用户操作进行记录、对用户登录进行记录、开启NTP服务保证记录的时间的准确性、远程日志功能、ACL配置、防止地址欺骗、SNMP服务器配置、配置SNMPV2或以上版本、修改SNMP的Community默认通行字、动态路由协议口令要求配置MD5加密、禁止发布或接收不安全的路由信息、MPLS安全、禁用空闲端口、关闭不必要的服务。<br>H3C网络设备安全加固内容：账号、设备特权口令、密码复杂度、设置特权口令(推荐)、关闭未使用的端口、账号口令、Console口密码保护、禁止无关账号、日志配置操作、审核登录、VTY端口防护策略、远程主机IP地址段限制、远程管理通信安全、更改SNMP 服务读写权限管理、修改SNMP默认的Community字符串、Community字符串加密、IP/MAC地址绑定、ARP攻击防御、ARP防止IP报文攻击、关闭设备FTP服务、防源地址欺骗攻击、端口隔离、启用端口安全功能。</p><h4 id="（5）漏洞修复"><a href="#（5）漏洞修复" class="headerlink" title="（5）漏洞修复"></a>（5）漏洞修复</h4><p>漏洞指的是计算机系统(操作系统和应用程序)的缺陷，攻击者可以通过这些缺陷进行非法入侵，实施恶意行为。漏洞修复对这些缺陷进行修补，以减少系统漏洞的暴露。在安全事件发生前防患于未然，包括主机漏洞修复、第三方产品漏洞和应用漏洞，主机漏洞修复主要通过补丁升级、版本升级来修复，第三方产品漏洞需厂商配合，应用漏洞需开发商对软件源码进行修复。</p><h4 id="（6）安全设备调优"><a href="#（6）安全设备调优" class="headerlink" title="（6）安全设备调优"></a>（6）安全设备调优</h4><p>根据信息系统的安全情况和风险情况逐步调整已有的防火墙、堡垒机、安全监控平台、日志审计平台、IPS、WAF等安全设备策略配置，达到最佳的安全防护效果。</p><h2 id="三、日志监控分析"><a href="#三、日志监控分析" class="headerlink" title="三、日志监控分析"></a>三、日志监控分析</h2><p>日志监控分析是从应用系统各结点获得日志文件，采取人工+工具的分析分析方法，形成日志分析报告。该报告与定期评估结果、定期策略分析结果进行综合分析，找到当前的系统及网络设备中存在的问题和隐患，并给信息系统运维提供专业的增强建议。</p><h3 id="1、日志分析流程"><a href="#1、日志分析流程" class="headerlink" title="1、日志分析流程"></a>1、日志分析流程</h3><p>日志分析服务遵循以下流程：<br>（1）日志服务器搭建。将路由器、交换机通过syslog 协议，将Windows 系统的日志通过eventlog 的方式集中转存到搭建的日志服务器上。<br>（2）分析日志。分析关键服务器、防火墙、路由器、交换机等设备的日志, 采取人工加工具的审计分析方法对日志信息进行综合分析,找到当前的系统及网络设备中存在的隐患和被攻击痕迹。<br>（3）生成报告。根据日志分析内容，结合企业信息系统网络的构成及业务流程等，生成专业又极具可读性的报告，并针对日志分析出的各项问题，提出修补建议，使发现的问题能尽可能早的得到解决，避免引起更大范围的影响和损失。<br>（4）其它支持。企业根据报告的内容对系统进行检查和修补，并寻求专业公司帮助和指导。</p><h3 id="2、日志分析内容"><a href="#2、日志分析内容" class="headerlink" title="2、日志分析内容"></a>2、日志分析内容</h3><p>日志分析的内容主要包括：</p><table><thead><tr><th>类型</th><th>内容</th><th>方式</th></tr></thead><tbody><tr><td>网络层</td><td>网络设备日志</td><td>工具、手工</td></tr><tr><td>主机层</td><td>通用的windows 和unix 系统日志，包括：应用程序日志、系统日志、安全日志等。</td><td>工具、手工</td></tr><tr><td>应用</td><td>Web 系统，包括：IIS、Apache；数据库等</td><td>工具、手工</td></tr></tbody></table><h2 id="四、日常安全运维"><a href="#四、日常安全运维" class="headerlink" title="四、日常安全运维"></a>四、日常安全运维</h2><p>日常安全运维是确保网络和系统安全的重要环节。以下是一些日常安全运维的常见任务和注意事项：<br>1、监控网络和系统状态：通过使用各种工具和技术，监控网络和系统的状态，包括流量、设备性能、安全事件等，以便及时发现潜在的安全威胁和问题。<br>2、更新和修补漏洞：定期更新系统和应用程序的补丁和安全更新，以修复已知的安全漏洞。确保及时应用这些更新，以减少被攻击的风险。<br>3、访问控制和权限管理：实施严格的访问控制策略，确保只有授权人员能够访问敏感数据和系统资源。同时，管理用户的权限，确保他们只能访问他们需要的功能和数据。<br>4、入侵检测和防御：部署入侵检测系统和防御措施，以监控和识别潜在的攻击行为。及时响应和处理安全事件，防止攻击者进一步渗透网络和系统。<br>5、日志管理和分析：收集和分析系统日志，以监控和分析潜在的安全威胁和异常行为。通过日志分析，可以及时发现潜在的安全问题并采取相应的措施。<br>5、安全审计和监控：定期进行安全审计和监控，以确保安全策略和措施的有效性。通过审计和监控，可以发现潜在的安全漏洞和问题，并及时采取相应的措施。<br>7、备份和恢复计划：制定备份和恢复计划，以确保在发生安全事件或灾难时能够迅速恢复系统和数据。定期测试备份和恢复计划，以确保其有效性。<br>8、培训和管理：对运维人员进行安全培训和管理，提高他们的安全意识和技能水平。同时，建立完善的安全管理制度，确保运维人员遵守安全规定和操作流程。</p><p>安全加固和运维是相互关联的，因为一个安全的系统需要运维来维护和管理，而运维也需要安全加固来确保系统的安全性。因此，在网络安全领域中，安全加固和运维是密不可分的。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安全运营是一个将技术、流程和人有机结合的复杂系统工程，通过对已有安全产品、工具和服务产出的数据进行有效的分析，持续输出价值，解决安全问题，以确保网络安全为最终目标。&lt;/p&gt;
&lt;p&gt;安全加固和运维是网络安全运营中的两个重要方面。&lt;br&gt;安全加固是指通过采取一系列措施，提高网络
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全运营之安全检查和测试</title>
    <link href="https://xiejava.gitee.io/posts/c6e7113b/"/>
    <id>https://xiejava.gitee.io/posts/c6e7113b/</id>
    <published>2023-12-19T01:28:06.000Z</published>
    <updated>2023-12-19T01:32:47.636Z</updated>
    
    <content type="html"><![CDATA[<p>安全运营是一个将技术、流程和人有机结合的复杂系统工程，通过对已有安全产品、工具和服务产出的数据进行有效的分析，持续输出价值，解决安全问题，以确保网络安全为最终目标。</p><p>安全检查和测试是确保系统、设备或环境安全的重要手段，是安全运营基础工作的一部分。</p><p>安全检查主要通过定期或不定期地对系统、设备或环境进行全面的检查，以发现潜在的安全风险和漏洞。检查的内容可能包括各级人员安全责任制的落实情况、安全活动开展的贯彻落实情况、安全规章制度和措施的落实情况、现场安全管理情况、员工的遵章守纪情况以及员工安全操作规程及安全常识掌握情况等。</p><p>安全测试则是一种通过模拟攻击者的行为，测试系统的安全性，并发现潜在的弱点和漏洞的过程。这可以包括网络渗透测试、应用程序渗透测试等。</p><p>安全检查和测试包括日常的安全扫描、安全检查和针对信息系统的渗透测试。</p><h2 id="一、安全扫描"><a href="#一、安全扫描" class="headerlink" title="一、安全扫描"></a>一、安全扫描</h2><p>通过按照计算机信息系统安全的国家标准、相关行业标准设计、编写、制造的安全扫描工具，分析并指出有关网络的安全漏洞及被测系统的薄弱环节，给出详细的检测报告，并针对检测到的网络安全隐患给出相应的修补措施和安全建议。</p><p>安全扫描目的是提高内部网络安全防护性能和抗破坏能力，检测评估已运行网络的安全性能，为网络系统管理员提供实时安全建议。安全扫描作为一种积极主动的安全防护技术，提供了对内部攻击、外部攻击和误操作的实时保护，在网络系统受到危害之前可以提供安全防护解决方案。</p><p>安全扫描是一种快速有效的安全评估手段，可以发现系统可能存在的部分安全问题，一般会采用安全扫描工具进行安全扫描，漏扫工具会根据目前安全行业漏洞发掘情况，对扫描系统漏洞库不断进行更新。使在扫描过程中，可以发现系统更多的安全问题。</p><p>在安全扫描过程中严格遵守以下原则：</p><p>1）服务不能影响目标系统所承载的业务运行；</p><p>2）服务不能严重影响目标系统的自身性能；</p><p>3）操作时间选择在系统业务量最小，业务临时中断对外影响最小的时候。</p><h2 id="二、安全检查"><a href="#二、安全检查" class="headerlink" title="二、安全检查"></a>二、安全检查</h2><p>安全检查是指安全专家登录主机，网络设备，根据检查列表对可能存在的安全漏洞进行逐项检查，根据检查结果提供详细的漏洞描述和修补方案。人工检查作为人工实施的安全评估手段可以有效弥补由于在防火墙策略或者其他安全设备的防护措施下，安全扫描工具无法扫描发现系统内部特定区域的缺陷。通过安全专家在主机、网络等设备上的实际操作，可以更深程度地发现系统存在的问题及需要安全增强的脆弱点。</p><p>安全检查是信息系统脆弱性发掘的一种有效措施，可以发现系统内部帐号策略、权限管理、日志审核、网络服务等诸多问题。对服务器及网络系统来说人工检查是安全加固的必要步骤。</p><h2 id="三、渗透测试"><a href="#三、渗透测试" class="headerlink" title="三、渗透测试"></a>三、渗透测试</h2><p>渗透测试（penetration test）是通过模拟恶意攻击的方法，来评估系统是否存在安全风险的一种评估方法。这个过程包括对系统的任何弱点、技术缺陷或漏洞的主动分析，安全渗透测试工程师以攻击者的视角从一个攻击者可能存在的位置来进行的，并且从这个位置有条件主动利用安全漏洞。渗透测试还具有的两个显著特点是：渗透测试是一个渐进的并且逐步深入的过程。渗透测试是选择不影响业务系统正常运行的攻击方法进行的测试。</p><p>1、渗透测试方法</p><p>黑盒渗透测试：是为了证明信息系统在网络孤岛的情况下面对 APT 攻击的危险性，系统安全防御是否按照预期计划正常运行而提供的一种测试方案。</p><p>测试过程中，会综合采用各种手段和途径，包括端口扫描，漏洞扫描，密码猜测， 密码破解，数据窃听，伪装欺骗等技术方式。最终目的就是为了检验该网络各个环节的安全性。</p><p>2、模拟渗透测试技术</p><p>模拟渗透入侵测试，是指为了对一个目标网络的安全性进行实际检查，进行不带攻击行为的全面安全检测；是一个在评估目标主机、网络、嵌入式设备的安 全性，模仿黑客特定攻击行为的过程。</p><p>详细地说，是指测试工程师尽可能完整的收集相关信息，利用收集到的信息进行靶场搭建，完整的模拟黑客使用的漏洞发现技术和攻击手段，对目标网络的安全性作完整攻击复现的过程。</p><p>通过安全检查和测试，可以及时发现并解决潜在的安全问题，提高系统的安全性，确保系统、设备或环境的安全稳定运行。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安全运营是一个将技术、流程和人有机结合的复杂系统工程，通过对已有安全产品、工具和服务产出的数据进行有效的分析，持续输出价值，解决安全问题，以确保网络安全为最终目标。&lt;/p&gt;
&lt;p&gt;安全检查和测试是确保系统、设备或环境安全的重要手段，是安全运营基础工作的一部分。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>pandas对波形异常数据处理实战</title>
    <link href="https://xiejava.gitee.io/posts/90eddb0b/"/>
    <id>https://xiejava.gitee.io/posts/90eddb0b/</id>
    <published>2023-12-18T04:06:42.000Z</published>
    <updated>2023-12-18T04:24:29.981Z</updated>
    
    <content type="html"><![CDATA[<p>做数据分析很大一部分工作量都是在对数据处理，因为数据来源的质量问题，不能保证所有的数据都是正常的。对于数据分析和处理来说pandas无疑是常用的利器。下面通过一个实例来用pandas对波形异常数据进行实战处理。</p><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">df_data=pd.read_csv(<span class="string">'data\HRTrend测试波形.csv'</span>)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/1_%E5%8E%9F%E5%A7%8B%E6%B3%A2%E5%BD%A2%E6%95%B0%E6%8D%AE.png" alt="原始波形数据"></p><p>从csv导入的数据是文本字符串类型的，用《<a href="http://xiejava.ishareread.com/posts/9d6f73eb/" target="_blank" rel="noopener">Python将列表中的数据写入csv并正确读取解析</a>》中介绍的方法将文本数据转成列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2list</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.fromstring(str[<span class="number">1</span>:<span class="number">-1</span>], sep=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">df_data[<span class="string">'HRTrend'</span>]=df_data[<span class="string">'HRTrend'</span>].apply(str2list)</span><br><span class="line">df_data</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/2_%E6%96%87%E6%9C%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AClist%E5%90%8E%E7%9A%84%E6%B3%A2%E5%BD%A2%E6%95%B0%E6%8D%AE.png" alt="文本字符串转list后的波形数据"><br>用plt查看图形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">3</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        axes[x,y].plot(df_data[<span class="string">'HRTrend'</span>][i])</span><br><span class="line">        i=i+<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/3_%E5%BC%82%E5%B8%B8%E6%95%B0%E6%8D%AE%E6%B3%A2%E5%BD%A2.png" alt="异常数据波形"></p><p>从图形上看出现了异常。我们抽一个数据进行查看，发现前后有很多空值，并且在数据中也存在缺失值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_data[<span class="string">'HRTrend'</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/4_%E5%BC%82%E5%B8%B8%E6%95%B0%E6%8D%AE%E5%AE%9E%E4%BE%8B.png" alt="异常数据实例"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(df_data[<span class="string">'HRTrend'</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/5_%E5%BC%82%E5%B8%B8%E5%9B%BE%E5%BD%A2%E5%AE%9E%E4%BE%8B.png" alt="异常图形实例"></p><p>用plt画出图形，可以看到因为有缺失值所以图形并不连续。</p><h2 id="异常数据处理"><a href="#异常数据处理" class="headerlink" title="异常数据处理"></a>异常数据处理</h2><p>为了更好的展示图像，为以后的数据分析准备数据，我们需要将前后的空值去掉，对于中间存在的异常值我们可以用前值或后值进行填充。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个方法，先将空值用0填充，然后去首尾的0，再将中间存在异常的值用前值填充。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ruledata</span><span class="params">(df_cloumn)</span>:</span></span><br><span class="line">    ps=pd.Series(df_cloumn).fillna(<span class="number">0</span>) <span class="comment">#先将为空值用0填充</span></span><br><span class="line">    values=pd.Series(np.trim_zeros(ps)).replace(to_replace=<span class="number">0</span>, method=<span class="string">'ffill'</span>).values <span class="comment">#去首尾0,然后用异常值填充</span></span><br><span class="line">    <span class="keyword">return</span> values</span><br><span class="line">df_data[<span class="string">'rule_HRTrend'</span>]=df_data[<span class="string">'HRTrend'</span>].apply(ruledata) <span class="comment">#将异常数据处理的方法进行应用处理异常值</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">3</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        axes[x,y].plot(df_data[<span class="string">'rule_HRTrend'</span>][i])</span><br><span class="line">        i=i+<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231218/6_%E5%BC%82%E5%B8%B8%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E6%AD%A3%E5%B8%B8%E5%9B%BE%E5%BD%A2.png" alt="异常数据处理后的正常图形"></p><p>最后可以发现经过异常值修复后图形变得正常连续了。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;做数据分析很大一部分工作量都是在对数据处理，因为数据来源的质量问题，不能保证所有的数据都是正常的。对于数据分析和处理来说pandas无疑是常用的利器。下面通过一个实例来用pandas对波形异常数据进行实战处理。&lt;/p&gt;
&lt;h2 id=&quot;读取数据&quot;&gt;&lt;a href=&quot;#读取数
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python将列表中的数据写入csv并正确解析出来</title>
    <link href="https://xiejava.gitee.io/posts/9d6f73eb/"/>
    <id>https://xiejava.gitee.io/posts/9d6f73eb/</id>
    <published>2023-12-16T13:18:15.000Z</published>
    <updated>2023-12-16T13:26:08.426Z</updated>
    
    <content type="html"><![CDATA[<p>用Python做数据处理常常会将数据写到文件中进行保存，又或将保存在文件中的数据读出来进行使用。通过Python将列表中的数据写入到csv文件中很多人都会，可以通过Python直接写文件或借助pandas很方便的实现将列表中的数据写入到csv文件中，但是写进去以后取出有些字段会有变化有些坑还是要避免。本文通过实例来介绍如何将列表中的数据写入文件如csv并正确解析出来使用。</p><p>示例数据如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = [[<span class="string">'John'</span>, <span class="string">'25'</span>, <span class="string">'Male'</span>,[<span class="number">99</span>,<span class="number">100</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Emily'</span>, <span class="string">'22'</span>, <span class="string">'Female'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">98</span>]],</span><br><span class="line">        [<span class="string">'Michael'</span>, <span class="string">'30'</span>, <span class="string">'Male'</span>,[<span class="number">97</span>,<span class="number">99</span>,<span class="number">100</span>]]]</span><br></pre></td></tr></table></figure><h2 id="通过pandas将数据写入csv"><a href="#通过pandas将数据写入csv" class="headerlink" title="通过pandas将数据写入csv"></a>通过pandas将数据写入csv</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.DataFrame(data,columns=[<span class="string">'Name'</span>, <span class="string">'Age'</span>, <span class="string">'Gender'</span>,<span class="string">'Score'</span>])</span><br><span class="line">filename = <span class="string">'data\pd_data.csv'</span></span><br><span class="line">df.to_csv(filename, index=<span class="literal">False</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data.png" alt="数据集"></p><p>我们对原始的数据中的分数Score字段进行求和统计总分TotalScore</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'TotalScore'</span>]=df[<span class="string">'Score'</span>].apply(sum)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data_totalscore.png" alt="数据集TotalScore"></p><h2 id="通过pandas将csv文件中的数据读出"><a href="#通过pandas将csv文件中的数据读出" class="headerlink" title="通过pandas将csv文件中的数据读出"></a>通过pandas将csv文件中的数据读出</h2><p>用pandas将csv文件将数据读出也是非常方便的一行代码就可以搞定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_read_csv=pd.read_csv(filename)</span><br><span class="line">df_read_csv</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data.png" alt="数据集"></p><p>但是会发现从csv文件中读出数据后形成的dataframe数据集对数据中的分数Score字段进行求和统计总分TotalScore会报错！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df_read_csv[<span class="string">'TotalScore'</span>]=df_read_csv[<span class="string">'Score'</span>].app</span><br><span class="line"></span><br><span class="line">TypeError: unsupported operand type(s) <span class="keyword">for</span> +: <span class="string">'int'</span> <span class="keyword">and</span> <span class="string">'str'</span></span><br></pre></td></tr></table></figure><p>原因是原数据中Score字段中的数据是list但是报错至文件读出来后这个字段变成了字符串，字符串不能求和。</p><p><strong>解决方案</strong><br>将字段中为字符串的值进行转换，转换成list，numpy提供了string转list的方法，当然也可以自己写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeArray</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="comment">#return [int(item) for item in text[1:-1].split(',')]  #将字串转换成列表</span></span><br><span class="line">    <span class="keyword">return</span> np.fromstring(text[<span class="number">1</span>:<span class="number">-1</span>], sep=<span class="string">','</span>)  <span class="comment">#用numpy提供的方法将字串转换成列表</span></span><br><span class="line"></span><br><span class="line">df_read_csv[<span class="string">'Score'</span>]=df_read_csv[<span class="string">'Score'</span>].apply(makeArray) <span class="comment">#将Score由字符串转成列表</span></span><br><span class="line">df_read_csv[<span class="string">'TotalScore'</span>]=df_read_csv[<span class="string">'Score'</span>].apply(sum)</span><br><span class="line">df_read_csv</span><br></pre></td></tr></table></figure><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231216/pd_data_totalscore.png" alt="数据集TotalScore"></p><p>可以看到这下Score字段可以正常的进行求和统计总分TotalScore了。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a><br> <center> </p><br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注微信公众号,一起学习、成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用Python做数据处理常常会将数据写到文件中进行保存，又或将保存在文件中的数据读出来进行使用。通过Python将列表中的数据写入到csv文件中很多人都会，可以通过Python直接写文件或借助pandas很方便的实现将列表中的数据写入到csv文件中，但是写进去以后取出有些字
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>《芯片战争》读后感-得芯片者得天下</title>
    <link href="https://xiejava.gitee.io/posts/41bc24fd/"/>
    <id>https://xiejava.gitee.io/posts/41bc24fd/</id>
    <published>2023-12-02T07:56:21.000Z</published>
    <updated>2023-12-02T09:39:05.755Z</updated>
    
    <content type="html"><![CDATA[<p>随着社会的进步和技术的发展，以互联网产业化、人工智能等为代表的第四次工业革命席转全球，人工智能技术如火如荼，将整个世界推入了智能化时代。有人说石油是现在工业的血液，那么芯片就是现代工业的大脑。芯片作为现代工业的大脑，它们被广泛应用于各种电子设备、通信、计算机、人工智能等领域。在现代电子设备中发挥着核心的作用。芯片可以控制和操作各种电子设备，执行复杂的运算和数据处理任务，实现各种智能化的功能。随着科技的进步和数字化转型的加速，芯片在各个领域的应用越来越广泛，从计算机、手机、汽车到航空航天、医疗、国防等各个领域，都离不开芯片的支持和推动，半导体芯片在现代技术和工业中的重要性无法被低估。</p><p>近年来在中美贸易战中，芯片起到了关键的战略性作用。在中美贸易战期间，半导体芯片成为了贸易争端的一个焦点和核心议题。2018年4月开始，美国政府针对我国发动了一场以芯片为核心的科技战，我们可以把之称为芯片战争。</p><p>《芯片战争》是一部从企业竞争和国力较量的角度讲述全球芯片产业发展历程的书籍。全书分上部全球芯风云和下部中国芯势力，上部主要讲述了全球芯片产业的发展史和芯片产业链的变迁，下部主要讲述了中国芯片的崛起与芯片产业发展的最新动态。作者余盛是国内战略咨询专家、消费品营销专家及财经作家。这本书是作者继《手机战争》之后关于信息产业领域的第二部力作，目前豆瓣评分是8.6分。<br><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231202/%E8%8A%AF%E7%89%87%E6%88%98%E4%BA%89.png" alt="在这里插入图片描述"></p><h2 id="什么是芯片"><a href="#什么是芯片" class="headerlink" title="什么是芯片"></a>什么是芯片</h2><p>芯片，也被称为集成电路（Integrated Circuit，IC）或微芯片，是一种将多个电子元件（如晶体管、电阻、电容等）集成到一个小而紧凑的半导体片上的技术和产品。现代芯片可以包含数十亿个这样的元件，它们通过复杂的制造过程被制作在一块硅晶圆上。这个过程包括设计、掩模制作、光刻、蚀刻、沉积和测试等多个步骤。最终得到的芯片具有各种功能，例如处理数据（如CPU）、存储信息（如RAM、ROM）、或者进行信号放大和转换（如运算放大器、ADC/DAC）。芯片的应用非常广泛，涵盖了几乎所有的电子设备，从计算机和手机到家用电器、汽车、医疗设备甚至军事装备。由于其体积小、耗电少、成本低、速度快等特点，芯片对于推动科技进步和现代化生活起到了至关重要的作用。</p><h2 id="芯片的发展历程"><a href="#芯片的发展历程" class="headerlink" title="芯片的发展历程"></a>芯片的发展历程</h2><p>集成电路（芯片）在其早期发展阶段受到了美国国防工业的支持和推动。20世纪中叶，随着冷战的升温，美国政府和军方对于新技术的需求增加，特别是对于更小型化、更高效和更可靠的电子设备和计算机系统的需求。集成电路的发展为解决这些需求提供了重要支持。在这一时期，美国国防部和一些政府机构积极支持了集成电路技术的研究和发展。例如，1958年美国国家航空航天局（NASA）成立时，其推动了一系列技术创新，并且在航天器和计算机系统中广泛采用了集成电路。此外，军方对于集成电路在军事通信、导航系统和计算机技术中的应用也给予了关注和资金支持。<br>芯片的发展历程可以追溯到20世纪中叶，经历了几个阶段的演变。以下是芯片发展的主要历史阶段：</p><ul><li>初期概念（1940s - 1950s）： 芯片的概念最早在20世纪40年代末至50年代初由多位科学家和工程师提出。在这一时期，电子元件的集成度很低，电子器件主要通过手工连接构建。</li><li>第一代晶体管技术（1950s - 1960s）： 随着晶体管的发明和使用，电子器件变得更加小型化和可靠。这一时期的电子器件仍然是离散的，但晶体管的引入为集成电路奠定了基础。</li><li>集成电路的诞生（1958年）： 杰克·基尔比（Jack Kilby）和罗伯特·诺伊斯（Robert Noyce）分别在1958年几乎同时提出了集成电路的概念。基尔比使用了间歇技术将几个器件集成到单个硅片上，而诺伊斯则提出了将多个晶体管集成到单个硅片上的全片法。这标志着集成电路的诞生，为后来的芯片技术奠定了基础。</li><li>摩尔定律的确立（1965年）： 戈登·摩尔（Gordon Moore）在1965年提出了著名的摩尔定律，指出集成电路上可容纳的晶体管数量每隔约18至24个月会翻倍。这一定律推动了半导体行业的迅猛发展，促使了芯片技术的不断创新和提升。</li><li>LSI和VLSI技术的发展（1960s - 1970s）： 大规模集成电路（LSI）和超大规模集成电路（VLSI）技术的发展使得更多的晶体管能够集成到单个芯片上。这一时期，芯片的功能和复杂性不断增加，应用领域也逐渐扩展。</li><li>先进制程和微纳米技术（1980s至今）： 随着半导体制造技术的不断进步，制程尺寸不断减小。从1980年代开始，微纳米技术逐渐成为主流，芯片上的晶体管数量呈指数级增长。这一时期，集成电路的制造变得更加复杂，包括光刻、蚀刻、离子注入等高度精密的制程。</li><li>多核处理器和异构集成电路（2000s至今）： 随着对计算能力和功耗效率的不断需求，多核处理器和异构集成电路的兴起成为一个重要趋势。这使得在一个芯片上集成不同类型的处理器和功能成为可能，以满足不同应用的需求。</li></ul><p>芯片的发展历程体现了对集成度、性能、功耗等方面不断追求的过程。这一过程推动了信息技术的发展，影响了现代社会的方方面面。</p><h2 id="芯片技术为什么难攻克"><a href="#芯片技术为什么难攻克" class="headerlink" title="芯片技术为什么难攻克"></a>芯片技术为什么难攻克</h2><p>芯片技术随着这么多少年的快速发展，使得芯片技术变得异常复杂且具有高度专业性，涉及多个复杂的技术、物理和工程难题，对于后来者造成了巨大的技术壁垒。</p><ul><li>制程复杂性：<br>制造芯片的制程非常复杂，涉及多个步骤，如光刻、蚀刻、沉积、离子注入等。随着制程尺寸不断减小，对制程的控制要求越来越高。微纳米技术的应用使得芯片上的元件尺寸趋近或小于100纳米，目前世界上最先进的芯片制造制程是3纳米，需要高度精密的制造工艺。</li><li>摩尔定律挑战：<br>摩尔定律指出，集成电路上的晶体管数量每隔一段时间会翻倍，但随着晶体管尺寸的不断缩小，已经接近原子尺度的极限。超越这一极限需要开发新的技术和材料，例如量子点技术、碳纳米管等。</li><li>材料科学难题：<br>随着制程的进一步微缩，新的材料需求不断涌现。寻找符合要求的材料，能够在小尺寸下保持稳定性、导电性、绝缘性等特性，是一个具有挑战性的问题。</li><li>热管理问题： 集成电路的密度增加，功耗也随之增加。如何有效地管理芯片上的热量，防止过热对性能和寿命造成影响，是一个重要的挑战。</li><li>设计复杂性：<br>芯片设计变得越来越复杂，涉及到大量的晶体管和电路元件。设计出高性能、低功耗、可靠的芯片需要高度专业的技术和工程知识，而且设计周期较长。</li><li>成本压力：<br>高度先进的制程和设备投资成本巨大。发展新技术需要大量的研发资金，而且芯片制造商需要在竞争激烈的市场中保持竞争力，这对技术和成本控制提出了更高要求。</li></ul><h2 id="目前芯片产业的格局"><a href="#目前芯片产业的格局" class="headerlink" title="目前芯片产业的格局"></a>目前芯片产业的格局</h2><p>在全球范围内，目前参与芯片产业领域竞争的主要经济体包括中国、美国、日本、韩国、中国台湾地区、欧州等。</p><ol><li>中美两国： 中美之间的竞争是最引人注目的。美国在半导体领域拥有一些全球领先的企业，而中国则致力于迎头赶超，并投资大量资源用于半导体技术的研发和产业发展。两国之间存在着贸易争端和技术战略的角力。</li><li>日本：日本是全球领先的半导体生产国之一，拥有多家知名半导体公司，如东芝、富士通等。在芯片产业领域竞争，日本致力于发展先进的半导体技术，并将其应用于各种产品和服务中，包括汽车、电子设备和工业设备等。</li><li>韩国：韩国是全球最大的半导体生产国之一，拥有三星、LG等知名半导体公司。在芯片战争中，韩国通过大力发展半导体产业，实现了经济的快速增长和技术赶超。韩国的半导体产品广泛应用于全球市场，包括手机、电视、电脑等电子产品。</li><li>中国台湾：台湾的半导体产业在全球范围内具有重要地位，拥有台积电、联发科技等知名公司。台湾的半导体技术广泛应用于各种电子产品，包括手机、电脑、电视等。在芯片产业领域，台湾致力于维护自己的市场份额和技术优势。</li><li>欧洲：欧洲在芯片产业领域竞争中扮演了重要角色，拥有多家领先的半导体公司，如意法半导体、荷兰恩智浦、荷兰的ASML等。欧洲致力于发展自主的半导体产业，以减少对美国和亚洲的依赖，并推动创新和经济增长。</li></ol><p>芯片产业的格局涉及到全球范围内的多个公司</p><ul><li>主要制造商：<br>台湾半导体制造公司（TSMC）： 作为全球最大的独立芯片制造厂商之一，TSMC提供给包括苹果、英特尔、AMD等公司制造先进的芯片。其技术领先地位使其成为全球芯片制造的中流砥柱。<br>三星电子： 三星不仅在芯片制造领域有重要地位，还在内存、存储器和其他半导体产品方面具有竞争力。<br>英特尔： 作为一家全球领先的芯片设计和制造公司，英特尔在服务器、个人电脑和数据中心等领域占据主导地位。</li><li>设计公司：<br>美国公司： 在芯片设计领域，美国的公司占据主导地位。例如，英特尔、高通、博通、NVIDIA等公司在处理器、通信芯片、图形处理器等领域具有显著的市场份额。<br>中国公司： 中国也在不断加强在芯片设计领域的实力，包括华为旗下的海思、紫光展锐等公司。中国一直在推动本国芯片产业的发展，投资大量资源进行研发和支持本土芯片公司。</li><li>消费电子公司：<br>苹果、三星、华为、小米等： 这些公司不仅是芯片的大规模采购者，同时也在自家产品中采用自家设计的芯片，以提高产品性能和降低成本。</li><li>新兴技术领域的公司：<br>NVIDIA： 在人工智能和图形处理领域，NVIDIA具有显著的地位，其GPU（图形处理器）在深度学习等领域取得了巨大成功。<br>AMD： 在处理器和图形芯片领域，AMD也在市场上展现出竞争力，尤其是在台式机和服务器市场。</li><li>其他：<br>日本的东芝、富士通，韩国的SK海力士等公司在存储器领域具有一定的市场份额。</li></ul><h2 id="中国芯片的发展"><a href="#中国芯片的发展" class="headerlink" title="中国芯片的发展"></a>中国芯片的发展</h2><p>通过海湾战争，中国看到，现代战争已经发展到信息化战争阶段，以芯片为基础的电子战和信息战对战争的进程起着决定性作用。美国军方早在1987年就开始耗巨资研制带有病毒的芯片。海湾战争中，伊拉克军队从法国购买的打印机中就被安装了这种病毒芯片。美军在空袭巴格达之前，将芯片上隐蔽的病毒遥控激活，结果病毒通过打印机侵入伊拉克军事指挥中心的主计算机系统，导致伊军指挥系统失灵，整个防空系统随即瘫痪，完全陷入了被动挨打的境地。如今在军舰、战车、飞机、导弹等现代化武器中，以芯片为核心的电子装备越来越多。过去几次战争的经验显示，如果电子设备失效，武器将变成一堆废铜烂铁。因此，谁拥有了先进的芯片，谁就能掌握战场的主动权。像芯片这种事关国防安全的关键技术，必须掌握在自己国家的手中。</p><p>中国芯片产业的发展可以追溯到20世纪70年代，那时中国的芯片技术还相对落后于世界先进水平。然而，经过几十年的努力和政策支持，中国已经取得了显著的进步，并在全球半导体市场中占据了重要的地位。</p><ul><li>早期发展阶段<br>1970年代初：中国政府开始认识到芯片产业的重要性，并着手建立国内的芯片研发和制造能力。<br>1980年代：随着改革开放的推进，中国开始引进国外的技术和资金，推动了芯片产业的发展。</li><li>进入国际市场（1990年代至今）<br>1990年代：中国逐渐成为全球电子产品的重要生产基地，对芯片的需求量大增。<br>2000年以后：中国政府加大了对芯片产业的支持力度，出台了一系列鼓励自主创新、吸引外资的政策。<br>2014年：“集成电路产业发展纲要”发布，提出“中国制造2025”的战略目标，旨在实现关键领域的自主可控。</li><li>现状与挑战<br>截至2023年，中国已经成为全球最大的芯片消费国，但其在高端芯片的设计和制造方面仍然依赖于外国公司，尤其是在最尖端的工艺节点上。<br>“卡脖子”问题依然存在，即在某些关键技术环节受到国际供应链限制，特别是在光刻机等核心设备以及EDA设计工具等领域。<br>虽然华为海思等企业已经在移动处理器等领域取得了一定突破，但在存储器和高性能计算芯片等方面仍面临挑战。</li><li>未来展望<br>随着中美贸易紧张局势持续，中国更加重视自主发展芯片产业，投入大量资源进行自主研发。<br>国内企业如长江存储、紫光展锐等正在积极开发自己的技术和产品，以减少对外部供应商的依赖。<br>在国家政策的引导下，预计中国的芯片产业将继续保持较快的增长速度，同时也会在技术创新、人才培养和国际合作等方面做出更多的努力。</li></ul><p>尽管面临着诸多挑战，中国芯片产业的发展前景总体来说是乐观的。不过，要想真正达到国际领先水平，还需要克服一系列技术和市场的障碍，并且需要时间来培养相关的生态系统。</p><p>半导体芯片制造这一极其复杂、高风险的业务一直是全球巨头之间的较量，也逐渐演变成为大国之间的竞争。虽然美国不断地在芯片领域打压我们，但是截止目前，美国并没有取得他们想要的结果，而中国的芯片领域在重重压力之下依旧坚持着发展，并且取得了不小的成绩。随着华为Mate60新手机发布后，我们已全面吹响了破除美帝科技霸权的号角，以芯片为代表的高科技之战，是我们崛起之前最后，也必须要打一场硬仗，只有打赢了对美国的芯片战争，才能真正建立完善的工业产业体系，走出一条属于中国的科技强国之路。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着社会的进步和技术的发展，以互联网产业化、人工智能等为代表的第四次工业革命席转全球，人工智能技术如火如荼，将整个世界推入了智能化时代。有人说石油是现在工业的血液，那么芯片就是现代工业的大脑。芯片作为现代工业的大脑，它们被广泛应用于各种电子设备、通信、计算机、人工智能等领域
      
    
    </summary>
    
    
      <category term="读书" scheme="https://xiejava.gitee.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读后感" scheme="https://xiejava.gitee.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>系统频繁崩溃，如何考虑系统的稳定性和可扩展性？</title>
    <link href="https://xiejava.gitee.io/posts/135a865f/"/>
    <id>https://xiejava.gitee.io/posts/135a865f/</id>
    <published>2023-11-29T03:33:31.000Z</published>
    <updated>2023-11-29T06:36:11.464Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231129/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E7%A8%B3%E5%AE%9A%E6%80%A7.png" alt="在这里插入图片描述"></p><p>最近网传互联网应用信息系统频繁崩溃，语雀崩完淘宝崩，淘宝崩完滴滴崩，随着业务的发展和技术的进步，对于信息系统的要求也越来越高。信息应用系统为了满足不断增长的用户和业务需求，提高系统的稳定性和扩展性至关重要。</p><p>因为互联网应用面对的是广大的互联网用户，用户和业务需求变化非常快，所以系统既要考虑稳定性又要考虑可扩展性。</p><p>系统稳定性是指系统在面临外部干扰或内部变化时，能够保持其原有状态和功能，避免出现崩溃、失控或不可预测的行为。系统扩展性是指系统在面对增长的业务需求时，能够轻松地扩展其性能、容量和功能的能力。它是一种确保系统能够适应未来发展和变化的重要属性。良好的扩展性可以为企业节省大量的时间和资源，避免在业务增长过程中出现瓶颈。</p><p>系统的稳定性通常包括以下方面：</p><ol><li>容错性：系统在面临错误或异常情况时，能够自动检测并处理错误，避免故障扩散到整个系统。</li><li>可用性：系统在任何情况下都能够提供必要的功能和服务，避免出现单点故障或瓶颈。</li><li>可扩展性：系统能够根据业务需求的变化进行扩展和优化，以适应不断增长的用户数量和业务需求。</li><li>可维护性：系统在运行过程中能够被有效地监控、管理和维护，以确保系统的稳定性和可靠性。</li><li>安全性：系统能够抵御外部攻击和威胁，保护系统的数据和功能不受损害。</li></ol><h2 id="系统稳定性和可扩展性设计参考原则"><a href="#系统稳定性和可扩展性设计参考原则" class="headerlink" title="系统稳定性和可扩展性设计参考原则"></a>系统稳定性和可扩展性设计参考原则</h2><p>标准化和规范化：采用统一的开发标准和规范，确保系统的可维护性和可重用性。这可以减少系统复杂度，提高系统的可扩展性。</p><ul><li>分布式架构：采用分布式架构，将系统划分为多个独立的子系统，每个子系统都可以独立地处理特定的业务需求。这种架构可以提高系统的可扩展性和容错性。</li><li>单一职责原则：每个服务应该只关注自己的功能领域，避免出现跨职责的耦合。这样可以降低系统的复杂性，提高系统的稳定性。</li><li>高内聚、低耦合：每个服务应该高度内聚，同时尽量减少与其他服务的耦合。这样可以减少服务之间的依赖和互相影响，提高系统的稳定性。</li><li>服务自治：每个服务应该具有自我管理和决策能力，以减少对其他服务的依赖。这可以提高系统的可维护性和可扩展性。</li><li>负载均衡：在多个服务实例之间实现负载均衡，可以避免单个服务过载导致整个系统的瘫痪。通过负载均衡器将请求分配到不同的服务实例上，确保系统的稳定性。</li><li>容错性设计：在系统设计中，应该考虑异常情况和错误处理。例如，当某个服务出现故障时，应该能够通过其他服务的备份或冗余设计来保证系统的整体稳定性。</li><li>限流与熔断：在可能出现流量突增的场景中，可以通过限流和熔断机制来防止系统过载。限流可以限制请求的数量，避免系统超负荷运行；熔断则可以在某个服务出现故障时，快速地中断与其他服务的交互，避免故障扩散到整个系统。</li><li>自动化监控与恢复：通过自动化监控工具实时收集和分析系统的运行数据，可以及时发现潜在的问题。同时，自动化恢复工具可以在出现问题时，快速地恢复系统的正常运行。</li><li>版本控制与灰度发布：通过版本控制和灰度发布机制，可以逐步升级和优化每个服务，而不会对整个系统造成过大的影响。这有助于保持系统的稳定性。</li><li>数据一致性：在分布式系统中，数据一致性是一个重要的挑战。通过使用合适的数据复制、校验和验证机制，可以确保数据在多个服务之间的一致性，从而提高系统的稳定性。</li></ul><p>以上这些原则是相辅相成的，需要在系统设计和开发过程中综合考虑并实施。同时，随着业务需求和技术环境的变化，也需要不断优化和改进这些原则，以适应新的挑战和需求。</p><h2 id="如何提高系统的稳定性和可扩展性"><a href="#如何提高系统的稳定性和可扩展性" class="headerlink" title="如何提高系统的稳定性和可扩展性"></a>如何提高系统的稳定性和可扩展性</h2><p>提高系统的稳定性和可扩展性需要从多个方面入手，包括架构设计、技术选型、限流与熔断、数据一致性、负载均衡、自动化监控与恢复、版本控制与灰度发布以及容错性设计等。同时，也需要重视系统的可维护性和安全性，以确保系统能够长期稳定地运行并持续提供服务。<br>以下是一些常见的措施：</p><ul><li>架构设计：在设计系统时，应该考虑系统的整体架构和各个组件的交互方式。采用分布式架构和微服务设计可以提高系统的可扩展性和稳定性。同时，合理划分职责和边界，减少服务之间的耦合也是非常重要的。</li><li>技术选型：选择合适的技术和工具可以提高系统的稳定性和可扩展性。例如，使用容器化技术（如Docker）可以快速部署和扩展服务实例。使用无状态设计和服务降级可以增强系统的容错性。使用消息队列和异步通信可以减少系统之间的依赖和阻塞。</li><li>限流与熔断：在系统设计中，应该考虑限流和熔断机制，以防止流量突增或异常请求对系统造成过载。限流可以限制请求的数量，避免系统超负荷运行；熔断则可以在某个服务出现故障时，快速地中断与其他服务的交互，避免故障扩散到整个系统。</li><li>数据一致性：在分布式系统中，数据一致性是一个重要的挑战。通过使用合适的数据复制、校验和验证机制，可以确保数据在多个服务之间的一致性，从而提高系统的稳定性。使用分布式事务和一致性协议（如Raft或Paxos）可以解决数据一致性问题。</li><li>负载均衡：在多个服务实例之间实现负载均衡，可以避免单个服务过载导致整个系统的瘫痪。通过负载均衡器将请求分配到不同的服务实例上，确保系统的稳定性。使用动态负载均衡算法可以更好地分配负载，提高系统的性能和扩展性。</li><li>自动化监控与恢复：通过自动化监控工具实时收集和分析系统的运行数据，可以及时发现潜在的问题。同时，自动化恢复工具可以在出现问题时，快速地恢复系统的正常运行。自动化监控与恢复可以提高系统的稳定性和可维护性。</li><li>版本控制与灰度发布：通过版本控制和灰度发布机制，可以逐步升级和优化每个服务，而不会对整个系统造成过大的影响。这有助于保持系统的稳定性。使用版本控制工具可以方便地管理和跟踪版本的变更；使用灰度发布可以逐步部署新的版本，同时保证系统的可用性。</li><li>容错性设计：在系统设计中，应该考虑异常情况和错误处理。例如，当某个服务出现故障时，应该能够通过其他服务的备份或冗余设计来保证系统的整体稳定性。使用断路器、超时设置和重试机制等容错性设计可以增强系统的鲁棒性和可用性。</li><li>持续改进与优化：持续改进和优化是提高系统稳定性和可扩展性的关键。通过收集反馈、监控性能和不断改进技术栈可以提高系统的性能和可靠性。同时，不断优化数据流程、业务逻辑和算法也可以提高系统的可扩展性和响应速度。</li></ul><p>目前大部分大型的应用系统都会采用分布式微服务架构设计，微服务架构的系统稳定性可以通过以下几种方式来保障：</p><ul><li>单一职责原则：每个微服务都应该只关注自己的功能领域，并且只暴露必要的接口，以减少与其他微服务的耦合。这种设计原则可以帮助降低系统的复杂性，提高系统的稳定性。</li><li>容错性设计：在微服务架构中，每个微服务都应该具备一定的容错性，以处理异常情况。例如，当某个微服务出现故障时，应该能够通过其他微服务的备份或冗余设计来保证系统的整体稳定性。</li><li>负载均衡：通过在多个微服务之间实现负载均衡，可以避免某个微服务过载导致整个系统的瘫痪。负载均衡器可以分配请求到不同的微服务实例上，确保系统的稳定性。</li><li>限流与熔断：对于可能出现流量突增的场景，可以通过限流和熔断机制来防止系统过载。限流可以限制请求的数量，避免系统超负荷运行；熔断则可以在某个微服务出现故障时，快速地中断与其他微服务的交互，避免故障扩散到整个系统。</li><li>自动化监控与恢复：通过自动化监控工具实时收集和分析系统的运行数据，可以及时发现潜在的问题。同时，自动化恢复工具可以在出现问题时，快速地恢复系统的正常运行。</li><li>版本控制与灰度发布：通过版本控制和灰度发布机制，可以逐步升级和优化每个微服务，而不会对整个系统造成过大的影响。这有助于保持系统的稳定性。</li><li>数据一致性：在微服务架构中，由于数据是分散存储的，因此需要特别关注数据一致性问题。通过使用合适的数据复制、校验和验证机制，可以确保数据在多个微服务之间的一致性，从而提高系统的稳定性。</li></ul><p>随着云计算的发展，信息系统上云已经成为趋势，云平台的弹性扩展和自动化管理的特性，可以提高信息系统的基础平台的稳定性，实现快速扩展和容灾。</p><ul><li>弹性扩展：云平台能够根据业务需求提供弹性的计算资源，可以根据实际需求灵活地扩展或缩减计算资源，如计算能力、存储空间和网络带宽等。这种弹性扩展能力可以满足信息系统随着客户和业务的快速发展，不断调整需求，避免资源的浪费。</li><li>自动化管理：云平台通常提供自动化管理功能，可以帮助快速地部署、配置和管理计算资源。这些自动化工具可以降低管理成本，提高效率。</li><li>负载均衡：云平台可以提供负载均衡服务，将大量的用户请求分散到不同的服务器或节点上，以提高系统的吞吐量和响应速度。这种负载均衡技术可以确保系统在高负载情况下仍能保持较高的性能和可用性。</li><li>容灾备份：云平台通常提供容灾和备份机制，确保系统在遇到故障或灾难时能够快速恢复和正常运行。这些备份和恢复功能可以保护企业的数据和计算资源，避免因故障导致的数据丢失或损坏。</li><li>联合计算：云平台可以提供联合计算服务，将多个计算资源整合在一起，以提供更强大的计算能力。这种联合计算能力可以满足信息系统不断增长的计算需求，提高系统的性能和扩展性。</li><li>安全性：云平台通常采用严格的安全措施来保护企业的数据和计算资源。这些安全措施包括数据加密、访问控制、安全审计等，可以确保信息系统的数据和计算资源不被未经授权的访问或篡改。</li></ul><p>综上所述，信息系统可以通过优化技术采购采用分布式微服务架构，通过云平台的可扩展性实现弹性扩展、自动化管理、负载均衡、容灾备份、联合计算和安全性等方面。使得信息系统能够更好地满足不断变化的需求，提高系统的性能和扩展性。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p><center> <br><p><img src="https://xiejava1018.github.io/xiejavaimagesrc/images/fullbug%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="“fullbug”微信公众号" title="“fullbug”微信公众号"> </p><p>关注：微信公众号,一起学习成长！</center></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://xiejava1018.github.io/xiejavaimagesrc/images/2023/20231129/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E7%A8
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="架构" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="https://xiejava.gitee.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
</feed>
