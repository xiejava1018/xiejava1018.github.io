<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XieJava&#39;s blog</title>
  
  <subtitle>记录最好的自己</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiejava.gitee.io/"/>
  <updated>2022-07-15T15:40:10.374Z</updated>
  <id>https://xiejava.gitee.io/</id>
  
  <author>
    <name>XieJava</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django加入markdown编辑器及markdown上传图片不回显避坑</title>
    <link href="https://xiejava.gitee.io/posts/462af16b/"/>
    <id>https://xiejava.gitee.io/posts/462af16b/</id>
    <published>2022-07-15T15:29:21.000Z</published>
    <updated>2022-07-15T15:40:10.374Z</updated>
    
    <content type="html"><![CDATA[<p>一般来说一个CMS系统如博客系统都需要一个好的富文本编辑器，现在大家更多的是选择MarkDown编辑器来编辑内容。Django作为python的主流web开发框架当然少不了markdown的插件。本文介绍如何在Django框架中引入markdown编辑器及在使用markdown时的注意事项。</p><p>在Django框架中引入markdown编辑器主要是通过安装引入Django-mdeditor库来实现。<br>Django-mdeditor 是基于 Editor.md 的一个 django Markdown 文本编辑插件应用。<br>其官方下载地址见 <a href="https://pypi.org/project/django-mdeditor/" target="_blank" rel="noopener">https://pypi.org/project/django-mdeditor/</a><br>根据官方指导文档</p><h1 id="一、安装使用"><a href="#一、安装使用" class="headerlink" title="一、安装使用"></a>一、安装使用</h1><h2 id="1、安装django-mdeditor"><a href="#1、安装django-mdeditor" class="headerlink" title="1、安装django-mdeditor"></a>1、安装django-mdeditor</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-mdeditor</span><br></pre></td></tr></table></figure><h2 id="2、在-settings-配置文件-INSTALLED-APPS-中添加-mdeditor"><a href="#2、在-settings-配置文件-INSTALLED-APPS-中添加-mdeditor" class="headerlink" title="2、在 settings 配置文件 INSTALLED_APPS 中添加 mdeditor"></a>2、在 settings 配置文件 INSTALLED_APPS 中添加 mdeditor</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'blog'</span>,</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">    <span class="string">'django_filters'</span>,<span class="comment">#注册条件查询</span></span><br><span class="line">    <span class="comment"># 注册markdown的应用</span></span><br><span class="line">    <span class="string">'mdeditor'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="3、针对django3-0-修改-frame-配置"><a href="#3、针对django3-0-修改-frame-配置" class="headerlink" title="3、针对django3.0+修改 frame 配置"></a>3、针对django3.0+修改 frame 配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_FRAME_OPTIONS = <span class="string">'SAMEORIGIN'</span>  <span class="comment"># django 3.0 + 默认为 deny</span></span><br></pre></td></tr></table></figure><h2 id="4、在-settings-中添加媒体文件的路径配置"><a href="#4、在-settings-中添加媒体文件的路径配置" class="headerlink" title="4、在 settings 中添加媒体文件的路径配置"></a>4、在 settings 中添加媒体文件的路径配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'uploads'</span>)</span><br></pre></td></tr></table></figure><p>在你项目根目录下创建 uploads/editor 目录，用于存放上传的图片。</p><h2 id="5、在项目的根-urls-py-中添加扩展url和媒体文件url"><a href="#5、在项目的根-urls-py-中添加扩展url和媒体文件url" class="headerlink" title="5、在项目的根 urls.py 中添加扩展url和媒体文件url:"></a>5、在项目的根 urls.py 中添加扩展url和媒体文件url:</h2><p>注意是在项目的根 urls.py 中添加扩展url和媒体文件url，而不是在其他项目应用的urls.py中添加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    ...</span><br><span class="line">    url(<span class="string">r'mdeditor/'</span>, include(<span class="string">'mdeditor.urls'</span>))</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> settings.DEBUG:</span><br><span class="line">    <span class="comment"># static files (images, css, javascript, etc.)</span></span><br><span class="line">    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</span><br></pre></td></tr></table></figure><h2 id="6、在项目model中应用markdown"><a href="#6、在项目model中应用markdown" class="headerlink" title="6、在项目model中应用markdown"></a>6、在项目model中应用markdown</h2><p>示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''博客文章'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPost</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    title = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'文章标题'</span>, unique = <span class="literal">True</span>)</span><br><span class="line">    category = models.ForeignKey(BlogCategory, blank=<span class="literal">True</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">'文章分类'</span>, on_delete=models.DO_NOTHING)</span><br><span class="line">    isTop=models.BooleanField(default=<span class="literal">False</span>,verbose_name=<span class="string">'是否置顶'</span>)</span><br><span class="line">    isHot=models.BooleanField(default=<span class="literal">False</span>,verbose_name=<span class="string">'是否热门'</span>)</span><br><span class="line">    summary=models.CharField(max_length=<span class="number">500</span>,verbose_name=<span class="string">'内容摘要'</span>,default=<span class="string">''</span>)</span><br><span class="line">    content=MDTextField(verbose_name=<span class="string">'内容'</span>)</span><br><span class="line">    viewsCount= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"查看数"</span>)</span><br><span class="line">    commentsCount=models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">"评论数"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'博客文章'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'博客文章'</span></span><br></pre></td></tr></table></figure><p>见 <code>content=MDTextField(verbose_name=&#39;内容&#39;)</code> 表示博客文章的内容是MDTextField</p><h2 id="7、向-admin-py-中注册model"><a href="#7、向-admin-py-中注册model" class="headerlink" title="7、向 admin.py 中注册model:"></a>7、向 admin.py 中注册model:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="meta">@admin.register(BlogPost)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlogPostAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>,<span class="string">'category'</span>,<span class="string">'isTop'</span>,<span class="string">'isHot'</span>]</span><br></pre></td></tr></table></figure><h2 id="8、迁移创建数据表"><a href="#8、迁移创建数据表" class="headerlink" title="8、迁移创建数据表"></a>8、迁移创建数据表</h2><p>运行 <code>python manage.py makemigrations</code> 和 <code>python manage.py migrate</code> 来创建你的model 数据库表，可以看到默认创建的content字段是longtext类型的<br><img src="https://img-blog.csdnimg.cn/a963a9ee98dc437fbb9605d56c48d798.png#pic_center" alt="默认创建的content字段是longtext类型的"></p><h2 id="9、测试验证"><a href="#9、测试验证" class="headerlink" title="9、测试验证"></a>9、测试验证</h2><p>启动应用，访问<a href="http://127.0.0.1:8000/admin/" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/</a> 点击新增博客文章，可以看到内容字段是markdown编辑器输入了。<br><img src="https://img-blog.csdnimg.cn/a82339a899c144b9bf49772cd4f807d3.png#pic_center" alt="markdown编辑器"></p><p>至此django应用中就可以使用markdown编辑器了。</p><h1 id="二、markdown上传图片不回显避坑"><a href="#二、markdown上传图片不回显避坑" class="headerlink" title="二、markdown上传图片不回显避坑"></a>二、markdown上传图片不回显避坑</h1><p>按照以上步骤配置django-mdeditor,markdown编辑器可以正常使用，但是这里有个大坑，就是有些浏览器在上传图片后上传的图片不回显！<br>我就碰到了这样的情况。<br><img src="https://img-blog.csdnimg.cn/63771e4b65b4499992aec3b425c6af46.png#pic_center" alt="上传图片后上传的图片不回显"></p><p>在添加图片界面选择本地上传图片后发现后台接口调到了 <code>/mdeditor/uploads/?guid=1657867564930</code> 接口并且返回了200，但是上传的图片地址不回显，提交报“错误：图片地址不能为空。” 这就奇了怪了。<br>打开浏览器的调试工具，发现报了一个错，<code>Uncaught SyntaxError: Unexpected token 下 in JSON at position 141</code><br><img src="https://img-blog.csdnimg.cn/8d48982eb41846c3a25fc5271208531b.png#pic_center" alt="浏览器的调试工具，发现报了一个错"></p><p>点击详情，具体应该是获取的JSON无法解析。<br><img src="https://img-blog.csdnimg.cn/9179dac6e320410b905175da624a6baa.png#pic_center" alt="JSON无法解析"></p><p>这个JSON为什么无法解析呢？开始进一步调试，这个JSON是上传时调用的后台上传方法返回的。所以来看看是不是后台上传接口返回的JSON串有什么问题。找到/mdeditor/uploads路由所对应的源码<br><img src="https://img-blog.csdnimg.cn/cf8943365d794104a583f1b1613c3c6e.png#pic_center" alt="/mdeditor/uploads路由所对应的源码"></p><p>UploadView的源代码，就是返回一个成功的json报文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">'success'</span>: <span class="number">1</span>,</span><br><span class="line">                     <span class="string">'message'</span>: <span class="string">"上传成功！"</span>,</span><br><span class="line">                     <span class="string">'url'</span>: os.path.join(settings.MEDIA_URL,</span><br><span class="line">                                         MDEDITOR_CONFIGS[<span class="string">'image_folder'</span>],</span><br><span class="line">                                         file_full_name)&#125;)</span><br></pre></td></tr></table></figure><p>实际打断点debug也是正常返回上传成功的json报文。<br><img src="https://img-blog.csdnimg.cn/9fae1d59d9194aed8856bb01b83bbf73.png#pic_center" alt="打断点debug也是正常返回上传成功的json报文"></p><p>这就有点奇怪了，接口返回了正常的json报文怎么就解析不了了呢？接着继续调前台js代码，看究竟是什么原因。<br><img src="https://img-blog.csdnimg.cn/d01ac2d8b19d421c91a6bce58fd3c383.png#pic_center" alt="json串里多了几个字“下载视频”!"></p><p>发现js获取的json串里多了几个字“下载视频”! 这是什么鬼？实在是没有地方有返回“下载视频”这几个字啊？看js代码是通过iframe来处理请求的，再来看看iframe的内容，发现iframe里确实有“下载视频”<br><img src="https://img-blog.csdnimg.cn/acc72d33e03746ef896058f625640bb9.png#pic_center" alt="iframe里确实有“下载视频”"><br>原来是有个chrome浏览器插件，擅自给加了“下载视频”的内容。再来看浏览器装了些啥插件。原来是有个迅雷插件，应该就是这个插件搞的鬼了，罪魁祸首就是它了！<br><img src="https://img-blog.csdnimg.cn/74175c998960443fb81d20e3f294f4a6.png#pic_center" alt="罪魁祸首迅雷插件"></p><p>把这个迅雷插件删除或停用，果然一切正常！可以正常回显！！！<br><img src="https://img-blog.csdnimg.cn/f53ad6f543fa4036b9858398d83752f3.png#pic_center" alt="可以正常回显"></p><p>显示插入的图片<br><img src="https://img-blog.csdnimg.cn/f7e7c7d586f34aae940edcb094f34254.png#pic_center" alt="显示插入的图片"></p><p>所以，碰到markdown上传图片不回显的情况，先看下自己的浏览器是不是开启了迅雷插件应用，如果开启了迅雷插件应用先停用或删除！</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一般来说一个CMS系统如博客系统都需要一个好的富文本编辑器，现在大家更多的是选择MarkDown编辑器来编辑内容。Django作为python的主流web开发框架当然少不了markdown的插件。本文介绍如何在Django框架中引入markdown编辑器及在使用markdo
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django的restframework接口框架自定义返回数据格式</title>
    <link href="https://xiejava.gitee.io/posts/1dea176f/"/>
    <id>https://xiejava.gitee.io/posts/1dea176f/</id>
    <published>2022-07-14T01:30:59.000Z</published>
    <updated>2022-07-14T01:32:38.211Z</updated>
    
    <content type="html"><![CDATA[<p>在前后端分离是大趋势的背景下，前端获取数据都是通过调用后台的接口来获取数据微服务的应用越来越多。Django是Python进行web应用开发常用的web框架，用Django框架进行web应用框架减少了很多工作，通常用很少量的代码就可以实现数据的增、删、改、查的业务应用，同样用Django的restframework的框架对外发布接口也是非常的简单方便，几行代码就可以将数据对象通过接口的方式提供服务。因为在实际开发过程中接口的返回数据有一定的格式，本文介绍通过自定义Response返回对象来自定义接口返回数据格式。</p><p>以下示例将数据对象Friend通过restframework框架进行接口发布。<br>只要定义Friend数据对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Friend</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    id=models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    siteName=models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'友链站点名称'</span>)</span><br><span class="line">    path=models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'地址路径'</span>)</span><br><span class="line">    desc=models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">'描述'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.siteName</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name=<span class="string">'友链'</span></span><br><span class="line">        verbose_name_plural=<span class="string">'友链'</span></span><br></pre></td></tr></table></figure><p>定义一个序列化类将返回的字段序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendModelSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Friend</span><br><span class="line">        fields = <span class="string">"__all__"</span></span><br></pre></td></tr></table></figure><p>定义一个接口视图类获取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br></pre></td></tr></table></figure><p>定义接口路由就可以通过httprestfull的接口进行访问了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">friend_list=views.FriendView.as_view(&#123;<span class="string">'get'</span>:<span class="string">'list'</span>,&#125;)</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'friend/'</span>,friend_list),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br><a href="http://localhost:8000/api/friend/" target="_blank" rel="noopener">http://localhost:8000/api/friend/</a><br><img src="https://img-blog.csdnimg.cn/f20a9ebcb04b4df98dc490a07f513ed6.png#pic_center" alt="httprestfull的接口"></p><p>但是在项目中经常会碰到接口格式变化的情况，restframework框架默认的返回数据格式不满足应用的需求。比如一般的接口都会有接口返回的code、msg、data，code用来标识接口返回代码比如200是正常，msg用来记录异常或其信息，data用来返回具体的数据。<br>通过restframework接口自定义返回数据格式也是很简单方便的。<br>先自定义Response返回对象，在返回对象中自定义数据返回的格式，示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.serializers <span class="keyword">import</span> Serializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomResponse</span><span class="params">(Response)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,data=None,code=None,msg=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 status=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 template_name=None, headers=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                 exception=False, content_type=None,**kwargs)</span>:</span></span><br><span class="line">        super().__init__(<span class="literal">None</span>, status=status)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isinstance(data, Serializer):</span><br><span class="line">            msg = (</span><br><span class="line">                <span class="string">'You passed a Serializer instance as data, but '</span></span><br><span class="line">                <span class="string">'probably meant to pass serialized `.data` or '</span></span><br><span class="line">                <span class="string">'`.error`. representation.'</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">raise</span> AssertionError(msg)</span><br><span class="line">        <span class="comment">#自定义返回格式</span></span><br><span class="line">        self.data=&#123;<span class="string">'code'</span>:code,<span class="string">'msg'</span>:msg,<span class="string">'data'</span>:data&#125;</span><br><span class="line">        self.data.update(kwargs)</span><br><span class="line">        self.template_name=template_name</span><br><span class="line">        self.exception=exception</span><br><span class="line">        self.content_type=content_type</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> headers:</span><br><span class="line">            <span class="keyword">for</span> name, value <span class="keyword">in</span> headers.items():</span><br><span class="line">                self[name] = value</span><br></pre></td></tr></table></figure><p>在接口接口视图类获取数据返回时，使用该自定义的Response返回对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br><span class="line">    <span class="comment">#自定义list方法，自定义Response返回</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class="line">        serializer = self.get_serializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br>可以看到返回数据格式中增加了code,msg 数据放到了data节点<br><img src="https://img-blog.csdnimg.cn/57a2ae5b3cac4f81a65092b26fd37bd0.png#pic_center" alt="自定义数据返回格式"></p><p>列表数据通常接口要提供翻页功能，在接口中要有总页数、当前页、是否有下一页的信息。<br>可以自定义一个分页器，在分页器中自定义需要返回的分页参数<br>参考示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line">    page_size = <span class="number">8</span> <span class="comment">#每页显示数量</span></span><br><span class="line">    max_page_size = <span class="number">50</span> <span class="comment">#每页最大显示数量。</span></span><br><span class="line">    page_size_query_param = <span class="string">'size'</span> <span class="comment">#每页数量的参数名称</span></span><br><span class="line">    page_query_param = <span class="string">'page'</span>  <span class="comment">#页码的参数名称</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_paginated_response</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="comment">#自定义分页器的返回参数</span></span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=data,code=<span class="number">200</span>,msg=<span class="string">"OK"</span>,status=status.HTTP_200_OK, count=self.page.paginator.count,next=self.get_next_link(),previous=self.get_previous_link(),size=self.page_size,page=self.page.number)</span><br></pre></td></tr></table></figure><p>在接口接口视图类获取数据返回时，如果有分页器则使用该分页器自定义的Response返回对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FriendView</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Friend.objects.all()</span><br><span class="line">    serializer_class = FriendModelSerializer</span><br><span class="line">    pagination_class = MyPage</span><br><span class="line">    <span class="comment">#自定义list方法，自定义Response返回</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        queryset = self.filter_queryset(self.get_queryset())</span><br><span class="line">        page = self.paginate_queryset(queryset)</span><br><span class="line">        <span class="comment">#如果有分页器，则进行分页后返回</span></span><br><span class="line">        <span class="keyword">if</span> page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            serializer = self.get_serializer(page, many=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">return</span> self.get_paginated_response(serializer.data)</span><br><span class="line"></span><br><span class="line">        serializer = self.get_serializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=serializer.data, code=<span class="number">200</span>, msg=<span class="string">"OK"</span>, status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br>可以看到接口中自定义增加了分页信息。<br><img src="https://img-blog.csdnimg.cn/d7e5395ba3aa4d7ba13bf1a331c776c7.png#pic_center" alt="接口中自定义增加了分页信息"></p><p>但是有时候可能希望分页的信息数据要放在data节点里面，这样也是可以做到的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> common.customresponse <span class="keyword">import</span> CustomResponse</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line">    page_size = <span class="number">8</span> <span class="comment">#每页显示数量</span></span><br><span class="line">    max_page_size = <span class="number">50</span> <span class="comment">#每页最大显示数量。</span></span><br><span class="line">    page_size_query_param = <span class="string">'size'</span> <span class="comment">#每页数量的参数名称</span></span><br><span class="line">    page_query_param = <span class="string">'page'</span>  <span class="comment">#页码的参数名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#自定义分页器的返回参数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_paginated_response</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        ret_data = dict()</span><br><span class="line">        ret_data[<span class="string">'items'</span>] = data</span><br><span class="line">        <span class="comment"># 加入自定义分页信息</span></span><br><span class="line">     ret_data[<span class="string">'total'</span>] = self.page.paginator.count</span><br><span class="line">        ret_data[<span class="string">'hasNextPage'</span>] = self.get_next_link()</span><br><span class="line">        ret_data[<span class="string">'size'</span>] = self.page_size</span><br><span class="line">        ret_data[<span class="string">'page'</span>] = self.page.number</span><br><span class="line">        <span class="keyword">return</span> CustomResponse(data=ret_data,code=<span class="number">200</span>,msg=<span class="string">"OK"</span>,status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure><p>接口访问效果如下：<br>可以看到接口中自定义增加了分页信息，分页的信息数据放在data节点里面了<br><img src="https://img-blog.csdnimg.cn/2c702bb72da242f48d27986887308b3a.png#pic_center" alt="自定义增加了分页信息，分页的信息数据放在data节点里面"><br>至此，本文介绍了通过Django的restframework接口框架自定义Response返回对象来自定义返回数据格式。Django的restframework接口框架使用简单方便，拿来即用，能够很大程度上减少代码开发量。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在前后端分离是大趋势的背景下，前端获取数据都是通过调用后台的接口来获取数据微服务的应用越来越多。Django是Python进行web应用开发常用的web框架，用Django框架进行web应用框架减少了很多工作，通常用很少量的代码就可以实现数据的增、删、改、查的业务应用，同样
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Vue3引入vue-router路由并通过vue-wechat-title设置页面title</title>
    <link href="https://xiejava.gitee.io/posts/5b619f34/"/>
    <id>https://xiejava.gitee.io/posts/5b619f34/</id>
    <published>2022-07-03T08:36:53.000Z</published>
    <updated>2022-07-03T08:42:17.937Z</updated>
    
    <content type="html"><![CDATA[<p>对于用类似Vue前后端分离技术架构的单页应用页面之间的跳转没有非前后端分离那么来得直接，甚至连设置跳转页面的Title都要费一番周折，本文介绍Vue3引入vue-router路由并设置页面Title，通过vue-router实现页面的路由，通过vue-wechat-title来设置页面的title。</p><h1 id="一、用vue-router库实现路由管理"><a href="#一、用vue-router库实现路由管理" class="headerlink" title="一、用vue-router库实现路由管理"></a>一、用vue-router库实现路由管理</h1><p>vue-router是Vue.js官方推荐的路由管理库。它和Vue.js的核心深度集成，让构建单页应用变得轻松容易。使用Vue.js和vue-router库创建单页应用非常的简单：使用Vue.js开发，整个应用已经被拆分成了独立的组件；使用vue-router库，可以把路由映射到各个组件，并把各个组件渲染到正确的地方。下面就来介绍如何安装引入vue-router库并实现路由管理</p><h2 id="1、安装vue-router库"><a href="#1、安装vue-router库" class="headerlink" title="1、安装vue-router库"></a>1、安装vue-router库</h2><p>使用如下命令安装vue-router库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save -vue-router</span><br></pre></td></tr></table></figure><p>也可以通过  <code>npm install -save vue-router@4</code> 来指定版本号@4表示版本是4<br>安装成功后，可以在控制台看到了安装成功的信息和版本号<br><img src="https://img-blog.csdnimg.cn/a88149cfdb574bf7a3733fe0577845dd.png#pic_center" alt="控制台看到了安装成功的信息和版本号"><br>除此之外也可以在工程中的package.json中看到依赖的库中包含有vue-router及版本号。<br><img src="https://img-blog.csdnimg.cn/d637a853a2a644da8dd59bf035847d5e.png#pic_center" alt="package.json中看到依赖的库中包含有vue-router及版本号"></p><h2 id="2、在router文件夹下创建router-js"><a href="#2、在router文件夹下创建router-js" class="headerlink" title="2、在router文件夹下创建router.js"></a>2、在router文件夹下创建router.js</h2><p>在工程的src目录下建立router文件夹 在router文件夹下创建router.js，该文件是Vue路由管理的核心文件，所有的各组件的路由在该文件中进行配置。<br>参考代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter,createWebHistory &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>; <span class="comment">//引入vue-router组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span>;           <span class="comment">//引入需要路由管理的页面组件HelloWorld</span></span><br><span class="line"><span class="keyword">import</span> siteLogin <span class="keyword">from</span> <span class="string">'@/views/user/login'</span>;                 <span class="comment">//引入需要路由管理的页面组件login</span></span><br><span class="line"><span class="keyword">import</span> userInfo <span class="keyword">from</span> <span class="string">"@/views/user/userinfo"</span>;               <span class="comment">//引入需要路由管理的页面组件userinfo</span></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    history:createWebHistory(),</span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/'</span>,              <span class="comment">//路由的路径</span></span><br><span class="line">            name:<span class="string">'Home'</span>,           <span class="comment">//路由的名称</span></span><br><span class="line">            component:HelloWorld,  <span class="comment">//路由的组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/login'</span>,</span><br><span class="line">            name:<span class="string">'Login'</span>,</span><br><span class="line">            component:siteLogin,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/userinfo'</span>,</span><br><span class="line">            name:<span class="string">'UserInfo'</span>,</span><br><span class="line">            component:userInfo,</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>代码组织结构如下：<br><img src="https://img-blog.csdnimg.cn/eda7b7f81435458cb8de37a96be17126.png#pic_center" alt="代码组织结构如下"></p><h2 id="3、在App-vue中加入路由视图"><a href="#3、在App-vue中加入路由视图" class="headerlink" title="3、在App.vue中加入路由视图"></a>3、在App.vue中加入路由视图</h2><p>在App.vue中加入<code>&lt;router-view /&gt;</code><br>App.vue示例代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;router-view /&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'App'</span>,</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><h2 id="4、在项目的main-js中引入路由"><a href="#4、在项目的main-js中引入路由" class="headerlink" title="4、在项目的main.js中引入路由"></a>4、在项目的main.js中引入路由</h2><p>参考代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router/router"</span>;  <span class="comment">//引入路由，会去找router下的router.js的配置文件</span></span><br><span class="line">createApp(App).use(router).mount(<span class="string">'#app'</span>)  <span class="comment">//创建应用的时候应用路由</span></span><br></pre></td></tr></table></figure><h2 id="5、验证效果"><a href="#5、验证效果" class="headerlink" title="5、验证效果"></a>5、验证效果</h2><p>为了显示更清楚，将默认创建的src\components\HelloWorld.vue内容稍加调整</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div &gt;</span><br><span class="line">    第一个路由组件Home</span><br><span class="line">    &lt;p&gt;&#123;&#123; name &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'HelloWorld',</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      name:"Hello World!"</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;!-- Add <span class="string">"scoped"</span> attribute to limit CSS to <span class="keyword">this</span> component only --&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure><p>如果上面的步骤没有遗漏，在终端输入 npm run serve 将前端服务启动起来，在浏览器访问localhost:8080可以看到如下页面：<br><img src="https://img-blog.csdnimg.cn/f15b1b6eb060427bbfe0a1c058bbfc97.png#pic_center" alt="localhost:8080"><br>访问localhost:8080/login<br><img src="https://img-blog.csdnimg.cn/3c6dabe9159e4a0f848fcfd0f4cc9f9e.png#pic_center" alt="访问localhost:8080/login"><br>访问localhost:8080/userinfo<br><img src="https://img-blog.csdnimg.cn/690f79f60f134aa5974ae2aef9701c78.png#pic_center" alt="访问localhost:8080/userinfo"><br>可以看到访问不同的URL路由到了不同的Vue页面，上述login.vue和userinfo.vue示例代码没有给出，大家可以自行随便实现。</p><h1 id="二、用vue-wechat-title实现页面title的设置"><a href="#二、用vue-wechat-title实现页面title的设置" class="headerlink" title="二、用vue-wechat-title实现页面title的设置"></a>二、用vue-wechat-title实现页面title的设置</h1><p>在上面实现了不同页面的路由管理，但是访问不同的URL看到的页面title所有的页面都是一样的，如何设置不同页面不同的页面Title呢？比较方便的做法是用vue-wechat-title来实现。<br>同样首先要安装vue-wechat-title库</p><h2 id="1、安装vue-wechat-title库"><a href="#1、安装vue-wechat-title库" class="headerlink" title="1、安装vue-wechat-title库"></a>1、安装vue-wechat-title库</h2><p>使用如下命令安装vue-wechat-title库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-wechat-title -save</span><br></pre></td></tr></table></figure><p>安装完成后在工程中的package.json中看到依赖的库中包含有vue-wechat-title及版本号<br><img src="https://img-blog.csdnimg.cn/c3852a50f59e4249ba1e5000335819d0.png#pic_center" alt="package.json中看到依赖的库中包含有vue-wechat-title及版本号"></p><h2 id="2、在router文件夹下的router-js中增加title的配置"><a href="#2、在router文件夹下的router-js中增加title的配置" class="headerlink" title="2、在router文件夹下的router.js中增加title的配置"></a>2、在router文件夹下的router.js中增加title的配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter,createWebHistory &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>; <span class="comment">//引入vue-router组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span>;           <span class="comment">//引入需要路由管理的页面组件HelloWorld</span></span><br><span class="line"><span class="keyword">import</span> siteLogin <span class="keyword">from</span> <span class="string">'@/views/user/login'</span>;                 <span class="comment">//引入需要路由管理的页面组件login</span></span><br><span class="line"><span class="keyword">import</span> userInfo <span class="keyword">from</span> <span class="string">"@/views/user/userinfo"</span>;               <span class="comment">//引入需要路由管理的页面组件userinfo</span></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    history:createWebHistory(),</span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/'</span>,              <span class="comment">//路由的路径</span></span><br><span class="line">            name:<span class="string">'Home'</span>,           <span class="comment">//路由的名称</span></span><br><span class="line">            meta:&#123;</span><br><span class="line">                title: <span class="string">'首页'</span>       <span class="comment">//title配置</span></span><br><span class="line">            &#125;,</span><br><span class="line">            component:HelloWorld,  <span class="comment">//路由的组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/login'</span>,</span><br><span class="line">            name:<span class="string">'Login'</span>,</span><br><span class="line">            meta:&#123;</span><br><span class="line">                title:<span class="string">'登录'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            component:siteLogin,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/userinfo'</span>,</span><br><span class="line">            name:<span class="string">'UserInfo'</span>,</span><br><span class="line">            meta:&#123;</span><br><span class="line">                title: <span class="string">'用户信息'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            component:userInfo,</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>主要是在路由配置时设置了<code>meta:{title:&#39;xxxx&#39;}</code>如下图：<img src="https://img-blog.csdnimg.cn/f51d76a7abc14c27a1ea4ae0ac88dec1.png#pic_center" alt="router.js中增加title的配置"></p><h2 id="3、在App-vue页面中使用"><a href="#3、在App-vue页面中使用" class="headerlink" title="3、在App.vue页面中使用"></a>3、在App.vue页面中使用</h2><p>App.vue代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>  v-wechat-title=<span class="string">"$route.meta.title"</span>&gt;</span><br><span class="line">    &lt;router-view /&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'App'</span>,</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><p>主要是在<code>&lt;div id=&quot;app&quot;  v-wechat-title=&quot;$route.meta.title&quot;&gt;</code> 加入了<code>v-wechat-title=&quot;$route.meta.title&quot;</code></p><h2 id="4、在main-js中引用vue-wechat-title"><a href="#4、在main-js中引用vue-wechat-title" class="headerlink" title="4、在main.js中引用vue-wechat-title"></a>4、在main.js中引用vue-wechat-title</h2><p>在main.js中引用vue-wechat-title的时候有个坑，如果按照一般的引用会报错<br>mian.js代码示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router/router"</span>;  <span class="comment">//引入路由，会去找router下的router.js的配置文件</span></span><br><span class="line"><span class="keyword">import</span> VueWechatTitle <span class="keyword">from</span> <span class="string">'vue-wechat-title'</span>; <span class="comment">//引入VueWechatTitle</span></span><br><span class="line">createApp(App).use(router,VueWechatTitle).mount(<span class="string">'#app'</span>)  <span class="comment">//创建应用的时候应用路由</span></span><br></pre></td></tr></table></figure><p>在终端输入 npm run serve 将前端服务启动起来会报错！<br><font color=Red>Uncaught TypeError: Cannot read properties of undefined (reading ‘deep’)</font></p><p>原因是在挂载app示例前，vue-wechat-title还没有加载好，一定要先应用再挂载app<br>将createApp(App).use(router,VueWechatTitle).mount(‘#app’)删除或注释掉。改用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app=createApp(App);</span><br><span class="line">app.use(VueWechatTitle);</span><br><span class="line">app.use(router);</span><br><span class="line">app.mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><p>main.js的参考示例代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router/router"</span>;  <span class="comment">//引入路由，会去找router下的router.js的配置文件</span></span><br><span class="line"><span class="keyword">import</span> VueWechatTitle <span class="keyword">from</span> <span class="string">'vue-wechat-title'</span>; <span class="comment">//引入VueWechatTitle</span></span><br><span class="line"><span class="comment">//createApp(App).use(router,VueWechatTitle).mount('#app')  //指令定义在 mount('#app')之后，导致自定义指令未挂载到，会报错</span></span><br><span class="line"><span class="keyword">const</span> app=createApp(App);</span><br><span class="line">app.use(VueWechatTitle);</span><br><span class="line">app.use(router);</span><br><span class="line">app.mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><h2 id="5、验证效果-1"><a href="#5、验证效果-1" class="headerlink" title="5、验证效果"></a>5、验证效果</h2><p>在终端输入 npm run serve 将前端服务启动起来<br>看到访问不同的URL会显示不同的title<br><a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a><br><img src="https://img-blog.csdnimg.cn/d316421152e0479992022673d788b6c2.png#pic_center" alt="http://localhost:8080/的title"><br><a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a><br><img src="https://img-blog.csdnimg.cn/120ac7089ff74334867b640fdc552707.png#pic_center" alt="login的title登录"><br><a href="http://localhost:8080/userinfo" target="_blank" rel="noopener">http://localhost:8080/userinfo</a><br><img src="https://img-blog.csdnimg.cn/e86940b5e72d4385878f8eade5920759.png#pic_center" alt="userinfo的title用户信息"></p><p>本文通过以上实例实现了Vue3引入vue-router路由并设置页面Title，通过vue-router实现页面的路由，通过vue-wechat-title来设置页面的title都还比较方便。</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于用类似Vue前后端分离技术架构的单页应用页面之间的跳转没有非前后端分离那么来得直接，甚至连设置跳转页面的Title都要费一番周折，本文介绍Vue3引入vue-router路由并设置页面Title，通过vue-router实现页面的路由，通过vue-wechat-titl
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Vue" scheme="https://xiejava.gitee.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue快速入门</title>
    <link href="https://xiejava.gitee.io/posts/9277bcaa/"/>
    <id>https://xiejava.gitee.io/posts/9277bcaa/</id>
    <published>2022-07-03T02:02:07.000Z</published>
    <updated>2022-07-03T02:31:18.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、什么是Vue"><a href="#一、什么是Vue" class="headerlink" title="一、什么是Vue"></a>一、什么是Vue</h2><p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><p>1、独立版本<br>直接下载并用<code>&lt;script&gt;</code>标签引入<br>官网下载地址：<a href="https://cn.vuejs.org/js/vue.js" target="_blank" rel="noopener">https://cn.vuejs.org/js/vue.js</a><br>2、使用CDN<br>和独立版本类似，与独立版本的区别就是不用下载到本地应用，直接引用CDN加速以后的地址。缺点是如果是内网封闭环境不能用，国内CDN也不稳定，国外的CDN有时无法访问。如官网的<br><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js&quot;&gt;&lt;/script&gt;</code> 就无法访问。<br>几个比较稳定的CDN<br>Staticfile CDN（国内） : <a href="https://cdn.staticfile.org/vue/2.2.2/vue.min.js" target="_blank" rel="noopener">https://cdn.staticfile.org/vue/2.2.2/vue.min.js</a><br>unpkg：<a href="https://unpkg.com/vue@2.6.14/dist/vue.min.js。" target="_blank" rel="noopener">https://unpkg.com/vue@2.6.14/dist/vue.min.js。</a><br>cdnjs : <a href="https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.8/vue.min.js" target="_blank" rel="noopener">https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.8/vue.min.js</a><br>3、命令行工具<br>Vue 提供了一个官方的 CLI，为单页面应用 (SPA) 快速搭建繁杂的脚手架。它为现代前端工作流提供了开箱即用的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以及生产环境可用的构建版本。更多详情可查阅 Vue CLI 的文档。</p><h2 id="三、第一个Vue"><a href="#三、第一个Vue" class="headerlink" title="三、第一个Vue"></a>三、第一个Vue</h2><p>程序员学一门新的语音或框架，都是从hello world！开始的。来看一下Vue的hello world!<br>将vue.min.js下载到本地，在vue.min.js的目录下新建一个hellovue.html的文件，代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"vue.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="app"&gt;</span></span><br><span class="line"><span class="regexp">  &#123;&#123; message &#125;&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'Hello Vue!'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p>用浏览器打开，hello Vue! 成功的展现出来，第一个Vue就这么简单。<br><img src="https://img-blog.csdnimg.cn/30813985cd8b4dd183b83769da5758f1.png#pic_center" alt="hello Vue!"></p><p>在这里我们通过<code>&lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt;</code>引入了本地的vue.min.js，就可以用vue框架了。<br>通过<code>&lt;div id=&quot;app&quot;&gt;</code>构建了一个DOM元素div标签元素，id为app，`{{message}}` 是占位符，类似于大多数的模板语法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>在javascript代码中，定义了一个Vue对象，对象中构造了el和data两个参数。el是元素选择器，通过<code>#app</code>选择了<code>id=&quot;app&quot;</code>的div，data用来定义数据属性，这里定义了<code>massage:&#39;hellow Vue!&#39;</code>,通过`{{message}}`将数据hellow Vue显示输出。<br>可以用chrome浏览器的开发者工具打开控制台看到app.message的值为’hellow Vue!’。<br><img src="https://img-blog.csdnimg.cn/16b706a93fd64ddf92a84e98aaecb9c1.png#pic_center" alt="chrome浏览器的开发者工具调试"></p><p>可以通过修改这个变量的值而改变显示在浏览器的值。<br><img src="https://img-blog.csdnimg.cn/fa964684d0414f688fb8b47c667de5fd.png#pic_center" alt="修改值"></p><h2 id="四、常用基本语法"><a href="#四、常用基本语法" class="headerlink" title="四、常用基本语法"></a>四、常用基本语法</h2><p>模板语法<br>Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。<br>Vue.js 的核心是一个允许你采用简洁的模板语法来声明式的将数据渲染进 DOM 的系统。<br>结合响应系统，在应用状态改变时， Vue 能够智能地计算出重新渲染组件的最小代价并应用到 DOM 操作上</p><h3 id="插值文本"><a href="#插值文本" class="headerlink" title="插值文本"></a>插值文本</h3><p>数据绑定最常见的形式就是使用 `{{xxx}}`（双大括号）的文本插值：<br>正如我们的第一的Vue通过`{{ message }}`将文本值插入到占位符进行数据绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><h3 id="绑定输出html"><a href="#绑定输出html" class="headerlink" title="绑定输出html"></a>绑定输出html</h3><p>使用v-html 指令用于输出 html 代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app2:v-html指令输出html代码</span><br><span class="line">&lt;div id=<span class="string">"app2"</span>&gt;</span><br><span class="line">    &lt;div v-html=<span class="string">"message"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">var app2 = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">  el: '#app2',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    message: '&lt;b&gt;Hello Vue!&lt;/</span>b&gt;<span class="string">'</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>效果如下图所示：<br><img src="https://img-blog.csdnimg.cn/4d2866a052e44a0e981edf2cb02f93bd.png#pic_center" alt="v-html"></p><p>如果不用v-html插入，将<code>&lt;div id=&quot;app2&quot;&gt;</code>标签内容改成用文本插入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app2"</span>&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下，直接将html代码给显示出来了。<br><img src="https://img-blog.csdnimg.cn/b5da200f7fba41008b10e330e201951b.png#pic_center" alt="直接显示HTML代码"></p><h3 id="绑定属性"><a href="#绑定属性" class="headerlink" title="绑定属性"></a>绑定属性</h3><p>HTML 属性中的值应使用 v-bind 指令。<br>如插入绑定 a 标签的href属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app3:v-bind指令绑定属性值</span><br><span class="line">&lt;div id=<span class="string">"app3"</span>&gt;</span><br><span class="line">    &lt;a target=<span class="string">"_blank"</span> v-bind:href=<span class="string">"url"</span>&gt;click me go to myblog&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app3'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    url: <span class="string">'http://xiejava.ishareread.com/'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/baf17428d00746e98423c7ae951cc632.png#pic_center" alt="绑定属性"></p><h3 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h3><p>class 与 style 是 HTML 元素的属性，用于设置元素的样式，可以用 v-bind 来绑定设置样式属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app4:v-band:<span class="class"><span class="keyword">class</span>指令绑定样式</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span></span>=<span class="string">"app4"</span>&gt;</span><br><span class="line">  &lt;div v-bind:<span class="class"><span class="keyword">class</span></span>=<span class="string">"&#123; 'active': isActive &#125;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp">var app4=new Vue(</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app4',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    isActive:true</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>定义样式</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/75b0ed8a42dc4f6a86e5bb5fb5246e61.png#pic_center" alt="v-band:class"></p><h3 id="插值Javascript表达式"><a href="#插值Javascript表达式" class="headerlink" title="插值Javascript表达式"></a>插值Javascript表达式</h3><p>vue.js插值支持javascript表达式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">app5:vue.js插值的javascript表达式支持</span><br><span class="line">&lt;div id=<span class="string">"app5"</span>&gt;</span><br><span class="line">    &#123;&#123;<span class="number">5</span>+<span class="number">5</span>&#125;&#125;&lt;br&gt;</span><br><span class="line">    &#123;&#123; ok ? <span class="string">'YES'</span> : <span class="string">'NO'</span> &#125;&#125;&lt;br&gt;</span><br><span class="line">    &#123;&#123; message.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>) &#125;&#125;</span><br><span class="line">    &lt;div v-bind:id=<span class="string">"'list-' + id"</span>&gt;xiejava&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app5'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    ok: <span class="literal">true</span>,</span><br><span class="line">    message: <span class="string">'XIEJAVA'</span>,</span><br><span class="line">    id : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/8c77649827624c29913b8f1463a3679a.png#pic_center" alt="vue.js插值支持javascript表达式"></p><p>常用语句</p><h3 id="v-if-v-else-（条件语句）"><a href="#v-if-v-else-（条件语句）" class="headerlink" title="v-if v-else （条件语句）"></a>v-if v-else （条件语句）</h3><p>条件判断使用 v-if 指令，可以用 v-else 指令给 v-if 添加一个 “else” 块：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app6:v-<span class="keyword">if</span>条件语句</span><br><span class="line">&lt;div id=<span class="string">"app6"</span>&gt;</span><br><span class="line">&lt;div v-<span class="keyword">if</span>=<span class="string">"ok"</span>&gt;YES&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div v-else&gt;NO&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">var app6 = new Vue(&#123;</span></span><br><span class="line"><span class="regexp"> el:"#app6",</span></span><br><span class="line"><span class="regexp"> data:&#123;</span></span><br><span class="line"><span class="regexp"> ok:false,</span></span><br><span class="line"><span class="regexp"> &#125;</span></span><br><span class="line"><span class="regexp"> &#125;);</span></span><br></pre></td></tr></table></figure><p> 效果如下：<br><img src="https://img-blog.csdnimg.cn/5376029a58ea4efa9d28a89c1d4a8645.png#pic_center" alt="v-if v-else （条件语句）"></p><h3 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h3><p>循环使用 v-for 指令，v-for 可以绑定数据到数组来渲染一个列表</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app7"</span>&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-<span class="keyword">for</span>=<span class="string">"code in codes"</span>&gt;</span><br><span class="line">      &#123;&#123; code.name &#125;&#125;</span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>ol&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp">var app7=new Vue(</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app7',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    codes: [</span></span><br><span class="line"><span class="regexp">      &#123; name: 'java' &#125;,</span></span><br><span class="line"><span class="regexp">      &#123; name: 'python' &#125;,</span></span><br><span class="line"><span class="regexp">      &#123; name: 'php' &#125;</span></span><br><span class="line"><span class="regexp">    ]</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/c3fa12b69fb044d49541837216b8c1a4.png#pic_center" alt="for循环语句"></p><h3 id="v-on绑定事件"><a href="#v-on绑定事件" class="headerlink" title="v-on绑定事件"></a>v-on绑定事件</h3><p>事件监听可以使用 v-on 指令进行绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app8"</span>&gt;</span><br><span class="line">  &lt;button v-on:click=<span class="string">"counter += 1"</span>&gt;+<span class="number">1</span>&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">  &lt;p&gt;加了 &#123;&#123; counter &#125;&#125; 次1。&lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">var app8=new Vue(</span></span><br><span class="line"><span class="regexp">&#123;</span></span><br><span class="line"><span class="regexp"> el: '#app8',</span></span><br><span class="line"><span class="regexp">  data: &#123;</span></span><br><span class="line"><span class="regexp">    counter:0</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/448b65dc439f480aa86bd23a6ba1ecba.png#pic_center" alt="v-on绑定事件"></p><p><strong>以上全部示例代码如下：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.staticfile.org/vue/2.2.2/vue.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">app1:hello Vue!</span></span><br><span class="line"><span class="regexp">&lt;div id="app1"&gt;</span></span><br><span class="line"><span class="regexp">  &#123;&#123; message &#125;&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">app2:v-html指令输出html代码</span><br><span class="line">&lt;div id=<span class="string">"app2"</span>&gt;</span><br><span class="line">    &lt;div v-html=<span class="string">"message"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app3:v-bind指令绑定属性值</span></span><br><span class="line"><span class="regexp">&lt;div id="app3"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;a target="_blank" v-bind:href="url"&gt;click me go to myblog&lt;/</span>a&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app4:v-band:class指令绑定样式</span></span><br><span class="line"><span class="regexp">&lt;div id="app4"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div v-bind:class="&#123; 'active': isActive &#125;"&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app5:vue.js插值的javascript表达式支持</span></span><br><span class="line"><span class="regexp">&lt;div id="app5"&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123;5+5&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; ok ? 'YES' : 'NO' &#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; message.split('').reverse().join('') &#125;&#125;</span></span><br><span class="line"><span class="regexp">    &lt;div v-bind:id="'list-' + id"&gt;xiejava&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app6:v-if条件语句</span></span><br><span class="line"><span class="regexp">&lt;div id="app6"&gt;</span></span><br><span class="line"><span class="regexp">&lt;div v-if="ok"&gt;YES&lt;/</span>div&gt;</span><br><span class="line">&lt;div v-<span class="keyword">else</span>&gt;NO&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">app7:<span class="keyword">for</span>循环语句</span><br><span class="line">&lt;div id=<span class="string">"app7"</span>&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-<span class="keyword">for</span>=<span class="string">"code in codes"</span>&gt;</span><br><span class="line">      &#123;&#123; code.name &#125;&#125;</span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>ol&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">app8:v-on绑定事件</span></span><br><span class="line"><span class="regexp">&lt;div id="app8"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;button v-on:click="counter += 1"&gt;+1&lt;/</span>button&gt;</span><br><span class="line">  &lt;p&gt;加了 &#123;&#123; counter &#125;&#125; 次<span class="number">1</span>。&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> app1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app1'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'Hello Vue!'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app2'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'&lt;b&gt;Hello Vue!&lt;/b&gt;'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app3'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    url: <span class="string">'http://xiejava.ishareread.com/'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app4=<span class="keyword">new</span> Vue(</span><br><span class="line">&#123;</span><br><span class="line"> el: <span class="string">'#app4'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    isActive:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app5'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    ok: <span class="literal">true</span>,</span><br><span class="line">    message: <span class="string">'XIEJAVA'</span>,</span><br><span class="line">    id : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app6 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"> el:<span class="string">"#app6"</span>,</span><br><span class="line"> data:&#123;</span><br><span class="line"> ok:<span class="literal">false</span>,</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> app7=<span class="keyword">new</span> Vue(</span><br><span class="line">&#123;</span><br><span class="line"> el: <span class="string">'#app7'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    codes: [</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'java'</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'python'</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'php'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app8=<span class="keyword">new</span> Vue(</span><br><span class="line">&#123;</span><br><span class="line"> el: <span class="string">'#app8'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    counter:<span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">.active &#123;</span></span><br><span class="line"><span class="regexp">width: 100px;</span></span><br><span class="line"><span class="regexp">height: 100px;</span></span><br><span class="line"><span class="regexp">background: red;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><p>通过上面的快速入门，基本了解什么是VUE、VUE的安装及基本的使用，常用的语法。后面还要更深入的学习VUE的组件、路由、后台接口调用等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、什么是Vue&quot;&gt;&lt;a href=&quot;#一、什么是Vue&quot; class=&quot;headerlink&quot; title=&quot;一、什么是Vue&quot;&gt;&lt;/a&gt;一、什么是Vue&lt;/h2&gt;&lt;p&gt;Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Vue" scheme="https://xiejava.gitee.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm在用Django开发时debug模式启动失败显示can&#39;t find &#39;__main__&#39; module的解决方法</title>
    <link href="https://xiejava.gitee.io/posts/aebdf141/"/>
    <id>https://xiejava.gitee.io/posts/aebdf141/</id>
    <published>2022-06-06T00:56:51.000Z</published>
    <updated>2022-06-06T00:58:34.976Z</updated>
    
    <content type="html"><![CDATA[<p>初次用Django开发web应用，在试图用Pycharm进行debug的时候，出现了一个奇怪的问题。以正常模式启动或者在terminal启动都没有问题。但是以debug模式启动时，显示<code>can&#39;t find &#39;__main__&#39; module”</code>报错。在网上找了很久都没有看到解决方法，最后在某乎上看到一篇文章，在启动时加上<code>--noreload</code>参数，既可以debug模式启动。</p><p><strong>报错信息：</strong><br><img src="https://img-blog.csdnimg.cn/f7a094b8e85c45dc841fdc4ff77a8698.png#pic_center" alt="报错信息"><br><strong>解决方法：</strong><br>在启动时加上 <code>--noreload</code> 参数可以正常启动调试<br><img src="https://img-blog.csdnimg.cn/3ade987b7c1040d7b504eb36871a7b37.png#pic_center" alt="加入不重新加载参数"></p><p>debug启动正常也可以调试了。<br><img src="https://img-blog.csdnimg.cn/c4993ebff26a4d80a43538bb8fcb9e71.png#pic_center" alt="debug正常启动"></p><p>踩过的坑记录一下，希望能帮到碰到同样问题的人。</p><p>感谢大佬的文章 <a href="https://zhuanlan.zhihu.com/p/443763989" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/443763989</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;初次用Django开发web应用，在试图用Pycharm进行debug的时候，出现了一个奇怪的问题。以正常模式启动或者在terminal启动都没有问题。但是以debug模式启动时，显示&lt;code&gt;can&amp;#39;t find &amp;#39;__main__&amp;#39; modul
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python使用BeautifulSoup4修改网页内容实战</title>
    <link href="https://xiejava.gitee.io/posts/1ca32c3a/"/>
    <id>https://xiejava.gitee.io/posts/1ca32c3a/</id>
    <published>2022-05-18T13:45:28.000Z</published>
    <updated>2022-05-18T13:54:53.495Z</updated>
    
    <content type="html"><![CDATA[<p>最近有个小项目，需要爬取页面上相应的资源数据后，保存到本地，然后将原始的HTML源文件保存下来，对HTML页面的内容进行修改将某些标签整个给替换掉。</p><p>对于这类需要对HTML进行操作的需求，最方便的莫过于<strong>BeautifulSoup4</strong>的库了。</p><p>样例的HTML代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"videoslide"</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/1381824922.JPG"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/1381824922_zy_compress.JPG"</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_location_201310151613422786"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第一张_1381824798.JPG"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_image_201310151613169945"</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第一张_1381824798_zy_compress.JPG"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第二张_1381824796.jpg"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_image_201310151613163009"</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第二张_1381824796_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第三张.jpg"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"zy_image_201312311838584446"</span> <span class="attr">src</span>=<span class="string">"http://www.test.com/wp-content/uploads/1020/第三张_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里主要包括了<code>&lt;a &gt;</code>标签，<code>&lt;a &gt;</code>标签里面嵌入了<code>&lt;img &gt;</code>标签，其中有<code>&lt;a class=&quot;videoslide&quot;&gt;</code>的标识该标签实际是可以播放动画的。需要根据<code>class=&quot;videoslide&quot;</code> 来判断将整个<code>&lt;a &gt;</code>标签换成播放器的<code>&lt;video &gt;</code>标签，将没有<code>class=&quot;videoslide&quot;</code> 的<code>&lt;a &gt;</code>标签换成<code>&lt;figure&gt;</code>标签。</p><p>也就是将带有的<code>&lt;a class=&quot;videoslide&quot; ...&gt;&lt;img ... /&gt;&lt;/a&gt;</code>标签换成 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">poster</span>=<span class="string">"视频链接的图片地址.jpg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"视频文件的静态地址.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> /&gt;</span></span><br><span class="line">    您的浏览器不支持H5视频，请使用Chrome/Firefox/Edge浏览器。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将<code>&lt;a ....&gt;&lt;img .../&gt;&lt;/a&gt;</code>标签换成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt; <span class="attr">img</span> <span class="attr">src</span>=<span class="string">"图片地址_compressed.jpg"</span> <span class="attr">data-zy-media-id</span>=<span class="string">"图片地址.jpg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>文字说明（如果有）<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里通过BeautifulSoup4 的select()方法找到标签，通过get()方法获取标签及标签属性值，通过replaceWith来替换标签，具体代码如下：<br>首先安装BeautifulSoup4的库，BeautifulSoup4库依赖于lxml库，所以也需要安装lxml库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install bs4</span><br><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><p>具体代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">htmlstr=<span class="string">'&lt;html&gt;&lt;body&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a class="videoslide" href="http://www.test.com/wp-content/uploads/1020/1381824922.JPG"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img src="http://www.test.com/wp-content/uploads/1020/1381824922_zy_compress.JPG" data-zy-media-id="zy_location_201310151613422786"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a href="http://www.test.com/wp-content/uploads/1020/第一张_1381824798.JPG"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img data-zy-media-id="zy_image_201310151613169945" src="http://www.test.com/wp-content/uploads/1020/第一张_1381824798_zy_compress.JPG"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a href="http://www.test.com/wp-content/uploads/1020/第二张_1381824796.jpg"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img data-zy-media-id="zy_image_201310151613163009" src="http://www.test.com/wp-content/uploads/1020/第二张_1381824796_zy_compress.jpg"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;a href="http://www.test.com/wp-content/uploads/1020/第三张.jpg"&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;img data-zy-media-id="zy_image_201312311838584446" src="http://www.test.com/wp-content/uploads/1020/第三张_zy_compress.jpg"/&gt;&lt;/a&gt;'</span> \</span><br><span class="line">        <span class="string">'&lt;/body&gt;&lt;/html&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">procHtml</span><span class="params">(htmlstr)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(htmlstr, <span class="string">'lxml'</span>)</span><br><span class="line">    a_tags=soup.select(<span class="string">'a'</span>)</span><br><span class="line">    <span class="keyword">for</span> a_tag <span class="keyword">in</span> a_tags:</span><br><span class="line">        a_tag_src = a_tag.get(<span class="string">'href'</span>)</span><br><span class="line">        a_tag_filename = os.path.basename(a_tag_src)</span><br><span class="line">        a_tag_path = os.path.join(<span class="string">'src'</span>, a_tag_filename)</span><br><span class="line">        a_tag[<span class="string">'href'</span>]=a_tag_path</span><br><span class="line">        next_tag=a_tag.next</span><br><span class="line">        <span class="comment">#判断是视频还是图片，如果a标签带了class="videoslide" 是视频否则是图片</span></span><br><span class="line">        <span class="keyword">if</span> a_tag.get(<span class="string">'class'</span>) <span class="keyword">and</span> <span class="string">'videoslide'</span>==a_tag.get(<span class="string">'class'</span>)[<span class="number">0</span>]:</span><br><span class="line">            <span class="comment"># 处理视频文件</span></span><br><span class="line">            media_id = next_tag.get(<span class="string">'data-zy-media-id'</span>)</span><br><span class="line">            <span class="keyword">if</span> media_id:</span><br><span class="line">                media_url = <span class="string">'http://www.test.com/travel/show_media/'</span> + str(media_id)+<span class="string">'.mp4'</span></span><br><span class="line">                media_filename = os.path.basename(media_url)</span><br><span class="line">                media_path = os.path.join(<span class="string">'src'</span>, media_filename)</span><br><span class="line">                <span class="comment"># 将div.video标签替换a标签</span></span><br><span class="line">                video_html = <span class="string">'&lt;div class=\"video\"&gt;&lt;video controls width = \"100%\" poster = \"'</span> + a_tag_path + <span class="string">'\" &gt;&lt;source src = \"'</span> + media_path + <span class="string">'\" type = \"video/mp4\" /&gt; 您的浏览器不支持H5视频，请使用Chrome / Firefox / Edge浏览器。 &lt;/video&gt;&lt;/div&gt;'</span></span><br><span class="line">                video_soup = BeautifulSoup(video_html, <span class="string">'lxml'</span>)</span><br><span class="line">                a_tag.replaceWith(video_soup.div)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#获取图片信息</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'img'</span>==next_tag.name:</span><br><span class="line">                img_src=next_tag.get(<span class="string">'src'</span>)</span><br><span class="line">                <span class="comment"># 判断是否路径是否为本地资源 data:image和file:</span></span><br><span class="line">                <span class="keyword">if</span> img_src.find(<span class="string">'data:image'</span>) == <span class="number">-1</span> <span class="keyword">and</span> img_src.find(<span class="string">'file:'</span>) == <span class="number">-1</span>:</span><br><span class="line">                    img_filename = os.path.basename(img_src)</span><br><span class="line">                    img_path = os.path.join(<span class="string">'src'</span>, img_filename)</span><br><span class="line">                    <span class="comment"># 将&lt;figure&gt;&lt;img&gt;标签替换a标签</span></span><br><span class="line">                    figcaption=<span class="string">''</span></span><br><span class="line">                    figure_html=<span class="string">'&lt;figure&gt;&lt;img src=\"'</span>+img_path+<span class="string">'\" data-zy-media-id=\"'</span>+a_tag_path+<span class="string">'\"&gt;&lt;figcaption&gt;'</span>+figcaption+<span class="string">'&lt;/figcaption&gt;&lt;/figure&gt;'</span></span><br><span class="line">                    figure_soup = BeautifulSoup(figure_html, <span class="string">'lxml'</span>)</span><br><span class="line">                    a_tag.replaceWith(figure_soup.figure)</span><br><span class="line">    html_content = soup.contents[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> html_content</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pro_html_str=procHtml(htmlstr)</span><br><span class="line">    print(pro_html_str)</span><br></pre></td></tr></table></figure><p>结果:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">poster</span>=<span class="string">"src\1381824922.JPG"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"src\zy_location_201310151613422786.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>/&gt;</span> 您的浏览器不支持H5视频，请使用Chrome / Firefox / Edge浏览器。 </span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"src\第一张_1381824798.JPG"</span> <span class="attr">src</span>=<span class="string">"src\第一张_1381824798_zy_compress.JPG"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"src\第二张_1381824796.jpg"</span> <span class="attr">src</span>=<span class="string">"src\第二张_1381824796_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-zy-media-id</span>=<span class="string">"src\第三张.jpg"</span> <span class="attr">src</span>=<span class="string">"src\第三张_zy_compress.jpg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近有个小项目，需要爬取页面上相应的资源数据后，保存到本地，然后将原始的HTML源文件保存下来，对HTML页面的内容进行修改将某些标签整个给替换掉。&lt;/p&gt;
&lt;p&gt;对于这类需要对HTML进行操作的需求，最方便的莫过于&lt;strong&gt;BeautifulSoup4&lt;/stron
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="https://xiejava.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>网络安全设备-认识运维安全管理与审计系统（堡垒机）</title>
    <link href="https://xiejava.gitee.io/posts/9c723d09/"/>
    <id>https://xiejava.gitee.io/posts/9c723d09/</id>
    <published>2022-05-11T02:09:49.000Z</published>
    <updated>2022-05-11T02:11:45.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、什么是运维安全管理与审计系统"><a href="#一、什么是运维安全管理与审计系统" class="headerlink" title="一、什么是运维安全管理与审计系统"></a>一、什么是运维安全管理与审计系统</h2><p>运维安全管理与审计系统（俗称 “堡垒机”）：是采用新一代智能运维技术框架，基于认证、授权、访问、审计的管理流程设计理念，实现对企事业IT中心的网络设备、数据库、安全设备、主机系统、中间件等资源统一运维管理和审计；通过集中化运维管控、运维过程实时监管、运维访问合规性控制、运维过程图形化审计等功能，为企事业IT中心运维构建一套事前预防、事中监控、事后审计完善的安全管理体系。</p><p>简单的说，运维安全管理与审计系统（堡垒机）就是用来控制哪些人可以登录哪些资产（事先防范和控制），以及录像记录登录资产后做了什么事情（事中监控和事后溯源）的系统。其核心是<strong>可控及审计</strong>。可控是指权限可控、行为可控。权限可控指可以方便的设置、回收运维操作人员的权限；行为可控，比如需要集中禁用某个危险命令；可审计，指有权限操作的人员对资产的所有操作都有记录，能够被监控和审计。</p><h2 id="二、为什么需要运维安全管理与审计系统"><a href="#二、为什么需要运维安全管理与审计系统" class="headerlink" title="二、为什么需要运维安全管理与审计系统"></a>二、为什么需要运维安全管理与审计系统</h2><p>当企业的IT资产越来越多，当参与运维的岗位越来越多样性，运维团队达到一定的规模，不同的人员如运维人员、开发人员、第三方代维、厂商支撑人员需要控制访问不同的资产及权限，如果没有一套好的机制，就会产生混乱。无法有效的做到“哪些人允许以什么样的身份访问哪些设备”，更加没有办法知道“哪些人登录设备后做了哪些事情”，出了问题以后无法回溯。<br><img src="https://img-blog.csdnimg.cn/61d6f515885d4c74ae6d342ac0ab4015.png#pic_center" alt="运维混乱"><br>运维安全管理与审计系统（堡垒机）是从跳板机（也叫前置机）的概念演变过来的。早在2000年左右，一些中大型企业为了能对运维人员的远程登录进行集中管理，会在机房部署一台跳板机。跳板机其实就是一台unix/linux/windows操作系统的服务器，所有运维人员都需要先远程登录跳板机，然后再从跳板机登录其他服务器中进行运维操作。<br><img src="https://img-blog.csdnimg.cn/00cc957a3657410288d824c41fe4cd68.png#pic_center" alt="跳板机"><br>跳板机解决了远程登录集中管理访问的问题，但跳板机并没有实现对运维人员操作行为的控制和审计，使用跳板机过程中还是会有误操作、违规操作导致的操作事故，一旦出现操作事故很难快速定位原因和责任人。此外，跳板机存在严重的安全风险，一旦跳板机系统被攻入，则将后端资源风险完全暴露无遗。同时，对于个别资源（如telnet）可以通过跳板机来完成一定的内控，但是对于更多更特殊的资源（ftp、rdp等）来讲就显得力不从心了。</p><p>人们逐渐认识到跳板机的不足，进而需要更新、更好的安全技术理念来实现运维操作管理。需要一种能满足角色管理与授权审批、信息资源访问控制、操作记录和审计、系统变更和维护控制要求，并生成一些统计报表配合管理规范来不断提升IT内控的合规性的产品。在这些理念的指导下，2005年前后，运维安全管理与审计系统（堡垒机）开始以一个独立的产品形态被广泛部署，有效地降低了运维操作风险，使得运维操作管理变得更简单、更安全。<br><img src="https://img-blog.csdnimg.cn/4cc408b9ee8046e689f8072a4b644d91.png#pic_center" alt="在这里插入图片描述"></p><p>运维安全管理与审计系统（堡垒机）承担了运维人员在运维过程中唯一的入口，通过精细化授权以明确“哪些人以什么身份访问了哪些设备”，从而让运维混乱变得有序起来，堡垒机不仅可以明确每一个运维人员的访问路径，还可以将每一次访问及操作过程变得可以“审计”，就像飞机中的黑匣子，汽车上的行车记录仪，能够做到针对运维人员的每次一操作均可以录像、全程审计，一但出了问题，可以追踪溯源。</p><p>运维安全管理与审计系统的目标可以概括为5W，主要是为了降低运维风险。具体如下：</p><ul><li>审计：你做了什么？（What） </li><li>授权：你能做哪些？（Which） </li><li>账号：你要去哪？（Where） </li><li>认证：你是谁？（Who）</li><li>来源：访问时间？（When）</li></ul><p>运维安全管理与审计系统实现：</p><ul><li>事前预防：建立“自然人-资源-资源账号”关系，实现统一认证和授权 </li><li>事中控制：建立“自然人-操作-资源”关系，实现操作审计和控制</li><li>事后审计：建立“自然人-资源-审计日志”关系，实现事后溯源和责任界定</li></ul><h2 id="三、运维安全管理与审计系统原理"><a href="#三、运维安全管理与审计系统原理" class="headerlink" title="三、运维安全管理与审计系统原理"></a>三、运维安全管理与审计系统原理</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>运维安全管理与审计系统（堡垒机），主要采用4A管理模型，对IT运维操作进行访问控制和行为审计的合规性管控系统，主要用来解决企业IT运维部门账号管理混乱，身份冒用、滥用，授权控制不明确，操作行为不规范，事件责任无法定位等问题。<br><strong>4A 是指认证 Authentication、授权 Authorization、账号 Account、审计 Audit</strong>，中文名称为统一安全管理平台解决方案。即将身份认证、授权、记账和审计定义为网络安全的四大组成部分，从而确立了身份认证在整个网络安全系统中的地位与作用。<br>具体来说：</p><ul><li>集中认证 (authentication) 管理<br>可以根据用户应用的实际需要，为用户提供不同强度的认证方式，既可以保持原有的静态口令方式，又可以提供具有双因子认证方式的高强度认证（一次性口令、数字证书、动态口令），而且还能够集成现有其它如生物特征等新型的认证方式。不仅可以实现用户认证的统一管理，并且能够为用户提供统一的认证门户，实现企业信息资源访问的单点登录。</li><li>集中权限 (authorization) 管理<br>可以对用户的资源访问权限进行集中控制。它既可以实现对 B/S、C/S 应用系统资源的访问权限控制，也可以实现对数据库、主机及网络设备的操作的权限控制，资源控制类型既包括 B/S 的 URL、C/S 的功能模块，也包括数据库的数据、记录及主机、网络设备的操作命令、IP 地址及端口。</li><li>集中帐号（account）管理<br>为用户提供统一集中的帐号管理，支持管理的资源包括主流的操作系统、网络设备和应用系统；不仅能够实现被管理资源帐号的创建、删除及同步等帐号管理生命周期所包含的基本功能，而且也可以通过平台进行帐号密码策略，密码强度、生存周期的设定。</li><li>集中审计 (audit) 管理<br>将用户所有的操作日志集中记录管理和分析，不仅可以对用户行为进行监控，并且可以通过集中的审计数据进行数据挖掘，以便于事后的安全事故责任的认定。</li></ul><h3 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h3><p>实现的技术架构如下：<br><img src="https://img-blog.csdnimg.cn/7e0d1a91a53e42acb6080966f67cb1f9.png#pic_center" alt="堡垒机技术架构"></p><h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><p>主要核心功能包括：<br><strong>1、访问控制</strong><br>通过对访问资源的严格控制，堡垒机可以确保运维人员在其账号有效权限、期限内合法访问操作资源，降低操作风险，以实现安全监管目的，保障运维操作人员的安全、合法合规、可控制性。<br><strong>2、账号管理</strong><br>当运维人员在使用堡垒机时，无论是使用云主机还是局域网的主机，都可以同步导入堡垒机进行账号集中管理与密码的批量修改，并可一键批量设置SSH秘钥对等。<br><strong>3、资源授权</strong><br>支持云主机、局域网主机等多种形式的主机资源授权，并且堡垒机采用基于角色的访问控制模型，能够对用户、资源、功能作用进行细致化的授权管理，解决人员众多、权限交叉、资产繁琐、各类权限复制等众多运维人员遇到的运维难题。<br><strong>4、指令审核</strong><br>对运维人员的账号使用情况，包括登录、资源访问、资源使用等。针对敏感指令，堡垒机可以对非法操作进行阻断响应或触发审核的操作情况，审核未通过的敏感指令，堡垒机将进行拦截。<br><strong>5、审计录像</strong><br>除了可以提供安全层面外，还可以利用堡垒机的事前权限授权、事中敏感指令拦截外，以及堡垒机事后运维审计的特性。运维人员在堡垒机中所进行的运维操作均会以日志的形式记录，管理者即通过日志对微云人员的操作进行安全审计录像。<br><strong>6、身份认证</strong><br>为运维人员提供不同强度的认证方式，既可以保持原有的静态口令方式，还可以提供微信、短信等认证方式。堡垒机不仅可以实现用户认证的统一管理，还能为运维人员提供统一一致的认证门户，实现企业的信息资源访问的单点登录。<br><strong>7、操作审计</strong><br>将运维人员所有操作日志集中管理与分析，不仅可以对用户行为进行监控与拦截，还可以通过集中的安全审计数据进行数据挖掘，以便于运维人员对安全事故的操作审计认定。</p><h2 id="四、运维安全管理与审计系统部署方式"><a href="#四、运维安全管理与审计系统部署方式" class="headerlink" title="四、运维安全管理与审计系统部署方式"></a>四、运维安全管理与审计系统部署方式</h2><h3 id="1、单机部署"><a href="#1、单机部署" class="headerlink" title="1、单机部署"></a>1、单机部署</h3><p>堡垒机主要都是旁路部署，旁挂在交换机旁边，只要能访问所有设备即可。<br>部署特点：<br>旁路部署，逻辑串联。<br>不影响现有网络结构。<br><img src="https://img-blog.csdnimg.cn/893c5d5192bd4839b0f37c19972b0c2f.png#pic_center" alt="单机部署"></p><h3 id="2、HA高可靠部署"><a href="#2、HA高可靠部署" class="headerlink" title="2、HA高可靠部署"></a>2、HA高可靠部署</h3><p>旁路部署两台堡垒机，中间有心跳线连接，同步数据。对外提供一个虚拟IP。用户通过堡垒机虚拟IP进行访问，堡垒机自动进行会话负载分配和数据同步、冗余存储。<br>部署特点：<br>两台硬件堡垒机，一主一备/提供VIP。<br>当主机出现故障时，备机自动接管服务。<br><img src="https://img-blog.csdnimg.cn/428a3252913d4633bfdfe5ea58c07486.png#pic_center" alt="HA高可靠部署"></p><h2 id="五、常见运维安全管理与审计系统产品"><a href="#五、常见运维安全管理与审计系统产品" class="headerlink" title="五、常见运维安全管理与审计系统产品"></a>五、常见运维安全管理与审计系统产品</h2><h3 id="商用"><a href="#商用" class="headerlink" title="商用"></a>商用</h3><p>奇安信[运维安全管理与审计系统]：<a href="https://www.qianxin.com/product/detail/pid/385" target="_blank" rel="noopener">https://www.qianxin.com/product/detail/pid/385</a><br>亚信安全[信磐堡垒机]：<a href="https://www.asiainfo-sec.com/product/detail-27.html" target="_blank" rel="noopener">https://www.asiainfo-sec.com/product/detail-27.html</a><br>绿盟[绿盟运维安全管理系统]：<a href="https://www.nsfocus.com.cn/html/2019/212_0926/20.html" target="_blank" rel="noopener">https://www.nsfocus.com.cn/html/2019/212_0926/20.html</a><br>启明星辰[堡垒机]：<a href="https://www.venustech.com.cn/new_type/blj/" target="_blank" rel="noopener">https://www.venustech.com.cn/new_type/blj/</a></p><h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><p>麒麟堡垒机：<a href="http://www.secvpn.com.cn/" target="_blank" rel="noopener">http://www.secvpn.com.cn/</a><br>飞致JumpServer堡垒机：<a href="https://fit2cloud.com/jumpserver/index.html" target="_blank" rel="noopener">https://fit2cloud.com/jumpserver/index.html</a></p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、什么是运维安全管理与审计系统&quot;&gt;&lt;a href=&quot;#一、什么是运维安全管理与审计系统&quot; class=&quot;headerlink&quot; title=&quot;一、什么是运维安全管理与审计系统&quot;&gt;&lt;/a&gt;一、什么是运维安全管理与审计系统&lt;/h2&gt;&lt;p&gt;运维安全管理与审计系统（俗称
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全之信息系统安全保障</title>
    <link href="https://xiejava.gitee.io/posts/61446357/"/>
    <id>https://xiejava.gitee.io/posts/61446357/</id>
    <published>2022-04-29T06:39:23.000Z</published>
    <updated>2022-04-29T06:58:02.006Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、信息系统安全保障相关概念"><a href="#一、信息系统安全保障相关概念" class="headerlink" title="一、信息系统安全保障相关概念"></a>一、信息系统安全保障相关概念</h2><p>信息系统是用于采集、处理、存储、传输、分发和部署信息的整个基础设施、组织结构、人员和组件的总和。随着当前社会信息化程度的不断提高，各类信息系统越来越成为其所从属的组织机构生存和发展的关键因素，信息系统的安全风险也成为组织风险的一部分。同时，信息系统受来自于组织内部与外部环境的约束，信息系统的安全保障除了要充分分析信息系统本身的技术、业务、管理等特性，还要考虑这些约束条件所产生的要求。为了保障组织机构完成使命，系统安全管理人员必须针对信息系统面临的各种各样的风险制定相应的策略。</p><p>信息系统安全保障是在信息系统的整个生命周期中，通过对信息系统的风险分析，制定并执行相应的安全保障策略，从技术、管理、工程和人员等方面提出信息安全保障要求，确保信息系统的保密性、完整性和可用性，把安全风险降到可接受的程度，从而保障系统能够顺利实现组织机构的使命。</p><p>信息系统安全保障工作就是针对信息系统在运行环境中所面临的各种风险，制定信息安全保障策略体系，在策略指导下，设计并实现信息安全保障架构或模型，采取技术、管理等安全保障措施，将风险降至预定可接受的程度，从而保障其使命要求。策略体系是组织机构在对风险、资产和使命综合理解的基础上所做出的指导文件。策略体系的制定，反映了组织机构对信息系统安全保障及其目标的理解，它的制定和贯彻执行对组织机构信息系统安全保障起着纲领性的指导作用。<br><img src="https://img-blog.csdnimg.cn/cf12dd4422694467ab47e9df821cf441.png#pic_center" alt="信息系统安全概念和关系" title="信息系统安全概念和关系"></p><p>信息系统安全保障工作的基础和前提是风险管理。信息安全策略必须以风险管理为基础，针对可能存在的各种威胁和自身存在的弱点，采取有针对性的防范措施。</p><h2 id="二、信息系统安全保障模型"><a href="#二、信息系统安全保障模型" class="headerlink" title="二、信息系统安全保障模型"></a>二、信息系统安全保障模型</h2><p>信息系统安全保障模型包含保障要素、生命周期和安全特征3个方面。<br><img src="https://img-blog.csdnimg.cn/8628a0d24f8546279025e516ff5821d5.png#pic_center" alt="信息系统安全保障模型" title="信息系统安全保障模型"></p><p>信息系统安全保障模型的主要思路是以风险和策略为基础，在整个信息系统的生命周期中实施技术、管理、工程和人员保障要素。通过信息系统安全保障实现信息安全的安全特征：信息的保密性、完整性和可用性特征，从而达到保障组织机构执行其使命的根本目的。</p><p>模型特点：</p><ul><li>将风险和策略作为信息系统安全保障的基础和核心。</li><li>强调信息系统安全保障应贯穿于整个信息系统生命周期的全过程。</li><li>强调综合保障的观念。通过综合技术、管理、工程和人员要素来保障信息系统安全。</li></ul><h3 id="1、基于信息系统生命周期的信息安全保障"><a href="#1、基于信息系统生命周期的信息安全保障" class="headerlink" title="1、基于信息系统生命周期的信息安全保障"></a>1、基于信息系统生命周期的信息安全保障</h3><p>信息系统的生命周期层面和保障要素层面不是相互孤立的，而是相互关联、密不可分的。<br><img src="https://img-blog.csdnimg.cn/9c35a3d5b9f84a1ba76d13d505998e89.png#pic_center" alt="信息系统安全保障生命周期的安全保障要素" title="信息系统安全保障生命周期的安全保障要素"></p><p>在信息系统生命周期模型中，将信息系统的整个生命周期抽象成计划组织、开发采购、实施交付、运行维护和废弃5个阶段，加上在运行维护阶段的变更产生的反馈，形成信息系统生命周期完整的闭环结构。在信息系统生命周期中的任何时间点上，都需要综合信息系统安全保障的技术、管理、工程和人员保障要素。</p><ul><li>计划组织阶段 ：根据组织机构的业务要求、法律法规的要求、系统所存在的风险等因素，产生了信息系统安全保障需求。在此阶段，信息安全策略应加入信息系统建设和使用的决策中。从信息系统建设开始，就应该综合考虑系统的安全保障要求，确保信息系统建设和信息系统安全保障建设同步规划、同步实施。也就是我们平时讲的信息系统和安全保障要“三同步”–同步规划、同步建设、同步使用。</li><li>开发采购阶段：此阶段是计划组织阶段的细化和具体体现。在此阶段中，进行系统安全需求分析、系统安全体系设计以及相关预算申请和项目准备等活动。在此阶段，应克服传统拘泥于具体技术的片面性，要综合考虑系统的风险和安全策略，将信息系统安全保障作为一个个整体，进行系统地设计，建立信息系统安全保障整体规划和全局视野。组织机构可根据具体要求，对系统整体的技术、管理安全保障规划或设计进行评估，以保证对信息系统的整体规划满足组织机构的建设要求和相关国家与行业的要求。</li><li>实施交付阶段：在此阶段，组织机构可通过对承建方进行信息安全服务资格要求和人员专业资格要求以确保施工组织的服务能力；组织机构还可通过信息系统安全保障工程保障对实施施工过程进行监理和评估,最终确保所交付系统的安全性。</li><li>运行维护阶段：信息系统进人运行维护阶段后，对信息系统的管理、运行维护和使用人员的能力等方面进行综合保障,是信息系统得以安全正常运行的根本保证。</li><li>变更：信息系统投入运行后并不是- - 成不变的，它随着业务和需求的变更、外界环境的变更产生新的要求或增强原有的要求，重新进人信息系统组织计划阶段(即规划阶段)。</li><li>废弃阶段：当信息系统不再满足业务要求时，信息系统进入废弃阶段，在这个阶段，需要考虑信息安全销毁等要素。</li></ul><p>这样，通过在信息系统生命周期所有阶段融人信息系统安全保障概念，确保了信息系统的持续动态安全保障。</p><h3 id="2、信息安全保障要素"><a href="#2、信息安全保障要素" class="headerlink" title="2、信息安全保障要素"></a>2、信息安全保障要素</h3><h4 id="1）信息安全技术"><a href="#1）信息安全技术" class="headerlink" title="1）信息安全技术"></a>1）信息安全技术</h4><p>信息安全技术体系包括以下几个方面。</p><ul><li>密码技术：密码技术及应用涵盖了数据处理过程的各个环节，如数据加密、密码分析、数字签名、身份识别、秘密分享等。通过以密码学为核心的信息安全理论与技术保证数据的机密性和完整性等要求。<br>访问控制技术：在为用户对系统资源提供最大限度共享的基础上，对用户的访问权进行管理，防止对信息的非授权篡改和滥用。访问控制对经过身份鉴别后的合法用户提供所需要的且经过授权的服务,拒绝用户越权的服务请求，保证用户在系统安全策略下有序工作。</li><li>审计和监控技术：审计是事后认定违反安全规则行为的分析技术，在检测违反安全规则方面、准确发现系统发生的事件以及对事件发生的事后分析方面，审计都发挥着巨大的作用。审计技术的发展，来源于对访问的跟踪，这些访问包括对保存在计算机系统中敏感及重要信息的访问和对计算机系统资源的访问。网络安全监控包括主动监控和被动监控。它依赖于在任何给定时间内网络组件和检测器记录下已经发生的事情，接收日志信息，并对它进行分析。</li><li>网络安全技术：这些技术包括网络协议安全、防火墙技术、人侵检测系统/人侵防御系统( Intrusion Detection System/Intrusion Prevention System, IDS/IPS )安全管理平台( Security Operations Center， SOC )、统一威胁管理( Unified Threat Management, UTM )等。网络安全技术主要是保护网络的安全，防止入侵攻击行为的发生。防火墙是一个位于可信网络和不可信网络之间的边界防护系统。防病毒网关防止基于HTTP/FTP/SMTP/POP3/HTTPS等网络协议侵人网络内部的病毒进行过滤。人侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报措施的网络安全设备。人侵防御系统是监视网络传输行为的安全技术，它能够即时地中断、调整或隔离一些异常或是具有伤害性的网络传输行为。</li><li>操作系统与数据库安全技术：操作系统安全技术主要包括身份鉴别、访问控制 、文件系统安全、安全审计等方面。数据库安全技术包括数据库的安全特性和安全功能，数据库完整性要求和备份恢复，以及数据库安全防护、安全监控和安全审计等。</li><li>安全漏洞与恶意代码：包括安全漏洞的成因、分类、发掘方法，以及如何修复等;以及恶意代码的加载、隐藏和自我保护技术,恶意代码的检测原理及清除方法等。</li><li>软件安全开发：包括软件安全开发模型、软件安全开发关键阶段的安全控制措施等内容。</li></ul><h4 id="2）信息安全管理"><a href="#2）信息安全管理" class="headerlink" title="2）信息安全管理"></a>2）信息安全管理</h4><p>信息安全管理体系，是组织在整体或特定范围内建立信息安全方针和目标，以及完成这些目标所用方法的体系。基于对业务风险的认识、ISMS包括建立、实施、操作、监视、复查、维护和改进信息安全等一系列的管 理活动，并且表现为组织结构、策略方针、计划活动、目标与原则、人员与责任、过程与方法、资源等诸多要素的集合。</p><p>风险管理是指以风险为主线进行信息安全的管理，它的实施目标就是要依据安全标准和信息系统的安全需求，对信息、信息载体、信息环境进行安全管理，以达到安全目标。</p><p>风险管理贯穿于整个信息系统生命周期，包括对象确立、风险评估、风险控制、审核批准、监控与审查、沟通与咨询等6个方面的内容。其中，对象确立、风险评估、风险控制和审核批准是信息安全风险管理的4个基本步骤，监控与审查、沟通与咨询则贯穿于这4个基本步骤中。</p><h4 id="3）信息安全工程"><a href="#3）信息安全工程" class="headerlink" title="3）信息安全工程"></a>3）信息安全工程</h4><p>信息安全工程涉及系统和应用的开发、集成、操作、管理、维护和进化以及产品的开发、交付和升级。</p><p>系统安全工程能力成熟模型(Systems Security Engineering Capability Maturity Model，SSE-CMM)描述了一个组织的系统安全工程过程必须包含的基本特征。这些特征是完善的安全工程保证，也是系统安全工程实施的度量标准，同时还是一个易于理解的评估系统安全工程实施的框架。</p><h4 id="4）信息安全人才"><a href="#4）信息安全人才" class="headerlink" title="4）信息安全人才"></a>4）信息安全人才</h4><p>信息安全保障诸要素中，人是最关键也是最活跃的要素。网络攻防对抗，最终较量的是攻防两端的人，而不是设备。对组织机构来说，应建立一个完整的信息安全人才体系。<br>信息安全人才体系应包括以下方面。</p><ul><li>所有员工：需要进行信息安全保障意识教育，具体可以采用内部培训、在组织机构网站上发布相关信息等措施来增强所有员工的安全意识。</li><li>涉及信息系统的岗位和职责的员工：需要进行相应的信息安全保障的基本技能培训。</li><li>信息安全专业人员：应建立更全面、更专业的信息安全保障知识和经验。</li></ul><p>本文节选自：<br>《信息安全技术 信息系统安全保障评估框架：简介和一般模型》GB_T 20274.1 200<br>《CISP培训教材》</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、信息系统安全保障相关概念&quot;&gt;&lt;a href=&quot;#一、信息系统安全保障相关概念&quot; class=&quot;headerlink&quot; title=&quot;一、信息系统安全保障相关概念&quot;&gt;&lt;/a&gt;一、信息系统安全保障相关概念&lt;/h2&gt;&lt;p&gt;信息系统是用于采集、处理、存储、传输、分发和
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>安全运营之漏洞管理</title>
    <link href="https://xiejava.gitee.io/posts/a937cbf5/"/>
    <id>https://xiejava.gitee.io/posts/a937cbf5/</id>
    <published>2022-04-25T07:38:05.000Z</published>
    <updated>2022-04-25T07:45:24.917Z</updated>
    
    <content type="html"><![CDATA[<p>1947年冯·诺依曼建立计算机系统结构理论时认为，计算机系统也有天生的类似基因的缺陷，也可能在使用和发展过程中产生意想不到的问题。20世纪七八十年代，早期黑客的出现和第一个计算机病毒的产生，软件漏洞逐渐引起人们的关注。在各种产品、主机、网络和复杂信息系统中，安全漏洞以不同形式存在，而且数量逐年增加，利用漏洞造成的各类安全事件层出不穷。攻击行为或网络安全事件的发生正越来越多地受到利益驱动的影响，这种“黑色产业链”的兴起，导致越来越多的网络终端受害，大量机密信息被窃取，敏感数据信息在互联网上传播，并在黑市中待价而沽。工业控制领域以及新技术新应用的安全漏洞，特别是基础核心系统的安全漏洞已经成为危害国家经济和发展安全的重要因素。在安全运营过程中一个最重要的工作就是漏洞管理。</p><h2 id="一、什么是安全漏洞"><a href="#一、什么是安全漏洞" class="headerlink" title="一、什么是安全漏洞"></a>一、什么是安全漏洞</h2><p><strong>安全漏洞（Vulnerability）也被称为脆弱性</strong>。<br>根据国标-信息安全技术-安全漏洞标识与描述规范[GB/T 28458-2012]对安全漏洞的定义，安全漏洞是计算机信息系统在需求、设计、实现、配置运行等过程中，有意或无意产生的缺陷。这些缺陷以不同形式存在于计算机信息系统的各个层次和环节之中，一旦被恶意主体所利用，就会对计算机信息系统的安全造成损害，从而影响计算机信息系统的正常运行，危害信息产品或系统及信息的安全属性。</p><p>有时漏洞也被称作错误( Error)、缺陷 ( Fault)、 弱点( Weakness )或是故障( Failure )等，这些术语很容易引起混淆。在许多情况下，人们习惯于将错误、缺陷、弱点都简单地称为漏洞。需要指出的是，严格地说，错误、缺陷、弱点和故障并不等于漏洞。错误、缺陷和弱点是产生漏洞的条件，漏洞被利用后必然会破坏安全属性，但不一定能引起产品或系统故障。</p><h2 id="二、安全漏洞标识与描述"><a href="#二、安全漏洞标识与描述" class="headerlink" title="二、安全漏洞标识与描述"></a>二、安全漏洞标识与描述</h2><p>以下为国标-信息安全技术-安全漏洞标识与描述规范[GB/T 28458-2012] 对安全漏洞标识与描述的定义：<br>安全漏洞描述项包括标识号、名称、发布时间、发布单位、类别、等级、影响系统等必须的描述项，并可更具需要扩充（但不限于）相关编号、利用方法、解决方案建议、其他描述等描述项。<br><img src="https://img-blog.csdnimg.cn/d260bdaf3a0a4d4cb2ec59ad888e3f84.png#pic_center" alt="安全漏洞描述"></p><p><strong>标识号</strong><br>CVD-YYYY-NNNNNN格式为标识号。CVD为Common V ulnerabilities Description 的缩写；YYYY为4位十进制数字，表示产生本安全漏洞的年份；NNNNNN为6位十进制数字,表示当年内产生的安全漏洞的序号。<br><strong>名称</strong><br>安全漏洞标题，概括性描述安全漏洞信息的短语,例如InternetExplorer8.0缓冲区溢出漏洞。<br><strong>发布时间</strong><br>安全漏洞信息发布日期。<br><strong>发布单位</strong><br>发布安全漏洞的单位全称。<br><strong>类别</strong><br>安全漏洞所属分类，说明安全漏洞分类归属的信息。<br><strong>等级</strong><br>安全漏洞危害级别，说明安全漏洞能够造成的危害程度。<br><strong>影响系统</strong><br>安全漏洞所影响系统的信息，例如厂商、产品名称和版本号等。<br><strong>相关编号</strong><br>安全漏洞的其他相关编号,例如Bugtraq编号、CVE编号等。<br><strong>利用方法</strong><br>安全漏洞利用的方法，例如安全漏洞攻击方案或利用代码。<br><strong>解决方案建议</strong><br>安全漏洞的解决方案，例如补丁信息等。<br><strong>其他描述</strong><br>安全漏洞描述需要说明的其他相关信息，例如安全漏洞产生的具体原因。</p><h2 id="三、安全漏洞的分类分级"><a href="#三、安全漏洞的分类分级" class="headerlink" title="三、安全漏洞的分类分级"></a>三、安全漏洞的分类分级</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>网络安全漏洞分类是基于漏洞产生或触发的技术原因对漏洞进行划分，分类如下：<br><img src="https://img-blog.csdnimg.cn/e53981eba89a4ebe891147f241ede159.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="安全漏洞分类"></p><h3 id="分级"><a href="#分级" class="headerlink" title="分级"></a>分级</h3><p>网络安全漏洞分级是指采用分级的方式对网络安全漏洞潜在危害的程度进行描述，包括技术分级<br>和综合分级两种分级方式，每种方式均分为超危（严重）、高危、中危和低危四个等级,具体内容如下:<br><strong>超危（严重）</strong>：漏洞可以非常容易地对目标对象造成特别严重后果；<br><strong>高危</strong>：漏洞可以容易地对目标对象造成严重后果；<br><strong>中危</strong>：漏洞可以对目标对象造成一般后果，或者比较困难地对目标造成严重后果；<br><strong>低危</strong>：漏洞可以对目标对象造成轻微后果，或者比较困难地对目标对象造成一般严重后果，或<br>者非常困难地对目标对象造成严重后果。</p><h2 id="四、安全漏洞的生命周期"><a href="#四、安全漏洞的生命周期" class="headerlink" title="四、安全漏洞的生命周期"></a>四、安全漏洞的生命周期</h2><p>依据信息安全漏洞从产生到消亡的整个过程，信息安全漏洞生命周期分以下几个阶段：<br>a)漏洞的发现：通过人工或者自动的方法分析、挖掘漏洞的过程，并且该漏洞可以被验证和重现。<br>b)漏洞的利用：利用漏洞对计算机信息系统的保密性、完整性和可用性造成损害的过程。<br>c)漏洞的修复：通过补丁、升级版本或配置策略等对漏洞进行修补的过程，使得该漏洞不能够被<br>恶意主体所利用。<br>d)漏洞的公开：通过公开渠道(如网站、邮件列表等)公布漏洞信息的过程。</p><h2 id="五、安全漏洞的闭环管理"><a href="#五、安全漏洞的闭环管理" class="headerlink" title="五、安全漏洞的闭环管理"></a>五、安全漏洞的闭环管理</h2><p>根据漏洞生命周期中漏洞所处的不同状态，将漏洞管理行为对应为<strong>预防</strong>、<strong>收集</strong>、<strong>消减</strong>和<strong>发布</strong>等活动。<br><img src="https://img-blog.csdnimg.cn/006685a6190342bdba1455d3c8d79a83.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="漏洞生命周期"></p><p>预防是指通过各种安全手段提高信息系统的安全水平，避免漏洞的产生和恶意利用。<br>收集是针对已发现的漏洞进行信息的及时跟踪与获取。<br>消减是指在漏洞被发现后积极采取补救措施,最大限度减少漏洞带来的损失。<br>发布是指在遵循一定的发布策略的前提下,对漏洞及其修复信息进行发布。<br>用户、厂商和漏洞管理组织可以根据漏洞的状态及管理活动建立符合自身特点的漏洞处理策略和处理流程。<br>对于企业组织安全运营来说可以参考以下漏洞处理流程：<br><img src="https://img-blog.csdnimg.cn/584faf04081b40ac8ac23dd93634d00a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="漏洞处理流程"></p><h3 id="发现漏洞"><a href="#发现漏洞" class="headerlink" title="发现漏洞"></a>发现漏洞</h3><p>一般由渗透测试工程师通过漏洞扫描工具或渗透测试发现系统漏洞，提交渗透测试报告。由安全工程师进行漏洞验证，确定系统漏洞是否真实存在。</p><h3 id="漏洞录入"><a href="#漏洞录入" class="headerlink" title="漏洞录入"></a>漏洞录入</h3><p>在漏洞验证完成后，安全工程师需要根据企业内部的漏洞等级划分标准，将存在的漏洞录入漏洞管理系统。</p><h3 id="漏洞分发"><a href="#漏洞分发" class="headerlink" title="漏洞分发"></a>漏洞分发</h3><p>漏洞管理系统根据漏洞所影响的业务系统、主机IP等匹配到系统负责部门和修复人。通知系统负责人进行修复加固等。</p><h3 id="漏洞跟进及修复"><a href="#漏洞跟进及修复" class="headerlink" title="漏洞跟进及修复"></a>漏洞跟进及修复</h3><p>根据漏洞等级设定的时效性，设置修复计划时间，漏洞复验时间，在漏洞管理系统中进行管理和跟进。漏洞修复人修复完成后提交安全工程师进行漏洞复验，验证漏洞是否确实已经修复。如果漏洞在目前的技术条件下确实无法修复，提交系统负责进行风险确认，采取其他规避风险的措施，如调整访控策略、下线等。</p><h3 id="漏洞修复周期"><a href="#漏洞修复周期" class="headerlink" title="漏洞修复周期"></a>漏洞修复周期</h3><p>漏洞修复周期，包括漏洞的验证、评估、分发、复验、修复和关闭的各个环节。漏洞的修复周期，会根据漏洞等级确定。<br>参考如下：</p><table><thead><tr><th>漏洞等级</th><th>漏洞确认时间</th><th>漏洞修复时间</th></tr></thead><tbody><tr><td>超危（严重）</td><td>12小时</td><td>24小时</td></tr><tr><td>高危</td><td>24小时</td><td>3*24小时</td></tr><tr><td>中危</td><td>36小时</td><td>7*24小时</td></tr><tr><td>低危</td><td>72小时</td><td>14*24小时</td></tr></tbody></table><h3 id="漏洞数据分析"><a href="#漏洞数据分析" class="headerlink" title="漏洞数据分析"></a>漏洞数据分析</h3><p>对于漏洞管理整个流程来说，漏洞缓解或已解决后，关闭工单不是最终的目的，需要对漏洞数据进行分析，持续运营，可以从以下几个方面考虑：<br>1）统计一段时间内，外网系统出现的次数最多的Top10漏洞排名，分析漏洞出现的原因；<br>如外网系统中出现多次SQL注入漏洞，可以检查WAF的规则库是否及时更新？规则是否生效？此外网系统是否在WAF的防护之内？对外的系统为何不做严格的字符过滤机制等。<br>2）统计一段时间内，自主开发系统中漏洞数量最多的Top10系统排名，分析造成的原因；<br>如弱口令次数过多，是安全意识宣传不够？研发人员不重视？<br>3）哪些供应商的开发的系统漏洞数量最多？分析存在的原因；<br>是否需要约谈供应商沟通，是安全开发能力的问题，还是研发安全意识不够？<br>4）哪些框架被利用造成的漏洞过多？<br>是情报问题？还是应急响应机制的原因？是否可以替换为其他框架？</p><hr><p>参考资料<br>信息安全技术 安全漏洞分类 GBT 33561-2017<br>信息安全技术 安全漏洞标识与描述规范 GB∕T 28458-2012<br>信息安全技术 安全漏洞等级划分指南 GB∕T 30279-2013<br>信息安全技术 信息安全漏洞管理规范 GB/T 30276-2013<br>安惞《浅谈企业内部安全漏洞的运营（一）：规范化》</p><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1947年冯·诺依曼建立计算机系统结构理论时认为，计算机系统也有天生的类似基因的缺陷，也可能在使用和发展过程中产生意想不到的问题。20世纪七八十年代，早期黑客的出现和第一个计算机病毒的产生，软件漏洞逐渐引起人们的关注。在各种产品、主机、网络和复杂信息系统中，安全漏洞以不同形
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全之基于时间的安全模型（PDR和PPDR模型）</title>
    <link href="https://xiejava.gitee.io/posts/5156b28b/"/>
    <id>https://xiejava.gitee.io/posts/5156b28b/</id>
    <published>2022-04-23T02:18:07.000Z</published>
    <updated>2022-04-23T02:19:59.063Z</updated>
    
    <content type="html"><![CDATA[<p>基于时间的安全模型是基于”<strong>任何安全防护措施都是基于时间的，超过该时间段，这种防护措施是可能被攻破的</strong>“这样的前提。该模型主要给出了信息系统的攻防时间表。攻击时间指的是在系统采取某种防守措施，通过不同的攻击手段来计算攻破该防守措施所需要的时间。防守时间指的是，对于某种固定攻击手法，通过采取不同的安全防护措施，来计算该防护措施所能坚守的时间。</p><p>基于时间的安全模型主要包括PDR和后来改进的PPDR模型，PDR模型是源自美国国际互联网安全系统公司ISS提出的自适应网络安全模型ANSM（AdaptiveNetwork Security Model），是一个可量化、可数学证明、基于时间的安全模型。美国ISS公司（后被IBM收购）提出的。PPDR模型是PDR的模型上发展起来的，也称P2DR，加入的P是Policy策略。</p><h2 id="一、PDR模型"><a href="#一、PDR模型" class="headerlink" title="一、PDR模型"></a>一、PDR模型</h2><p>保护-检测-响应( Protection-Detection-Response, PDR )模型是信息安全保障工作中常用的模型，是最早体现主动防御思想的一种网络安全模型，其思想是承认信息系统中漏洞的存在，正视信息系统面临的威胁，通过采取适度防护、加强检测工作、落实对安全事件的响应、建立对威胁的防护来保障系统的安全。<br>模型图如下图所示：<br><img src="https://img-blog.csdnimg.cn/bec7ca0d344442959d2cbf53b6d64eed.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_12,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="PDR模型"></p><p>P-protection，保护就是采用一切可能的措施来保护网络、系统以及信息的安全。通常采用的技术及方法主要包括加密、认证、访问控制、防火墙及防病毒等。</p><p>D-detect，检测可以了解和评估网络和系统的安全状态，为安全防护和安全响应提供依据。常用的检测技术主要包括入侵检测、漏洞检测及网络扫描等技术。</p><p> R-response，应急响应在安全模型中占有重要地位，是解决安全问题的最有效办法。解决安全问题就是解决紧急响应和异常处理问题，因此，建立应急响应机制，形成快速安全响应的能力，对网络和系统至关重要。</p><p>PDR模型直观、实用，建立了一个所谓的基于时间的可证明的安全模型，定义了防护时间Pt(攻击者发起攻击时，保护系统不被攻破的时间)、检测时间Dt(从发起攻击到检测到攻击的时间)和响应时间Rt(从发现攻击到做出有效响应的时间)3个概念，并给出了评定系统安全的计算方式，<strong>当Pt&gt;Dt+Rt时，即认为系统是安全的</strong>，也就是说，如果在攻击者攻破系统之前发现并阻止了攻击的行为，那么系统就是安全的。</p><p>局限性：系统的Pt、Dt、Rt 很难准确定义，面对不同攻击者和不同种类的攻击，这些时间都是变化的，其实还是不能有效证明-一个系统是否安全。并且该模型对系统的安全隐患和安全措施采取相对固定的前提假设，难于适应网络安全环境的快速变化。</p><h2 id="二、PPDR模型"><a href="#二、PPDR模型" class="headerlink" title="二、PPDR模型"></a>二、PPDR模型</h2><p>策略-保护检测-响应模型( Policy-Protection-Detection-Response, PPDR )是在PDR模型的基础_上发展出来的模型，也称为P2DR模型。模型的核心思想是所有的防护、检测、响应都是依据安全策略实施的，模型包括4个主要部分: Policy (策略)、Protection ( 保护)、Detection(检测)和Response(响应)。<br>模型图如下图所示：<br><img src="https://img-blog.csdnimg.cn/4d73862be0024fbb81811491c43b56ab.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="PPDR模型"></p><p>策略（Policy）：模型的核心，所有的防护、检测和响应都是依据安全策略实施的。安全策略一般由总体安全策略和具体安全策略两部分组成。<br>保护（Protection）：保护是根据系统可能出现的安全问题而采取的预防措施，这些措施通过传统的静态安全技术实现。采用的防护技术通常包括数据加密、身份认证、访问控制、授权和虚拟专用网(VPN)技术、防火墙、安全扫描和数据备份等。<br>检测（Detection）：当攻击者穿透防护系统时，检测功能就发挥作用，与防护系统形成互补。检测是动态响应的依据。<br>响应（Response）：系统一旦检测到人侵，响应系统就开始工作，进行事件处理。响应包括应急响应和恢复处理，恢复处理又包括系统恢复和信息恢复。</p><p>PPDR模型是在整体的安全策略的控制和指导下，在综合运用防护工具(如防火墙、操作系统身份认证、加密等)的同时，利用检测工具(如漏洞评估、人侵检测等)了解和评估系统的安全状态，通过适当的反应将系统调整到“最安全”和“风险最低”的状态。保护、检测和响应组成了一个完整的、动态的安全循环，在安全策略的指导下保证信息系统的安全。</p><p>该理论的最基本原理就是信息安全相关的所有活动，不管是攻击行为、防护行为、检测行为和响应行为等都要消耗时间,因此可以用时间来衡量一个体系的安全性和安全能力。假设系统的防护、检测和反应时间分别是Pt、Dt和Rt。系统被对手成功攻击后的时间为暴露时间(Et)，那么PPDR模型就可以用典型的数学公式来表达安全的要求：如果Pt&gt;Dt+Rt,那么系统是安全的。</p><p>P2DR模型中的数学法则：<br>假设S系统的防护、检测和反应的时间分别是<br>• Pt（防护时间、有效防御攻击的时间）<br>• Dt（检测时间、发起攻击到检测到的时间）<br>• Rt（反应时间、检测到攻击到处理完成时间）<br> 假设系统被对手成功攻击后的时间为<br>• Et（暴露时间）<br>则该系统防护、检测和反应的时间关系如下：<br>• 如果Pt＞Dt＋Rt，那么S是安全的；<br>• 如果Pt＜Dt＋Rt，那么Et＝（Dt＋Rt）－Pt。</p><p>PPDR给出了安全的全新定义：“<strong>及时的检测和响应就是安全</strong>”，”<strong>及时的检测和恢复就是安全</strong>”。这样的定义给出了解决安全问题的明确方向:提高系统的防护时间Pt，降低检测时间Dt和响应时间Rt。</p><p>与PDR模型相比，PPDR模型更强调控制和对抗，即强调系统安全的动态性，并且以安全检测、漏洞监测和自适应填充“安全间隙”为循环来提高网络安全。值得指出的是，在PPDR模型中，考虑了管理因素,它强调安全管理的持续性、安全策略的动态性，以实时监视网络活动、发现威胁和弱点来调整和填补网络漏洞。另外，该模型强调检测的重要性，通过经常对信息系统的评估把握系统风险点，及时弱化甚至消除系统的安全漏洞。但该模型忽略了内在的变化因素，如人员的流动、人员的素质和策略贯彻的不稳定性。系统本身安全能力的增强、系统和整个网络的优化，以及人员在系统中最重要角色的素质提升，都是该安全系统没有考虑到的问题。</p><table><thead><tr><th></th><th>PDR</th><th>PPDR</th></tr></thead><tbody><tr><td>意义</td><td>最早体现主动防御思想的一种网络安全模型</td><td>是动态网络是安全体系的代表模型，动态安全模型的雏形。</td></tr><tr><td>组成</td><td>保护-检测-响应( Protection-Detection-Response, PDR )</td><td>策略-保护检测-响应模型( Policy-Protection-Detection-Response, PPDR )</td></tr><tr><td>特点</td><td>PDR模型建立了一个所谓的基于时间的可证明的安全模型，定义了:防护时间Pt (黑客发起攻击时，保护系统不被攻破的时间)、检测时间Dt (从发起攻击到检测到攻击的时间)和响应时间Rt (从发现攻击到作出有效响应的时间)。当Pt&gt;Dt+Rt时，即认为系统是安全的，也就是说，如果在黑客攻破系统之前发现并阻止了黑客的行为，那么系统就是安全的。</td><td>给出了安全一个全新的定义：“及时的检测和响应就是安全”，“及时的检测和恢复就是安全”。而且，这样的定义为安全问题的解决给出了明确的方向：提高系统的防护时间Pt，降低检测时间.Dt和响应时间Rt。</td></tr><tr><td>局限性</td><td>系统的Pt、Dt、Rt 很难准确定义，面对不同攻击者和不同种类的攻击，这些时间都是变化的，其实还是不能有效证明一个系统是否安全。并且该模型对系统的安全隐患和安全措施采取相对固定的前提假设，难于适应网络安全环境的快速变化</td><td>忽略了内在的变化因素，如人员的流动、人员的素质和策略贯彻的不稳定性。系统本身安全能力的增强、系统和整个网络的优化，以及人员在系统中最重要角色的素质提升，都是该安全系统没有考虑到的问题。</td></tr></tbody></table><p>不管是PDR还是PPDR，总体来说还是局限于从技术上考虑信息安全问题。随着信息化的发展，人们越来越意识到信息安全涉及面非常广，除了技术，管理、制度、人员和法律等方面也是信息安全必须考虑的因素，就像一个由多块木块构成的“木桶”，木桶的容量由最短的那块板决定。在处理信息安全问题时，必须全面考虑各方面的因素，任何一个方面的遗漏都有可能形成“短板”。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基于时间的安全模型是基于”&lt;strong&gt;任何安全防护措施都是基于时间的，超过该时间段，这种防护措施是可能被攻破的&lt;/strong&gt;“这样的前提。该模型主要给出了信息系统的攻防时间表。攻击时间指的是在系统采取某种防守措施，通过不同的攻击手段来计算攻破该防守措施所需要的时间。
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全之零信任</title>
    <link href="https://xiejava.gitee.io/posts/7f2622dc/"/>
    <id>https://xiejava.gitee.io/posts/7f2622dc/</id>
    <published>2022-04-21T06:43:15.000Z</published>
    <updated>2022-04-21T06:44:49.246Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、零信任产生的背景"><a href="#一、零信任产生的背景" class="headerlink" title="一、零信任产生的背景"></a>一、零信任产生的背景</h2><p>对于资源的访问保护，传统方式是划分安全区域，不同的安全区域有不同的安全要求。在安全区域之间就形成了网络边界，在网络边界处部署边界安全设备，包括防火墙、IPS、防毒墙、WAF等，对来自边界外部的各种攻击进行防范，以此构建企业网络安全体系，这种传统方式可称为边界安全理念。在边界安全理念中网络位置决定了信任程度，在安全区域边界外的用户默认是不可信的（不安全的），没有较多访问权限，边界外用户想要接入边界内的网络需要通过防火墙、VPN等安全机制；安全区域内的用户默认都是可信的（安全的），对边界内用户的操作不再做过多的行为监测，但是这就在每个安全区域内部存在过度信任（认为是安全的，给予的权限过大）的问题。同时由于边界安全设备部署在网络边界上，缺少来自终端侧、资源侧的数据，且相互之间缺乏联动，对威胁的安全分析是不够全面的，因此内部威胁检测和防护能力不足、安全分析覆盖度不够全面成为了边界安全理念固有的软肋。甚至很多企业只是非常粗粒度的划分了企业内网和外网（互联网），这种风险就更为明显。</p><p>另外，随着云计算、物联网以及移动办公等新技术新应用的兴起，企业的业务架构和网络环境也随之发生了重大的变化，这给传统边界安全理念带来了新的挑战。比如云计算技术的普及带来了物理安全边界模糊的挑战，远程办公、多方协同办公等成为常态带来了访问需求复杂性变高和内部资源暴露面扩大的风险，各种设备（BYOD、合作伙伴设备）、各种人员接入带来了对设备、人员的管理难度和不可控安全因素增加的风险，高级威胁攻击（钓鱼攻击、水坑攻击、0day漏洞利用等）带来了边界安全防护机制被突破的风险，这些都对传统的边界安全理念和防护手段，如部署边界安全设备、仅简单认证用户身份、静态和粗粒度的访问控制等提出了挑战，亟需有更好的安全防护理念和解决思路。</p><p>传统边界安全理念先天能力存在不足，新技术新应用又带来了全新的安全挑战，在这样的背景下，零信任的最早雏形源于2004年成立的耶利哥论坛（Jericho Forum ），其成立的使命正是为了定义无边界趋势下的网络安全问题并寻求解决方案，提出要限制基于网络位置的隐式信任；美国国防信息系统局（DISA）为了解决GIG（全球信息栅格，是美军信息化作战规划中极其重要且宏大的基础设施）中，如何实时、动态地对网络进行规划和重构的问题，发起了BlackCore项目，将基于边界的安全模型转换为基于单个事物安全性的模型，并提出了SDP（Software Defined Perimeter）的概念，该概念后来被云安全联盟（Cloud Security Alliance）采纳。2010年，由著名研究机构Forrester的首席分析师John Kindervag最早提出了零信任（Zero Trust）的概念，并由Google在BeyondCorp项目中率先得到了应用，很好的解决了边界安全理念难以应对的安全问题。</p><h2 id="二、零信任的定义"><a href="#二、零信任的定义" class="headerlink" title="二、零信任的定义"></a>二、零信任的定义</h2><p>根据NIST《零信任架构标准》中的定义：零信任（Zero Trust，ZT）提供了一系列概念和思想，在假定网络环境已经被攻陷的前提下，当执行信息系统和服务中的每次访问请求时，降低其决策准确度的不确定性。零信任架构（ZTA）是一种企业网络安全的规划，它基于零信任理念，围绕其组件关系、工作流规划与访问策略构建而成。</p><p>零信任代表了新一代的网络安全防护理念，并非指某种单一的安全技术或产品，其目标是为了降低资源访问过程中的安全风险，防止在未经授权情况下的资源访问，其关键是打破信任和网络位置的默认绑定关系。</p><p>在零信任理念下，网络位置不再决定访问权限，在访问被允许之前，所有访问主体都需要经过身份认证和授权。身份认证不再仅仅针对用户，还将对终端设备、应用软件等多种身份进行多维度、关联性的识别和认证，并且在访问过程中可以根据需要多次发起身份认证。授权决策不再仅仅基于网络位置、用户角色或属性等传统静态访问控制模型，而是通过持续的安全监测和信任评估，进行动态、细粒度的授权。安全监测和信任评估结论是基于尽可能多的数据源计算出来的。</p><p>零信任理念的基本假设、基本原则如下：<br>1、零信任理念的基本假设<br>a) 内部威胁不可避免；<br>b) 从空间上，资源访问的过程中涉及到的所有对象（用户、终端设备、应用、网络、资源等）默认都不信任，其安全不再由网络位置决定；<br>c) 从时间上，每个对象的安全性是动态变化的（非全时段不变的）。<br>2、零信任的基本原则<br>a）任何访问主体（人/设备/应用等），在访问被允许之前，都必须要经过身份认证和授权，避免过度的信任；<br>b）访问主体对资源的访问权限是动态的（非静止不变的）；<br>c）分配访问权限时应遵循最小权限原则；<br>d）尽可能减少资源非必要的网络暴露，以减少攻击面；<br>e）尽可能确保所有的访问主体、资源、通信链路处于最安全状态；<br>f）尽可能多的和及时的获取可能影响授权的所有信息，并根据这些信息进行持续的信任评估和安全响应。</p><p>零信任在所有需要对资源访问进行安全防护的场景都可以使用，但是否采用，应根据企业可接受的安全风险水平和投入综合考虑决定。</p><h2 id="三、零信任技术体系"><a href="#三、零信任技术体系" class="headerlink" title="三、零信任技术体系"></a>三、零信任技术体系</h2><p>目前零信任主要有三大技术体系，分别是<strong>SDP（软件定义安全）</strong>、<strong>IAM（增强身份管理）</strong>和<strong>MSG（微隔离）</strong>。<br><img src="https://img-blog.csdnimg.cn/28aa077fbc354fdcb200c867dfdddda0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="零信任三大技术体系"></p><h3 id="1、软件定义安全（SDP）"><a href="#1、软件定义安全（SDP）" class="headerlink" title="1、软件定义安全（SDP）"></a>1、软件定义安全（SDP）</h3><p>SDP即“软件定义边界”,是国际云安全联盟CSA于2014年提出的基于零信任(Zero Trust)理念的新一代网络安全模型。SDP在使应用程序所有者能够在需要时部署安全边界,以便将服务与不安全的网络隔离开来。SDP将物理设备替换为在应用程序所有者控制下运行的逻辑组件。SDP仅允许在设备验证和身份验证后访问企业应用程序基础架构。SDP的体系结构由两部分组成:SDP主机和SDP控制器。SDP主机可以发起连接或接受连接。这些操作通过安全控制通道与SDP 控制器交互来管理。<br><img src="https://img-blog.csdnimg.cn/f5354671b7504707ad3ef392ed6b411c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="SDP软件定义边界"></p><p>SDP安全优势：<br>1.SDP最大限度地减少攻击面，降低安全风险；<br>2.SDP通过分离访问控制和数据通道来保护关键资产和基础设施，从而防止潜在的基于网络的攻击；<br>3.SDP提供了现有安全设备难以实现的整体集成安全架构。<br>4.SDP提供了一种基于连接的安全体系结构，而不是基于IP的替代方案。由于整个IT环境的爆炸式增长，云环境中缺乏边界使得基于IP的安全性变得脆弱。<br>5.SDP允许对所有连接进行预检查和控制，从这些连接可以连接设备、服务和设施，因此其整体安全性比传统架构更有利。</p><h3 id="2、增强身份管理（IAM）"><a href="#2、增强身份管理（IAM）" class="headerlink" title="2、增强身份管理（IAM）"></a>2、增强身份管理（IAM）</h3><p>增强身份管理IAM是大多数组织实现安全和IT运营策略的核心。它使企业可以自动访问越来越多的技术资产,同时管理潜在的安全和合规风险。身份管理为所有用户,应用程序和数据启用并保护数字身份。<br><img src="https://img-blog.csdnimg.cn/bb13d39987154b84ad3961d448d25aec.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="零信任身份与访问管理"></p><p>身份管理可以帮助组织有效解决复杂业务带来的挑战，并平衡四个关键目标：<br>1.加强安全，降低风险。<br>2.提高合规性和审计绩效。<br>3.提供快速有效的业务访问。<br>4.降低运营成本。</p><h3 id="3、微隔离（MSG）"><a href="#3、微隔离（MSG）" class="headerlink" title="3、微隔离（MSG）"></a>3、微隔离（MSG）</h3><p>微隔离是一种网络安全技术，它可以将数据中心在逻辑上划分为各个工作负载级别的不同安全段，然后定义安全控制并为每个唯一段提供服务。微隔离使IT人员可以使用网络虚拟化技术在数据中心内部部署灵活的安全策略,而不必安装多个物理防火墙。微隔离可用于保护每个虚拟机(VM)在具有策略驱动的应用程序级安全控制的企业网络中。微隔离技术可以大大增强企业的抵御能力。<br><img src="https://img-blog.csdnimg.cn/9a7ccfe4df8d4d5ea3ffb6f5d6898a51.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="威隔离MSG"></p><p>微隔离是在数据中心和云部署中创建安全区域的一种方法。这种方法使企业组织能够分离工作负载并分别保护它们，从而使网络安全更加完善，从而更加有效。<br>以下是微隔离的一些优点：<br>1.减少攻击面<br>2.提高横向运动的安全性<br>3.安全关键应用<br>4.提高合规性</p><h2 id="四、如何实现零信任体系"><a href="#四、如何实现零信任体系" class="headerlink" title="四、如何实现零信任体系"></a>四、如何实现零信任体系</h2><p>零信任的覆盖范围很广，根据企业的实际情况，可参考如下过程执行逐步建立零信任安全体系。</p><p><strong>1、建立统一的认证平台，提升基础安全及执行能力</strong><br>建立统一的认证能力平台，为所有业务系统提供认证能力。所有业务平台对接认证能力平台以获得中级及以上认证能力，大幅降低因认证方式带来的风险。<br>可结合已经建立的 4A 系统，升级 4A 系统认证体系。使用多因素认证提高安全等级。收集并绑定设备指纹，将每台设备（PC 端或移动 端）与账户关联绑定。通过账号与设备的绑定，实现用 户、账号、设备三位一体的认证体系。建立以零信任网关为核心的控制体系，该方式将大大提高对用户访问行为的控制，弥补现有业务系统在访 控制方面的安全短板。建立采集系统，在用户使用业务系统时，采集行为和环境信息。零信任网关体系可以与 4A 系统和其它业务系统结合，通过代理技术隐藏所有被代理系统的 IP 和端口，并对用户的访问行为进行鉴权检测。</p><p><strong>2、升级或部署EDR，加强终端管控和行为风险发现能力</strong><br>加强客户端监管，可通过升级资产与基线管理平台或部署EDR终端控制接入软件，对终端环境进行基线扫描和检查预警。对于不符合要求的终端，通过统一身份认证平台禁止其接入，同时，给出修复建议。<br>建立大数据处理系统，并通过该系统将上一阶段收集的用户行为信息进行统计和分析，结合电信内部管理规章制度，制定一套有针对性的基础专家规则。同时，建立规则引擎，规则引擎根据专家规则判断用户当前环境和行为风险。如果在规则中缺少必要信息指标，通过调整采集指标达到目标。<br>在基础规则基础上，根据不同的业务系统特点，深入挖掘与业务系统紧密相关的规则。结合认证方式在各个接入了认证能力平台的业务系统中实现自适应处置，使用户体会到初级智能化安全。规则引擎与身份认证系统对接，对接完成后，可以通过对用户访问各个业务系统的检测评估发现潜在风险，主要包括冒名访问和违规操作。</p><p><strong>3、引入智能工具，从传统安全向智慧安全转变</strong><br>建立机器学习平台，引入齐全的人工智能模型和可视化工具，利用前期收集的用户数据，训练适配的模型，建立智能规则引擎，对用户请求的行为信息和环境信息进行自动化评估，关联前期部署的规则引擎，验证并改良智能规则和引擎。通过机器学习平台建立无感知认证模型，作为辅助认证方式进一步提高用户体验，从“有认证”升华至“无认证”。通过大数据和机器学习模型，结合深度挖掘技术建立用户画像库，识别用户行为习惯，践行“行为即指纹”理念，实现“零信任”的终极目标。</p><p>参考资料来源：<br>零信任产业标准工作组《零信任实战白皮书》<br>《零信任架构的3大核心技术》<br>《零信任网络安全》<br>《零信任技术系统规范》</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、零信任产生的背景&quot;&gt;&lt;a href=&quot;#一、零信任产生的背景&quot; class=&quot;headerlink&quot; title=&quot;一、零信任产生的背景&quot;&gt;&lt;/a&gt;一、零信任产生的背景&lt;/h2&gt;&lt;p&gt;对于资源的访问保护，传统方式是划分安全区域，不同的安全区域有不同的安全要求。
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全之安全风险管理</title>
    <link href="https://xiejava.gitee.io/posts/88375ea1/"/>
    <id>https://xiejava.gitee.io/posts/88375ea1/</id>
    <published>2022-04-19T07:06:00.000Z</published>
    <updated>2022-04-19T07:25:32.423Z</updated>
    
    <content type="html"><![CDATA[<p>在信息时代，信息已经成为第一战略资源，信息对组织使命的完成、组织目标的实现起着至关重要的作用，因此信息资产的安全是关系到该组织能否完成其使命的重大因素。资产与风险是对矛盾共同体，资产价值越高，面临的风险就越大。而对于目前的组织机构而言，由于组织的业务运营越来越依赖于信息资产，信息安全相关风险在组织整体风险中所占的比例也越来越高。信息安全风险管理的目的就是将风险控制到可接受的程度，保护信息及其相关资产，最终保障组织能够完成其使命，实现其目标。</p><h2 id="一、什么是安全风险"><a href="#一、什么是安全风险" class="headerlink" title="一、什么是安全风险"></a>一、什么是安全风险</h2><p>风险定义为事态的概率及其结果的组合。风险的目标可能有很多不同的方面，如财务目标、健康和人身安全目标、信息安全目标和环境目标等；目标也可能有不同的级别，如战略目标、组织目标、项目目标、产品目标和过程目标等。风险经常通过引用潜在事态和后果或这些的组合来描述。影响，是对一个预期的偏离，正面的或负面的偏离。<br>风险是客观存在的，与不确定性紧密相连，但又不能完全等同。风险带来的影响，通常都是负面的(正面的影响通常不被称为风险)。风险强调的是损害的潜在可能性，而不是事实上的损害。风险不能消除殆尽，包括人为因素带来的风险，也一样不能消除殆尽。衡量风险的两个基本要素就是事件的概率和影响。<br>威胁利用脆弱性作用于资产产生影响，威胁增加了组织资产的风险，脆弱点能够暴露资产，脆弱性本身不会构成对资产的损害，但是脆弱性被威胁利用就会增加组织资产的风险。<br><img src="https://img-blog.csdnimg.cn/507664e42a024ccc969927c2a2e9122e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="安全风险与资产、脆弱性、威胁之间的关系"></p><h2 id="二、如何评估安全风险"><a href="#二、如何评估安全风险" class="headerlink" title="二、如何评估安全风险"></a>二、如何评估安全风险</h2><p>根据《信息安全技术信息安全风险评估规范》（GB/T 20984-2007），对评估对象进行安全风险评估分析，风险分析中涉及评估对象的影响范围、威胁、脆弱性三个基本要素。<br><img src="https://img-blog.csdnimg.cn/077ed7794d104aadafd25b4c3ebc0bad.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="风险评估"><br>以下参考互联网新技术新业务安全风险评估可以分为<strong>确定影响范围-&gt;确定威胁-&gt;确定脆弱性-&gt;计算分险值-&gt;形成评估结论</strong>，通过定量和定性相结合的方式进行安全风险评估。</p><h3 id="1、确定影响范围"><a href="#1、确定影响范围" class="headerlink" title="1、确定影响范围"></a>1、确定影响范围</h3><p>影响范围是指评估对象涉及的传播影响，按评估对象支持的用户数计。<br>对于运营于互联网上的应用系统，参考下表进行赋值。</p><table><thead><tr><th>范围</th><th>赋值</th></tr></thead><tbody><tr><td>10万以内</td><td>1</td></tr><tr><td>10万-100万以内</td><td>2</td></tr><tr><td>100万-1000万以内</td><td>3</td></tr><tr><td>1000万-5000万以内</td><td>4</td></tr><tr><td>5000万及以上</td><td>5</td></tr></tbody></table><h3 id="2、确定威胁"><a href="#2、确定威胁" class="headerlink" title="2、确定威胁"></a>2、确定威胁</h3><p>威胁是指可能对评估对象造成损害的外部原因。威胁利用评估对象自身的脆弱性，采用一定的途径和方式，对评估对象造成损害或损失，从而形成风险。如：下表为互联网新技术新业务安全评估涉及的威胁及发生可能性赋值。</p><table><thead><tr><th>威胁分类</th><th>威胁名称</th><th>赋值</th><th>威胁描述</th></tr></thead><tbody><tr><td>假冒</td><td>假冒</td><td>4</td><td>通过欺骗通信系统（或用户）达到非法用户冒充成为合法用户，或特权小的用户冒充成为特权大的用户的目的。黑客大多是采用假冒攻击。</td></tr><tr><td>假冒</td><td>诱骗欺诈</td><td>1</td><td>通过伪造、篡改、劫持短信、彩信、邮件、通讯录、通话记录、收藏夹、桌面等方式，诱骗用户，而达到不正当目的。</td></tr><tr><td>假冒</td><td>恶意扣费</td><td>5</td><td>在用户不知情或非授权的情况下，通过隐蔽执行、欺骗用户点击等手段，订购各类收费业务或使用移动终端支付，造成用户经济损失。</td></tr><tr><td>篡改</td><td>篡改</td><td>3</td><td>通过作伪的手段对应用程序的数据、进程、交互内容、发布内容进行修改。</td></tr><tr><td>拒绝服务</td><td>系统破坏</td><td>4</td><td>通过感染、劫持、篡改、删除、终止进程等手段导致移动终端或其它非恶意软件部分或全部功能、用户文件等无法正常使用，干扰、破坏、阻断移动通信网络、网络服务或其它合法业务正常运行。</td></tr><tr><td>拒绝服务</td><td>拒绝服务</td><td>5</td><td>对信息或其他资源的合法访问被无条件地阻止。</td></tr><tr><td>拒绝服务</td><td>资源消耗</td><td>4</td><td>在用户不知情或非授权的情况下，通过自动拨打电话、发送短信、彩信、邮件、频繁连接网络等方式，造成用户资费损失。</td></tr><tr><td>暴力破解</td><td>暴力破解</td><td>2</td><td>一种针对于用户账号和密码的破译方法，即将密码进行逐个推算直到找出真正的密码为止。</td></tr><tr><td>抵赖</td><td>抵赖</td><td>4</td><td>合法用户对自己操作行为否认的可能性。</td></tr><tr><td>越权（提升权限）</td><td>非授权访问</td><td>3</td><td>某一资源被某个非授权的人，或以非授权的方式使用。</td></tr><tr><td>越权（提升权限）</td><td>隐私窃取</td><td>4</td><td>在用户不知情或非授权的情况下，获取涉及用户个人信息。</td></tr><tr><td>越权（提升权限）</td><td>窃听</td><td>3</td><td>用各种可能的合法或非法的手段窃取系统中的信息资源和敏感信息。例如对通信线路中传输的信号搭线监听，或者利用通信设备在工作过程中产生的电磁泄露截取有用信息等。</td></tr><tr><td>越权（提升权限）</td><td>业务流分析</td><td>3</td><td>通过对系统进行长期监听，利用统计分析方法对诸如通信频度、通信的信息流向、通信总量的变化等参数进行研究，从中发现有价值的信息和规律。</td></tr><tr><td>越权（提升权限）</td><td>远程控制</td><td>4</td><td>在用户不知情或非授权的情况下，能够接受远程控制端指令并进行相关操作。</td></tr><tr><td>越权（提升权限）</td><td>破坏信息的完整性/可用性</td><td>4</td><td>数据被非授权地进行增删、修改或破坏而受到损失/数据遗失。</td></tr><tr><td>越权（提升权限）</td><td>授权侵犯（内部攻击）</td><td>3</td><td>被授权以某一目的使用某一系统或资源的某个人，将此权限用于其他非授权的目的。</td></tr><tr><td>非法传播</td><td>恶意传播</td><td>5</td><td>自动通过复制、感染、投递、下载等方式将自身、自身的衍生物或其它恶意代码进行扩散的行为。</td></tr><tr><td>非法传播</td><td>信息泄露</td><td>5</td><td>信息被泄露或透露给某个非授权的实体。</td></tr><tr><td>非法传播</td><td>三涉</td><td>5</td><td>传播的内容与应用包含了非法的信息，如涉黄、涉非、涉政，含病毒等。</td></tr><tr><td>非法传播</td><td>非法应用</td><td>2</td><td>传播内容与应用的方式让用户无法接受，如垃圾短信的发送、骚扰电话等。</td></tr><tr><td>溯源失效</td><td>溯源失效</td><td>4</td><td>无法准确追溯到传播违法有害信息或进行恶意攻击的责任主体。</td></tr><tr><td>管理失控</td><td>管理失控</td><td>4</td><td>用户、业务规模已超过企业最大安全监管能力范围；或企业安全保障能力无法满足针对业务实现方式或功能属性带来安全风险的管理。</td></tr></tbody></table><p>为了便于对不同威胁发生的可能性概率数据进行类比、度量，依据经验或专家意见进行赋值，常用准则参照如下表。采用相对等级的方式进行度量，等级值为1-5，1为最低，5为最高。<br>表：威胁赋值准则</p><table><thead><tr><th>等级</th><th>标识</th><th>定义</th></tr></thead><tbody><tr><td>5</td><td>VH（很高）</td><td>威胁发生的可能性很高，在大多数情况下几乎不可避免或者可以证实发生过的频率较高。</td></tr><tr><td>4</td><td>H（高）</td><td>威胁发生的可能性较高，在大多数情况下很有可能会发生或者可以证实曾发生过。</td></tr><tr><td>3</td><td>M（中）</td><td>威胁发生的可能性中等，在某种情况下可能会发生但未被证实发生过。</td></tr><tr><td>2</td><td>L（低）</td><td>威胁发生的可能性较小，一般不太可能发生，也没有被证实发生过。</td></tr><tr><td>1</td><td>VL（很低）</td><td>威胁几乎不可能发生，仅可能在非常罕见和例外的情况下发生。</td></tr></tbody></table><h3 id="3、确定脆弱性"><a href="#3、确定脆弱性" class="headerlink" title="3、确定脆弱性"></a>3、确定脆弱性</h3><p>脆弱性是指评估对象存在一个或多个脆弱的管理、技术、业务方面的漏洞，这些漏洞可能会被威胁所利用。脆弱性依据经验或专家意见进行赋值，常用准则参照如下表。采用相对等级的方式进行度量，等级值为1-3，1为最低，3为最高。<br>表：脆弱性赋值准则</p><table><thead><tr><th>类别</th><th>描述</th><th>对应等级</th></tr></thead><tbody><tr><td>技术保障</td><td>技术方面是否存在低等级缺陷，从技术角度是否易被利用。</td><td>3</td></tr><tr><td>攻击利用</td><td>对于攻击者来说，该漏洞目前是否能被直接或者间接利用，或者利用的难度。</td><td>3</td></tr><tr><td>管理控制</td><td>运营管理环节是否有相关的薄弱环节，被利用难易程度。</td><td>3</td></tr><tr><td>防范控制</td><td>是否有规定，是否严格审核、是否有记录校验等。</td><td>2</td></tr></tbody></table><p>脆弱性等级</p><table><thead><tr><th>等级</th><th>标识</th><th>定义</th></tr></thead><tbody><tr><td>3</td><td>H（高）</td><td>如果被威胁利用，将造成完全损害。</td></tr><tr><td>2</td><td>M（中）</td><td>如果被威胁利用，将造成一般损害。</td></tr><tr><td>1</td><td>L（低）</td><td>如果被威胁利用，造成的损害可以忽略。</td></tr></tbody></table><h3 id="4、计算风险值"><a href="#4、计算风险值" class="headerlink" title="4、计算风险值"></a>4、计算风险值</h3><p>风险计算公式：</p><blockquote><p>风险值=影响范围 * 威胁可能性 * 脆弱严重性</p></blockquote><p><img src="https://img-blog.csdnimg.cn/3a6ca1e002664e92af2ea57bee8a24f8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="风险评估彩虹图"></p><p>根据风险计算公式得出风险值后可以对应其风险等级，如风险值在55-75分，表示风险极高</p><h3 id="5、评估结论"><a href="#5、评估结论" class="headerlink" title="5、评估结论"></a>5、评估结论</h3><p>评估报告以风险计算得分形式呈现，即：不仅呈现脆弱性问题，并且对于不符合评估标准的项，根据面临威胁赋值和脆弱性赋值，结合评估对象的影响范围计算出风险得分，依据得分给出风险等级（极高、高、中、低、极低）。 任一评估要点匹配对应的企业安全保障能力的脆弱性测算值＞0时，须及时记录并反馈至本级信息安全部门进行报备。任一评估要点的风险值的对应等级为中及其以上程度时，必须纳入整改事项严格贯彻执行，并密切跟踪把握风险变化、持续健全更新与之匹配对应的信息安全管理措施和技术保障手段，根据业务上线后的经营发展情况适时开展安全评估，以确保将信息安全风险控制在中级以下范围内。评估管理部门应组织评估专家审查小组，对“评估结论”进行审核，通过后出具评审结论。</p><h2 id="三、为什么要管理安全风险"><a href="#三、为什么要管理安全风险" class="headerlink" title="三、为什么要管理安全风险"></a>三、为什么要管理安全风险</h2><p>风险管理的目的是确保不确定性不会使企业的业务目标发生变化。风险管理是风险的识别、评估和优化，然后协调和经济地应用资源，以最小化监测和控制不良事件的可能性及影响，最大限度地实现业务。</p><p>风险管理可使信息系统的主管者和运营者在安全措施的成本与资产价值之间寻求平衡，并最终通过对支持其使命的信息系统及数据进行保护而提高其实现使命的能力。</p><p>一个单位的领导必须确保本单位具备完成其使命所需的能力。信息安全措施是有成本的，因此对信息安全的成本必须像其他管理决策一样进行全面检查。一套合理的风险管理方法，可以帮助信息系统的主管者和运营者最大程度地提高其信息安全保障能力，以有效实现其使命。</p><h2 id="四、如何管理安全风险"><a href="#四、如何管理安全风险" class="headerlink" title="四、如何管理安全风险"></a>四、如何管理安全风险</h2><p>信息安全风险管理包括背景建立、风险评估、风险处理、批准监督、监控审查和沟通咨询6个方面的内容。<strong>背景建立、风险评估、风险处理和批准监督</strong>是信息安全风险管理的4个基本步骤，监控审查和沟通咨询则贯穿于这4个基本步骤中，如下图所示。</p><h3 id="1、背景建立"><a href="#1、背景建立" class="headerlink" title="1、背景建立"></a>1、背景建立</h3><p>背景建立是信息安全风险管理的第一个步骤，是为了明确信息安全风险管理的范围和对象，以及对象的特性和安全要求，对信息安全风险管理项目进行规划和准备，保障后续的风险管理活动顺利进行。背景是建立在业务需求的基础上，通过有效的风险评估和国家、地区、行业相关法律法规及标准的约束下获得背景依据。<br>背景建立的过程包括风险管理准备、信息系统调查、信息系统分析和信息安全分析4个阶段。在信息安全风险管理过程中，对象确立过程是一次信息安全风险管理主循环的起始，为风险评估提供输人。</p><h3 id="2、风险评估"><a href="#2、风险评估" class="headerlink" title="2、风险评估"></a>2、风险评估</h3><p>风险评估确定信息资产的价值、识别适用的威胁和(存在或可能存在的)脆弱点、识别现有控制措施及其对已识别风险的影响，确定潜在后果,对风险进行最终的优先级排序，并按照风险范畴中设定的风险评价准则进行排名。<br>风险评估的目的是通过风险评估的结果，来获得信息安全需求，信息安全风险管理要依靠风险评估的结果来确定随后的风险处理和批准监督活动。风险评估使得组织能够准确定位风险管理的策略、实践和工具，能够将安全活动的重点放在重要的问题上，能够选择有合理成本效益的和适用的安全对策。基于风险评估的风险管理方法被实践证明是有效的和实用的，已被广泛应用于各个领域。<br>风险评估的过程包括风险评估准备、风险要素识别、风险分析和风险结果判定4个阶段。在信息安全风险管理过程中，风险评估活动接受背景建立阶段的输出，形成本阶段的最终输出《风险评估报告》，此文档为风险处理活动提供输人。</p><h3 id="3、风险处理"><a href="#3、风险处理" class="headerlink" title="3、风险处理"></a>3、风险处理</h3><p>风险处理是依据风险评估的结果，选择和实施合适的安全措施。风险处理的目的是为了将风险始终控制在可接受的范围内。风险处理的方式主要有降低、规避、转移和接受4种方式。</p><ul><li><p>降低方式:<br>组织首先应该选择降低风险，通常通过对面临风险的资产采取保护措施来降低风险。保护措施可以从构成风险的5个方面( 即威胁源、威胁行为、脆弱性、资产和影响)来降低风险。比如，采用法律的手段制裁计算机犯罪(包括窃取机密信息，攻击关键的信息系统基础设施，传播病毒、不健康信息和垃圾邮件等)，发挥法律的威慑作用，从而有效遏制威胁源的动机;采取身份认证措施，从而抵制身份假冒这种威胁行为的能力；及时给系统打补丁(特别是针对安全漏洞的补丁)，关闭无用的网络服务端口，从而减少系统的脆弱性，降低被利用的可能性；采用各种防护措施，建立资产的安全域，从而保证资产不受侵犯，其价值得到保持；采取容灾备份、应急响应和业务连续计划等措施，从而减少安全事件造成的影响程度。</p></li><li><p>规避方式:<br>当风险不能被降低时，通过不使用面临风险的资产来避免风险。比如，在没有足够安全保障的信息系统中，不处理特别敏感的信息，从而防止敏感信息的泄漏。再如，对于只处理内部业务的信息系统，不使用互联网，从而避免外部的有害人侵和不良攻击。</p></li><li><p>转移方式:<br>只有在风险既不能被降低，又不能被规避时，通过将面临风险的资产或其价值转移到更安全的地方来避免或降低风险。比如，在本机构不具备足够的安全保障的技术能力时，将信息系统的技术体系(即信息载体部分)外包给满足安全保障要求的第三方机构，从而避免技术风险。再如，通过给昂贵的设备上保险，将设备损失的风险转移给保险公司，从而降低资产价值的损失。</p></li><li><p>接受方式:<br>是选择对风险不采取进一步的处理措施，接受风险可能带来的结果。接受风险的前提是确定了风险的等级，评估了风险发生的可能性以及带来的潜在破坏，分析了使用每种处理措施的可行性，并进行了较全面的成本效益分析，认定某些功能、服务、信息或资产不需要进一 步保护。</p></li></ul><p>风险处理的过程包括现存风险判断、处理目标确立、处理措施选择和处理措施实施4个阶段。</p><h3 id="4、批准监督"><a href="#4、批准监督" class="headerlink" title="4、批准监督"></a>4、批准监督</h3><p>批准监督包括批准和持续监督两部分。<br>批准，是指机构的决策层依据风险评估和风险处理的结果是否满足信息系统的安全要求，做出是否认可风险管理活动的决定。批准应由机构内部或更高层的主管机构的决策层来执行。<br>持续监督，是指检查机构及其信息系统以及信息安全相关的环境有无变化，监督变化因素是否有可能引入新的安全隐患并影响到信息系统的安全保障级别。监督通常由机构内部管理层和执行层完成，必要时也可以委托支持层的外部专业机构提供支持，这主要取决于信息系统的性质和机构自身的专业能力。<br>对风险评估和风险处理的结果的批准和持续监督，不能仅依据相关标准进行僵化的对比，而是需要紧紧围绕信息系统所承载的业务，通过对业务的重要性和业务遭受损失后所带来的影响来开展相关工作。批准通过的依据( 原则)有两个：一是信息系统的残余风险是可接受的；二是安全措施能够满足信息系统当前业务的安全需求。</p><p>参考资料：<br>《CISP培训教材》<br>《信息安全工程师教程（第2版）》<br>《信息安全技术信息安全风险评估规范》</p><hr><p>博客地址：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在信息时代，信息已经成为第一战略资源，信息对组织使命的完成、组织目标的实现起着至关重要的作用，因此信息资产的安全是关系到该组织能否完成其使命的重大因素。资产与风险是对矛盾共同体，资产价值越高，面临的风险就越大。而对于目前的组织机构而言，由于组织的业务运营越来越依赖于信息资产
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>CWPP与EDR的定义与区别</title>
    <link href="https://xiejava.gitee.io/posts/ada9f957/"/>
    <id>https://xiejava.gitee.io/posts/ada9f957/</id>
    <published>2022-04-16T06:34:04.000Z</published>
    <updated>2022-04-16T06:44:26.486Z</updated>
    
    <content type="html"><![CDATA[<p>随着信息系统的发展，大家都在说网络安全要覆盖“云”、“管”、“端”，CWPP与EDR是目前非常火的产品，一个面向云端服务器的防护，一个是面向常规终端PC端的防护。</p><p>在介绍CWPP与EDR两个产品概念之前，先来简单说明一下主机、服务器、终端几个位置概念：</p><p>主机VS服务器。主机是一个统称，所有服务器（虚拟机）都是主机，但并非所有主机都是服务器，也就是主机覆盖服务器。主机和服务器的主要差别在于，主机是连接到网络的计算机或其他设备，而服务器是提供服务的软件或硬件设备，日常所说的服务器一般是指提供服务的主机。由此可见，主机安全并不是一个产品，而是对应一个需要被保护的位置，主机安全即主机侧的安全保护。</p><p>终端VS服务器。终端和服务器是两类东西。这里的终端指桌面电脑、笔记本、个人设备等用于访问网络、数据和应用的设备，而服务器则是提供服务、存储、计算的设备。当然，某种程度上来说，广义上的终端概念也可以包括服务器，但常规意义的终端不包括服务器。<br><img src="https://img-blog.csdnimg.cn/b20014059d0b493484d138a36df80c5d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_13,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="终端主机"></p><p>对于一般的应用系统来说，服务器就是提供服务的主机如提供WEB、FTP、数据库等服务的服务器，终端就是访问服务的工作站、个人PC等。</p><h2 id="一、CWPP的定义"><a href="#一、CWPP的定义" class="headerlink" title="一、CWPP的定义"></a>一、CWPP的定义</h2><p> 现代数据中心支持运行在物理设备、虚拟机（VM）、容器以及私有云基础架构中的各种工作负载，并且几乎总是涉及一些在一个或多个公有云基础设施即服务（IaaS）提供商中运行的工作负载。<br><strong>云工作保护平台(Cloud Workload Protection Platform)简称CWPP</strong>，市场定义为基于主机的解决方案，主要满足现代混合数据中心架构中，服务器工作负载的保护要求。它为信息安全领导者提供了一种集成的方式，通过使用单个管理控制台和单一方式表达安全策略来保护这些工作负载，而不用考虑工作负载运行的位置。<br>可以理解成为基于代理（Agent）的底层技术方案，和传统部署在网络边界上的安全产品不一样，CWPP部署在操作系统层，因此可以横跨物理机、公有云、私有云、混合云等多种数据中心环境，部署方式更加灵活、防护层面更加丰富。采用服务端agent+远程控制台的部署模式，agent支持云、物理、混合环境部署，能有效安全加固服务器、抵御黑客攻击和恶意代码。</p><p>Gartner定义的产品能力(需求)的金子塔说明了对CWPP产品能力的定义，越是靠近基座的功能越重要，越是靠近塔尖的功能越次要。<br><img src="https://img-blog.csdnimg.cn/7d9b3f32871942cdac3f7211ccb897cd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="CWPP"></p><p>CWPP的核心能力：</p><ul><li>Congurationand  vulnerability management 配置和漏洞管理<br>1.配置，即服务器优化，通过对操作系统进行合理配置，提升操作系统的安全性和抗攻击能力。<br>2.漏洞管理，分为操作系统漏洞管理和应用漏洞管理。目前网络攻击主要是通过web服务器或者web应用漏洞发起，因此CWPP产品要能提供标准化、同时支持制定自定义的web应用漏洞防护策略。</li><li>Networksegmentation, isolation and traffic visibility 网络隔离与流可视<br>要求CWPP产品首先能图形化管理用户的主机业务资产，并且可以跨物理、虚拟架构、网络定于基于角色的访问策略（微隔离）；对于主机之间的访问关系，可以图形化的展示和控制（流可视化）。</li><li>Systemintegrity measurement， attestation and monitoring 系统完整性检测、认证和监测<br>可以保护系统文件或者指定目录、文件不被恶意修改，提供监控模式和防护模式。</li><li>Application control应用防护<br>CWPP产品需要能识别到主机上运行的应用，并对不同的应用提供相应的防护策略，如云锁对web应用提供waf防护，对于sshd、remotedesktop提供防暴力破解防护等。</li><li>Capabilities that augment/verify foundational operational controls 增强及验证基础运维能力<br>CWPP产品要求不能单纯依靠服务器账号、密码来验证管理员，而需要引入账号密码外的第二套验证机制。比如云锁的登陆防护功能，可以限制登陆服务的用户名、IP范围、登陆时间、登陆服务器使用的PC名称，如果不满足限制条件，即使拿到服务器的管理员账号密码也无法登陆服务器。</li><li>Log management and monitoring日志管理和监测<br>要求CWPP产品能提供完整的日志，同时当安全事件发生后，CWPP产品需要关联相关日志最终形成事件IOC，帮助用户回溯攻击过程，快速定位风险点。</li></ul><h2 id="二、EDR的定义"><a href="#二、EDR的定义" class="headerlink" title="二、EDR的定义"></a>二、EDR的定义</h2><p>根据Gartner的定义，<strong>EDR端点检测与响应（Endpoint Detection and Response）简称EDR</strong>是一种集成的终端安全解决方案，它将终端数据的实时连续监控和收集与基于规则的自动响应和分析功能相结合。该术语由Gartner的Anton Chuvakin提出，用于描述新兴的安全系统，用于检测和调查终端上的可疑活动，采用高度自动化使安全团队能够快速识别和响应威胁。完全不同于以往的端点被动防护思路，而是通过云端威胁情报、机器学习、异常行为分析、攻击指示器等方式，主动发现来自外部或内部的安全威胁，并进行自动化的阻止、取证、补救和溯源，从而有效对端点进行防护。</p><p>相比于传统端点安全防护采用预设安全策略的静态防御技术，EDR加强了威胁检测和响应取证能力，能够快速检测、识别、监控和处理端点事件，从而在威胁尚未造成危害前进行检测和阻止，帮助受保护网络免受零日威胁和各种新出现的威胁。安全模型如图所示：<br><img src="https://img-blog.csdnimg.cn/b56cc5b4b5984699b37dd266fc8f4865.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="EDR"></p><ul><li>资产发现：定期通过主动扫描、被动发现、手工录入和人工排查等多种方法收集当前网络中所有软硬件资产，包括全网所有的端点资产和在用的软件名称、版本，确保整个网络中没有安全盲点。</li><li>系统加固：定期进行漏洞扫描、补丁修复、安全策略设置和更新端点软件清单，通过软件白名单限制未经授权的软件运行，通过主机防火墙限制未经授权的服务端口开放，并定期检查和清理内部人员的账号和授权信息。</li><li>威胁检测：通过端点本地的主机入侵检测和借助云端威胁情报、异常行为分析、攻击指示器等方式，针对各类安全威胁，在其发生前、发生中、发生后进行相应的安全检测动作。</li><li>响应取证：针对全网的安全威胁进行可视化展示，能够针对安全威胁自动化地进行隔离、修复和补救，自动完成安全威胁的调查、分析和取证工作，降低事件响应和取证分析的技术门槛，不需要依赖于外部专家即可完成快速响应和取证分析。</li></ul><h2 id="三、CWPP与EDR的关系与区别"><a href="#三、CWPP与EDR的关系与区别" class="headerlink" title="三、CWPP与EDR的关系与区别"></a>三、CWPP与EDR的关系与区别</h2><p>EDR与CWPP主机安全属于网络安全领域两个不同的方向，前者聚焦于常规的终端侧，后者聚焦于主机侧，两者作用于完全不同的位置。EDR的基因是根植于PC等常规终端的，它天然不适配于主机侧。</p><table><thead><tr><th>需求场景</th><th>需求求相同点</th><th>需求不同点</th></tr></thead><tbody><tr><td>终端侧安全</td><td>资产梳理清点<br>统一集中管理<br>风险防护</td><td>安全需求&gt;稳定需求，注重安全防护能力，重防御；<br>关注用户实体行为分析（UEBA），防止PC端成为威胁内网安全的导火索，防止敏感数据歪斜；<br>高危动作或安全风险尽可能自动化完成阻断动作，无需人工介入，确保整体网络的安全可靠。</td></tr><tr><td>主机侧安全</td><td>资产梳理清点<br>统一集中管理<br>风险防护</td><td>稳定需求&gt;安全需求，注重安全检测能力，重检测；<br>更加关注主机上承载的业务应用和数据安全；<br>因业务连续性需要，安全加固工作需人工介入，要在确保业务连续稳定运行的基础上进行加固。</td></tr></tbody></table><p>在安全的需求上，PC类的终端侧与主机侧的安全诉求差别很大。所以，面向终端的EDR产品与面向服务器/工作负载的主机安全产品CWPP，这两者之间有本质的区别，并不能混为一谈。主机侧的安全产品实现不了终端侧的安全防护，EDR也不能实现CWPP的防护效果。<br>两种产品的区别如下：</p><table><thead><tr><th>对比项</th><th>CWPP</th><th>EDR</th></tr></thead><tbody><tr><td>产品定位</td><td>主机安全防护</td><td>终端安全防护</td></tr><tr><td>产品部署</td><td>Agent不在内核安装驱动，稳定性高</td><td>Agent安装需要在内核安装驱动，稳定性差，影响业务</td></tr><tr><td>资产清点</td><td>资产清点能力更全面，支持对业务层资产精准识别和动态感知</td><td>资产信息相对比较少，不够全面</td></tr><tr><td>风险发现</td><td>提供全面的风险检查，包括漏洞风险、弱密码、系统风险、应用风险、账号风险检查</td><td>支持漏洞风险检查，不具备其他风险检查能力</td></tr><tr><td>入侵检测与病毒查杀</td><td>不依赖特征库的检测方式，基于行为以及结合威胁情报、大数据、机器学习等方法，提供实时精准的入侵检测和响应能力</td><td>主要功能是病毒查杀，基于特征库或结合威胁情报，能够查杀绝大部分病毒，但仍属于被动防护</td></tr><tr><td>基线合规检查</td><td>提供等保或CIS国标标准的检查基线，支持对系统、应用、数据进行基线合规检查</td><td>通常不具备合基线合规检查能力，或提供少量的基线检查标准。</td></tr></tbody></table><p>CWPP与EDR，一个面向服务器端的防护（CWPP），一个是面向常规终端PC端的防护（EDR）但是对于企业的整体安全防护来说，CWPP和EDR相互作为补充构建企业的云、端防护能力。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着信息系统的发展，大家都在说网络安全要覆盖“云”、“管”、“端”，CWPP与EDR是目前非常火的产品，一个面向云端服务器的防护，一个是面向常规终端PC端的防护。&lt;/p&gt;
&lt;p&gt;在介绍CWPP与EDR两个产品概念之前，先来简单说明一下主机、服务器、终端几个位置概念：&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全之APT攻击</title>
    <link href="https://xiejava.gitee.io/posts/25e5f55a/"/>
    <id>https://xiejava.gitee.io/posts/25e5f55a/</id>
    <published>2022-04-02T07:54:07.000Z</published>
    <updated>2022-04-26T02:52:51.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、什么是APT攻击"><a href="#一、什么是APT攻击" class="headerlink" title="一、什么是APT攻击"></a>一、什么是APT攻击</h1><p>当今，网络系统面临着越来越严重的安全挑战，在众多的安全挑战中，一种具有组织性、特定目标以及长时间持续性的新型网络攻击日益猖獗，国际上常称之为<strong>APT（Advanced Persistent Threat高级持续性威胁）攻击</strong>。<br>APT攻击是一种以商业或者政治目的为前提的特定攻击，其通过一系列具有针对性的攻击行为以获取某个组织甚至国家的重要信息，特别是针对国家重要的基础设施和单位开展攻击，包括能源、电力、金融、国防等等。APT攻击常常采用多种攻击技术手段，包括一些最为先进的手段和社会工程学方法，并通过长时间持续性的网络渗透，一步步的获取内部网络权限，此后便长期潜伏在内部网络，不断地收集各种信息，直至窃取到重要情报。<br>对于APT攻击比较权威的定义是由美国国家标准与技术研究所( NIST)提出的，该定义给出了APT攻击的4个要素，具体如下。<br>(1)攻击者：拥有高水平专业知识和丰富资源的敌对方。<br>(2)攻击目的：破坏某组织的关键设施，或阻碍某项任务的正常进行。<br>(3)攻击手段：利用多种攻击方式，通过在目标基础设施上建立并扩展立足点来获取信息。<br>(4)攻击过程：在一个很长的时间段内潜伏并反复对目标进行攻击,同时适应安全系统的防御措施,通过保持高水平的交互来达到攻击目的。</p><h1 id="二、APT攻击过程"><a href="#二、APT攻击过程" class="headerlink" title="二、APT攻击过程"></a>二、APT攻击过程</h1><p>一般APT攻击过程可概括为3个阶段：<strong>攻击前准备</strong>阶段、<strong>攻击入侵</strong>阶段和<strong>持续攻击</strong>阶段，又可细分为5个步骤：<strong>情报收集、防线突破、通道建立、横向渗透、信息收集及外传</strong>。<br><img src="https://img-blog.csdnimg.cn/d0fb871498644cbca3999c9029b7771b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="APT攻击过程"></p><h2 id="1-情报收集"><a href="#1-情报收集" class="headerlink" title="1.情报收集"></a>1.情报收集</h2><p>在实施攻击之前，攻击者会针对特定组织的网络系统和相关员工展开大量的信息搜集。信息搜集方法多种多样，通常包括搜索引擎、爬网系统、网络隐蔽扫描、社会工程学方法等方式。信息来源包括相关员工的微博、博客、社交网站、公司网站，甚至通过某些渠道购买相关信息(如公司通讯录等)。攻击者通过对这些信息的分析，可以清晰地了解攻击目标所使用的应用、防御软件，组织内部架构和人员关系，核心资产存放情况等等。于是，攻击者针对特定目标(一般是内部员工)所使用的应用软件寻找漏洞，并结合特定目标所使用的杀毒软件、防火墙等设计特定木马/恶意代码以绕过防御。同时，攻击者搭建好入侵服务器，开展技术准备工作。</p><h2 id="2-防线突破"><a href="#2-防线突破" class="headerlink" title="2.防线突破"></a>2.防线突破</h2><p>攻击者在完成情报收集和技术准备后，开始采用木马/恶意代码攻击特定员工的个人电脑，攻击方法主要有：①社会工程学方法，如电子邮件攻击，攻击者窃取与特定员工有关系的人员(如领导、同事、朋友等)电子邮箱，冒充发件人给该员工发送带有恶意代码附件的邮件，一旦该员 工打开附件，员工电脑便感染了恶意软件。②远程漏洞攻击方法，如网站挂马攻击，攻击者在员工常访问的网站上放置木马，当员工再次访问该网站时，个人电脑便受到网页代码攻击。由于这些恶意软件针对的是系统未知漏洞并被特殊处理，因此现有的杀毒软件和防火墙均无法察觉，攻击者便能逐渐获取个人电脑权限，最后直至控制个人电脑。</p><h2 id="3-通道建立"><a href="#3-通道建立" class="headerlink" title="3.通道建立"></a>3.通道建立</h2><p>攻击者在突破防线并控制员工电脑后，在员工电脑与入侵服务器之间开始建立命令控制通道。通常，命令控制通道采用HTTP/HTTPS等协议构建，以突破电脑系统防火墙等安全设备。一旦攻击者完成通道建立，攻击者通过发送控制命令检查植入的恶意软件是否遭受查杀，并在恶意软件被安全软件检测到前，对恶意软件进行版本升级，以降低被发现的概率。</p><h2 id="4-横向渗透"><a href="#4-横向渗透" class="headerlink" title="4.横向渗透"></a>4.横向渗透</h2><p>入侵和控制员工个人电脑并不是攻击者的最终目的，攻击者会采用口令窃听、漏洞攻击等多种渗透方法尝试进一步入侵组织内部更多的个人电脑和服务器，同时不断地提升自己的权限，以求控制更多的电脑和服务器，直至获得核心电脑和服务器的控制权。</p><h2 id="5-信息收集及外传"><a href="#5-信息收集及外传" class="headerlink" title="5.信息收集及外传"></a>5.信息收集及外传</h2><p>攻击者常常长期潜伏，并不断实行网络内部横向渗透，通过端口扫描等方式获取服务器或设备上有价值的信息，针对个人电脑通过列表命令等方式获取文档列表信息等。攻击者会将内部某个服务器作为资料暂存的服务器，然后通过整理、压缩、加密、打包的方式，利用建立的隐蔽通信通道将信息进行外传。在获取这些信息后，攻击者会对这些信息数据进行分析识别，并做出最终的判断，甚至实施网络攻击破坏。</p><h1 id="三、APT攻击和传统攻击的区别"><a href="#三、APT攻击和传统攻击的区别" class="headerlink" title="三、APT攻击和传统攻击的区别"></a>三、APT攻击和传统攻击的区别</h1><p>APT攻击具有不同于传统网络攻击的5个显著特征：针对性强、组织严密、持续时间长、高隐蔽性和间接攻击。<br>1.针对性强<br>APT攻击的目标明确，多数为拥有丰富数据/知识产权的目标，所获取的数据通常为商业机密、国家安全数据、知识产权等。<br>相对于传统攻击的盗取个人信息，APT攻击只关注预先指定的目标，所有的攻击方法都只针对特定目标和特定系统，针对性较强。<br>2.组织严密<br>APT攻击成功可带来巨大的商业利益，因此攻击者通常以组织形式存在，由熟练黑客形成团体，分工协作，长期预谋策划后进行攻击。他们在经济和技术上都拥有充足的资源，具备长时间专注APT研究的条件和能力。<br>3.持续时间长<br>APT攻击具有较强的持续性，经过长期的准备与策划，攻击者通常在目标网络中潜伏几个月甚至几年，通过反复渗透，不断改进攻击路径和方法，发动持续攻击，如零日漏洞攻击等。<br>4.高隐蔽性<br>APT攻击根据目标的特点，能绕过目标所在网络的防御系统，极其隐藏地盗取数据或进行破坏。在信息收集阶段，攻击者常利用搜索引擎、高级爬虫和数据泄漏等持续渗透，使被攻击者很难察觉；在攻击阶段，基于对目标嗅探的结果，设计开发极具针对性的木马等恶意软件，绕过目标网络防御系统，隐蔽攻击。<br>5.间接攻击<br>APT攻击不同于传统网络攻击的直接攻击方式，通常利用第三方网站或服务器作跳板，布设恶意程序或木马向目标进行渗透攻击。恶意程序或木马潜伏于目标网络中，可由攻击者在远端进行遥控攻击，也可由被攻击者无意触发启动攻击。</p><table><thead><tr><th>对比内容</th><th>传统攻击</th><th>APT攻击</th></tr></thead><tbody><tr><td>攻击者特征</td><td>个体或小组织网络犯罪分子</td><td>全球性、有组织、有纪律的不法团体、公司、敌对者</td></tr><tr><td>攻击目标</td><td>随机性选择攻击，通常以个体为主，以达到获取金钱、盗窃身份、欺诈等</td><td>特定攻击目标，通常针对国家安全信息、重要行业商业机密信息等</td></tr><tr><td>攻击手段</td><td>攻击手段比较单一，常基于已有的恶意软件展开攻击</td><td>攻击手段复杂，形式多样，结合0day攻击、特种木马攻击、社会工程学等展开攻击</td></tr><tr><td>攻击时间</td><td>攻击时间较短，以一次性、大范围攻击为主</td><td>攻击时间较长，长期潜伏、多次渗透攻击</td></tr><tr><td>攻击痕迹</td><td>攻击特性很强，容易在较短时间内被检测和捕获</td><td>攻击特征弱，比较隐蔽，缺少样本数据，很难被检测和捕获</td></tr></tbody></table><h1 id="四、如何防范APT攻击"><a href="#四、如何防范APT攻击" class="headerlink" title="四、如何防范APT攻击"></a>四、如何防范APT攻击</h1><p>随着人们对APT攻击的研究不断深入，已经出现一些有效的防御技术来对抗APT攻击，其核心思想大多是针对APT“攻击链”的某一步骤展开防御。这些技术主要包括：沙箱技术、信誉技术、异常流量分析技术、大数据分析技术等等。</p><h2 id="1-沙箱技术"><a href="#1-沙箱技术" class="headerlink" title="1.沙箱技术"></a>1.沙箱技术</h2><p>沙箱，又叫做沙盘，被认为是当前防御APT攻击的最有效技术之一。沙箱即是通过虚拟化技术形成一个模拟化的环境，同时将本地系统中的进程对象、内存、注册表等与模拟环境相互隔离，以便在这个虚拟化环境中测试和观察文件、访问等运行行为。沙箱通过重定向技术，将测试过程中生成和修改的文件定向到特定文件夹中，避免了对真是注册表、本地核心数据等的修改。当APT攻击在改虚拟环境发生时，可以及时地观察并分析其特征码，进一步防御其深入攻击。</p><h2 id="2-信誉技术"><a href="#2-信誉技术" class="headerlink" title="2.信誉技术"></a>2.信誉技术</h2><p>安全信誉是对互联网资源和服务相关实体安全可信性的评估和看法。信誉技术是应用于APT攻击检测具有较好辅助功能的一项技术，通过建立信誉库，包括WEB URL信誉库、文件MD5码库、僵尸网络地址库、威胁情报库等，可以为新型病毒、木马等APT攻击的检测提供强有力的技术辅助支撑，实现网络安全设备对不良信誉资源的阻断或过滤。信誉库的充分利用，将进一步提高安全新品的安全防护能力。</p><h2 id="3-主机漏洞防护技术"><a href="#3-主机漏洞防护技术" class="headerlink" title="3.主机漏洞防护技术"></a>3.主机漏洞防护技术</h2><p>针对横向移动与内部资料进行挖掘和探测的防御，可采用主机漏洞防护技术，能侦测任何针对主机漏洞的攻击并加以拦截，进而保护未修补的主机。这类解决方案可实现档案 / 系统一致性监控，保护未套用修补程序的主机，防止已知和0day 漏洞攻击。</p><h2 id="4-异常流量分析技术"><a href="#4-异常流量分析技术" class="headerlink" title="4.异常流量分析技术"></a>4.异常流量分析技术</h2><p>这是一种流量检测及分析技术，其采用旁路接入方式提取流量信息，可以针对帧数、帧长、协议、端口、标识位、IP路由、物理路径、CPU/RAM消耗、宽带占用等进行监测，并基于时间、拓扑、节点等多种统计分析手段，建立流量行为轮廓和学习模型来识别流量异常情况，进而判断并识别0Day漏洞攻击等。</p><h2 id="5-数据防泄漏技术（DLP）"><a href="#5-数据防泄漏技术（DLP）" class="headerlink" title="5.数据防泄漏技术（DLP）"></a>5.数据防泄漏技术（DLP）</h2><p>针对资料外传的风险，一般可采用加密和资料外泄防护 (DLP)技术，将关键、敏感、机密的数据加密，是降低数据外泄风险的一种方法，DLP 可提供一层额外的防护来防止数据外泄。然而，这类工具通常很复杂，而且有些部署条件，例如：数据要分类，要定义政策和规则等。</p><h2 id="6、大数据分析技术"><a href="#6、大数据分析技术" class="headerlink" title="6、大数据分析技术"></a>6、大数据分析技术</h2><p>APT攻击防御离不开大数据分析技术，无论是网络系统本身产生的大量日志数据，还是SOC安管平台产生的大量日志信息，均可以利用大数据分析技术进行大数据再分析，运用数据统计、数据挖掘、关联分析、态势分析等从记录的历史数据中发现APT攻击的痕迹，以弥补传统安全防御技术的不足。</p><p>我们熟知的APT防御产品主要针对的都是APT攻击链上的某个环节来展开防御，目前来说这是远远不够的。APT攻击防御应该是覆盖APT攻击所有环节，未来发展的趋势，是需要构建基于APT攻击链的多层次、多维度、多角度的纵深防御体系，如态势感知平台等。</p><hr><p>博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、什么是APT攻击&quot;&gt;&lt;a href=&quot;#一、什么是APT攻击&quot; class=&quot;headerlink&quot; title=&quot;一、什么是APT攻击&quot;&gt;&lt;/a&gt;一、什么是APT攻击&lt;/h1&gt;&lt;p&gt;当今，网络系统面临着越来越严重的安全挑战，在众多的安全挑战中，一种具有组织性
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息系统安全的发展演变</title>
    <link href="https://xiejava.gitee.io/posts/cb0f48b6/"/>
    <id>https://xiejava.gitee.io/posts/cb0f48b6/</id>
    <published>2022-04-01T12:38:17.000Z</published>
    <updated>2022-04-02T09:23:52.116Z</updated>
    
    <content type="html"><![CDATA[<p>随着通信技术和信息技术的发展，极大的改变了人们处理信息的方式和效率。计算机网络尤其是互联网的出现是信息技术发展中一个里程碑事件。计算机网络将通信技术和计算机技术结合起来。信息在计算机上产生、处理，并在网络中传输。网络信息系统安全是通信安全和信息系统安全的综合，网络信息安全已经覆盖了信息资产的生成、处理、传输和存储等各个阶段。包括信息自身的安全、信息应用的安全、计算机信息系统安全、通信网络安全。</p><table> <tr><td rowspan="2">信息安全</td><td>信息应用安全</td></tr> <tr><td> 信息自身安全</td></tr> <tr><td rowspan="2">信息基础设施安全</td><td>计算机系统安全</td></tr> <tr> <td>通信网络安全</td></tr></table><p>网络信息系统安全随着通信技术和信息技术的发展，大致经历了通信保密年代、计算机系统安全年代、信息系统网络安全年代、网络空间安全年代。<br><img src="https://img-blog.csdnimg.cn/2a9ebb72f181496c96ce55884fba64f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="网络信息系统安全的发展演变"></p><h2 id="一、通信保密年代"><a href="#一、通信保密年代" class="headerlink" title="一、通信保密年代"></a>一、通信保密年代</h2><p>1906年，美国物理学家费森登( Fessenden )成功地研究出无线电广播。法国人克拉维尔建立了英法第一条商用无线电线路，推动了无线电技术的进一步发展。<br>进入20世纪，尤其是在“二战”时期，军事和外交方面的巨大需求，使得无线通信技术得到飞速发展，被广泛用来传递军事情报、作战指令、外交政策等各种关键信息。21世纪，通信技术突飞猛进的发展，移动通信和数字通信成为通信技术的主流，现代世界中通信技术成为支撑整个社会的命脉和根本。<br>在通信保密年代，网络信息安全面临的主要威胁是攻击者对通信内容的窃取:有线通信容易被搭线窃听、无线通信由于电磁波在空间传播易被监听。保密成为通信安全阶段的核心安全需求。这阶段主要通过密码技术对通信的内容进行加密，保证数据的保密性和完整性，而破译成为攻击者对这种安全措施的反制。</p><h2 id="二、计算机系统安全年代"><a href="#二、计算机系统安全年代" class="headerlink" title="二、计算机系统安全年代"></a>二、计算机系统安全年代</h2><p>计算机经历了电子计算机、晶体管计算机、集成电路计算机等几个阶段。尤其是在进入20世纪70年代后,随着个人计算机的普及，各行各业都迅速采用计算机处理各种业务。计算机在处理、存储信息数据等方面的应用越来越广泛。美国国家标准局公布了《数据加密标准》( Data Encryption Standard,DES )，标志着信息安全由通信保密阶段进人计算机安全阶段。这个时期，计算机网络尚未大规模普及，相对于电话电报，计算机对信息的处理和存储能力强大，但数据长距离、大容量的传输方式较单一，功能相对较弱(主要通过软盘等形式传输)。因此，计算机阶段主要威胁来自于非授权用户对计算资源的非法使用、对信息的修改和破坏。<br>20世纪80年代计算机安全的概念开始成熟。计算机安全的主要目的是采取措施和控制以确保信息系统资产(包括硬件、软件、固件和通信、存储和处理的信息)的保密性、完整性和可用性。典型代表措施是通过操作系统的访问控制手段来防止非授权用户的访问。</p><h2 id="三、信息系统网络安全年代"><a href="#三、信息系统网络安全年代" class="headerlink" title="三、信息系统网络安全年代"></a>三、信息系统网络安全年代</h2><p>计算机网络尤其是互联网的出现是信息技术发展中一个里程碑事件。计算机网络将通信技术和计算机技术结合起来。信息在计算机上产生、处理，并在网络中传输。信息技术由此进人网络阶段，网络阶段利用通信技术将分布的计算机连接在一起，形成覆盖整个组织机构甚至整个世界的信息系统。信息系统安全是通信安全和计算机安全的综合，信息安全需求已经全面覆盖了信息资产的生成、处理、传输和存储等各阶段,确保信息系统的保密性、完整性和可用性。信息系统安全也曾被称为网络安全，主要是保护信息在存储、处理和传输过程中免受非授权的访问，防止授权用户的拒绝服务，同时检测、记录和对抗此类威胁。为了抵御这些威胁，人们开始使用防火墙、防病毒、PKI、 VPN等安全产品。此阶段的主要标志是发布了《信息技术安全性评估通用准则》，此准则即通常所说的通用准则( Common Criteria,CC)，后转变为国际标准ISO/IEC 15408,我国等同采纳此国际标准为国家标准GB/T 18336。</p><h2 id="四、网络空间安全年代"><a href="#四、网络空间安全年代" class="headerlink" title="四、网络空间安全年代"></a>四、网络空间安全年代</h2><p>随着互联网的不断发展，越来越多的设备被接人并融合，技术的融合将传统的虚拟世界与物理世界相互连接，共同构成了一个新的IT世界。互联网成为个人生活、组织机构甚至国家运行不可或缺的一部分，网络空间随之诞生，信息化发展进人网络空间阶段。网络空间作为新兴的第五空间，已经成为新的国家竞争领域,威胁来源从个人上升到犯罪组织，甚至上升到国家力量的层面。<br>“网络空间( Cyberspace)”一词，由加拿大作家威廉●吉布森在其短篇科幻小说《燃烧的铬》中创造出来，原意指由计算机创建的虚拟信息空间，体现了Cyberspace 不仅是信息的简单聚合体，也包含了信息对人类思想认知的影响。此后，随着信息技术的快速发展和互联网的广泛应用，Cyberspace 的概念不断丰富和演化。<br>随着信息化的不断深人，信息系统成为组织机构工作和生活不可或缺的一部分，信息安全威胁来源从个人上升到犯罪组织，甚至国家力量。在这个阶段，人们认识到信息安全保障不能仅仅依赖于技术措施，开始意识到管理的重要性和信息系统的动态发展性，信息安全保障的概念逐渐形成和成熟。<br>信息安全保障把信息系统安全从技术扩展到管理，从静态扩展到动态，通过各种安全保障技术和安全保障管理措施的综合融合至信息化中，形成对信息、信息系统乃至业务以及使命的保障。信息安全保障时代，其主要标志是《信息保障技术框架》（IATF）。如果说对信息的保护，主要还是处于从传统安全理念到信息化安全理念的转变过程中，那么面向业务的安全保障，就完全是从信息化的角度来考虑信息的安全了。体系性的安全保障理念，不仅是关注系统的漏洞，而且是从业务的生命周期着手，对业务流程进行分析，找出流程中的关键控制点，从安全事件出现的前、中、后三个阶段进行安全保障。面向业务的安全保障不是只建立防护屏障，而是建立一个“深度防御体系”，通过更多的技术手段把安全管理与技术防护联系起来，不再是被动地保护自己，而是主动地防御攻击。也就是说，面向业务的安全防护已经从被动走向主动，安全保障理念从风险承受模式走向安全保障模式。信息安全阶段也转化为从整体角度考虑其体系建设的信息安全保障时代。<br>2009年5月29日，美国发布《网络空间政策评估:确保信息和通信系统的可靠性和韧性》报告。云计算、虚拟化、物联网、移动互联网、大数据、人工智能等新技术的出现，使得网络空间安全的问题无比复杂。<br>2016年12月，我国发布了《国家网络空间安全战略》，明确了网络空间是国家安全的新疆域，已经成为与陆地、海洋、天空、太空同等重要的人类活动新领域，国家主权拓展延伸到网络空间，网络空间主权成为国家主权的重要组成部分。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着通信技术和信息技术的发展，极大的改变了人们处理信息的方式和效率。计算机网络尤其是互联网的出现是信息技术发展中一个里程碑事件。计算机网络将通信技术和计算机技术结合起来。信息在计算机上产生、处理，并在网络中传输。网络信息系统安全是通信安全和信息系统安全的综合，网络信息安全已
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客加入51LA网站流量统计</title>
    <link href="https://xiejava.gitee.io/posts/f571f2b1/"/>
    <id>https://xiejava.gitee.io/posts/f571f2b1/</id>
    <published>2022-04-01T04:42:04.000Z</published>
    <updated>2022-04-01T04:44:01.474Z</updated>
    
    <content type="html"><![CDATA[<p>自建hexo博客xiejava.ishareread.com一直在用CNZZ的网站流量统计，每天登陆到CNZZ的网站流量统计后台看博客的访问量成了建站以来的习惯。3月23日以后突然发现CNZZ的统计没有数据了，查了半天才知道CNZZ的U-Web统计分析产品停服了，计划要收费了。最开始用百度统计也是的，原来用得好好的，突然也是要收费了才开始转向用CNZZ的，现在CNZZ也要开始收费了。看来互联网公司日子比较难过了，免费时代已经一去不复返了。对于个人博客网站来说要付费买个网站流量统计又有点划不来。本来流量就很少，每年域名要付费、主机要付费，再弄个流量统计也要付费实在是有点承受不了。但是没有网站流量统计，不能看到自己的站点的访问量，对于个人自建网站来讲失去了大部分的乐趣。<br>所以这几天一直在寻找其他的网站流量统计的工具，只到找到了51LA。以前只知道百度和CNZZ的网站流量统计工具，最近才了解到51LA统计，它是15年老牌网站统计工具，是互联网上最早基于ASP编写的网站数据统计工具，拥有一大批忠实老站长，后来历经改造，推出新版51LA统计目前是网站统计V6，界面较以往有了较大的改动更加友好直观。<br>51LA网站统计V6的产品链接是 <a href="https://v6.51.la/" target="_blank" rel="noopener">https://v6.51.la/</a><br><img src="https://img-blog.csdnimg.cn/e24590a008154f04a807efaa7703eef1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="我要啦网站统计V6"></p><p>看到”<strong>免费使用</strong>“几个大字的时候我的眼睛已经发光了。迫不及待的点击“注册”，进行使用。</p><h2 id="一、注册登录"><a href="#一、注册登录" class="headerlink" title="一、注册登录"></a>一、注册登录</h2><p>注册流程很简单，要注册的信息很少，基本上就是手机号和登录密码。<br><img src="https://img-blog.csdnimg.cn/64f5b814778248c2a99e6635d51c5410.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_10,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="注册"></p><p>注册过程很友好，注册完就可以登录了。</p><h2 id="二、添加应用"><a href="#二、添加应用" class="headerlink" title="二、添加应用"></a>二、添加应用</h2><p>在正式使用网站统计服务之前要添加应用。也就是要将要统计的站点域名登记到应用里，生成统计代码。<br>点击“添加应用”按钮。要填的信息也就是你要统计的站点域名，可以是多个域名。我的hexo博客除了用到xiejava.ishareread.com外还在github和gited上都生成了。所以把这几个访问的域名都加上。<br><img src="https://img-blog.csdnimg.cn/79491c98a91942639de92f88eb5e975b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="添加应用"></p><h2 id="三、加入网站流量统计代码"><a href="#三、加入网站流量统计代码" class="headerlink" title="三、加入网站流量统计代码"></a>三、加入网站流量统计代码</h2><p>添加应用后下一步就是生成统计代码，将统计代码加入到自己的hexo站点。<br><img src="https://img-blog.csdnimg.cn/1308b239146f486e9aa5db9f631c9f5d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="生成统计代码"><br>标签页后面还有“图标引用”、“数据挂件”的代码，如果有需要也可以加入。<br>找到自己的hexo站点的文件目录的<code>footer.swig</code>文件，具体在<code>themes\hexo-theme-next\layout\_partials</code>目录下。编辑footer.swig文件，加入统计代码，根据需要加入图标引用、数据挂件的代码。<br><img src="https://img-blog.csdnimg.cn/4987b4462e464d31b2d0ce8197aa3a53.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="加入统计代码"></p><h2 id="四、查看统计效果"><a href="#四、查看统计效果" class="headerlink" title="四、查看统计效果"></a>四、查看统计效果</h2><p>加入统计代码、图标引用、数据挂件代码后，大约5分钟刷新hexo站点，就可以在网站底部看到图标和数据挂件。<br><img src="https://img-blog.csdnimg.cn/322ef4197bdb47e6a2c7ff8420c923be.png#pic_center" alt="网站底部统计显示"></p><p>登录到<a href="https://v6.51.la/user/application" target="_blank" rel="noopener">https://v6.51.la/user/application</a> 的管理后台，可以看到代码安装状态为“安装成功”<br><img src="https://img-blog.csdnimg.cn/477087d995c9428bba3acacce0a70754.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="应用列表"></p><p>点击“查看报表”可以查看网站的流量统计分析信息。各种统计图表直观易懂，数据详实，感觉比CNZZ 及百度统计更加实用和方便。<br><img src="https://img-blog.csdnimg.cn/00ce0abe369941b7a35ba0094710e844.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="管理后台"><br>51LA可免费添加应用30个，每日应用统计总PV在3000000，对于个人站点或小型企业足足够用了。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自建hexo博客xiejava.ishareread.com一直在用CNZZ的网站流量统计，每天登陆到CNZZ的网站流量统计后台看博客的访问量成了建站以来的习惯。3月23日以后突然发现CNZZ的统计没有数据了，查了半天才知道CNZZ的U-Web统计分析产品停服了，计划要收费
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hexo" scheme="https://xiejava.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全之纵深防御</title>
    <link href="https://xiejava.gitee.io/posts/e2fd4a90/"/>
    <id>https://xiejava.gitee.io/posts/e2fd4a90/</id>
    <published>2022-03-30T10:30:28.000Z</published>
    <updated>2022-04-26T02:47:35.143Z</updated>
    
    <content type="html"><![CDATA[<p>什么是“纵深防御”？很多人和资料都有不同的解释，有许多资料将“纵深防御”和“分层防护”等同起来，<br>上次文章介绍了“<a href="https://xiejava.blog.csdn.net/article/details/123794343" target="_blank" rel="noopener">分层防护</a>”，分层防护是根据网络的应用现状情况和网络的结构，将安全防范体系的层次划分为物理层安全、系统层安全、网络层安全、应用层安全和安全管理等各个层级，在每个层级实施相应的防护策略和手段。“纵深防御”与“分层防护”既有区别又有联系。</p><p>“纵深防御”实际上并不是一个网络安全领域的专属名词，早在二十世纪初，前苏联元帅米·尼·图哈切夫斯基就在对第一次世界大战以及国内战争经验的基础上，提出了一种名为“大纵深作战理论”的思想。由于网络安全的本质就是黑客与开发者之间的攻防战，所以信息安全领域中的“纵深防御”概念确与战争学上的思想有着共通之处，其核心都是多点布防、以点带面、多面成体，以形成一个多层次的、立体的全方位防御体系来挫伤敌人、保障自身的整体安全。</p><p>根据《信息安全工程师教程（第2版）》的描述，<strong>纵深防御模型的基本思路就是将信息网络安全防护措施有机组合起来，针对保护对象，部署合适的安全措施，形成多道保护线，各安全防护措施能够相互支持和补救，尽可能地阻断攻击者的威胁</strong>。目前，安全业界认为网络需要建立四道防线：安全保护是网络的第一道防线，能够阻止对网络的入侵和危害；安全监测是网络的第二道防线，可以及时发现入侵和破坏；实施响应是网络的第三道防线，当攻击发生时维持网络”打不垮”；恢复是网络的第四道防线，使网络在遭受攻击后能够以最快的速度“起死回升”，最大限度地降低安全事件带来的损失。看描述基本上是对应美国国防部提出的PDRR模型，即（Protection防护、Detection检测、Recovery恢复、Response响应）。PDRR改进了传统的只有防护的单一安全防御思想，强调信息安全保障的四个重要环节。<br>保护（Protection）的内容主要有加密机制、数据签名机制、访问控制机制、认证机制、信息隐藏、防火墙技术等。<br>检测（Detection）的内容主要有入侵检测、系统脆弱性检测、数据完整性检测、攻击性检测等。<br>恢复（Recovery）的内容主要有数据备份、数据修复、系统恢复等。<br>响应（Response）的内容主要有应急策略、应急机制、应急手段、入侵过程分析及安全状态评估等。<br><img src="https://img-blog.csdnimg.cn/55be794c0ca54144b664236a49d06321.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="PDRR"></p><p>但是PPDR模型总体还是比较局限与从技术上考虑安全问题。随着信息化的发展，人们越来越意识到信息安全涉及面非常广，除了技术，管理、制度、人员和法律等方面也是信息安全必须考虑的因素，就像一个由多块木板构成的“木桶”，木桶的容量由最短的那块短板决定。在处理信息安全问题是，需要全面考虑各方面的因素。</p><p>所以美国国家安全局（NSA）发布的信息安全保障技术框架IATF（Information Assurance Technical Framework）提出了纵深防御战略思想，其3个核心要素就是人、技术和操作。信息系统安全保障依赖于人、技术和操作来共同实现组织机构的职能。<br>IATF用一句话概括起来就是：<strong>一个核心思想、三个核心要素、四个焦点领域</strong>。<br><img src="https://img-blog.csdnimg.cn/fdddd1b8b76b4be3a41e4095d08edb49.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="IATF纵深防御"></p><p><strong>一个核心思想</strong><br>一个核心思想就是”纵深防御”，<strong>纵深防御也被称为深度防护战略（Defense-in-Depth），是指网络安全需要采用一个多层次、纵深的安全措施来保障信息安全。因为网络信息的安全不是仅仅依靠一两种技术或简单的安全防御设施就能实现，必须在各个层次、不同技术框架区域中实施保障机制，才能最大程度地降低风险，应对攻击并保护信息系统的安全</strong>。在一个规范的信息系统网络中，我们可以看到在网络出口有防火墙，在DMZ区有防火墙，在服务器前端还有防火墙，这就是纵深防御思想的一个体现。需要在多个位置部署安全措施，看似重复，但是因其面对不同的业务、其安全策略有很大的差异。</p><p><strong>三个核心要素</strong><br>三个核心要素是人、技术、操作。网络安全三分靠技术、七分靠管理，三要素中的“人”指的就是加强管理。<br>人是信息系统的主题，包括信息系统的拥有者、管理者和使用者，是信息安全保障的核心；<br>技术是重要手段，需要通过技术机制来保障各项业务的安全，是一种被动防御；<br>操作也称为运行或运营安全，是一种主动防御的体系和机制，包括风险评估、监控、审计、入侵检测等。<br><img src="https://img-blog.csdnimg.cn/4ccc279ac6a94841b36f5e6c786a90a0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="三个核心要素"></p><p><strong>四个焦点领域</strong><br>网络和基础设施、区域边界、计算环境、支撑性基础设施4个焦点领域。基于这4个焦点领域，结合IATF纵深防御的思想进行信息安全防御从而形成保障框架。</p><p>1.保护网络和基础设施</p><p>网络和其他基础设施是信息系统及业务的支撑，是整个信息系统安全的基础。应采取措施确保网络和基础设施能稳定可靠运行，不会因故障和外界影响导致服务的中断或数据延迟，确保在网络中进行传输的公共的、私人的信息能正确地被接收者获取，不会导致未受权的访问、更改等。保护网络和基础设施防护措施包括但并不限于以下方式。</p><ul><li>合理规划以确保骨干网可用性。</li><li>使用安全的技 术架构，例如在使用无线网络时考虑安全的技术架构。</li><li>使用冗余设备提高可用性。</li><li>使用虚拟专网 ( VPN)保护通信。</li></ul><p>2.保护区域边界</p><p>信息系统根据业务、管理方式和安全等级的不同，通常可以划分为多个区域，这些区或多或少都有与其他区域相连接的边界。保护区域边界关注的是如何对进出这此区域边界的数据流进行有效的控制与监视。要合理地将信息系统根据业务、管理方式和安全等级划分不同的安全区域，并明确定义不同网络区域间需要哪些数据传递。在此基础上采取措施对数据进行控制与监视。通常采取的措施包括但并不限于以下方式。</p><ul><li>在区域边界设 置身份认证和访问控制措施，例如部署防火墙对来访者进行身份认证。</li><li>在区域边 界部署人侵检测系统以发现针对安全区域内的攻击行为。</li><li>在区域边界部署防病毒网关以发现并过滤数据中的恶意代码。</li><li>使用VPN设备以确保安全的接人。</li><li>部署抗拒绝服务攻击设备以应对拒绝服务攻击。</li><li>流量管理、行为管理等其他措施。</li></ul><p>3.保护计算环境</p><p>计算环境指信息系统中的服务器、客户机及其中安装的操作系统、应用软件等。保护计算环境通常采用身份鉴别、访问控制、加密等一系列技术以确保计算环境内的数据保密性、完整性、可用性、不可否认性等。保护计算环境的措施包括但并不限于以下方式。<br>安装并使用安全的操作系统和应用软件。</p><ul><li>在服务 器上部署主机入侵检测系统、防病毒软件及其他安全防护软件。</li><li>定期对系统进行漏洞扫描或者补丁加固，以避免系统脆弱性。</li><li>定期对系统进行安全配置检查，确保最优配置。</li><li>部署或配置对文件的完整性保护。</li><li>定期对 系统和数据进行备份等。</li></ul><p>4.支撑性基础设施</p><p>支撑性基础设施是提供安全服务的基础设施及与之相关的一系列活动的综合体。IATF定义了两种类型的支撑性基础设施：密钥管理基础设施( KMI) /公钥基础设施( PKI)和检测与响应。</p><ul><li>KMI/PKI：提供支持密钥、授权和证书管理的密码基础设施并能实现使用网络服务人员确实的身份识别。</li><li>检测与响应：提供入侵检测、报告、分析、评估和响应基础设施，它能迅速检测和响应入侵、异常事件并提供运行状态的情况。</li></ul><p>IATF的4个技术焦点区域是一个逐层递进的关系，从而形成一种纵深防御系统。因此，以上4个方面的应用充分贯彻了纵深防御的思想，对整个信息系统的各个区域、各个层次，甚至在每一个层次内部都部署了信息安全设备和安全机制，保证访问者对每一个 系统组件进行访问时都受到保障机制的监视和检测，以实现系统全方位的充分防御，将系统遭受攻进行访问时都受到保障机制的监视和检测，以实现系统全方位的充分防御，将系统遭受攻击的风险降至最低,确保数据的安全和可靠。</p><p>除了纵深防御这个核心思想之外，IATF还提出了其他一些信息安全原则，包括保护多个位置、分层防护。<br>1.保护多个位置<br>保护多个位置包括保护网络和基础设施、区域边界、计算环境等,这一原则提醒我们，仅仅在信息系统的重要敏感区域设置一些保护装置 是不够的，任意一个系统漏洞都有可能导致严重的攻击和破坏后果，所以在信息系统的各个方位布置全面的防御机制，才能将风险降至最低。<br>2.分层防御<br>如果说保护多个位置原则是横向防御，那么这一原则就是纵向防御，这也是纵深防御思想的一个具体体现。分层防御即在攻击者和目标之间部署多层防御机制，每个这样的机制必须对攻击者形成一道屏障。而且每一个这样的机制还应包括保护和检测措施，以使攻击者不得不面对被检测到的风险，迫使攻击者由于高昂的攻击代价而放弃攻击行为。</p><p>可见，<strong>纵深防御是战略思想、分层防护是具体的战术实现</strong>。</p><p>资料来源：<br>《信息安全工程师教程（第2版）》<br>《CISP培训教材》</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;什么是“纵深防御”？很多人和资料都有不同的解释，有许多资料将“纵深防御”和“分层防护”等同起来，&lt;br&gt;上次文章介绍了“&lt;a href=&quot;https://xiejava.blog.csdn.net/article/details/123794343&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络安全体系之分层防护</title>
    <link href="https://xiejava.gitee.io/posts/3a099914/"/>
    <id>https://xiejava.gitee.io/posts/3a099914/</id>
    <published>2022-03-29T02:40:55.000Z</published>
    <updated>2022-03-29T02:42:20.309Z</updated>
    
    <content type="html"><![CDATA[<p>作为全方位的、整体的网络安全防范体系也是分层次的，不同层次反映了不同的安全问题，根据网络的应用现状情况和网络的结构，将安全防范体系的层次划分为物理层安全、系统层安全、网络层安全、应用层安全和安全管理。<br><img src="https://img-blog.csdnimg.cn/c3cba28b0fa34c10bb03fbd14e648e56.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="分层防护"></p><h2 id="1-物理环境的安全性-物理层安全"><a href="#1-物理环境的安全性-物理层安全" class="headerlink" title="1.物理环境的安全性(物理层安全)"></a>1.物理环境的安全性(物理层安全)</h2><p>该层次的安全包括通信线路的安全，物理设备的安全，机房的安全等。物理层的安全主要体现在通信线路的可靠性(线路备份、网管软件、传输介质)，软硬件设备安全性(替换设备、拆卸设备、增加设备)，设备的备份，防灾害能力、防干扰能力，设备的运行环境(温度、湿度、烟尘)，不间断电源保障，等等。</p><h2 id="2-操作系统的安全性-系统层安全"><a href="#2-操作系统的安全性-系统层安全" class="headerlink" title="2.操作系统的安全性(系统层安全)"></a>2.操作系统的安全性(系统层安全)</h2><p>该层次的安全问题来自网络内使用的操作系统的安全，如Windows NT，Windows 2000等。主要表现在三方面，一是操作系统本身的缺陷带来的不安全因素，主要包括身份认证、访问控制、系统漏洞等。二是对操作系统的安全配置问题。三是病毒对操作系统的威胁。</p><h2 id="3-网络的安全性-网络层安全"><a href="#3-网络的安全性-网络层安全" class="headerlink" title="3.网络的安全性(网络层安全)"></a>3.网络的安全性(网络层安全)</h2><p>该层次的安全问题主要体现在网络方面的安全性，包括网络层身份认证，网络资源的访问控制，数据传输的保密与完整性，远程接入的安全，域名系统的安全，路由系统的安全，入侵检测的手段，网络设施防病毒等。</p><h2 id="4-应用的安全性-应用层安全"><a href="#4-应用的安全性-应用层安全" class="headerlink" title="4.应用的安全性(应用层安全)"></a>4.应用的安全性(应用层安全)</h2><p>该层次的安全问题主要由提供服务所采用的应用软件和数据的安全性产生，包括Web服务、电子邮件系统、DNS等。此外，还包括病毒对系统的威胁。</p><h2 id="5-管理的安全性-管理层安全"><a href="#5-管理的安全性-管理层安全" class="headerlink" title="5.管理的安全性(管理层安全)"></a>5.管理的安全性(管理层安全)</h2><p>安全管理包括安全技术和设备的管理、安全管理制度、部门与人员的组织规则等。管理的制度化极大程度地影响着整个网络的安全，严格的安全管理制度、明确的部门安全职责划分、合理的人员角色配置都可以在很大程度上降低其它层次的安全漏洞。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为全方位的、整体的网络安全防范体系也是分层次的，不同层次反映了不同的安全问题，根据网络的应用现状情况和网络的结构，将安全防范体系的层次划分为物理层安全、系统层安全、网络层安全、应用层安全和安全管理。&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnim
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>什么是用户实体行为分析（UEBA）</title>
    <link href="https://xiejava.gitee.io/posts/973478d/"/>
    <id>https://xiejava.gitee.io/posts/973478d/</id>
    <published>2022-03-24T07:30:47.000Z</published>
    <updated>2022-03-24T07:36:19.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h1><p>数字新时代正在加速全面到来，网络环境变得更加多元、人员变得更复杂、接入方式多种多样，网络边界逐渐模糊甚至消失，同时伴随着企业数据的激增。数字化转型促进组织的业务发展的同时，也带来了重大的网络安全挑战。<br>1.越来越多的外部攻击，包括被利益驱动或国家驱动的难以察觉的高级攻击；<br>2.心怀恶意的内鬼、疏忽大意的员工、失陷账号与失陷主机导致的各种内部威胁；<br>3.数字化基础设施的脆弱性和风险暴露面越来越多，业务需求多变持续加剧的问题；<br>4.安全团队人员不足或能力有限，深陷不对称的“安全战争”之中。<br>在数字化带来的巨大变化下，传统的安全威胁发现能力受到了巨大的挑战。传统安全产品、技术、方案基本上都是基于已知特征进行规则匹配来进行分析和检测，基于特征、规则和人工分析，以“特征”为核心的检测分析存在安全可见性盲区，有严重的滞后效应、无力检测未知攻击、容易被绕过，以及难以适应攻防对抗的网络现实和快速变化的企业环境、外部威胁等问题。<br><img src="https://img-blog.csdnimg.cn/a9c1f22d63554bb6a3cd729f60a0d0ea.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="特征分析与行为分析"></p><p>安全是人和人攻防对抗的游戏，一切的意图都需要通过行为表达，这是安全运营中最重要也最有价值的一块拼图，同时也是传统方式最欠缺的。针对传统方式的不足，安全行业逐步加强基于大数据驱动，机器学习、概率分析、模式识别等的以“行为”为核心的检测分析。<br>用户实体行为分析（UEBA）应运而生。</p><h1 id="二、UEBA是什么"><a href="#二、UEBA是什么" class="headerlink" title="二、UEBA是什么"></a>二、UEBA是什么</h1><p><strong>UEBA全名User and Entity Behavior Analytics ，即为用户实体行为分析。</strong><br>Gartner 对 UEBA 的定义是“UEBA 提供画像及基于各种分析方法的异常检测，通常是基本分析方法（利用签名的规则、模式匹配、简单统计、阈值等）和高级分析方法（监督和无监督的机器学习等），用打包分析来评估用户和其他实体（主机、应用程序、网络、数据库等），发现与用户或实体标准画像或行为相异常的活动所相关的潜在事件。这些活动包括受信内部或第三方人员对系统的异常访问（用户异常），或外部攻击者绕过安全控制措施的入侵（异常用户）</p><p>用户行为分析(UBA)关联了用户活动和相关实体（用户相关的应用和终端等）信息构建人物角色与群组，进一步定义这些个体与群组的合法和正常行为，把这些人物角色在群体与群体、群体与个体、个体与个体（那些远离合法和正常行为的群体与个体）维度上相互比对分析，将异常用户（失陷账号）和用户异常（非法行为）检测出来，从而达到检测业务欺诈、敏感数据泄露、内部恶意用户、有针对性攻击等高级威胁的目的。</p><h1 id="三、UEBA应用场景"><a href="#三、UEBA应用场景" class="headerlink" title="三、UEBA应用场景"></a>三、UEBA应用场景</h1><h2 id="1-账号安全"><a href="#1-账号安全" class="headerlink" title="1  账号安全"></a>1  账号安全</h2><p>内部员工特别是高权限用户，以及服务和共享类帐户是内部和外部攻击者的主要目标。通过获取他们的访问权限则能够访问最敏感的交易、数据，甚至可以创建其他新特权帐户或滥用提权操作。由于公司账号数量庞大且难以区分滥用和合法使用，组织在监控这些帐户时面临着巨大的挑战。有效监控特权帐户不仅是一项重要的合规性要求，而且还是一项关键的威胁管理功能。和专有的特权账号管理应用（PAM，Privileged Account Management），PAM类应用提供了特权账号的全生命周期管理，而对特权账号异常行为的监控、检测、分析则是PAM的一类高级功能。PAM 内置的特权账号异常检测能力相对较弱，所以一些 PAM 供应商会跟 UEBA 产品集成，将 PAM 检测到的异常事件接入 UEBA 产品的高级分析引擎中，和其他维度的数据一起做更深层次的特权账号异常事件识别。<br>细分账号安全的场景，大致有两类。一类是账号本身的操作异常，如创建、提权、删除、暂停、撤回存在异常行为，静默账号忽然出现活动。另一类通过对账号行为如登录的时间、地点、频次的异常监控，判断账号是否被盗用或被攻陷。</p><h2 id="2-内部威胁"><a href="#2-内部威胁" class="headerlink" title="2 内部威胁"></a>2 内部威胁</h2><p>相比于不受信任的外部人员，内部员工访问和获取公司重要信息的要轻松很多。一方面公司的大部分安全防护、访问控制都是针对外来的攻击者；另一方面内部人员对组织的人员、规章、制度都有一定程度的了解，从而可以利用这些便利性来躲过安全防护检测。内部威胁者通常分为两类，一类是恶意内部人员，即合法的人员利用自己的权限做非法的事情。比如，下载大量重要的客户数据贩卖获取利益。另一类是内部人员账号被攻陷后的恶意行为。内部威胁检测的场景设计比较复杂，一般会从4个维度来考虑。</p><ol><li>建立用户行为风险画像 - 将所有身份、活动和访问特征，与基线、同组以及其他已知威胁指标进行比较，确定真正的风险区域。</li><li>高权限账号监控 – 自动识别高权限账号，例如管理员、服务和共享帐户，然后监控他们与攻击相关的异常行为，确定高风险异常行为是否源于高权限用户被成功攻击。</li><li>关键应用监控 – 为所有关键应用程序和系统构建访问风险评估，以识别与其敏感数据和交易相关的所有高风险用户、访问和活动。</li><li>内部欺诈侦测 – 利用同组人员的异常行为，比较分析侦测潜在的内部欺诈行为。</li></ol><h2 id="3-数据渗漏"><a href="#3-数据渗漏" class="headerlink" title="3 数据渗漏"></a>3 数据渗漏</h2><p>一般而言，各类攻击的主要意图是窃取组织中最重要的数据资产。组织一般会部署监控数据流向的 DLP 产品，数据库安全或者应用访问类产品以保护公司的核心数据资产。这类数据防护类产品往往误报很多，每天产生的海量报警让安全团队难以真正聚焦重点。UEBA 可以对应用访问以及 DLP 日志做更深层次的多维分析，从而定位出真正的高风险数据泄漏风险。具体的场景设计可以从以下维度考虑。<br>应用系统访问监控/风险分析 – 对存储敏感数据的应用系统、文件服务器等的访问进行行为监控，通过与用户过去行为或其同组行为异常行相比较，自动识别并持续监控与此数据相关的高风险访问和活动。<br>DLP 事件评估 – 将 DLP 事件做多维度关联分析，比如说发生 DLP 事件的人，他的风险等级、是否有离职倾向、敏感数据下载/外发/打印的数量、频次、数据外流的目的地是否为竞争对手等等，从而进一步定位高风险。高风险人群的 DLP 事件优先处置，并且通过多维度分析往往也能进一步定位这些数据泄漏企图背后的动机。</p><h2 id="4-失陷主机"><a href="#4-失陷主机" class="headerlink" title="4 失陷主机"></a>4 失陷主机</h2><p>除了人员行为异常以外，重要的 IT 资产比如说各种应用服务器、重要的终端等行为异常检测对很多组织也是至关重要。例如，一个重要的应用服务器执行了一个非业务的应用或进程，打开了一个新的端口，外连了从未外连的地址/端口，忽然有长链接的 SSH 会话，系统目录下忽然出现新的可疑文件等等。这些异常行为往往是服务器被攻击的征兆，需要进一步分析与取证。<br>用 UEBA 技术定位失陷主机通常的思路是，基于相应设备和主机执行的高风险异常事件和活动，建立异常时间线，然后关联各种实体参数，包括：端点安全警报、漏洞扫描结果（常见漏洞评分系统[CVSS]）、用户或帐户的风险级别、访问的目标、请求的有效负载的数据包级别等等，从多维度检测任何异常活动或事件以确定风险评分。</p><h1 id="四、UEBA主要实现技术"><a href="#四、UEBA主要实现技术" class="headerlink" title="四、UEBA主要实现技术"></a>四、UEBA主要实现技术</h1><p>UEBA 是一个完整的系统，涉及到算法、工程等检测部分，以及用户实体风险评分排序、调查等用户交互、反馈。从架构上来看，UEBA 系统一般包含三个层次，分别是数据中心层、算法分析层、场景应用层。其中，算法分析层一般大数据计算平台之上运行实时分析、统计分析、关联分析、机器学习等分析引擎。<br><img src="https://img-blog.csdnimg.cn/40c8886fa2654532850b7134ce32b88f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeGllamF2YTEwMTg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="UEBA架构"></p><p>机器学习引擎实现，如基线及群组分析、异常检测、集成学习风险评分、安全知识图谱、强化学习等UEBA 核心技术。</p><h2 id="基线及群组分析"><a href="#基线及群组分析" class="headerlink" title="基线及群组分析"></a>基线及群组分析</h2><p>历史基线，是行为分析的重要部分，通过构建群组分析，可以跨越单个用户、实体的局限，看到更大的事实；通过对比群组，易于异常检测；通过概率评估可以降低误报，提升信噪比；组合基线分析、群组分析，可以构成全时空的上下文环境。</p><h2 id="异常检测"><a href="#异常检测" class="headerlink" title="异常检测"></a>异常检测</h2><p>异常检测关注发现统计指标异常、时序异常、序列异常、模式异常等异常信号，采用的技术包括孤立森林、K 均值聚类、时序分析、异常检测、变点检测等传统机器学习算法。现代的异常检测也利用深度学习技术，包括基于变分自编码器（VAE）的深度表征重建异常检测、基于循环神经网络（RNN）和长短时记忆网络（LSTM）的序列深度网络异常检测、图神经网络（GNN）的模式异常检测等。针对标记数据缺乏的现状，某些UEBA 系统能够采用主动学习技术（Active Learning）、自学习（Self Learning），充分发掘标记数据和无标记数据的价值。</p><h2 id="集成学习风险评分"><a href="#集成学习风险评分" class="headerlink" title="集成学习风险评分"></a>集成学习风险评分</h2><p>把安全运维从事件管理转换到用户、实体风险，极大的降低工作量、提升效率。其中，实现转换的关键在于使用集成学习进行风险评分。风险评分需要综合各种告警、异常，以及进行群组对比分析和历史趋势。同时，风险评分技术中用户间风险的传导同样重要，需要一套类似谷歌搜索使用的网页排名PageRank 算法的迭代评估机制。风险评分的好坏，将直接影响到UEBA 实施的成效，进而直接影响到安全运营的效率。</p><h2 id="安全知识图谱"><a href="#安全知识图谱" class="headerlink" title="安全知识图谱"></a>安全知识图谱</h2><p>知识图谱已经成为人工智能领域的热点方向，在网络安全中同样也有巨大的应用潜力。部分UEBA 系统已经支持一定的安全知识图谱能力，可以将从事件、告警、异常、访问中抽取出的实体及实体间关系，构建成一张网络图谱。任何一个事件、告警、异常，都可以集成到网络图谱中，直观、明晰的呈现多层关系，可以让分析抵达更远的边界，触达更隐蔽的联系，揭露出最细微的线索。结合攻击链和知识图谱的关系回放，还能够让安全分析师近似真实的复现攻击全过程，了解攻击的路径与脆弱点，评估潜在的受影响资产，从而更好的进行应急响应与处置。</p><h2 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h2><p>不同客户的环境数据源的多元性及差异性，以及用户对异常风险的定义各有不同， UEBA 需要具有一定的自适应性，输出更精准的异常风险。强化学习能够根据排查结果自适应地调整正负权重反馈给系统，进而得到更符合客户期望的风险评分。UEBA 给出异常信号后，结合安全管理人员的排查结果，获取反馈奖赏或惩罚，通过学习进行正负权重调整，从而让整体效果持续优化改进。</p><h1 id="五、UEBA行业发展趋势"><a href="#五、UEBA行业发展趋势" class="headerlink" title="五、UEBA行业发展趋势"></a>五、UEBA行业发展趋势</h1><p>Gartner《Market Guide for User and Entity Behavior Analytics》报告中指出：<br>终端用户在UEBA独立解决方案上的支出将呈复合式增长年增长率为48％，从2015年的5,000万美元增长到2020年的3.52亿美元。<br>UEBA解决方案供应商在2017年和2018年继续减少，主要是由于收购活动。Gartner预计该领域将继续整合，同时在其服务于相邻细分市场的产品中使用UEBA技术的厂商数量也在大幅增加。<br>到2021年，用户和实体行为分析（UEBA）市场将不再是一个独立的市场。<br>一些UEBA供应商现在将其市场战略路线聚焦于将其核心UEBA技术嵌入其他供应商的更传统的安全解决方案中。到2022年，UEBA的核心技术将嵌入80％的威胁检测和事件高级解决方案中（如SIEM）。<br>Gartner认为这一趋势将持续到2022年，届时UEBA将成为被更广泛的安全分析技术所取代。</p><p>IndustryARC《UEBA Market - Forecast(2020 - 2025)》报告：<br>到2025年，用户和实体行为分析市场预计将达到49亿美元，从2020年到2025年，复合年增长率为41.5％。<br>UEBA是一种用于检测内部风险，财务欺诈和针对性攻击的机制。该方法用于分析人类行为模式，然后使用统计分析和算法来识别差异。<br>UEBA是一种机器学习模型，可以通过检测保护异常来帮助阻止网络攻击者。UEBA使用高级分析，汇总日志和报告数据，并分析数据包，流，文件和其他类型的信息以及其他类型的威胁数据，以评估某些形式的活动和动作是否可能构成网络攻击。<br>UEBA的优势包括–内部威胁识别，防止数据泄露，识别和防止欺诈，可操作的风险信息以及IP数据的安全性。<br>UEBA逐渐成为对全面网络威胁和欺诈的最有希望的回应。软件提供商更专注于确保可靠的算法和集成分析，以及开发应用程序系统。</p><p>综合上述报告可以看出：<br>UEBA市场价值正在飞速上升，UEBA技术研究前景广阔。<br>UEBA发展方向不再是一个独立个体，而是倾向于将UEBA技术嵌入到其他高级安全解决方案中。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h1&gt;&lt;p&gt;数字新时代正在加速全面到来，网络环境变得更加多元、人员变得更复杂、接入方式多种多样，网络边界逐渐模糊甚至消失，同时伴随着企业
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络信息安全常用术语</title>
    <link href="https://xiejava.gitee.io/posts/78dcbe69/"/>
    <id>https://xiejava.gitee.io/posts/78dcbe69/</id>
    <published>2022-03-22T01:21:37.000Z</published>
    <updated>2022-03-22T01:24:03.516Z</updated>
    
    <content type="html"><![CDATA[<p>网络信息安全术语是获取网络安全知识和技术的重要途径，常见的网络安全术语可以分为基础技术类、风险评估技术类、防护技术类、检测技术类、响应/恢复技术类、测评技术类等。</p><p>下面主要介绍常见的网络安全技术方面的术语</p><h2 id="一、基础技术类"><a href="#一、基础技术类" class="headerlink" title="一、基础技术类"></a>一、基础技术类</h2><p>基础技术类常见的是密码及加解密相关的技术<br><strong>密码（Cipher）</strong><br>一种用于加密和解密数据的算法。</p><p><strong>密码学（Cryptography）</strong><br>编码研究。同样，使用代码/密码/数学技术来保护数据并提供实体和数据的身份验证。</p><p><strong>密钥（Secret key）</strong><br>用于加密和解密的加密密钥，使对称密钥加密方案能够运行。</p><p><strong>编码(Encode)</strong><br>使用代码将一种符号转换为另外一种符号。</p><p><strong>加密(Encryption)</strong><br>使用密码来保护信息，这使任何没有密钥对其解密的人都无法读取。</p><p><strong>解密（Decryption）</strong><br>将编码文本解密为原始原始格式的过程。</p><p><strong>证书（Certificate）</strong><br>数字证书是数字身份验证的一种形式，它允许计算机，用户或组织安全地交换信息。</p><h2 id="二、攻击技术类"><a href="#二、攻击技术类" class="headerlink" title="二、攻击技术类"></a>二、攻击技术类</h2><p><strong>拒绝服务（Denial of Service）</strong><br>是指通过向 服务器 发送大量垃圾信息或干扰信息的 方式 ，导致服务器无法向正常用户提供服务的现象。</p><p><strong>分布式拒绝服务（Distributed Denial of Service）</strong><br>指处于不同位置的多个攻击者同时向一个或数个目标发动攻击，或者一个攻击者控制了位于不同位置的多台机器并利用这些机器对受害者同时实施攻击。由于攻击的发出点是分布在不同地方的，这类攻击称为分布式拒绝服务攻击。</p><p><strong>网页篡改（Website Distortion）</strong><br>网页篡改是恶意破坏或更改网页内容，使网站无法正常工作或出现黑客插入的非正常网页内容。</p><p><strong>网页仿冒（Phishing）</strong><br>网页仿冒是通过构造与某一目标网站高度相似的页面（俗称钓鱼网站），并通常以垃圾邮件、即时聊天、手机短信或网页虚假广告等方式发送声称来自于被仿冒机构的欺骗性消息，诱骗用户访问钓鱼网站，以获取用户个人秘密信息（如银行账号和账户密码）。</p><p><strong>网页挂马（Website Malicious Code）</strong><br>网页挂马是通过在网页中嵌入恶意代码或链接，致使用户计算机在访问该页面时被植入恶意代码。</p><p><strong>域名劫持（DNS Hijack）</strong><br>域名劫持是通过拦截域名解析请求或篡改域名服务器上的数据，使得用户在访问相关域名时返回虚假IP地址或使用户的请求失败。</p><p><strong>路由劫持（Routing Hijack）</strong><br>路由劫持是通过欺骗方式更改路由信息，以导致用户无法访问正确的目标，或导致用户的访问流量绕行黑客设定的路径，以达到不正当的目的。</p><p><strong>垃圾邮件（Spam）</strong><br>垃圾邮件是将不需要的消息（通常是未经请求的广告）发送给众多收件人。包括：收件人事先没有提出要求或者同意接受的广告、电子刊物、各种形式的宣传品等宣传性的电子邮件；收件人无法拒收的电子邮件；隐藏发件人身份、地址、标题等信息的电子邮件；含有虚假的信息源、发件人、路由等信息的电子邮件。</p><p><strong>特洛伊木马（Trojan Horse）</strong><br>特洛伊木马（简称木马）是以盗取用户个人信息，甚至是远程控制用户计算机为主要目的的恶意代码。由于它像间谍一样潜入用户的电脑，与战争中的 “木马”战术十分相似，因而得名木马。按照功能，木马程序可进一步分为：盗号木马、网银木马、窃密木马、远程控制木马、流量劫持木马和其他木马六类。</p><p><strong>网络蠕虫（Network Worm）</strong><br>网络蠕虫是指能自我复制和广泛传播，以占用系统和网络资源为主要目的恶意代码。按照传播途径，蠕虫可进一步分为：邮件蠕虫、即时消息蠕虫、U盘蠕虫、漏洞利用蠕虫和其他蠕虫五类。</p><p><strong>僵尸程序（Bot）</strong><br>僵尸程序是用于构建僵尸网络以形成大规模攻击平台的恶意代码。按照使用的通信协议，僵尸程序可进一步分为：IRC僵尸程序、Http僵尸程序、P2P僵尸程序和其他僵尸程序四类。</p><p><strong>僵尸网络（Bot Net）</strong><br>僵尸网络是被黑客集中控制的计算机群，其核心特点是黑客能够通过一对多的命令与控制信道操纵感染僵尸程序的主机执行相同的恶意行为，如可同时对某目标网站进行分布式拒绝服务攻击，或发送大量的垃圾邮件等。</p><p><strong>SQL注入（SQL injection）</strong><br>一种使用代码注入来攻击由数据驱动的应用程序的策略。恶意注入的SQL代码可以执行多种操作，包括将所有数据转储到攻击者控制的位置的数据库中。通过这种攻击，恶意黑客可以欺骗身份，修改数据或篡改数据，泄露机密数据，删除和销毁数据或使其不可用。他们还可以完全控制数据库。</p><p><strong>网络钓鱼（Phishing）</strong><br>大量电子邮件要求提供敏感信息或将其推送到假网站。这些电子邮件通常没有针对性。</p><p><strong>宏病毒（Macro virus）</strong><br>一种恶意代码，使用文档应用程序的宏编程功能来执行不当行为，自我复制并在整个系统中传播。</p><p><strong>恶意代码（Malicious code）</strong><br>恶意代码是指在未经授权的情况下，在信息系统中安装、执行以达到不正当目的的程序。旨在损害信息系统的机密性，完整性或可用性。</p><p><strong>恶意广告（Malvertising）</strong><br>使用在线广告投放恶意软件。</p><p><strong>恶意软件（Malware）</strong><br>恶意软件的简称。任何可能对组织或个人造成不利影响的病毒，特洛伊木马，蠕虫，代码或内容。</p><p><strong>中间人攻击（MitM）</strong><br>网络罪犯将自己置于受害者和受害者试图访问的网站之间，以获取正在传输的信息或对其进行更改。有时缩写为MITM，MIM，MiM或MITMA。</p><p><strong>逻辑炸弹（Logic bomb）</strong><br>一段带有一组秘密指令的代码。它被插入系统并由特定操作触发。该代码通常执行恶意操作，例如删除文件。</p><p><strong>高级持久威胁（APT）</strong><br>一种网络攻击，使用复杂的技术持续对目标政府和公司进行网络间谍活动或其他恶意活动。通常由具有丰富专业知识和大量资源的对手进行-通常与民族国家参与者相关。<br>这些攻击往往来自多个入口点，并且可能使用多个攻击媒介（例如，网络攻击，物理攻击，欺骗攻击）。一旦系统遭到破坏，结束攻击可能非常困难。</p><p><strong>被动攻击（Passive attack）</strong><br>攻击者试图获取机密信息以将其提取。因为他们不尝试更改数据，所以这种类型的攻击更难检测-因此称为“被动”。</p><p><strong>密码嗅探（Password sniffing）</strong><br>通过监视或监听网络流量以检索密码数据来收集密码的技术。</p><p><strong>有效载荷（Payload）</strong><br>执行恶意操作的恶意软件元素–网络安全性等同于导弹的爆炸性电荷。通常说来是造成破坏的。</p><p><strong>勒索软件（Ransomware）</strong><br>勒索软件是一种恶意软件（恶意软件），它对PC或移动设备上的所有数据进行加密，从而阻止数据所有者对其进行访问。感染发生后，受害者会收到一条消息，告知他/她必须支付一定数量的钱（通常以比特币支付）才能获得解密密钥。通常，支付赎金也有时间限制。如果受害者支付赎金，则不能保证解密密钥会被移交。最可靠的解决方案是至少在三个不同的位置备份数据（以确保冗余），并使这些备份保持最新状态，这样您就不会失去重要的进展。</p><p><strong>社会工程学（Social engineering）</strong><br>操纵人们执行特定的动作或泄露对攻击者有用的信息。操纵策略包括谎言，心理技巧，贿赂，勒索，假冒和其他类型的威胁。社交工程通常用于提取数据并获得对信息系统的未授权访问，这些信息系统可以是单个私人用户，也可以是组织的信息系统。</p><h2 id="三、防护技术类"><a href="#三、防护技术类" class="headerlink" title="三、防护技术类"></a>三、防护技术类</h2><p><strong>访问控制（Access Control）</strong><br>访问控制是按用户身份及其所归属的某项定义组来限制用户对某些信息项的访问，或限制对某些控制功能的使用的一种技术。</p><p><strong>防火墙（Firewall）</strong><br>网络或设备周围的虚拟边界，用于保护网络或设备免受不必要的访问。可以是硬件或软件。</p><p><strong>入侵防御系统（Intrusion Prevention System）</strong><br>是一部能够监视网络或网络设备的网络资料传输行为的计算机网络安全设备，能够及时的中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为。</p><p><strong>防毒软件(Antivirus)</strong><br>防病毒软件用于监视计算机或网络，以检测从恶意代码到恶意软件的网络安全威胁。防病毒程序不仅可以警告您威胁的存在，还可以删除或消除恶意代码。</p><p><strong>蜜罐（蜜网）Honeypot (honeynet)</strong><br>诱骗系统或网络，用于吸引潜在的攻击者，通过检测攻击或使攻击发生偏转来保护实际系统。一个学习攻击方式的好工具。多个蜜罐可以组成一个蜜网。</p><p><strong>安全信息和事件管理（SIEM）</strong><br>用于监视，记录，提供警报和分析安全事件以支持威胁检测和事件响应的软件。</p><p><strong>安全监控（Security monitoring）</strong><br>从一系列安全系统中收集数据，并将这些信息与威胁情报进行关联和分析，以识别出受到威胁的迹象。</p><h2 id="四、检测技术类"><a href="#四、检测技术类" class="headerlink" title="四、检测技术类"></a>四、检测技术类</h2><p><strong>入侵检测（Instrusion Detection）</strong><br>是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全设备。</p><p><strong>漏洞扫描（Vulnerability Scanning）</strong><br>是对网络设备及应用服务的可用性、安全性与合规性等进行扫描，发现可利用漏洞的一种安全检测（渗透攻击）行为。</p><p><strong>威胁分析（Threat analysis）</strong><br>对单个威胁的特征进行详细评估。</p><h2 id="五、响应-恢复技术类"><a href="#五、响应-恢复技术类" class="headerlink" title="五、响应/恢复技术类"></a>五、响应/恢复技术类</h2><p><strong>应急响应（Emergency Response）</strong><br>应急响应通常是指一个组织为了应对各种意外事件的发生所做的准备工作以及在突发事件发生时或者发生后所采取的措施。</p><p><strong>灾难恢复（Disaster Recovery）</strong><br>灾难恢复也称灾备，指自然或人为 灾害 后，重新启用 信息系统 的 数据 、 硬件 及 软体 设备，恢复正常商业运作的过程。</p><p><strong>备份文件（Backup files）</strong><br>一种用户以后数据恢复的文件</p><p><strong>备份（Backup）</strong><br>为应付文件、数据丢失或损坏等可能出现的意外情况，将电子计算机存储设备中的数据复制到磁带等大容量存储设备中。从而在原文中独立出来单独贮存的程序或文件副本。</p><p><strong>应急预案（Contingency plan）</strong><br>一种关于备份、应急响应和灾后恢复的计划。</p><p><strong>灾难恢复计划（Disaster recovery plan）</strong><br>信息系统灾难恢复过程中所需要的任务、行动、数据和资源的文件，用于指导相关人员在预定的灾难恢复目标内恢复系统系统支持的关键业务功能。</p><h2 id="六、评测技术类"><a href="#六、评测技术类" class="headerlink" title="六、评测技术类"></a>六、评测技术类</h2><p><strong>评价方案（Evaluation scheme）</strong><br>针对一个特定的团体，由某一评价机构根据指定标准制定的行政管理的与规章制度的框架。</p><p><strong>渗透测试（Penetration testing）</strong><br>一种旨在探查和暴露信息系统中的安全性弱点以便对其进行修复的测试。</p><p><strong>质量评价（Quality evaluation）</strong><br>对实体满足规定要求程度而进行的系统性检查</p><p><strong>威胁评估（Threat assessment）</strong><br>识别或评估具有或表明可能危害生命，信息，操作和/或财产的实体，动作或事件（自然或人为）的产品或过程。</p><hr><p>作者博客：<a href="http://xiejava.ishareread.com/" target="_blank" rel="noopener">http://xiejava.ishareread.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网络信息安全术语是获取网络安全知识和技术的重要途径，常见的网络安全术语可以分为基础技术类、风险评估技术类、防护技术类、检测技术类、响应/恢复技术类、测评技术类等。&lt;/p&gt;
&lt;p&gt;下面主要介绍常见的网络安全技术方面的术语&lt;/p&gt;
&lt;h2 id=&quot;一、基础技术类&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="技术" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="https://xiejava.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
